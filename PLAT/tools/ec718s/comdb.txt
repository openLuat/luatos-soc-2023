DbVersion
1708353791,100
<end>
BuildInfo
The current data file was built by the Application Ver. 2.2.77.207, Wed Nov 15 17:24:49 2023
<end>
EnumVals
0,2048,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasMainEntrance_0,P_INFO,swLogPrintf("ICS MEAS of euArfcn %d will be started ");
0,4096,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasMainEntrance_1,P_ERROR,swLogPrintf("Incorrect ICS stage ( %d ) for new euArfcn arranged for ICS MEAS ");
0,6144,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasMainEntrance_2,P_INFO,swLogPrintf("ICS MEAS will be continued with stageChng = %d ");
0,10239,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasFrsContProc_1,P_INFO,swLogPrintf("ICS_STAGE_FRS_MEAS_CONN is continued without TASK_CFG ");
0,12287,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasLrsContProc_1,P_INFO,swLogPrintf("ICS_STAGE_LRS_MEAS_CONN is continued without TASK_CFG ");
0,14335,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasSssContProc_1,P_INFO,swLogPrintf("ICS_STAGE_SSS_MEAS is continued without TASK_CFG ");
0,14592,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasPostProc_1,P_INFO,swLogPrintf("cell delay ( %d ) of TDD intra cell ( PCI = %d ) is out of range ");
0,18431,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasPostProc_2,P_WARNING,swLogPrintf("skip post process of ICS MEAS because ICS_STAGE has been reset ");
0,20479,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasPssCandTimingRefine_1,P_INFO,swLogPrintf("Adjust PSS_POS to next half-frame ");
0,22527,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMeasIntProc_1,P_WARNING,swLogPrintf("ICS_STAGE_LRS_MEAS_CONN failed ");
0,22528,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDelAdjFreqAftMibDecoded_0,P_INFO,swLogPrintf("Delete EARFCN = %d ");
0,24576,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDelAdjFreqAftMibDecoded_1,P_INFO,swLogPrintf("Delete EARFCN = %d ");
0,27136,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyCellDetectedStore_0,P_INFO,swLogPrintf("New Cell ( %d , %d ) detected! cellNum = %d ");
0,30719,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyCellDetectedStore_1,P_WARNING,swLogPrintf("pCellDetected reached PHY_ICS_CELL_REPORTED_NUM! ");
0,30976,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyCellDetectedCheck_0,P_SIG,swLogPrintf("Cell ( %d , %d ) had beed reported , skip this time! ");
0,33024,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyFreqListUpdt4DCXO,P_WARNING,swLogPrintf("DCXO used in extreme H / L temperature !!! , Current Temperature = %d , Cx Reliability = %d ");
0,35584,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsMsgValidityCheck_0,P_ERROR,swLogPrintf("CellSearchReq message check fail! numOfFreq = %d , numOfBand = %d , workMode = %d , phyCellId = %d ");
0,38911,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyIcsHwTaskAdd_0,P_INFO,swLogPrintf("Cancel RSC task when close to Paging occassion! ");
0,40959,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyIcsHwTaskAdd_2,P_WARNING,swLogPrintf("Ics Stage error when add ICS task! ");
0,41729,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_0,P_SIG,swLogPrintf("Start Cell Search : %s , numOfFreq = %d , numOfBand = %d , firstFreq = %d ");
0,43264,0,0,PHY_ONLINE,PHY_ICS_MODULE,IcsMsgProcess_1,P_ERROR,swLogPrintf("Too Many Band requested! numOfBand = %d , Separated BandNum = %d ");
0,45056,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_1,P_SIG,swLogPrintf("Start Fast ICS for EARFCN = %d ");
0,47104,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_2,P_SIG,swLogPrintf("Start Band Scan , EARFCN = %d ");
0,49932,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_7,P_SIG,swLogPrintf("Cell ( %d %d ) Detected! cpType = %s , SNR Level = %s ");
0,51968,0,0,PHY_ONLINE,PHY_ICS_MODULE,FreqScanInScoreList_1,P_INFO,swLogPrintf("Continue Frequency Scan in Score List [ %d ] , Current EARFCN : %d , Score = %d , numOfFreq = %d ");
0,53760,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_4_0,P_INFO,swLogPrintf("Retry preferred EARFCN : %d ( index : %d ) , currFreqIndex = %d ");
0,55552,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_4,P_SIG,swLogPrintf("Skip BandScan from start EARFCN : %d , maxScore = %d ");
0,57600,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_5,P_SIG,swLogPrintf("Start Frequency Scan in Band , Current EARFCN : %d , maxScore = %d ");
0,61439,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_6,P_SIG,swLogPrintf("Frequency Scan in Band Finished!!! ");
0,61440,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsCalcInvSqrtVar_2,P_INFO,swLogPrintf("sumCov < = sumPeakPow in workMode %d , ");
0,63488,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsCalcInvSqrtVar_3,P_INFO,swLogPrintf("wrong : sumCov < = powerPeak0 in workMode %d ");
0,65536,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsCalcInvSqrtVar_1,P_INFO,swLogPrintf("meanNoisePow < = meanNoise^2 in workMode %d ");
0,67840,0,0,PHY_ONLINE,PHY_ICS_MODULE,RscFreqListReSort,P_INFO,swLogPrintf("Start Resort Score List by FRS after RSC , numOfFreq = %d , first EARFCN ( by RSC ) = %d ");
0,70144,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_3_0,P_SIG,swLogPrintf("Start Frequency Scan in Score List , First EARFCN : %d , Score = %d , numOfFreq = %d ");
0,72192,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_3,P_SIG,swLogPrintf("Start Frequency Scan in Score List , First EARFCN : %d , Score = %d , numOfFreq = %d ");
0,75775,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_8,P_SIG,swLogPrintf("ICS High Level Frequency Done! ");
0,77823,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsFlow_9,P_ERROR,swLogPrintf("ICS High Level Frequency Done Report for BPLMN! ");
0,79871,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyIcsWaitTimerExpiredProc_0,P_SIG,swLogPrintf("Delay ICS when icsType is PHY_ICS_TYPE_REDIRECT_DELAY! ");
0,81919,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_0,P_WARNING,swLogPrintf("Unexpected DRX CS Req ");
0,83967,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_10,P_WARNING,swLogPrintf("PLMN Start with PCH task adding in advance ! ");
0,86015,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_11,P_WARNING,swLogPrintf("PLMN Start with PCH timer expired ! ");
0,88063,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_1,P_WARNING,swLogPrintf("PLMN Start signal received and handled when previous one is pending! ");
0,90111,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_2,P_WARNING,swLogPrintf("PLMN Start signal received and pended when previous one is pending! ");
0,92159,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxNextCsReqProcess_0,P_INFO,swLogPrintf("Start DRX Next Cell Search ");
0,94207,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxNextCsReqProcess_1,P_INFO,swLogPrintf("DRX Next Cell Search Pending ");
0,96255,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_3,P_SIG,swLogPrintf("Pending PLMN start after paging cycle! ");
0,98303,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_4,P_ERROR,swLogPrintf("drxNextCsFlag = = 1 when PLMN restarted after paging cycle! ");
0,100351,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_5,P_WARNING,swLogPrintf("PLMN STOP signal received when no PLMN is ongoing! ");
0,102399,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_6,P_SIG,swLogPrintf("PLMN STOP should wait for ICS INT! ");
0,104447,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_7,P_SIG,swLogPrintf("PLMN Stop signal handled! ");
0,106495,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_8,P_WARNING,swLogPrintf("Previous PLMN has not been started when STOPPED! ");
0,108543,0,0,PHY_ONLINE,PHY_ICS_MODULE,PhyDrxCs_9,P_WARNING,swLogPrintf("Pending PLMN start signal need to handle in next paging cycle! ");
0,109056,0,0,PHY_ONLINE,PHY_ICS_MODULE,phyRscScoring_0,P_INFO,swLogPrintf("centerEarfcn = %d , earfcnNum = %d , FeLoss = %d ");
1024,2099456,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_Sr,P_INFO,swLogPrintf("UL HARQ ( SchedulingRequest ) : SR activeTime = 0x%X , srCounter = %d ");
1024,2101760,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyRarTaCmd_0,P_WARNING,swLogPrintf("Invalid TA command received value = %d , counter = %d , currTA = %d ");
1024,2103296,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyRarTaCmd_1,P_WARNING,swLogPrintf("TA command received in RAR with large value ( %d ) ! ");
1024,2107391,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyAnCqiCollisionProcOverPucch1,P_INFO,swLogPrintf("AN_CQI Collision Proc ");
1024,2107904,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxAprdCsiProc_0,P_ERROR,swLogPrintf("AprdCsi arrived later currTime ( hfnSfnSbn = 0x%X , spn = 0x%X ) , transTime = 0x%X ");
1024,2111487,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsFindFirstUlSf_0,P_WARNING,swLogPrintf("The first SF should be UL when Prd > 5ms ");
1024,2111488,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsUeSpecificParamCheck_0,P_WARNING,swLogPrintf("No Available Sf For Configured SRS Subframe Offset , isPrdSrs = %d ");
1024,2113792,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsFreqResAllocUpPts_0,P_INFO,swLogPrintf("SRS Symbol Flag Changed! , newSymFlag = 0x%x , symFlag = 0x%x ");
1024,2115584,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhySrsReqInfoInform_0,P_WARNING,swLogPrintf("No apSRS Configured , trigSource = %d ");
1024,2118144,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTaCheck_1,P_WARNING,swLogPrintf("Ta is out of range for TDD special subframe. dwPts = %d , ta = %d , init = %d ! ");
1024,2119936,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxHandleDlExtendRev_1,P_WARNING,swLogPrintf("Tx Tasks canceled due to Extended dwpts received. maxOsNum = %d , canceled Task = %d! ");
1024,2121728,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTtiBundingProc_1,P_WARNING,swLogPrintf("firstTxHarqId doesn ' t match schdHarqId ( %d ) ");
1024,2125058,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_Phich0,P_INFO,swLogPrintf("UL HARQ ( PHICH INFO ) : harqId = %d , HI = %s , mcs = %d , prb = %d , tbSizeInBytes = %d , currTxNb = %d ");
1024,2127106,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_Phich1,P_INFO,swLogPrintf("UL HARQ ( PHICH INFO ) : harqId = %d , HI = %s , mcs = %d , prb = %d , tbSizeInBytes = %d , currTxNb = %d ");
1024,2129919,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciGrantParse_0,P_WARNING,swLogPrintf("Csi Request but no APR CSI Para Configured ");
1024,2130944,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciInfo0,P_INFO,swLogPrintf("UL HARQ ( DCI0 Info ) : harqId = %d , mcs = %d , prb = %d , tbSizeInBytes = %d , transmissionType = %d ");
1024,2132992,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciInfo1,P_INFO,swLogPrintf("UL HARQ ( DCI0 Info ) : harqId = %d , mcs = %d , prb = %d , tbSizeInBytes = %d , transmissionType = %d ");
1024,2134784,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyUlHarq_DciInfo2,P_WARNING,swLogPrintf("UL DCI detection invalid!!! crnti = %e<PhyDci0DebugInfo> , spsrnti = %e<PhyDci0DebugInfo> , tmprnti = %e<PhyDci0DebugInfo> , bakcrnti = %e<PhyDci0DebugInfo> ");
1024,2138111,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_0,P_INFO,swLogPrintf("Stop TX RTN ");
1024,2140159,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_2,P_INFO,swLogPrintf("TX RTN is stopped , no need to stop again! ");
1024,2142207,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_1,P_INFO,swLogPrintf("Start TX RTN ");
1024,2144255,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxTpuTimer4Cfg_3,P_INFO,swLogPrintf("TX RTN is started , no need to start again! ");
1024,2145024,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyTxInfoCreate_0,P_ERROR,swLogPrintf("Tx Related Dynamic Data are not PNULL when IDLE2CONN , PhyDynMemBmpGet ( ) ->bmpVal = 0x%X , gpPhyUlStaticPara = 0x%X , gpPhyTxSchdInfo = 0x%X , gpPhyTxHwParam = 0x%X ");
1024,2146816,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyTxInfoCreate_1,P_ERROR,swLogPrintf("TX dynamic mem allocate fail! gpPhyUlStaticPara = 0x%X , gpPhyTxSchdInfo = 0x%X , gpPhyTxHwParam = 0x%X ");
1024,2149120,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,phyTxInfoRelease,P_ERROR,swLogPrintf("Tx Related Dynamic Data are PNULL when CONN2IDLE , PhyDynMemBmpGet ( ) ->bmpVal = 0x%X , gpPhyUlStaticPara = 0x%X , gpPhyTxSchdInfo = 0x%X , gpPhyTxHwParam = 0x%X ");
1024,2150400,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxScheduleWrapper_0,P_WARNING,swLogPrintf("TxScheduleWrapper re-trigger for hfnSfnSbn = 0x%X ");
1024,2152704,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxScheduleWrapper_1,P_ERROR,swLogPrintf("Miss calling of TxScheduleWrapper for txHfnSfnSbn = 0x%X , missed subframe num = %d ");
1024,2154752,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxScheduler_0,P_WARNING,swLogPrintf("chanMode = %d is cannceled due to large tailZeros = %d! ");
1024,2157568,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxPowerPrint_1,P_INFO,swLogPrintf("type = 0x%x ( Bit3 : SRS , Bit2 : PUCCH , Bit1 : PUSCH , Bit0 : PRACH ) , SrsPower = %d ( dBm ) , PucchPower = %d ( dBm ) , PuschPower = %d ( dBm ) , PrachPower = %d ( dBm ) ");
1024,2159616,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxPowerPrint_0,P_INFO,swLogPrintf("type = 0x%x ( Bit3 : SRS , Bit2 : PUCCH , Bit1 : PUSCH , Bit0 : PRACH ) , SrsPower = %d ( dBm ) , PucchPower = %d ( dBm ) , PuschPower = %d ( dBm ) , PrachPower = %d ( dBm ) ");
1024,2162687,0,0,PHY_ONLINE,PHY_ULPATH_MODULE,PhyTxCancelAll_0,P_INFO,swLogPrintf("PhyTxCancelAll! ");
2048,4196352,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckError,P_ERROR,swLogPrintf("DC : max = %d ");
2048,4198400,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckWarn,P_WARNING,swLogPrintf("DC : max = %d ");
2048,4200448,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckSig,P_SIG,swLogPrintf("DC : max = %d ");
2048,4202496,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,DcCheckInfo,P_INFO,swLogPrintf("DC : max = %d ");
2048,4204544,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,WarnNDetSpurN0,P_WARNING,swLogPrintf("SpurEst : nDetSpur = %d @ PhyRxDFENotchPreCalc ( ) ");
2048,4206592,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,WarnNDetSpurN1,P_WARNING,swLogPrintf("SpurEst : nDetSpur = %d @ PhyRxDFENotchPreCalc ( ) ");
2048,4210687,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,PhyRxDFESpurEstProc_0,P_WARNING,swLogPrintf("skip RxDFE spur est. process ");
2048,4210688,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,PhyRxDFESpurEstProc_1,P_INFO,swLogPrintf("Add RxDFE algorithm para. reconfiguration with startTime of 0x%X ");
2048,4212736,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,WarnNDetSpurS0,P_WARNING,swLogPrintf("SpurEst : nDetSpur = %d @ PhyRxDFESpurEstProc ( ) ");
2048,4214784,0,0,PHY_ONLINE,PHY_RXDFE_MODULE,RcCalibWarn,P_WARNING,swLogPrintf("RC Calib : finalErr = %d / 256 , which is too great. ");
3072,6295551,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeHwConfig_2,P_INFO,swLogPrintf("no CE registers need be configured in TASK CFG INT ");
3072,6297599,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcHoldRelease_1,P_INFO,swLogPrintf("AXC hold is released ");
3072,6299647,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeSpurEstProc_1,P_WARNING,swLogPrintf("skip spurEst process because spurAccuNum is 0 ");
3072,6299648,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeHwResultsRead_1,P_ERROR,swLogPrintf("branch %d : unexpected axcHold4SwRead with value zero in CEAXC ISR ");
3072,6303743,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcPostEarlyReturnCheck_1,P_WARNING,swLogPrintf("skip CeAxc post process if mac reset process is ongoing ");
3072,6303744,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcPostEarlyReturnCheck_2,P_WARNING,swLogPrintf("skip CeAxc post process because that of previous ISR ( HFNSFNSBN = 0x%X ) has NOT been done ");
3072,6305792,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcPostEarlyReturnCheck_3,P_INFO,swLogPrintf("skip CeAxc post process because that of previous ISR ( HFNSFNSBN = 0x%X ) has just been done ");
3072,6309887,0,0,PHY_ONLINE,PHY_CE_MODULE,PhyCeAxcExtraProc4Cdrx_1,P_INFO,swLogPrintf("extra CEAXC process for CDRX will be triggered ");
4096,8390656,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiSwTrgConfig_1,P_INFO,swLogPrintf("CSI is triggered by SW with configured parameter 0x%X ");
4096,8394751,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiParaInit_1,P_INFO,swLogPrintf("skip CSI reconfiguration ");
4096,8395264,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiContCnfgProc_aprd,P_ERROR,swLogPrintf("Invalid aperiodic CSI in pending list when configuring continuous CSI calculation ( calcTime = 0x%X , ulTime = 0x%X , currTime = 0x%X ) ");
4096,8397312,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiContCnfgProc_prd,P_ERROR,swLogPrintf("Invalid periodic CSI in pending list when configuring continuous CSI calculation ( calcTime = 0x%X , ulTime = 0x%X , currTime = 0x%X ) ");
4096,8400895,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiTypeValidityCheck_0,P_WARNING,swLogPrintf("skip CSI INT during HO MIB process ");
4096,8401152,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiTypeValidityCheck_2,P_ERROR,swLogPrintf("unexpected CSI HW results ( SW-%d , HW-%d ) ");
4096,8404991,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiIsr_1,P_INFO,swLogPrintf("txTime of PRD_CSI is from SW ");
4096,8407039,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiEnhanceProcessCtrl_0,P_INFO,swLogPrintf("enhanced bitMI adjustment will be enabled ");
4096,8407296,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiEnhanceProcessCtrl_1,P_INFO,swLogPrintf("CQI filter coeff. changed from 0x%X to 0x%X ");
4096,8409344,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_0,P_ERROR,swLogPrintf("invalid 2-bit CSI request ( 0x%X ) of subframe set %d in DCI0 ");
4096,8411136,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_3,P_WARNING,swLogPrintf("existed RAR CSI > new DCI0 CSI ( SET%d ) ");
4096,8415231,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_4,P_WARNING,swLogPrintf("existed DCI0 CSI ( SET0 ) > new DCI0 CSI ( SET1 ) ");
4096,8417279,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiDci0InfoGet_5,P_WARNING,swLogPrintf("new DCI0 CSI ( SET0 ) > existed DCI0 CSI ( SET1 ) ");
4096,8419327,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiPeriodicCalcInsert_1,P_INFO,swLogPrintf("transmission time of Inserted periodic CSI conflicted with that of existed aperiodic one ");
4096,8421375,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiPeriodicCalcInsert_2,P_INFO,swLogPrintf("transmission time of Inserted periodic CSI conflicted with RX gap ");
4096,8423423,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRarInfoGet_1,P_WARNING,swLogPrintf("aperiodic CSI request was scheduled in RAR ");
4096,8425471,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRarInfoGet_4,P_WARNING,swLogPrintf("new RAR CSI > existed RAR CSI ");
4096,8425472,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRarInfoGet_5,P_WARNING,swLogPrintf("new RAR CSI > existed DCI0 CSI ( SET%d ) ");
4096,8429567,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_1,P_WARNING,swLogPrintf("too many periodic CSI calculation in the pending list ");
4096,8431615,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_2,P_WARNING,swLogPrintf("too many periodic CSI calculation in RX gap ");
4096,8431616,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_3,P_INFO,swLogPrintf("%d periodic CSI calculation will be executed for RX gap ");
4096,8435711,0,0,PHY_ONLINE,PHY_CSI_MODULE,PhyCsiRxGapCalcScan_4,P_WARNING,swLogPrintf("pending list of periodic CSI calculation is full ");
5120,10487808,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDlHarqTypeInit1,P_WARNING,swLogPrintf("L2Buffer not process yet and harqId is %d ");
5120,10490112,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDlHarqTypeInit0,P_WARNING,swLogPrintf("dec Isr triggered and task not finished , harqId0 = %d and harqId1 = %d ");
5120,10493951,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhySaveNormalGrant2Harq_SPS,P_VALUE,swLogPrintf("invalid SPS retransmission or false DCI ");
5120,10494464,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DciInfo,P_INFO,swLogPrintf("DL HARQ ( Ack2Nack ) : harqId = %d , mcs = %d , prb = %d ");
5120,10498047,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DciInfo1,P_WARNING,swLogPrintf("URS PRBs collide with PBCH or SS , just skip decoding ");
5120,10500095,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDecDynamicConfig_OneCB,P_WARNING,swLogPrintf("oneCb codeRate > 94% ");
5120,10502143,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDecDynamicConfig_NormalCB,P_WARNING,swLogPrintf("normal CB codeRate > 94% ");
5120,10502400,0,0,PHY_ONLINE,PHY_DEC_MODULE,PhyDecApplyL2Buffer,P_ERROR,swLogPrintf("No L2Buffer for DL data , harqId is %d and fail cnt is %d ");
5120,10506239,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DecInfo_3,P_VALUE,swLogPrintf("SIB1 decode fail! ");
5120,10508287,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DecInfo_2,P_VALUE,swLogPrintf("SIBX decode fail! ");
5120,10510335,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DecInfo_1,P_WARNING,swLogPrintf("RAR decode fail! ");
5120,10512383,0,0,PHY_ONLINE,PHY_DEC_MODULE,msg4InfoErr,P_WARNING,swLogPrintf("dl msg content error with TCRNTI , skip it! ");
5120,10513984,0,0,PHY_ONLINE,PHY_DEC_MODULE,phyDlHarq_DecInfo,P_INFO,swLogPrintf("DL HARQ ( DEC Info ) : harqId = %d , mcs = %d , rv = %d , prb = %d , retxCnt = %d , tbSizeInBytes = %d , crc = %s ");
6144,12585216,0,0,PHY_ONLINE,PHY_DCH_MODULE,demRegPrint,P_SIG,swLogPrintf("DEM status is 0x%X , 0x%X ");
6144,12589055,0,0,PHY_ONLINE,PHY_DCH_MODULE,PhySaveOneCbGrant2Harq,P_INFO,swLogPrintf("invalid oneCb , discard it ");
7168,14682368,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyTestCaseFor83128,P_WARNING,swLogPrintf("debug for CT case 8.3.1.28 with CchEna = %d , DchEna = %d ");
7168,14684416,0,0,PHY_ONLINE,PHY_CCH_MODULE,fakeEdrxConfig,P_WARNING,swLogPrintf("fake eDRX command config , period is %d ( 0 : 81.92 ; 1 : 655.36 ; 2 : 1310.72 ) windowLength is %d ( 0 : 20.48 ; 1 : 40.96 ) ");
7168,14688255,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyCchBasicInfoGet,P_WARNING,swLogPrintf("ul BW larger than dl BW ");
7168,14690303,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyCchLlrFwlAdjust_1,P_INFO,swLogPrintf("adjust llr FWL of CCH ");
7168,14692351,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyPhichRemoveFwl_01,P_ERROR,swLogPrintf("PHICH result err! ");
7168,14694399,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyPhichRemoveFwl_0,P_WARNING,swLogPrintf("PHICH0 hw result error! ");
7168,14694912,0,0,PHY_ONLINE,PHY_CCH_MODULE,PHY_CCH_LOG_PHICH_FWL_ERR,P_ERROR,swLogPrintf("phich fwl remove error! fwlPhich = %d , corrInt16 = %d , corrFwlAbs = %d ");
7168,14698495,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyPhichRemoveFwl_1,P_WARNING,swLogPrintf("PHICH1 hw result error! ");
7168,14698752,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyCchTask_0,P_WARNING,swLogPrintf("Received PDCCH order when RA is ongoing! raCause = %d , raStage = %d ");
7168,14702591,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciCreditCheck,P_VALUE,swLogPrintf("snr change >6 dB , init credit value ");
7168,14702848,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciCreditCheck_1,P_VALUE,swLogPrintf("duplicate DCI with type is %d and ccelvl is %d ");
7168,14704640,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciCrcRsltUpdate,P_VALUE,swLogPrintf("skip one flag index is %d ");
7168,14706688,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciCrcRsltUpdate1,P_VALUE,swLogPrintf("skip one flag index is %d ");
7168,14710783,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW20,P_VALUE,swLogPrintf("scNcFlag error! ");
7168,14712831,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciHwInfoGet_20,P_VALUE,swLogPrintf("single one DCI from second path , maybe fake DCI! ");
7168,14714879,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW00,P_WARNING,swLogPrintf("receive grant ( not SI / P ) in CDRX inactive! ");
7168,14715136,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW0,P_SIG,swLogPrintf("PDCCH ORDER detected , DCI is [ 0x%X , 0x%X ] ");
7168,14718975,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_SI1,P_INFO,swLogPrintf("SI received and not decode yet1 ");
7168,14721023,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_SI2,P_INFO,swLogPrintf("SI received and not decode yet2 ");
7168,14723071,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_SI3,P_INFO,swLogPrintf("SI received and not decode yet3 ");
7168,14725119,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_HW1,P_WARNING,swLogPrintf("invalid tempCrnti DL / UL grant ");
7168,14727167,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_RA1,P_INFO,swLogPrintf("RAR received and not decode yet1 ");
7168,14729215,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_RA2,P_INFO,swLogPrintf("RAR received and not decode yet2 ");
7168,14731263,0,0,PHY_ONLINE,PHY_CCH_MODULE,DCI_VALIDATE_RA3,P_WARNING,swLogPrintf("Duplicated RAR Received! ");
7168,14732800,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciHwInfoGet,P_VALUE,swLogPrintf("DCI discard Hw info is [ 0 ] : 0x%X , [ 1 ] : 0x%X , [ 2 ] : 0x%X , creditValue = 0x%X , threshold = 0x%X , cbsizeType = %d , cceLvl = %d ");
7168,14733312,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyParseFormat3Info_0,P_ERROR,swLogPrintf("PUCCH TPC index error! Index is %d ");
7168,14735360,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyParseFormat3Info_1,P_ERROR,swLogPrintf("PUSCH TPC index error! Index is %d ");
7168,14739455,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseSpsActive,P_SIG,swLogPrintf("SPS grant active ");
7168,14741503,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseSpsRelease,P_SIG,swLogPrintf("SPS grant release ");
7168,14743551,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciPadingDataCheck0,P_VALUE,swLogPrintf("pading not 0 , discard it ");
7168,14743808,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDciPadingDataCheck1,P_VALUE,swLogPrintf("pading length < 0 , dciData = 0x%x , padinglength = %d ");
7168,14745856,0,0,PHY_ONLINE,PHY_CCH_MODULE,PHY_CCH_LOG_DCI_PARA_ERR1,P_WARNING,swLogPrintf("Cell parameter mismatch1 , data1 = 0x%X and data2 = 0x%X ");
7168,14749695,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1ASb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( < 50RB ) ");
7168,14751743,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1AWb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( > = 50RB ) ");
7168,14753791,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1BSb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( < 50RB ) ");
7168,14755839,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1BWb,P_WARNING,swLogPrintf("distributed type2 resource PRB too large ( > = 50RB ) ");
7168,14757887,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14759935,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt21,P_WARNING,swLogPrintf("pPhyDciParsdInfo->tpmiInfo error ");
7168,14761983,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2A,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14764031,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2A1,P_WARNING,swLogPrintf("pPhyDciParsdInfo->tpmiInfo error ");
7168,14766079,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2B,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14768127,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt2C,P_WARNING,swLogPrintf("format2 two CW all enable or disable ");
7168,14770175,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyParseOneCbValidation,P_VALUE,swLogPrintf("special subframe ");
7168,14772223,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyParseOneCbValidation1,P_VALUE,swLogPrintf("mbsfn subframe ");
7168,14772480,0,0,PHY_ONLINE,PHY_CCH_MODULE,PHY_CCH_LOG_DCI_PARA_ERR,P_WARNING,swLogPrintf("Cell parameter mismatch , data1 = 0x%X and data2 = 0x%X ");
7168,14776319,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseFmt1AMcs,P_WARNING,swLogPrintf("oneCb grant with format1A too large ");
7168,14778367,0,0,PHY_ONLINE,PHY_CCH_MODULE,PhyDlDciValidation_TBSIZE,P_WARNING,swLogPrintf("tbsize too large or false DCI ");
7168,14780415,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseDiscard_2,P_VALUE,swLogPrintf("discard a new grant with RV not 0 ");
7168,14782463,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseDiscard_0,P_VALUE,swLogPrintf("maybe DL grant of newTrans missed or false DCI detected ");
7168,14782464,0,0,PHY_ONLINE,PHY_CCH_MODULE,phyDciParseDiscard_1,P_INFO,swLogPrintf("dci discard dueto 0x%X ");
9216,18876672,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAfcNormFactorCalc_1,P_ERROR,swLogPrintf("Unexpected numerator ( %d ) or denominator ( %d ) in AFC normalized factor calculation ");
9216,18880511,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAfcOffsetCalc_1,P_ERROR,swLogPrintf("Incorrect normFactor when calculating freqOffset ");
9216,18882559,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAfcAdjFreqOfstDeterm_1,P_ERROR,swLogPrintf("no valid raw result for determining freqOfstAdj of HST mode ");
9216,18882560,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcAdjustProc_0,P_WARNING,swLogPrintf("RxTimingAdjust while TxTiming do not adjust! rxAdjAcc = %d ");
9216,18884608,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcPostProc_1,P_WARNING,swLogPrintf("clear previous non-zero ATC adjusted info. ( 0x%X ) ");
9216,18888703,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_11,P_WARNING,swLogPrintf("CE_BIT of ATC is delayed to RX_RESUME after 1st inter PSS MEAS STEP1 ");
9216,18890751,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_12,P_WARNING,swLogPrintf("CE_BIT of ATC is delayed to SCELL HW tasks in CDRX INACT duration ");
9216,18892799,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_21,P_WARNING,swLogPrintf("timeOfstAdj of sys_RT has NOT been loaded when ICS flow starts to work ");
9216,18894847,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAtcStatusGetInTaskCfg_22,P_WARNING,swLogPrintf("only timeOfstAdj of CE has NOT been taken effect when ICS flow starts to work ");
9216,18896895,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdEstDataStore_1,P_WARNING,swLogPrintf("new speed est. data is invalid ");
9216,18896896,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdEstDataStore_2,P_WARNING,swLogPrintf("speed est. array overflow ( arrIdx = %d ) ");
9216,18898944,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdLvlDeterm_1,P_WARNING,swLogPrintf("data array of speed estimation ( lastEstTime is 0x%X ) is full!!! ");
9216,18901248,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyAxcSpdLvlDeterm_2,P_INFO,swLogPrintf("currSpdLvl = %d , nextSpdLvl = %d ");
9216,18903296,0,0,PHY_ONLINE,PHY_AXC_MODULE,PhyCeSnrLvlSet_1,P_INFO,swLogPrintf("currSnrLvl = %d , nextSnrLvl = %d ");
10240,20973568,0,0,PHY_ONLINE,PHY_RF_MODULE,RfUnitTest_1,P_SIG,swLogPrintf("data : 0x%x ");
10240,20976128,0,0,PHY_ONLINE,PHY_RF_MODULE,RfUnitTest_wr_rd_regs,P_SIG,swLogPrintf("regAddr = 0x%x , WrVal = 0x%x , RdVal = 0x%x ");
10240,20977920,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcRxOnOff1ms,P_SIG,swLogPrintf("freq100KHz = %d , rssi = %d ");
10240,20980736,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxSemiStaticCfg,P_WARNING,swLogPrintf("freqCfg Miss , scNcInd = %d , scFreqPreCalc = %d , scFreqCfg = %d , ncFreqPreCalc = %d , ncFreqCfg = %d ");
10240,20982272,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_1,P_INFO,swLogPrintf("SwSend ECS Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,20984320,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_2,P_INFO,swLogPrintf("SwSend ELCS Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,20986368,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_3,P_INFO,swLogPrintf("SwSend Reg%d , Addr = 0x%x , Val = 0x%x ");
10240,20988160,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSwMipiRegsPrint_4,P_INFO,swLogPrintf("SwSend Said = 0x%x , regsLenTotal = %d ");
10240,20990976,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_1,P_VALUE,swLogPrintf("fcVersion1 = 0x%x , fcVersion2 = 0x%x , fcVersion3 = 0x%x , hwInfo1 = 0x%x , hwInfo2 = 0x%x ");
10240,20993792,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_4,P_SIG,swLogPrintf("Rf Init FreqOfst = %d ( loFreq = %d ) , CBANK = %d ( %d ) , t0 = %d ( C ) , t0Code = %d , 32KCap = %d ( %d ) ");
10240,20996095,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_6,P_ERROR,swLogPrintf("Need to do RF Calibration! ");
10240,20996352,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_2,P_VALUE,swLogPrintf("RxRc = 0x%x , TxRc = 0x%x ");
10240,20999680,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_3,P_VALUE,swLogPrintf("SarAdcOfstI0 / I1 = 0x%x / 0x%x , SarAdcOfstQ0 / Q1 = 0x%x / 0x%x , SarAdcGainI / Q = 0x%x / 0x%x , SarAdcskew = 0x%x ");
10240,21001472,0,0,PHY_ONLINE,PHY_RF_MODULE,RfCaliTableInit_5,P_SIG,swLogPrintf("Addr = 0x%x , 0x%x , 0x%x , 0x%x , 0x%x , 0x%x ");
10240,21003264,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxTpcCmd,P_INFO,swLogPrintf("Rf TxTpcCmd : txPowrOrg = %d , currTxPowr = %d , tpcDaIdx = %d , paIdx = %d , powerErr = %d ");
10240,21004800,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxFecParasCalc,P_WARNING,swLogPrintf("RxFront-End Paras Miss , bandPosIdx = 0x%x , oflValid = %d , bandnum = %d ");
10240,21006848,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxFecParasCalc_1,P_INFO,swLogPrintf("RxPath Config : bandNum = %d , freq100Hz = %d , rxPort = %e<rfRxPort> ");
10240,21009152,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxCaliParasCalc_0,P_WARNING,swLogPrintf("LTE Band RxCalibration Paras Miss , bandPosIdx = 0x%x , scValid = %d , fcValid = %d , bandnum = %d ");
10240,21011200,0,0,PHY_ONLINE,PHY_RF_MODULE,RfRxCaliParasCalc_1,P_WARNING,swLogPrintf("WIFI Band RxCalibration Paras Miss , bandPosIdx = 0x%x , scValid = %d , fcValid = %d , bandnum = %d ");
10240,21013504,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxFecParasCalc_1,P_INFO,swLogPrintf("freq100KHz = %d , freq100KHzEnd = %d , tmprtCmpstIdx = %d , cmpVal = %d , cmpVal2 = %d ");
10240,21015040,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxFecParasCalc,P_WARNING,swLogPrintf("TxFront-End Paras Miss , bandPosIdx = 0x%x , oflValid = %d , bandnum = %d ");
10240,21017600,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxFecParasCalc_2,P_INFO,swLogPrintf("TxPath Config : bandNum = %d , freq100Hz = %d , txPort = %e<rfTxPort> , paOnAdvTime = %d ( unit : 30.72 cycles ) , paBiasNum = %d ");
10240,21019648,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_3,P_SIG,swLogPrintf("TxIqmResult , freq = %d , band : %d , cmd0 = 0x%x , cmd1 = 0x%x , Index = %d ");
10240,21021440,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_5,P_INFO,swLogPrintf("Band = %d , superBandNum = %d , superBandFlag = %d , bandPosIdx1 = %d ");
10240,21023232,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_4,P_INFO,swLogPrintf("Band = %d , freqCompTmprt_high = %d , freqCompTmprt_low = %d ");
10240,21025024,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_1,P_WARNING,swLogPrintf("TxTpcTable Miss , bandNum = %d , superBandNum = %d ");
10240,21028096,0,0,PHY_ONLINE,PHY_RF_MODULE,RfTxCaliParasCalc_2,P_WARNING,swLogPrintf("TxCalibration Paras Miss , bandPosIdx1 = 0x%x , bandPosIdx2 = 0x%x , scValid = %d , fcValid = %d , bandNum = %d , superBand = %d ");
10240,21029120,0,0,PHY_ONLINE,PHY_RF_MODULE,RfVbatCmpstValUpd,P_SIG,swLogPrintf("Rf Vbad Update : Vbad = %d , voltgCmpVal = %d ");
10240,21031424,0,0,PHY_ONLINE,PHY_RF_MODULE,RfAntTunerFemGpioCfg_1,P_INFO,swLogPrintf("Rf Antenna Tuner Config , bandNum = %d , gpioBitMask = 0x%x , gpioBitVal = 0x%x ");
10240,21035007,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFctyCaliStart,P_SIG,swLogPrintf("Rf Calibration Start... ");
10240,21037055,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFctyCaliEnd,P_SIG,swLogPrintf("Rf Calibration End... ");
10240,21038848,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcComInfoCfg,P_VALUE,swLogPrintf("fcVersion1 = %d , fcVersion2 = %d , fcVersion3 = %d , hwInfo1 = %d , hwInfo2 = %d , bandNum = %d , bandList [ 0 ] = %d , rxAgcFelossAdj = %d ");
10240,21039360,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcAfcDataCfg,P_SIG,swLogPrintf("Band = %d , RxFreq = %d ");
10240,21041152,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcAfcStart,P_SIG,swLogPrintf("centFreq = %d ");
10240,21043200,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcRxAgcSeqCfg,P_SIG,swLogPrintf("SeqCount = %d ");
10240,21045504,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcRxIip2CaliRfModemSeqCfg,P_SIG,swLogPrintf("SelfCali-FddIp2 failure : Rxfreq = %d , bandNum = %d ");
10240,21047552,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcGapBeginInt_RxIp2_1,P_SIG,swLogPrintf("RxIp2 Cali BeforCode = 0x%x , Freq100KHz = %d ");
10240,21049600,0,0,PHY_ONLINE,PHY_RF_MODULE,RfFcGapBeginInt_RxIp2_2,P_SIG,swLogPrintf("RxIp2 Cali AfterCode = 0x%x , Freq100KHz = %d ");
10240,21053439,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_1,P_SIG,swLogPrintf("Rf Self-Calibration Start... ");
10240,21053440,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_2,P_SIG,swLogPrintf("step1... ScEventGet = 0x%X ");
10240,21055488,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_3,P_SIG,swLogPrintf("step2... ScEventGet = 0x%X ");
10240,21057536,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_4,P_SIG,swLogPrintf("step3... ScEventGet = 0x%X ");
10240,21059584,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_5,P_SIG,swLogPrintf("step4... ScEventGet = 0x%X ");
10240,21061632,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_6,P_SIG,swLogPrintf("step5... ScEventGet = 0x%X ");
10240,21063680,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_7,P_SIG,swLogPrintf("step6... ScEventGet = 0x%X ");
10240,21065728,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_8,P_SIG,swLogPrintf("step7... ScEventGet = 0x%X ");
10240,21067776,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_9,P_SIG,swLogPrintf("step8... ScEventGet = 0x%X ");
10240,21069824,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_10,P_SIG,swLogPrintf("step9... ScEventGet = 0x%X ");
10240,21071872,0,0,PHY_ONLINE,PHY_RF_MODULE,RfSelfCaliRunning_11,P_SIG,swLogPrintf("Rf Self-Calibration End...Result = 0x%X ");
10240,21074176,0,0,PHY_ONLINE,PHY_RF_MODULE,RfScDcocOneFreqEndInt,P_SIG,swLogPrintf("SelfCali-Dcoc failure : freq = %d , bandNum = %d ");
10240,21076224,0,0,PHY_ONLINE,PHY_RF_MODULE,RfScTxIqmCLRfModemSeqCfg,P_SIG,swLogPrintf("SelfCali-TxCarrierLeakage failure : freq = %d , bandNum = %d ");
10240,21078016,0,0,PHY_ONLINE,PHY_RF_MODULE,RfBandFecParasCalc,P_WARNING,swLogPrintf("band Front-End Paras Miss , bandnum = %d ");
10240,21080832,0,0,PHY_ONLINE,PHY_RF_MODULE,RfBandFecParasCalc_1,P_INFO,swLogPrintf("TxPath Config : bandNum = %d , txPort = %e<rfTxPort> , paOnAdvTime = %d ( unit : 30.72 cycles ) , paBiasNum = %d ");
10240,21083136,0,0,PHY_ONLINE,PHY_RF_MODULE,RfNsmRxCwSnrTest,P_SIG,swLogPrintf("Rf RxCwTest , band = %d , freq = %d , bw = %d , flag = %d , rxlen = %d ");
11264,23071232,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdSet_0,P_SIG,swLogPrintf("Phy AT Cmd Set! moduleValue = %d , data [ 0 ] = %d , data [ 1 ] = %d ");
11264,23074815,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdSet_1,P_ERROR,swLogPrintf("Dump parameters error! valid input : data [ 0 ] < 4 , data [ 1 ] < 6 , data [ 2 ] < 20 , data [ 3 ] < 20 ");
11264,23076863,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdSet_3,P_ERROR,swLogPrintf("PhyCfg Triggered Assert! ");
11264,23077380,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyMibTask,P_SIG,swLogPrintf("MIB decoded for Cell ( %d , %d ) ! BandWidth = %s ");
11264,23080959,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiDci0InfoGet_1,P_WARNING,swLogPrintf("no valid set for CSI request in DCI0 ");
11264,23083007,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiDci0InfoGet_2,P_WARNING,swLogPrintf("no valid reference subframe for CSI request in DCI0 ");
11264,23085055,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRarInfoGet_1,P_WARNING,swLogPrintf("no valid DL subframe for CSI request in RAR ");
11264,23087103,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRarInfoGet_2,P_WARNING,swLogPrintf("no valid set for CSI request in RAR ");
11264,23089151,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRarInfoGet_3,P_WARNING,swLogPrintf("no valid reference subframe for CSI request in RAR ");
11264,23091199,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDecPreProc_1,P_WARNING,swLogPrintf("no valid set for CSI Subframe config from seq ");
11264,23091456,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyStateTransit,P_ERROR,swLogPrintf("PhyStateTransit Error! current state = %d event = %d ");
11264,23093248,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyFreqOfstAfcAdj_1,P_WARNING,swLogPrintf("freqErrPPM with value of 0x%X overflow ");
11264,23097343,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyNCellTimeOfstUpdt_1,P_WARNING,swLogPrintf("BT_OFST with non-zero value existed ");
11264,23099391,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyTimeOfstUpdtAftAtc_1,P_INFO,swLogPrintf("BT adjustment is disabled in ATC ");
11264,23099392,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyTimeOfstUpdtLeaveConn_1,P_WARNING,swLogPrintf("new HFN value ( %d ) is taking effect when leaving CONN ");
11264,23103487,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibInfoUpdt_0,P_ERROR,swLogPrintf("dlBandwidth or antPortNum in mib was updated in PHY CONN state ");
11264,23105535,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibInfoUpdt_1,P_ERROR,swLogPrintf("phich parameters in mib were updated in PHY CONN state ");
11264,23107583,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibInfoUpdt_2,P_SIG,swLogPrintf("Rx Tx ReSchedule Due to MIB Time Updt in PHY CONN state ");
11264,23107840,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,MultiBandInfo,P_WARNING,swLogPrintf("EARFCN changed by Sib1Config , prev_EARFCN = %d new_EARFCN = %d ");
11264,23109888,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phySib1Updt,P_SIG,swLogPrintf("SIB1 configured! TddUlDlConfig = %d SSP = %d ");
11264,23111680,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyUlCommInfoUpdt_0,P_SIG,swLogPrintf("UL earfcn changed , new EARFCN = %d ");
11264,23113984,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyUlCommInfoUpdt_1,P_ERROR,swLogPrintf("duplexMode mismatch between UL&DL frequency! , dlEuArfcn = %d , ulEuArfcn = %d ");
11264,23117823,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyUlCommInfoUpdt_2,P_INFO,swLogPrintf("Re-Calc PUXCH / SRS parameters when system information updated in connected state ");
11264,23118592,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyHoCommInfoUpdt_0,P_SIG,swLogPrintf("TDD handover , used tdd configuration of original cell! tddConfigPresent = %d , ulDlConfig = %d , specialSbfrmPatterns = %d , tddSbfrmType = 0x%X ");
11264,23119872,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHandoverCommonInfoUpdt_0,P_SIG,swLogPrintf("UL earfcn changed , new EARFCN = %d ");
11264,23122432,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingInfoUpdt_0,P_SIG,swLogPrintf("eDRX configuration : eDRX period is %d ( * 10ms ) , PTW length is %d ( * 1280ms ) , PTW start SFN is %d ( * 256 ) ");
11264,23126015,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingInfoUpdt_1,P_WARNING,swLogPrintf("disable eDRX scheduling because HFN field is absent in SIB1 ");
11264,23126784,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingInfoUpdt_2,P_SIG,swLogPrintf("DRX configuration : DRX cycle [ default , UE-specific , USER ] is [ %d ( ms ) , %d ( ms ) , %d ( ms ) ] , PFPO = 0x%X ");
11264,23128576,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingInfoUpdt_3,P_SIG,swLogPrintf("DRX configuration : DRX cycle [ default , UE-specific ] is [ %d ( ms ) , %d ( ms ) ) ] , PFPO = 0x%X ");
11264,23132159,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySpsConfigUpdt_1,P_WARNING,swLogPrintf("SPS C-RNTI is released ");
11264,23134207,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_1,P_WARNING,swLogPrintf("antennaInfo of REL-8 and REL-10 is sent by NW together ");
11264,23136255,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_2,P_WARNING,swLogPrintf("codebookSubsetRestriction missed by NW for TM4 / 5 / 6 ");
11264,23138303,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_3,P_WARNING,swLogPrintf("unexpected codebookSubsetRestriction configuration of TM8 ");
11264,23140351,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_4,P_WARNING,swLogPrintf("previous antInfo is REL-8 and new one is REL-10 ");
11264,23142399,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAntInfoDediConfigUpdt_5,P_WARNING,swLogPrintf("unexpected codebookSubsetRestriction configuration of R10 ");
11264,23144447,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_1,P_WARNING,swLogPrintf("cqi-ReportConfig of REL-8 and REL-10 is sent by NW together ");
11264,23146495,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_2,P_WARNING,swLogPrintf("previous cqi-ReportConfig is REL-8 and new one is REL-10 ");
11264,23148543,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_3,P_WARNING,swLogPrintf("illegal aperiodic CSI mode for 1.4MHz bandwidth ");
11264,23150591,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCqiRptConfigUpdt_4,P_WARNING,swLogPrintf("illegal periodic CSI mode for 1.4MHz bandwidth ");
11264,23152639,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsNzpOsRePosDerive_1,P_WARNING,swLogPrintf("CSI-RS resourceConfig is illegal for normal subframe ");
11264,23154687,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsNzpOsRePosDerive_2,P_WARNING,swLogPrintf("CSI-RS resourceConfig is illegal for special subframe ");
11264,23156735,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsConfigUpdt_1,P_WARNING,swLogPrintf("CSI-RS is configured with 8 ports ");
11264,23158783,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsConfigUpdt_2,P_WARNING,swLogPrintf("zeroTxPowerCSI_RS2 is configured incorrectly ");
11264,23160831,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCsiRsConfigUpdt_3,P_WARNING,swLogPrintf("TM9 without CSI-RS configuration setup pmi-RI-Report ");
11264,23161088,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_1,P_WARNING,swLogPrintf("I_RI of SET%d is configured with reserved value %d ");
11264,23163136,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_2,P_WARNING,swLogPrintf("I_CQI / PMI of SET%d is configured with reserved value %d ");
11264,23165184,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_3,P_WARNING,swLogPrintf("I_CQI / PMI of SET%d is configured with reserved value %d ");
11264,23169023,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_4,P_WARNING,swLogPrintf("Periodic CQI reporting is disable due to invalid configuration of I_CQI / PMI ");
11264,23171071,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_5,P_WARNING,swLogPrintf("Periodic CQI reporting is disable due to invalid configuration of Npd ");
11264,23173119,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPeriodicCqiRiParaMapping_6,P_WARNING,swLogPrintf("Periodic CQI reporting will be handled by FW , not SEQ ");
11264,23175167,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_1,P_WARNING,swLogPrintf("pusch_configDecicated of REL-8 and REL-13 is sent by NW together ");
11264,23177215,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_2,P_WARNING,swLogPrintf("pucch_configDecicated of REL-8 and REL-13 is sent by NW together ");
11264,23179263,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_3,P_WARNING,swLogPrintf("PUCCH FORMAT3 is Configured!!! ");
11264,23181311,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPuxchDediUpdt_4,P_WARNING,swLogPrintf("PUCCH 1b Channel Selection is Configured!!! ");
11264,23183359,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyScMeasPatternConfigUpdt_1,P_WARNING,swLogPrintf("duplex mode between serving cell and configured measurement subframe pattern mismatched ");
11264,23185407,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyScMeasPatternConfigUpdt_2,P_WARNING,swLogPrintf("TDD ulDlConfig between serving cell and configured measurement subframe pattern mismatched ");
11264,23187455,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoPostProc_0,P_WARNING,swLogPrintf("post process of dedicated info. updating running in CDRX inactive state ");
11264,23189503,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoPostProc_1,P_WARNING,swLogPrintf("RxResumeTime ( DediCfg ) delayed 1ms! ");
11264,23191551,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediAbsPatternInfoUpdt_1,P_WARNING,swLogPrintf("csi-MeasSubframeSets-r12 and measSubframePatternPCell-r10 were configured togother ");
11264,23193599,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediAbsPatternInfoUpdt_2,P_WARNING,swLogPrintf("measSubframePatternPCell-r10 is NOT sub-set of csi-MeasSubframeSet1-r10 or csi-MeasSubframeSet2-r10 ");
11264,23195647,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediAbsPatternInfoUpdt_3,P_WARNING,swLogPrintf("measSubframePatternPCell-r10 is configured without valid csi-MeasSubframeSet1-r10 or csi-MeasSubframeSet2-r10 ");
11264,23195907,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoUpdt_1,P_SIG,swLogPrintf("UE downlink transmission mode changed ( %s-->%s ) ");
11264,23198464,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediInfoUpdt_2,P_INFO,swLogPrintf("PhyDediInfoUpdt running time , time1 = 0x%X , time2 = 0x%X , time3 = 0x%X , time4 = 0x%X ");
11264,23200256,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyNextRxTxSbfrmFind,P_ERROR,swLogPrintf("Find next subframe error , startTime = 0x%X , expectSbfrmType = %d , tddSbfrmType = 0x%X ");
11264,23203839,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnApSrsPending_0,P_INFO,swLogPrintf("ApSRS is Pending ");
11264,23204096,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrx2InactiveJudge_0,P_INFO,swLogPrintf("Keep CDRX Active , spsRxTime = 0x%x , spsTxTime = 0x%x ");
11264,23207935,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_0,P_INFO,swLogPrintf("SR is sent on PUCCH and is pending ");
11264,23209983,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_1,P_INFO,swLogPrintf("CRNTI Grant not Received after RAR For Contention-Free RA ");
11264,23212031,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_2,P_INFO,swLogPrintf("HARQ Buffer not empty and Wait for Retrans UL Grant ");
11264,23214079,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_3,P_INFO,swLogPrintf("Keep Active Since Short Cycle is too Small ");
11264,23216127,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxStateChange_4,P_INFO,swLogPrintf("Keep Active Since time is Near to DRX Cycle Boundary or SPS Time ");
11264,23216128,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,DrxCmdReq,P_INFO,swLogPrintf("DRX Cmd Req , longDrxCmd = %d ");
11264,23220223,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxTimerExpiredProc_3,P_INFO,swLogPrintf("CDRX Schedule Stopped , Skip timer Expired Proc ");
11264,23222271,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyConnDrxTimerExpiredProc_2,P_INFO,swLogPrintf("Bypass Old Cycle Timer Proc ");
11264,23223040,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiMeasGapCdrxSuspend_0,P_INFO,swLogPrintf("ECGI MEAS GAP CDRX SUSPEND! , measGapProc = %d , schdTime = [ %d , %d , %d ] ");
11264,23226367,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiMeasGapCdrxResume_0,P_INFO,swLogPrintf("ECGI MEAS GAP CDRX RESUME! ");
11264,23228415,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIcsGapLegalityCheck_0,P_WARNING,swLogPrintf("EMERGENCY GAP Length is not enough ");
11264,23228416,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIcsCnfgParaGen_0,P_INFO,swLogPrintf("ECGI ics status is not init on icsStage = %d ");
11264,23230720,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIcsPostProc_1,P_INFO,swLogPrintf("cell delay ( %d ) of TDD intra cell ( PCI = %d ) is out of range ");
11264,23232768,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIntraMibTimeAdjust_0,P_INFO,swLogPrintf("Intra MIB Time Adjust : flag1 = %d , adjBmp = 0x%x ");
11264,23236607,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSiSchdGapProc_1,P_INFO,swLogPrintf("Mib Receive time delay to next 10ms ");
11264,23238655,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSiSchdGapProc_0,P_INFO,swLogPrintf("Set Gap Start End Point When Ecgi Intra Mib ");
11264,23238656,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSchedule_0,P_INFO,swLogPrintf("ECGI is suspending , suspendBmp = 0x%x ");
11264,23242751,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiReqStart_0,P_WARNING,swLogPrintf("CELL not in Neighbour List during ECGI SIB1 process ");
11264,23244799,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiReqStart_2,P_WARNING,swLogPrintf("ECGI Emergency GAP used! ");
11264,23246847,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiReqStart_1,P_WARNING,swLogPrintf("Valid Gap Not Exist For ECGI ");
11264,23248895,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIntraMibTimeAdjInCdrxAct2Inact_0,P_INFO,swLogPrintf("Re-Trigger MIB time Update in CDRX ACT2INACT ");
11264,23249152,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiIntraMibTimeAdjInCdrxAct2Inact_1,P_INFO,swLogPrintf("C-RNTI Del Time Re-Adjust in CDRX ACT2INACT , oldDelTime = 0x%x , newDelTime = 0x%x ");
11264,23250944,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSchdSuspend_0,P_SIG,swLogPrintf("Suspend Bmp Setting Delay , suspendBmp = 0x%x ");
11264,23252992,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiCancelByPendingSig_0,P_WARNING,swLogPrintf("ECGI cancelled by signal pending , waitTime = %d ");
11264,23255552,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiCrntiTimeAdjustByIntraMib_0,P_INFO,swLogPrintf("C-RNTI Time Adjust by Intra ECGI MIB , cRntiTime = %d , ncMibTime = %d , adjTime = %d ");
11264,23259135,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiCrntiTimeAdjustByIntraMib_1,P_INFO,swLogPrintf("Re-Trigger MIB time Update in CDRX INACT2ACT ");
11264,23261183,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyEcgiSchdInfoClr_0,P_INFO,swLogPrintf("ECGI Schedule Info Cleared ");
11264,23261696,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyHwTaskCfgTimerSet,P_ERROR,swLogPrintf("PhyHwTaskCfgTimerSet error! miscTxTaskBitmap = 0x%X , rxTaskAddBitmap = 0x%X , rxTaskDelBitmap = 0x%X ");
11264,23263232,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskRxPauseResumeCheck_0,P_ERROR,swLogPrintf("RXPAUSE_MEASGAP with starting time of 0x%X has been added ");
11264,23265280,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskRxPauseResumeCheck_1,P_ERROR,swLogPrintf("RXRESUME_MEASGAP with starting time of 0x%X has been added ");
11264,23269375,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskAdd_1,P_WARNING,swLogPrintf("skip adding HW tasks because of ongoing PS RESET process ");
11264,23271423,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskAdd_2,P_ERROR,swLogPrintf("StartTime of headTask had missed , need silent reset! ");
11264,23271680,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,DelCurrRxBitmap,P_WARNING,swLogPrintf("Del Rx Event not existed! rxTaskBitmap = 0x%X , delEvent = %d ");
11264,23275519,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskProc4MeasGap_1,P_WARNING,swLogPrintf("delay 1st meas. gap with one period because of confliction b / w meas. gap and auto gap ");
11264,23277567,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMiscEventTaskConfig_1,P_WARNING,swLogPrintf("RX_PAUSE for SIG pending happened when CRNTI has been just removed ");
11264,23279615,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMiscEventTaskConfig_2,P_WARNING,swLogPrintf("RX_RESUME for ECGI pending happened when CRNTI has been just removed ");
11264,23279616,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMiscEventTaskConfig_3,P_ERROR,swLogPrintf("Unexpected hwTask , miscBmp = 0x%X ");
11264,23283711,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_00,P_WARNING,swLogPrintf("rxAddBmp and rxDelBmp overlapped ");
11264,23285759,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_01,P_WARNING,swLogPrintf("rxAddBmp and currRxBmp overlapped ");
11264,23287807,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_02,P_WARNING,swLogPrintf("no valid scheduled bitmap for current RX HW TASK CFG ");
11264,23289855,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_03,P_WARNING,swLogPrintf("skip RxHwTaskConfig because no HW task is scheduled now ");
11264,23290624,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_10,P_INFO,swLogPrintf("RxPause simultaneous with RxAdd / RxDel! miscBmp = 0x%X , rxAddBmp = 0x%X , rxDelBmp = 0x%X , currRxBmp = 0x%X ");
11264,23293951,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxHwTaskConfig_20,P_WARNING,swLogPrintf("Rx HwTask reStart after stopped 1ms before! ");
11264,23295999,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskConfig_1,P_WARNING,swLogPrintf("HW task has been cancelled ");
11264,23298047,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskConfig_2,P_WARNING,swLogPrintf("No HW tasks need be configured ");
11264,23298048,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyHwHalt,P_INFO,swLogPrintf("PhyHwHalt! Reason = %e<PhyHwHaltReason> ");
11264,23300096,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskAssertResetSchd_00,P_ERROR,swLogPrintf("unexpected PHY ASSERT RESET process , currRxBmp = 0x%X ");
11264,23302400,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskAssertResetSchd_10,P_WARNING,swLogPrintf("HW task defined by ID %d existed with starting time of 0x%X ");
11264,23304192,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHwTaskAssertResetSchd_11,P_WARNING,swLogPrintf("HW task of RXPAUSE_MEASGAP existed with starting time of 0x%X ");
11264,23308287,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPchTimerExpiredProc_0,P_INFO,swLogPrintf("Skip PCH Event Add Del Due to MAC Reset for Handover ");
11264,23310335,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPagingConfigReqHandle_1,P_WARNING,swLogPrintf("Get CephyPagingConfigReg in wrong state ");
11264,23310336,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyPchDciDecPostProc_0,P_INFO,swLogPrintf("Paging received and reported to PS at 0x%X! ");
11264,23312384,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phySchdInit_ChipId,P_SIG,swLogPrintf("CHIPID = %d ! ");
11264,23314432,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phySchdInit,P_INFO,swLogPrintf("PhySchdInitEvent = %e<PhySchdInitEvent> ");
11264,23316480,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyCerrcInitConfigReport_0,P_ERROR,swLogPrintf("RF calibration table error , bandNum in cali table is : %d ");
11264,23320575,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHandleDeactReq_1,P_WARNING,swLogPrintf("Pending DEACT_REQ because CEAXC post process has been started ");
11264,23322623,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyHandleHandoverReq_1,P_WARNING,swLogPrintf("Cell is not in neighbour list during handover MIB process ");
11264,23324671,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxPauseStartTimeCalc_0,P_WARNING,swLogPrintf("Wait for other pending signal! ");
11264,23325440,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxPauseStartTimeCalc_1,P_WARNING,swLogPrintf("Signal pending overlap with measgap! RxPauseTime = 0x%X , RxResumeTime = 0x%X ; MeasGap : RxPauseTime = 0x%X , RxResumeTime = 0x%X ");
11264,23326976,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySigPendingResumeTimeAdjust_0,P_INFO,swLogPrintf("adjust starting time of RX_RESUME from 0x%X to 0x%X ");
11264,23330815,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1ConfigProcess_0,P_SIG,swLogPrintf("SIB1 Config pending! ");
11264,23332863,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyComnCnfgProcess_0,P_SIG,swLogPrintf("CommonConfig pending! ");
11264,23334911,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediConfigProcess_00,P_ERROR,swLogPrintf("buffer of cephyDedicatedConfigReq overflow ");
11264,23336959,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyDediConfigProcess_01,P_WARNING,swLogPrintf("buffer new coming cephyDedicatedConfigReq because last one has NOT been parsed ");
11264,23337216,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyMeasBuffRel_0,P_ERROR,swLogPrintf("PhyMeasBuffRelease ( 0 : MIB , 1 : ICS , 2 : MEAS ) = %d , measBuffInUse = %d , error!!! ");
11264,23339264,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRxGap4SigPendingInCdrxInact_0,P_WARNING,swLogPrintf("%d pending SIG encounter CDRX INACT state with signal pasring bitmap 0x%X ");
11264,23343103,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyTxStopPostProc_0,P_WARNING,swLogPrintf("mac data unready or c-rnti-config later ");
11264,23345151,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAuxAdcCnf_0,P_ERROR,swLogPrintf("invalid internal temperature ");
11264,23345152,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAuxAdcCnf_1,P_INFO,swLogPrintf("Current temperature = %d ");
11264,23347200,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySigParser_0,P_ERROR,swLogPrintf("Received SIG_CEPHY_NEXT_CELL_SEARCH_REQ under wrong PhyState : %e<PhyState> ");
11264,23349248,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySigParser,P_ERROR,swLogPrintf("Not defined signal recevied from PS , sigId = 0x%X ");
11264,23353343,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyAtCmdDataDumpProc,P_WARNING,swLogPrintf("Wait to send dump command in PHY IDLE or CONNECT state! ");
11264,23355391,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyRaStatisCntInc,P_WARNING,swLogPrintf("PhyRaStatisCntInc : Wrong type input! ");
11264,23357184,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyRaStatisInfo_0,P_SIG,swLogPrintf("PhyRaStatisInfo : raSuccNum = %d , accessReqNum = %d , preambleTxNum = %d , rarRecvNum = %d , msg3TxNum = %d , msg4RecvNum = %d , rarTmrExpNum = %d , crTmrExpNum = %d ");
11264,23357440,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyTxStatisInfo_1,P_SIG,swLogPrintf("PhyTxStatisInfo : txPowerInsufficientNum = %d ");
11264,23361535,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyStatisOperReq_0,P_SIG,swLogPrintf("PS Request for start statis info report! ");
11264,23363583,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,phyStatisOperReq_1,P_SIG,swLogPrintf("PS Request for stop statis info report! ");
11264,23364352,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,CephySetTxPowerReq_1,P_WARNING,swLogPrintf("PS Request for TxPower! type : %d , targetPower = %d , maxPower = %d , minPower = %d ");
11264,23365632,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySpecialCaseInfoUpdt_1,P_INFO,swLogPrintf("Special Case No = 0x%X ");
11264,23367936,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyStaticCfgPagingSet_0,P_INFO,swLogPrintf("pagingDciBmp = 0x%X , pagingDecBmp = 0x%X ");
11264,23369728,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyStaticCfgPagingReport_0,P_INFO,swLogPrintf("Orig staticCfgPaingInfo = %d% ");
11264,23373823,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibStart_0,P_INFO,swLogPrintf("Schedule MIB with PCH task adding in advance ");
11264,23375871,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1Start_0,P_INFO,swLogPrintf("Schedule SIB1 with PCH task adding in advance ");
11264,23377919,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySibxStart_1,P_INFO,swLogPrintf("Receiving SYS_INFO_REQ ( SCELL SIBX ) while MEAS_TASK is ongoing ");
11264,23378432,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyScellSysInfoReq_0,P_INFO,swLogPrintf("MIB MODIFY REQ Received , schdTime = 0x%x , timeDiff = 0x%x , mibBoudary = 0x%x ");
11264,23382015,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyNcellSysInfoReq_1,P_WARNING,swLogPrintf("CELL MISS during cell reselection SIB1 process ");
11264,23384063,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoStop_0,P_SIG,swLogPrintf("PLMN STOP ");
11264,23386111,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoReport_1,P_WARNING,swLogPrintf("Skip Ncell MIB Reporting in Cell ReSelect ");
11264,23388159,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoReport_0,P_WARNING,swLogPrintf("Skip Ncell MIB Reporting in ECGI ");
11264,23388160,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoReport_2,P_SIG,swLogPrintf("PhySysInfoReport : barTimeLen = %d ");
11264,23390720,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySysInfoReport_3,P_WARNING,swLogPrintf("PhySysInfoReport : CRC fail! mibFlag = %d , siReqScell = %d , siReqNcell = %d ");
11264,23394303,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibMdfPrdTimeDiff,P_WARNING,swLogPrintf("Unxpected Modification Period Coeff in CAT1 mode ");
11264,23396351,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyMibDecPostProc_0,P_INFO,swLogPrintf("NC MIB Dec Result Skipped ");
11264,23398399,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1DciPostProc_0,P_INFO,swLogPrintf("NC SIB1 Dci Result Skipped ");
11264,23400447,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySib1DecPostProc_0,P_INFO,swLogPrintf("NC SIB1 Dec Result Skipped ");
11264,23402495,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySibxDecPostProc_3,P_SIG,swLogPrintf("received SI at window end ");
11264,23404543,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySibxDecPostProc_1,P_SIG,swLogPrintf("report SI fail due to Scell is unreliable ");
11264,23406591,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySibxDecPostProc_2,P_SIG,swLogPrintf("report SI fail due to Scell is unreliable ");
11264,23407104,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySiRxPauseConflictProc_0,P_INFO,swLogPrintf("Si Rx Pause Conflict Proc : isAddBmp = %d , rxBitmap = 0x%X , CurrBitmap = 0x%X ");
11264,23410687,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhySibxSchdAftPageHwHalt_0,P_INFO,swLogPrintf("SIBx Schedule After Page HwHalt ");
11264,23410688,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,MacTimerExpiredPostProc_0,P_ERROR,swLogPrintf("timeAlignmentTimer expired! , time value = %d ");
11264,23414783,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,MacTimerExpiredPostProc_1,P_INFO,swLogPrintf("SW timer expired without matched expiredTime! ");
11264,23416064,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAssert_0,P_ERROR,swLogPrintf("PHY assert! Module = %e<UniLogPhyModuleIdType> , SubID = 0x%X , val1 = 0x%X , val2 = 0x%X , val3 = 0x%X , resetType = %d ");
11264,23418879,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAssert_3,P_WARNING,swLogPrintf("skip PS RESET process because previous one is ongoing ");
11264,23420927,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,PhyAssert_4,P_WARNING,swLogPrintf("start self-recovery for PHY_ASSERT ");
11264,23421184,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,OsaCreateFastSignal_0,P_WARNING,swLogPrintf("runSigNumber = %d , runBigSigNumber = %d ");
11264,23422976,0,0,PHY_ONLINE,PHY_SCHEDULE_MODULE,EC718_CP_VERSION_0,P_WARNING,swLogPrintf("CP version = 0x%X ");
12288,25169919,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_0,P_WARNING,swLogPrintf("gpPhyMacRaInfo is not NULL when IDLE2CONN! ");
12288,25171967,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_1,P_WARNING,swLogPrintf("gpPhyMacApiCtrlInfo is not NULL when IDLE2CONN! ");
12288,25174015,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_2,P_WARNING,swLogPrintf("gpPhyMacRaInfo is NULL when CONN2IDLE! ");
12288,25176063,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacApiInit_3,P_WARNING,swLogPrintf("gpPhyMacApiCtrlInfo is NULL when CONN2IDLE! ");
12288,25176576,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyAllocMacDlMem,P_ERROR,swLogPrintf("pdusize is %d , dlL2BuffBlockAddr is 0x%X , pCurBB is 0x%X ");
12288,25178112,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyAllocMacDlMem1,P_ERROR,swLogPrintf("pCurBB is 0x%X ");
12288,25180416,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacSendDlDataInd_0,P_WARNING,swLogPrintf("Discard Received Msg4 PDU : preambleTransCnt = %d DiscardNum = %d! ");
12288,25184255,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacSendSrTransMaxInd_0,P_WARNING,swLogPrintf("Set TA Timer Status to Expired in SR Trans max ind! ");
12288,25184256,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacSendSrTransMaxInd_1,P_WARNING,swLogPrintf("SR Trans max ind! srCounter = %d ");
12288,25187072,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacHandleStartTimerReq_0,P_INFO,swLogPrintf("PhyMacHandleStartTimerReq Received! userId = %d , timerId = %d , timerValue = %d , ulHarqId = %d ");
12288,25188864,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacHandleStartTimerReq_1,P_WARNING,swLogPrintf("Wrong TX time! grantTransTime = 0x%X , currTxTime = 0x%X , delayTime = %d ");
12288,25190400,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacSRReqProc_0,P_WARNING,swLogPrintf("Received SchedulingRequest when SR is pending! srCounter = %d ");
12288,25192960,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacHandleSRReq_0,P_INFO,swLogPrintf("Received SchedulingRequest when dedicatedConfig to be parsed! parseTime = [ 0x%X~0x%X ] , waitTime = %d ( ms ) ");
12288,25196543,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyMacHandleMacResetReq_1,P_INFO,swLogPrintf("Pending MAC_RESET_REQ because CEAXC post process has been started ");
12288,25197057,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarCrTimerExpireProc_0,P_WARNING,swLogPrintf("raStage = %s is error!!! , rarTimerState = %d , crTimerState = %d ");
12288,25198592,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarCrTimerExpireProc_1,P_SIG,swLogPrintf("RAR Window Timer Expired , preambleTransCnt = %d ");
12288,25200640,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarCrTimerExpireProc_2,P_SIG,swLogPrintf("Contention Resolution Timer Expired , preambleTransCnt = %d ");
12288,25202689,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyRaStageUpdt,P_SIG,swLogPrintf("Random Access : RaStage = %s ");
12288,25205505,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyRaStageUpdt_1,P_WARNING,swLogPrintf("Random Access : RaStage = %s , warningFlag = %d , rarTimerState = %d , crTimerState = %d ");
12288,25207040,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_3,P_WARNING,swLogPrintf("Discard Received RAR : preambleTransCnt = %d DiscardNum = %d! ");
12288,25209600,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_0,P_WARNING,swLogPrintf("Received RAR ( rapid = %d ) with candidate rapid = %d , ta ( old ) = %d , ta ( new ) = %d ");
12288,25211648,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_1,P_WARNING,swLogPrintf("Received RAR but Parse Error! rarResType = %d , pdu [ 0|1|2|3 ] = %X , pdu [ 4|5|6|7 ] = %X , pdu [ 8|9|10|11 ] = %X ");
12288,25213440,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyRarMacPduParser_2,P_SIG,swLogPrintf("Received RAR! preambleIndex = %d , timingAdvanceCmd = %d , numOfRapid = %d ");
12288,25214977,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyPrachResourceSelect_1,P_WARNING,swLogPrintf("Number of fRa = 0 under TDD MODE! raStage = %s ");
12288,25217536,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyPreambleTargetPowerCalc_0,P_WARNING,swLogPrintf("expected prach tx power exceed pmax! expected preamblePower = %d preambleRecvTgtPow = %d pCmax = %d ");
12288,25221119,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyPreambleProc,P_ERROR,swLogPrintf("Cannot select a PRACH resource ! ");
12288,25221376,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyHandleRandomAccessReq_0,P_WARNING,swLogPrintf("Received RandomAccessReq when RA is ongoing , current RaCause = %d , Request RaCause = %d! ");
12288,25225215,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyHandleRandomAccessReq_1,P_WARNING,swLogPrintf("UL Data RA triggered when SR resource is existed! ");
12288,25227263,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacHandleCrntiConfigReq_0,P_SIG,swLogPrintf("Crnti Configured when raStage is SUCCESS , skipped by PHY! ");
12288,25227264,0,0,PHY_ONLINE,PHY_MAC_MODULE,phyMacHandleCrntiConfigReq_1,P_SIG,swLogPrintf("Crnti Configured ( RA SUCC ) : cRnti = %d ");
12288,25229312,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyTaTaskProc_0,P_WARNING,swLogPrintf("taSpn = %d is out of range !!! ");
12288,25231360,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyTaTaskProc_1,P_WARNING,swLogPrintf("taSpn = %d is out of range !!! ");
12288,25233664,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyDataReq_0,P_ERROR,swLogPrintf("Mac Send TX Data Late! harqID = %d , expected transTime ( HFNSFNSBN ) = 0x%X ");
12288,25235456,0,0,PHY_ONLINE,PHY_MAC_MODULE,PhyTxDataReq_1,P_WARNING,swLogPrintf("data Status = %d is Invalid ");
12288,25237760,0,0,PHY_ONLINE,PHY_MAC_MODULE,macTimerStart,P_ERROR,swLogPrintf("Start a MacTimer with too short length! ( userID<<16 ) |timerID = 0x%x , length = %d ");
12288,25241599,0,0,PHY_ONLINE,PHY_MAC_MODULE,macTimerExpiredIsr,P_WARNING,swLogPrintf("NO Running Timer when SW timer Expired! ");
13312,27265280,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyCeParaReCnfgReq_1,P_INFO,swLogPrintf("Add CE / RxDFE / RxSEQ algorithm para. reconfiguration of trigger source 0x%X HW task with startTime of 0x%X ");
13312,27267072,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyIcsMeasConnCnfgParaGen_1,P_INFO,swLogPrintf("startTime of inter FRS_CONN need be adjusted to 0x%X ");
13312,27269120,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasNCellListMaintain_1,P_INFO,swLogPrintf("add PCI %d into NCELL list because expiredCnt has NOT reached to expired timer ");
13312,27271424,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasInterSchdInfoMaintain_1,P_WARNING,swLogPrintf("number of inter cell is %d , exceed the upper limit %d ");
13312,27273472,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellCePostProc_1,P_ERROR,swLogPrintf("unexpected rssiNum ( %d ) or rsrpNum ( %d ) of serving cell ");
13312,27277311,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasFakeNCellRemove_1,P_INFO,swLogPrintf("fake neighCell will be removed after NC_MEAS ");
13312,27279359,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_HO,P_WARNING,swLogPrintf("neighCell measurement schdPhase is NOT INIT ");
13312,27281407,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_IDLE2CONN,P_WARNING,swLogPrintf("neighCell measurement schdPhase is NOT INIT ");
13312,27283455,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_CONN2IDLE,P_WARNING,swLogPrintf("neighCell measurement schdPhase is NOT INIT ");
13312,27285503,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSchdInit_1,P_WARNING,swLogPrintf("wakeup full image from SLEEP2 while MEAS task status is ongoing ");
13312,27287551,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSourceSCellInfoBackup_1,P_INFO,swLogPrintf("Backup valid source cell before cell reselection ");
13312,27287808,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleSCellMeasRsltCheck_intra,P_WARNING,swLogPrintf("Unexpected BW IND of intra cells ( NB-0x%X ; WB-0x%X ) ");
13312,27289856,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleSCellMeasRsltCheck_inter,P_WARNING,swLogPrintf("Unexpected BW IND of inter cells ( NB-0x%X ; WB-0x%X ) ");
13312,27293695,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleEventGenerator_1,P_WARNING,swLogPrintf("NCELL MEAS. process of previous DRX is not finished ");
13312,27295743,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleSchedule_1,P_WARNING,swLogPrintf("break out previous unfinished MEAS tasks due to pending measurement commands ");
13312,27297791,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIdleSchedule_2,P_WARNING,swLogPrintf("neighbor cell meas. scheduler should be only called after PCH in PHY IDLE ");
13312,27299839,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_1,P_WARNING,swLogPrintf("intra ICS / CRS MEAS is skipped because of suspension ");
13312,27301887,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_2,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of suspension ");
13312,27303935,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_3,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and RACH ");
13312,27305983,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_4,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and PCH ");
13312,27308031,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_5,P_WARNING,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and SCELL_SI ");
13312,27310079,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskSchdEnable_6,P_INFO,swLogPrintf("inter ICS / CRS MEAS is skipped because of confliction b / w measGap and CDRX timer ");
13312,27312127,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnTaskReqHandler_1,P_WARNING,swLogPrintf("neighCell MEAS HW task is ongoing when CDRX ACT to INACT ");
13312,27314175,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEventGenerator_intra_0,P_WARNING,swLogPrintf("unexpected ICS MEAS for intra during measurement period state ");
13312,27316223,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEventGenerator_intra_1,P_INFO,swLogPrintf("trigger intra ICS MEAS immediatelly because timeDiff is over TH ");
13312,27318271,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEventGenerator_inter_0,P_WARNING,swLogPrintf("unexpected ICS MEAS for inter during measurement period state ");
13312,27320319,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEventGenerator_inter_1,P_INFO,swLogPrintf("trigger inter ICS MEAS immediatelly because timeDiff is over TH ");
13312,27322367,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEventGenerator_interIcs,P_WARNING,swLogPrintf("ICS MEAS of previous euArfcn has NOT been done ");
13312,27324415,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnNrmlSchedule_1,P_WARNING,swLogPrintf("skip period INT process because modem INT bitmap of CIRQ3 was cleared ");
13312,27326463,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnNrmlSchedule_2,P_INFO,swLogPrintf("skip period INT process if meas. is scheduled with CDRX method during inactive time ");
13312,27326720,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnDrxSchedule_1,P_INFO,swLogPrintf("CDRX cycle changed : %d ( ms ) -->%d ( ms ) ");
13312,27328512,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdAbortPostProc_0,P_ERROR,swLogPrintf("Incorrect bitmap ( 0x%X ) indicated new msg. suspension ");
13312,27330560,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdAbortPostProc_1,P_ERROR,swLogPrintf("Incorrect bitmap ( 0x%X ) indicated ECGI suspension ");
13312,27332864,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdSuspend_1,P_WARNING,swLogPrintf("neighbor cell ( bitmap = 0x%X ) measurements is suspended with source = %d ");
13312,27334912,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnSchdResume_1,P_WARNING,swLogPrintf("neighbor cell ( bitmap = 0x%X ) measurements is resumed with source = %d ");
13312,27338751,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEarlyReportCheck_intra,P_INFO,swLogPrintf("early reporting of intra cell will be triggered ");
13312,27340799,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnEarlyReportCheck_inter,P_INFO,swLogPrintf("early reporting of inter cell will be triggered ");
13312,27342847,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmProc_0,P_ERROR,swLogPrintf("unexpected accuNum of SNR with value of zero when starting new CDRX cycle ");
13312,27342848,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmProc_1,P_ERROR,swLogPrintf("accuNum ( %d ) of SNR for CDRX overflow ");
13312,27346943,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmPostProc_0,P_INFO,swLogPrintf("failure of radio link recovered ");
13312,27348991,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmPostProc_1,P_INFO,swLogPrintf("failure of radio link happened ");
13312,27351039,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmPostProc_2,P_INFO,swLogPrintf("failure of radio link happened ");
13312,27351040,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmAdvSbfrmNumCalc_1,P_INFO,swLogPrintf("advanced subframe number for RLM is %d ");
13312,27353344,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCmdPendingProc_1,P_WARNING,swLogPrintf("%d commands with the same type ( %d ) as new coming one has been already stored ");
13312,27357183,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasIntraCellMeasCmdHandler_1,P_WARNING,swLogPrintf("ignore intra measurement command received during RA procedure ");
13312,27359231,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasInterCellMeasCmdHandler_1,P_WARNING,swLogPrintf("ignore inter measurement command received during RA procedure ");
13312,27361279,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasInterCellMeasCmdHandler_2,P_ERROR,swLogPrintf("all inter cell measurement in RRC_CONNECTED state will be stopped due to no valid MEAS_GAP ");
13312,27361280,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_0,P_SIG,swLogPrintf("receiving cell meas request ( bitmap = 0x%X ) ");
13312,27365375,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_1,P_WARNING,swLogPrintf("neighbor cell meaurement is started within inappropriate PHY state ");
13312,27367423,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_2,P_WARNING,swLogPrintf("intra measurement has already been started ");
13312,27369471,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasReqParse_3,P_WARNING,swLogPrintf("inter measurement with the same configuration has already been started ");
13312,27369472,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasStopReqParse_0,P_SIG,swLogPrintf("receiving cell meas stop request ( bitmap = 0x%X ) ");
13312,27373567,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasStopReqParse_1,P_WARNING,swLogPrintf("intra measurement has already been stopped ");
13312,27375615,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasCellMeasStopReqParse_2,P_WARNING,swLogPrintf("inter measurement with the configured stopped bitmap has been stopped ");
13312,27377663,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasConnMeasGapConfigReqParse_1,P_WARNING,swLogPrintf("configuration of measurement gap is NOT changed ");
13312,27379711,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasRlmInSyncCtrlReqParse_1,P_WARNING,swLogPrintf("Skip SIG_CEPHY_IN_SYNC_CTRL_REQ because schdEntity for CONN is PNULL ");
13312,27379712,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_00,P_VALUE,swLogPrintf("SNR TH for weak cell camp. opt. set by AT CMD is %d / 64 ( dB ) ");
13312,27381760,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_01,P_VALUE,swLogPrintf("RSRP TH for weak cell camp. opt. set by AT CMD is %d / 16 ( dBm ) ");
13312,27383808,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_02,P_VALUE,swLogPrintf("SIB1 HYP_S TH for weak cell camp. opt. set by AT CMD is %d / 16 ( dBm ) ");
13312,27385856,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_10,P_VALUE,swLogPrintf("revised RSRP of cephySysInfoInd with value of %d / 16 ( dB ) ");
13312,27389951,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_11,P_INFO,swLogPrintf("skip optimization of weak cell camping in PHY IDLE state because neighbor cell was detected ");
13312,27389952,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_12,P_VALUE,swLogPrintf("revised RSRP of ServCellMeasInd in cephyCellMeasInd with value of %d / 16 ( dB ) ");
13312,27394047,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_13,P_INFO,swLogPrintf("qRxLevMin is invalid or very low ");
13312,27396095,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasSCellWeakSignalOpt_20,P_INFO,swLogPrintf("optimization of weak signal camp on was NOT enabled ");
13312,27398143,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellIndFill_1,P_INFO,swLogPrintf("RSRP / RSSI of serving cell is measured with narrow bandwidth ");
13312,27400191,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellIndFill_2,P_INFO,swLogPrintf("force RSRP / RSRQ reported to RRC to min value because of unreliable serving cell and continuous failure of presync ");
13312,27402239,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellIndFill_3,P_INFO,swLogPrintf("force RSRP / RSRQ reported to RRC to min value because of existed strong intra cell ");
13312,27404287,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellIndFill_4,P_INFO,swLogPrintf("force RSRP / RSRQ reported to RRC to min value because SCELL with low RxLevMin is considered as OFF ");
13312,27404544,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellIndFill_5,P_INFO,swLogPrintf("notice RRC that radio link is unreliable ( DL : %d , UL : %d ) ");
13312,27408383,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasServCellReport_1,P_WARNING,swLogPrintf("TA is negative value ");
13312,27408640,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasResultsReport_intra,P_WARNING,swLogPrintf("Unexpected BW IND of intra cells ( NB-0x%X ; WB-0x%X ) ");
13312,27410688,0,0,PHY_ONLINE,PHY_MEAS_MODULE,PhyMeasResultsReport_inter,P_WARNING,swLogPrintf("Unexpected BW IND of inter cells ( NB-0x%X ; WB-0x%X ) ");
14336,29364223,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPagingEdrxUpdate0,P_ERROR,swLogPrintf("fail to get UTC , set edrx parameter fail!!!!!!! ");
14336,29365504,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPagingEdrxUpdate1,P_SIG,swLogPrintf("current time is %d-%d-%d , %d : %d : %d ");
14336,29366528,0,0,PHY_ONLINE,PHY_PMU_MODULE,eDRXUpdate,P_SIG,swLogPrintf("simulation eDRX parameter period is %d ( 0 : 81.92s , 1 : 655.36s , 2 : 1310.72s ) , and PTW is %d ( 0 : 20.48s , 1 : 40.96s ) ");
14336,29370367,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPmuSCCalibrCancelRequest,P_SIG,swLogPrintf("cancel SC calibration! ");
14336,29370368,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPmuSCCalibrRequest_0,P_SIG,swLogPrintf("Request for SC calibration! trigType = %d ");
14336,29372416,0,0,PHY_ONLINE,PHY_PMU_MODULE,phyPmuSCCalibrResponse,P_SIG,swLogPrintf("Received IPC : A2C_SLOWCLOCK_CALIBR_CNF when slowClockCalibrStatus ( %d ) is not in request type! ");
14336,29376511,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyCpRTWakeupIsr_0,P_INFO,swLogPrintf("CP wakeup by CP RT IRQ! ");
14336,29378559,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyCpSWWakeupIsr_0,P_INFO,swLogPrintf("CP wakeup by SW INT! ");
14336,29379072,0,0,PHY_ONLINE,PHY_PMU_MODULE,phyCpmuConfig_0,P_VALUE,swLogPrintf("CP vote sleep! sleepTime = %d , sleepType = %e<CPSleepState> , IsScRc32K = %d ");
14336,29381120,0,0,PHY_ONLINE,PHY_PMU_MODULE,phyCpmuConfig_1,P_INFO,swLogPrintf("CP vote sleep! wkupSrc|hwTaskWkupTime = 0x%X , flashUpdtBmp = 0x%X , presyncMode = %d ");
14336,29382656,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPmuModeChange_0,P_VALUE,swLogPrintf("pmuMode changed , branch is %d ");
14336,29386751,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyPmuModeCtrl_00,P_WARNING,swLogPrintf("CP sleep long in Non-CpOff state! ");
14336,29386752,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyWakeFullImage,P_VALUE,swLogPrintf("CP need transfer to full image due to wkupSrc %d ");
14336,29388800,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyGetTimingAdjValue_0,P_VALUE,swLogPrintf("Timing Adj of PreSync is %d ");
14336,29390848,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyGetTimingAdjValue_1,P_VALUE,swLogPrintf("Timing Adj of ATC is %d ");
14336,29394943,0,0,PHY_ONLINE,PHY_PMU_MODULE,PhyCancelDueToATCMD,P_SIG,swLogPrintf("All task canceled due to IPC INT received! ");
15360,31461375,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncTimingAdjXrs,P_WARNING,swLogPrintf("timing offset is too large in sleep0 LRS ");
15360,31461376,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyCpGetSleepSrc,P_VALUE,swLogPrintf("SET sleep SRC to %d ( 0 is 32K and 1 is 40K ) ");
15360,31465471,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPreSyncTaskSchd_1,P_SIG,swLogPrintf("sss offline presync try next candidate ");
15360,31467519,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPreSyncTaskSchd_2,P_SIG,swLogPrintf("sss online presync try next candidate ");
15360,31469567,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPreSyncStart1,P_INFO,swLogPrintf("set presync mode to not exist ");
15360,31469824,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPreSyncTaskAdd0,P_INFO,swLogPrintf("UE maybe wakup earlier than scheduled time : schedule time is 0x%X and currTime is 0x%X ");
15360,31471616,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncTimingAdjForMib,P_WARNING,swLogPrintf("PRESYNC MIB adjust , need check further and ofst is %d ");
15360,31473920,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyIcsPresyncIntPostProc_AfcAdj2,P_VALUE,swLogPrintf("change AFC value from %d to %d ");
15360,31475712,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyIcsPresyncIntPostProc_AfcAdj1,P_VALUE,swLogPrintf("presync Adjust AFC %d ");
15360,31477760,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyIcsPresyncIntPostProc,P_SIG,swLogPrintf("presync fail and sync flag is %d ");
15360,31480832,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PAPR,P_VALUE,swLogPrintf("accuNum = %d , papr [ 0 \1 \2 \3 ] = %d|%d|%d|%d ");
15360,31481856,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,ICS_STAGE_SSS_OFFLINE_SYNC,P_VALUE,swLogPrintf("NID1 in candidate [ %d ] ! ");
15360,31484672,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,ICS_STAGE_SSS_OFFLINE_SYNC1,P_WARNING,swLogPrintf("presync AFC result : Idata = 0x%X , Qdata = 0x%X , Tdata = 0x%X , rslt = %d ");
15360,31485952,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdPending0,P_WARNING,swLogPrintf("IPC pending too many cmd , pending number is %d ");
15360,31488000,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdPending,P_INFO,swLogPrintf("IPC pending duto presync , pending number is %d ");
15360,31492095,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdProc_0,P_WARNING,swLogPrintf("presync pending IPC proc nested and skip it ");
15360,31492096,0,0,PHY_ONLINE,PHY_PRESYNC_MODULE,PhyPresyncCmdProc_1,P_INFO,swLogPrintf("process pending IPC , pending number is %d ");
17408,35655679,0,0,PHY_ONLINE,PHY_TMU_MODULE,SeqHwIcsStopRtnTimeAdjust_1,P_WARNING,swLogPrintf("ICS SCHD RTN and ICS STOP RTN overlapped ");
17408,35657727,0,0,PHY_ONLINE,PHY_TMU_MODULE,SeqHwIcsStopRtnTimeAdjust_2,P_INFO,swLogPrintf("ICS SCHD RTN and ICS STOP RTN overlapped ");
17408,35659775,0,0,PHY_ONLINE,PHY_TMU_MODULE,SeqHwIcsStopRtnTimeAdjust_3,P_WARNING,swLogPrintf("modify extra margin to trigger debug TRIQ0 error ");
17408,35660032,0,0,PHY_ONLINE,PHY_TMU_MODULE,SeqHwAgcFreezeCfg_0,P_VALUE,swLogPrintf("BIT_DRAM_AGC_FREEZE changed from %d to %d ");
18432,37752831,0,0,PHY_ONLINE,PHY_COMN_MODULE,phyMXicDummyIsr,P_ERROR,swLogPrintf("Unexpected MXIC INT happened!!! ");
18432,37754879,0,0,PHY_ONLINE,PHY_COMN_MODULE,PhyMXicLogGrpErrSqIsr_0,P_INFO,swLogPrintf("PHY_MXIC_LOGGRP_SQ_ERROR happened! ");
18432,37754880,0,0,PHY_ONLINE,PHY_COMN_MODULE,PhyBBDMAIsr_1,P_WARNING,swLogPrintf("BB DMA TimeOut warnings status = %x ");
18432,37757184,0,0,PHY_ONLINE,PHY_COMN_MODULE,PhyBBDMAIsr_2,P_INFO,swLogPrintf("BB DMA finish! irqStatus = 0x%X , status0 = 0x%X ");
18432,37760512,0,0,PHY_ONLINE,PHY_COMN_MODULE,PhyBBDMAIsr_4,P_SIG,swLogPrintf("CRS OS DONE! CurrOsNum = %d Address1 = 0x%X , Address2 = 0x%X , tempData [ 0 ] = 0x%X , tempData [ 1 ] = 0x%X , tempData [ 2 ] = 0x%X , tempData [ 3 ] = 0x%X ");
18432,37761792,0,0,PHY_ONLINE,PHY_COMN_MODULE,PhyDMADumpCfg_0,P_ERROR,swLogPrintf("PHY Data Dump Configured Error! dumpMode = %d , sampleRate = %d , numOfTti = %d , skipTti = %d ");
18432,37764608,0,0,PHY_ONLINE,PHY_COMN_MODULE,PhyDMADumpCfg_1,P_SIG,swLogPrintf("PHY Data Dump Configured! dumpAddr = 0x%X , destDumpAddr = 0x%X numOfTti = %d skipTti = %d dataMemLen = %d , numOfSampleInTti = %d , tempData [ 0 ] = 0x%X ");
18432,37765120,0,0,PHY_ONLINE,PHY_COMN_MODULE,PhyDMADumpLostIsr_1,P_WARNING,swLogPrintf("Dump DMA Lost warnings status = %x ");
19456,39847936,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_0,P_INFO,swLogPrintf("PhyCommGraphInfo : phyStateId = %d ");
19456,39849984,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_1,P_INFO,swLogPrintf("PhyCommGraphInfo : phyStateId = %d ");
19456,39852288,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyCellInfo_0,P_INFO,swLogPrintf("PhyCommGraphInfo : carrierFreq = %d , phyCellId = %d ");
19456,39854080,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_2,P_INFO,swLogPrintf("CDRX state change active --> inactive : PhyCommGraphInfo : phyStateId = %d ");
19456,39856128,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyGraphState_3,P_INFO,swLogPrintf("CDRX state change inactive --> active : PhyCommGraphInfo : phyStateId = %d ");
19456,39858688,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyMeaScellInfo_0,P_INFO,swLogPrintf("PhyCommGraphInfo : avgSnr = %d , avgRssi = %d , avgRsrp = %d ");
19456,39860480,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyCellInfo_1,P_INFO,swLogPrintf("PhyCommGraphInfo : carrierFreq = %d , phyCellId = %d ");
19456,39862528,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyCellInfo_2,P_INFO,swLogPrintf("PhyCommGraphInfo : carrierFreq = %d , phyCellId = %d ");
19456,39866112,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyRxStatisInfo_0,P_SIG,swLogPrintf("PhyRxStatisInfo : grantNum = %d , bler = %d% , wbCqi = %d , snr = %d , avgPrb = %d , avgMcs = %d , rxTpt ( kbps ) = %d , ack2Nack = %d ");
19456,39868160,0,0,PHY_ONLINE,PHY_GRAPH_MODULE,PhyTxStatisInfo_0,P_SIG,swLogPrintf("PhyTxStatisInfo : grantNum = %d , bler = %d% , avgPrb = %d , avgMcs = %d , txTpt ( kbps ) = %d , ulPower = %d , ta = %d , ack2Dtx|nack2Ack = 0x%X ");
20480,41945344,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOFTBuffUpdateReq_1,P_SIG,swLogPrintf("PHY request to update DCXO NVM file! , stored temprature = %d , freqPPM = %d ");
20480,41947136,0,0,PHY_ONLINE,PHY_DCXO_MODULE,FreqErrOvfl,P_ERROR,swLogPrintf("gpPhySCellInfo->baseInfo.freqErrPPM = %d ( wl = 17 , fwl = 10 ) overflows ");
20480,41949184,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOInvalid,P_SIG,swLogPrintf("DCXO ( sync%d ) : curve invalid ");
20480,41952000,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOAddSmp,P_SIG,swLogPrintf("DCXO ( sync%d ) : add Smp = ( %ddgr , %dppm ) addreason = %d ");
20480,41953280,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXODiscardSmp,P_SIG,swLogPrintf("DCXO ( sync%d ) : discard the current Smp ");
20480,41955844,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOInitFreqErrGet_0,P_SIG,swLogPrintf("currTempr = %d , initFreqOfst = %d , initFreqType = %s ");
20480,41959423,0,0,PHY_ONLINE,PHY_DCXO_MODULE,PhyDCXOCInfoRst_0,P_WARNING,swLogPrintf("PhyDCXOCInfoRst called! ");
20480,41961471,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOFTBuffUpdateReq_0,P_ERROR,swLogPrintf("Request to update DCXO NVM before last request has not been confirmed by AP! ");
20480,41963519,0,0,PHY_ONLINE,PHY_DCXO_MODULE,DCXOFTBuffUpdateCnf_0,P_ERROR,swLogPrintf("DCXO NVM update confirm received when request flag has been cleared! ");
20480,41963520,0,0,PHY_ONLINE,PHY_DCXO_MODULE,PhyDCXOFTBufAfcBU,P_WARNING,swLogPrintf("PhyDCXOFTBufPUCheck called! sizeof ( afc ) = %dbyte has changed from 5 words!!! ");
20480,41965568,0,0,PHY_ONLINE,PHY_DCXO_MODULE,PhyDCXOFTBufErase_0,P_WARNING,swLogPrintf("DCXOFTBufErase called! Cause = %d ");
262144,536875007,0,0,PLAT_AP,SIG_DUMP,DUMP_FULL_SIGNAL_1,P_INFO,swLogDump("Cust Sig = > ");
262144,536877055,0,0,PLAT_AP,SIG_DUMP,DUMP_FULL_SIGNAL,P_VALUE,swLogDumpPolling("Sig = > ");
262144,536879103,0,0,PLAT_AP,PS_DUMP,NetMgrLinkUp_8,P_SIG,swLogDump("Net manager , link up , IPV6 PCO DNS addr : ");
262144,536881151,0,0,PLAT_AP,PS_DUMP,NetMgrLinkUp_9,P_ERROR,swLogPrintf("Net manager , link up , get adpt DNS CFG fail ");
263168,538970113,0,0,PLAT_AP,PLA_STRING,slpManApplyPlatVoteHandle_2,P_VALUE,swLogPrintf("%s ");
263168,538972161,0,0,PLAT_AP,PLA_STRING,slpManGivebackPlatVoteHandle_4,P_VALUE,swLogPrintf("%s ");
263168,538974209,0,0,PLAT_AP,PLA_STRING,OsaFopen_1,P_WARNING,swLogPrintf("Can ' t open NVM file , as not support mode : %s ");
263168,538976257,0,0,PLAT_AP,PLA_STRING,build_info,P_SIG,swLogPrintf("%s ");
263168,538978305,0,0,PLAT_AP,PLA_STRING,get_log_version_1,P_ERROR,swLogPrintf("%s ");
263168,538980353,0,0,PLAT_AP,PLA_STRING,StackOverflow,P_ERROR,swLogPrintf("\r \n!!!error!!!..task : %s..stack.over.flow!!! \r \n ");
264192,541071359,0,0,PLAT_AP,PLA_INTERNAL_CMD,EC_READY,P_INFO,swLogPrintf("EC Ready! ");
264192,541067265,0,0,PLAT_AP,PLA_INTERNAL_CMD,get_log_version,P_SIG,swLogPrintf("LOGVERSION : %s ");
264192,541073407,0,0,PLAT_AP,PLA_INTERNAL_CMD,ecDumpHandshakeProc,P_ERROR,swLogPrintf("enter dump handshake mode ");
264192,541075455,0,0,PLAT_AP,PLA_INTERNAL_CMD,ecDumpUsbHandshakeProc,P_ERROR,swLogPrintf("enter USB dump handshake mode ");
265216,543164928,0,0,PLAT_AP,PLA_DRIVER,vTaskStepTick_1,P_VALUE,swLogPrintf("vTaskStepTick-%x , %x , %x ");
265216,543166464,0,0,PLAT_AP,PLA_DRIVER,vTaskStepTick_2,P_VALUE,swLogPrintf("New xTicksToJump = %d ");
265216,543168512,0,0,PLAT_AP,PLA_DRIVER,vTaskStepTick_3,P_VALUE,swLogPrintf("xTicksToJump has error = %d ");
265216,543171072,0,0,PLAT_AP,PLA_DRIVER,vECTaskStepTick_1,P_WARNING,swLogPrintf("vTaskStepTick-%x , %x , %x ");
265216,543172608,0,0,PLAT_AP,PLA_DRIVER,Enter_Active_1,P_VALUE,swLogPrintf("EC618 Active SmallImg-from = %e<APBootFlag_e> ");
265216,543176703,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_1,P_VALUE,swLogPrintf("EC Main Branch : AP unschd wakeup ");
265216,543178751,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_2,P_VALUE,swLogPrintf("EC Main Branch : CP sleep before ap wfi ");
265216,543180799,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_3,P_VALUE,swLogPrintf("EC Main Branch : AP receive wakeup pending ");
265216,543182847,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_4,P_VALUE,swLogPrintf("EC Main Branch : AP hib timer is near ");
265216,543184895,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_5,P_VALUE,swLogPrintf("EC Main Branch : Ps need wakeup fullimage ");
265216,543186943,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_6,P_VALUE,swLogPrintf("EC Main Branch : CP sleeped , AP wakeup from wfi ");
265216,543188991,0,0,PLAT_AP,PLA_DRIVER,ecPrintFullImageReason_7,P_VALUE,swLogPrintf("EC Main Branch : AP hib counter wrap ");
265216,543191039,0,0,PLAT_AP,PLA_DRIVER,ec_main_1,P_ERROR,swLogPrintf("sleep should not run to here ");
265216,543191040,0,0,PLAT_AP,PLA_DRIVER,ec_main_wakeupSrc,P_INFO,swLogPrintf("Wakeup Src Bitmap = 0x%x ");
265216,543193856,0,0,PLAT_AP,PLA_DRIVER,ec_main_0,P_WARNING,swLogPrintf("BC Ld Assert : bcldCfg = 0x%x , wkupCfg = 0x%x , BCWaitStart = %d , BCWaitEnd = %d ");
265216,543195136,0,0,PLAT_AP,PLA_DRIVER,ec_main_3,P_VALUE,swLogPrintf("apmuGetLatchExternalInt = 0x%x ");
265216,543197184,0,0,PLAT_AP,PLA_DRIVER,apmuStopSystick_1,P_VALUE,swLogPrintf("OsTickCnt when systick stop = 0x%x ");
265216,543199232,0,0,PLAT_AP,PLA_DRIVER,pmuGetMinSleepMode_1,P_VALUE,swLogPrintf("Unable to Sleep because of driver = 0x%x ");
265216,543203327,0,0,PLAT_AP,PLA_DRIVER,pmuGetMinSleepMode_2,P_VALUE,swLogPrintf("Apmu Calibration on going ");
265216,543205375,0,0,PLAT_AP,PLA_DRIVER,PmuHasHibTimertoWakeup_1,P_VALUE,swLogPrintf("Hib Timer nearly trigger , Start AP ");
265216,543205632,0,0,PLAT_AP,PLA_DRIVER,apmuVoteToSleep1State_1,P_VALUE,swLogPrintf("Vote Sleep : apSdkSleep1VoteFlag = 0x%x-%d \n ");
265216,543207680,0,0,PLAT_AP,PLA_DRIVER,apmuVoteToSleep2State_1,P_VALUE,swLogPrintf("Vote Sleep2 : apSdkSleep2VoteFlag = 0x%x-%d \n ");
265216,543209728,0,0,PLAT_AP,PLA_DRIVER,apmuVoteToHibState_1,P_VALUE,swLogPrintf("Vote Hibernate : apSdkHibernateVoteFlag = 0x%x-%d \n ");
265216,543211776,0,0,PLAT_AP,PLA_DRIVER,pmuPreDeepSlpCbRegister_1,P_VALUE,swLogPrintf("Registe pre deepsleep callback = 0x%x , 0x%x ");
265216,543213824,0,0,PLAT_AP,PLA_DRIVER,pmuPostDeepSlpCbRegister_1,P_VALUE,swLogPrintf("Registe post deepsleep callback = 0x%x , 0x%x ");
265216,543217663,0,0,PLAT_AP,PLA_DRIVER,pmuPreDeepSlpCbExcute_1,P_SIG,swLogPrintf("PS DeepSleep Callback Excute ");
265216,543219711,0,0,PLAT_AP,PLA_DRIVER,pmuPostDeepSlpCbExcute_1,P_VALUE,swLogPrintf("Excute PostDeepSlp Callbacks ");
265216,543219712,0,0,PLAT_AP,PLA_DRIVER,pmuSetDeepestSleepMode_1,P_VALUE,swLogPrintf("Deepest sleep mode = %e<APSleepState> ");
265216,543221760,0,0,PLAT_AP,PLA_DRIVER,apmuSetUsim1LatchFlag_1,P_VALUE,swLogPrintf("AONIO apmuSetUsim1LatchFlag = %d ");
265216,543223808,0,0,PLAT_AP,PLA_DRIVER,apmuSetAONIOLatchFlag_1,P_VALUE,swLogPrintf("AONIO apmuSetAONIOLatchFlag = %d ");
265216,543226112,0,0,PLAT_AP,PLA_DRIVER,apmuAONIOLatchRelease_1,P_VALUE,swLogPrintf("AONIO Release , usim1Latch = %d , userAonioLatch = %d ");
265216,543229951,0,0,PLAT_AP,PLA_DRIVER,apmuAONIOLatchApply_1,P_VALUE,swLogPrintf("AONIO powered on , LatchIO ");
265216,543231999,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_0,P_VALUE,swLogPrintf("Enter ASMB+MSMB mode ");
265216,543234047,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_1,P_VALUE,swLogPrintf("Enter ASMB+MSMB+CSMB mode ");
265216,543234048,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_2,P_VALUE,swLogPrintf("CP State < = CP_STATE_IDLE ( %d ) ");
265216,543238143,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_3,P_VALUE,swLogPrintf("Sleep1 Failed there is pending interrupt ");
265216,543238400,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_4,P_VALUE,swLogPrintf("NVIC ISPR 0x%x ICSR 0x%x \r \n ");
265216,543240960,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_5,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x XIC2 0x%x XIC3 0x%x \r \n ");
265216,543244287,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_20,P_SIG,swLogPrintf("No Hib Backup Region , enter sleep2 only ");
265216,543246335,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_7,P_VALUE,swLogPrintf("Enter ASMB+CSMB mode ");
265216,543248383,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_21,P_VALUE,swLogPrintf("Enter ASMB+CSMB mode ");
265216,543250431,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_9,P_VALUE,swLogPrintf("Enter ASMB mode ");
265216,543250432,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_10,P_VALUE,swLogPrintf("CP State < = CP_STATE_CS1 ( %d ) ");
265216,543254527,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_11,P_VALUE,swLogPrintf("Sleep2 Failed there is pending interrupt ");
265216,543254784,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_12,P_VALUE,swLogPrintf("NVIC ISPR 0x%x ICSR 0x%x \r \n ");
265216,543257344,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_13,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x XIC2 0x%x XIC3 0x%x \r \n ");
265216,543260671,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_14,P_VALUE,swLogPrintf("Enter None Ret mode ");
265216,543260672,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_15,P_VALUE,swLogPrintf("CP State < = CP_STATE_CS2 ( %d ) ");
265216,543264767,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_19,P_SIG,swLogPrintf("Change Fullimage boot flag to hibernate ");
265216,543266815,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_16,P_VALUE,swLogPrintf("Hibernate Failed there is pending interrupt ");
265216,543267072,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_17,P_VALUE,swLogPrintf("NVIC ISPR 0x%x ICSR 0x%x \r \n ");
265216,543269632,0,0,PLAT_AP,PLA_DRIVER,prvEnterLowPowerState_18,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x XIC2 0x%x XIC3 0x%x \r \n ");
265216,543272704,0,0,PLAT_AP,PLA_DRIVER,apmuPrintBootTimeStamp_0,P_VALUE,swLogPrintf("BootTime Print : Pre Paging SlowCnt = %u , %u , %u , %u , %u , %u , %u CurSlowCnt = %u ");
265216,543274752,0,0,PLAT_AP,PLA_DRIVER,apmuPrintBootTimeStamp_1,P_VALUE,swLogPrintf("BootTime Print : Post Paging SlowCnt = %u , %u , %u , %u , %u , %u , %u CurSlowCnt = %u ");
265216,543275264,0,0,PLAT_AP,PLA_DRIVER,apmuPrintBootTimeStamp_2,P_VALUE,swLogPrintf("Last Sc Ratio = %d , slowCnt when ratio change = %d ");
265216,543279103,0,0,PLAT_AP,PLA_DRIVER,atwait_expired_1,P_VALUE,swLogPrintf("Wait AT Timer Expired ");
265216,543279104,0,0,PLAT_AP,PLA_DRIVER,at_wait_start_1,P_VALUE,swLogPrintf("Wait AT Timer Start-%u ");
265216,543283199,0,0,PLAT_AP,PLA_DRIVER,at_wait_start_2,P_VALUE,swLogPrintf("Wait AT Timer New Timer ");
265216,543283200,0,0,PLAT_AP,PLA_DRIVER,at_wait_start_3,P_WARNING,swLogPrintf("Timer Handle Error-0x%x ");
265216,543285248,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_0,P_VALUE,swLogPrintf("User Change Sleep Delay-value = %d ");
265216,543287296,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_1,P_VALUE,swLogPrintf("User Add Sleep Delay-value = %d ");
265216,543291391,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_2,P_VALUE,swLogPrintf("User Create New Sleep Delay ");
265216,543291392,0,0,PLAT_AP,PLA_DRIVER,pmuUsrAddSlpDelay_3,P_WARNING,swLogPrintf("User Add Delay Error-0x%x ");
265216,543293440,0,0,PLAT_AP,PLA_DRIVER,apmuCPStartCheck_1,P_VALUE,swLogPrintf("Time to CP Wakeup = 0x%x ms ");
265216,543297535,0,0,PLAT_AP,PLA_DRIVER,apmuCPStartCheck_2,P_VALUE,swLogPrintf("create modem timer ");
265216,543298048,0,0,PLAT_AP,PLA_DRIVER,apmuIntInit_1,P_VALUE,swLogPrintf("Wakeup SW Sc = %d , BTMsCnt = %d , Current SC = %d ");
265216,543301631,0,0,PLAT_AP,PLA_DRIVER,apmuApBcInterruptHandler_1,P_VALUE,swLogPrintf("AP Bc Int enter ");
265216,543302912,0,0,PLAT_AP,PLA_DRIVER,apmuGetPMUSettings_1,P_VALUE,swLogPrintf("PmuEnMagic = 0x%x , slpdepth = %d , defaultState = %d , voteMask = %d , FullImgReason = %e<toFullImageBranch> , minTimeCPWakeup = %d ");
265216,543303680,0,0,PLAT_AP,PLA_DRIVER,apmuGetPMUSettings_2,P_VALUE,swLogPrintf("Full Image transfer Time = %d ms ");
265216,543305728,0,0,PLAT_AP,PLA_DRIVER,pmuRegisterUsrSlpModeCb_1,P_VALUE,swLogPrintf("User Sleep Mode Control Callback = 0x%x ");
265216,543307776,0,0,PLAT_AP,PLA_DRIVER,pmuHasNearHibtimer_2,P_VALUE,swLogPrintf("DeepSlp Timer Can Sleep : Next DeepSleep Timer = %u ms ");
265216,543309824,0,0,PLAT_AP,PLA_DRIVER,pmuHasNearHibtimer_1,P_VALUE,swLogPrintf("DeepSlp Timer Can not Sleep : Near DeepSleep Timer = %u ms ");
265216,543311872,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeConsiderCPSlpMode_0,P_VALUE,swLogPrintf("CP need copy measure code = %d ");
265216,543313920,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeConsiderCPSlpMode_2,P_VALUE,swLogPrintf("CP need copy measure code = %d ");
265216,543316224,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeConsiderCPSlpMode_1,P_VALUE,swLogPrintf("Caculate CP Sleep Time , Old = %u New = %u ");
265216,543320063,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeBeforeCPWakeup_3,P_VALUE,swLogPrintf("Cpmu does not sleep , no need to create modem timer ");
265216,543320064,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeBeforeCPWakeup_2,P_VALUE,swLogPrintf("CP need copy measure code = %d ");
265216,543322368,0,0,PLAT_AP,PLA_DRIVER,apmuCalculateCPSlpTimeBeforeCPWakeup_1,P_VALUE,swLogPrintf("Caculate CP Sleep Time Before CP Start , Old = %u New = %u ");
265216,543324416,0,0,PLAT_AP,PLA_DRIVER,apmuSetSlpLimitTime_1,P_SIG,swLogPrintf("Sleep Limit Time Cfg , enable = %d , LimitTime = %u ");
265216,543326208,0,0,PLAT_AP,PLA_DRIVER,apmuStoreRestartTickValue_1,P_VALUE,swLogPrintf("OsTickCnt when tmusytick restart = %u ");
265216,543328512,0,0,PLAT_AP,PLA_DRIVER,apmuTicklessAllow_1,P_VALUE,swLogPrintf("Need wait tick do not tickless , curTick = %u , Systick when tmuSystick restart = %u ");
265216,543330304,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingDeepSlp_8,P_VALUE,swLogPrintf("CP is ready to start , CPRetMode = %d ");
265216,543332352,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_0,P_VALUE,swLogPrintf("Paging deepest sleep mode = %d ");
265216,543336447,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_1,P_VALUE,swLogPrintf("Paging deepsleep failed , go to PagingSlp1 ");
265216,543336704,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_LimitTime,P_SIG,swLogPrintf("SleepTime = %u > LimitTime = %u ");
265216,543338752,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_2,P_VALUE,swLogPrintf("CP SleepTime = %u ms AP nearHibTime = %u ms \n ");
265216,543340544,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_4,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543343616,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_5,P_SIG,swLogPrintf("Enter Paging Hibernate %u ms PreSlp = %u ms minTimeL1 = %u Wakeup SC = %u CurrentSC = %u ");
265216,543345664,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_6,P_SIG,swLogPrintf("Enter Paging Sleep2 %u ms PreSlp = %u ms minTimeL1 = %u Wakeup SC = %u CurrentSC = %u ");
265216,543346688,0,0,PLAT_AP,PLA_DRIVER,apmuEnterDeepSlp_7,P_SIG,swLogPrintf("Failed to enter DeepSlp , there is pending interrupt , lowPowerState = %d ");
265216,543348736,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_5,P_VALUE,swLogPrintf("CP is ready to start , CPRetMode = %d ");
265216,543352831,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_0,P_SIG,swLogPrintf("Vote change in Paging Sleep1 ");
265216,543353088,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_LimitTime,P_SIG,swLogPrintf("SleepTime = %u > LimitTime = %u ");
265216,543355136,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_1,P_VALUE,swLogPrintf("CP SleepTime = %u ms AP nearHibTime = %u ms \n ");
265216,543356928,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_3,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543360000,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_2,P_SIG,swLogPrintf("Enter Paging Sleep1 %u ms PreSlp = %u ms minTimeL1 = %u Wakeup SC = %u CurrentSC = %u ");
265216,543361792,0,0,PLAT_AP,PLA_DRIVER,apmuEnterPagingSlp1_4,P_VALUE,swLogPrintf("EC718 Active Paging Sleep1 @ SwWakeupSc = %u , WakeupSrc Bitmap = 0x%x , SlowCnt after sleep1 Callback = %u , Cur HibCnt = %u ");
265216,543363072,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_01,P_VALUE,swLogPrintf("CP is ready to start , CPRetMode = %d ");
265216,543365376,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_LimitTime,P_SIG,swLogPrintf("SleepTime = %u > LimitTime = %u ");
265216,543367168,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_0,P_VALUE,swLogPrintf("sleep time < usb sleep thd ( %d ) ");
265216,543369472,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_1,P_VALUE,swLogPrintf("MinTime is L1 = %u MinTime %u ms \n ");
265216,543371520,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_2,P_VALUE,swLogPrintf("Sleep2 Time Not Enough , cpWakeupMs = %ums , apWakeup = %ums \n ");
265216,543375359,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_3,P_SIG,swLogPrintf("abort sleep , interrupt make a task unblock \n ");
265216,543375360,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep2_5,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543378432,0,0,PLAT_AP,PLA_DRIVER,Enter_Sleep2,P_SIG,swLogPrintf("Enter Sleep2 %u ms PreSlp = %u ms Wakeup SC = %u minTimeL1 = %u , CurrentSC = %u ");
265216,543381503,0,0,PLAT_AP,PLA_DRIVER,Exit_Sleep2,P_SIG,swLogPrintf("Failed to enter Sleep2 , there is pending interrupt ");
265216,543381504,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_01,P_VALUE,swLogPrintf("CP is ready to start , CPRetMode = %d ");
265216,543385599,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_000,P_WARNING,swLogPrintf("Detect Hib Timer Change , retry DeepSleep ");
265216,543385856,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_LimitTime,P_SIG,swLogPrintf("SleepTime = %u > LimitTime = %u ");
265216,543387648,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_00,P_VALUE,swLogPrintf("sleep time < usb sleep thd ( %d ) ");
265216,543391743,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_0,P_VALUE,swLogPrintf("worth sleep ");
265216,543393791,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_2,P_VALUE,swLogPrintf("task unblock , abort sleep ");
265216,543393792,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_10,P_VALUE,swLogPrintf("Sleep Time to long , change to %u ms ");
265216,543396864,0,0,PLAT_AP,PLA_DRIVER,Enter_Sleep1,P_VALUE,swLogPrintf("Enter Sleep1 : %u ms PreSlp = %u ms Wakeup SC = %u minTimeL1 = %u , Current SC = %u ");
265216,543398912,0,0,PLAT_AP,PLA_DRIVER,Enter_Active_3,P_VALUE,swLogPrintf("EC718 Active Sleep1 @ SwWakeupSc = %u , WakeupSrc Bitmap = 0x%x , SlowCnt after sleep1 Callback = %u , Cur HibCnt = %u , AonGetCPVote = %d ");
265216,543399936,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_81,P_VALUE,swLogPrintf("Sleep1 Wakeup , Time to CP Wakeup = 0x%x ms ");
265216,543404031,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_810,P_VALUE,swLogPrintf("create modem timer ");
265216,543404032,0,0,PLAT_AP,PLA_DRIVER,pmuTrySleep1_91,P_VALUE,swLogPrintf("Sleep1 Failed-%u ");
265216,543408127,0,0,PLAT_AP,PLA_DRIVER,apmuTryTicklessDoze_1,P_WARNING,swLogPrintf("Detect Hib Timer Change , retry DeepSleep ");
265216,543408384,0,0,PLAT_AP,PLA_DRIVER,apmuTryTicklessDoze_2,P_VALUE,swLogPrintf("Maybe we can go slp1 / slp2 / hib minSlpTime = %ums , lowPowerState = %d ");
265216,543412223,0,0,PLAT_AP,PLA_DRIVER,apmuTryTicklessDoze_3,P_VALUE,swLogPrintf("task unblock , abort sleep ");
265216,543412480,0,0,PLAT_AP,PLA_DRIVER,apmuTryTicklessDoze_4,P_VALUE,swLogPrintf("worth doze-%u , swNearestTimer = %u ");
265216,543414528,0,0,PLAT_AP,PLA_DRIVER,apmuTryTicklessDoze_7,P_VALUE,swLogPrintf("runAll = 0x%x , actAll = 0x%x ");
265216,543417856,0,0,PLAT_AP,PLA_DRIVER,apmuTryTicklessDoze_5,P_VALUE,swLogPrintf("Enter Doze : %u ms PreSlp = %u ms Wakeup SC = %u minTimeL1 = %u , Current SC = %u , ScRatio = %u , ScSrc = %u ");
265216,543419648,0,0,PLAT_AP,PLA_DRIVER,apmuTryTicklessDoze_6,P_VALUE,swLogPrintf("EC718 Active from Doze , unilogWaterMark = %d , TOPDOZESTATUS = 0x%x , mpDozeAp = %d , pllVoteDbgFlag = 0x%x , pllOffDbgFlag = %d , dozeRet = %d ");
265216,543422463,0,0,PLAT_AP,PLA_DRIVER,apmuCheckHibTimeNeedUpdate_1,P_SIG,swLogPrintf("Cp PreSync Down , Set BT Precise Flag ");
265216,543422464,0,0,PLAT_AP,PLA_DRIVER,pmuEnterTickless_82,P_VALUE,swLogPrintf("Sleep2 Failed reason = %u ");
265216,543424512,0,0,PLAT_AP,PLA_DRIVER,pmuEnterTickless_83,P_VALUE,swLogPrintf("Sleep1 result = %u ");
265216,543427072,0,0,PLAT_AP,PLA_DRIVER,apmuCPSwPowerOnIntModeStep2_2,P_VALUE,swLogPrintf("CP Power On : cpState = %d , apLLBootFlag = %d , csmbOn = %d ");
265216,543428608,0,0,PLAT_AP,PLA_DRIVER,apmuCPSwPowerOnIntModeStep2_3,P_VALUE,swLogPrintf("CP Power On flow cost %d cycles ");
265216,543430656,0,0,PLAT_AP,PLA_DRIVER,apmuCPSwPowerOnIntModeStep3_2,P_VALUE,swLogPrintf("CP Power On flow cost %d cycles ");
265216,543433216,0,0,PLAT_AP,PLA_DRIVER,apmuCPSwPowerOn_2,P_VALUE,swLogPrintf("CP Power On : cpState = %d , apLLBootFlag = %d , csmbOn = %d ");
265216,543434752,0,0,PLAT_AP,PLA_DRIVER,apmuCPSwPowerOn_3,P_VALUE,swLogPrintf("CP Power On flow cost %d cycles ");
265216,543437312,0,0,PLAT_AP,PLA_DRIVER,apmuCaculateCpSleepMs_0,P_VALUE,swLogPrintf("curr hfnsfnsbn is 0x%X , cp wakeup hfnsfnsbn is 0x%X delta = %d ms ");
265216,543439104,0,0,PLAT_AP,PLA_DRIVER,funcTestDozeTest_0,P_WARNING,swLogPrintf("Slowcnt0 = 0x%x , Slowcnt1 = 0x%x ");
265216,543441152,0,0,PLAT_AP,PLA_DRIVER,funcTestDozeTest_1,P_WARNING,swLogPrintf("Slowcnt0 = 0x%x , Slowcnt1 = 0x%x ");
265216,543443200,0,0,PLAT_AP,PLA_DRIVER,funcTestDozeTest_3,P_WARNING,swLogPrintf("Slowcnt0 = 0x%x , Slowcnt1 = 0x%x ");
265216,543446784,0,0,PLAT_AP,PLA_DRIVER,apmuGetDefaultTimingCfg_1,P_VALUE,swLogPrintf("PmuTiming CodeRunTime , Pre = %d , %d , %d , %d , Post = %d , %d , %d , %d ");
265216,543448064,0,0,PLAT_AP,PLA_DRIVER,apmuGetDefaultTimingCfg_2,P_VALUE,swLogPrintf("PmuTiming FlashWrTime = %d , WorthTime = %d , %d , %d , %d ");
265216,543450880,0,0,PLAT_AP,PLA_DRIVER,apmuSetTimingCfg_1,P_VALUE,swLogPrintf("PmuTiming CodeRunTime , Pre = %d , %d , %d , %d , Post = %d , %d , %d , %d ");
265216,543452160,0,0,PLAT_AP,PLA_DRIVER,apmuSetTimingCfg_2,P_VALUE,swLogPrintf("PmuTiming FlashWrTime = %d , WorthTime = %d , %d , %d , %d ");
265216,543453696,0,0,PLAT_AP,PLA_DRIVER,pmuCheckCodeRunTimeEnd_1,P_ERROR,swLogPrintf("!!!!!!! PMU Run Time Checker %d OverRange , %d>%d !!!!!!!!! ");
265216,543455744,0,0,PLAT_AP,PLA_DRIVER,pmuCheckCodeRunTimeEnd_2,P_VALUE,swLogPrintf("!!!!!!! PMU Run Time Checker %d Too Long , %d<<%d !!!!!!!!! ");
265216,543457280,0,0,PLAT_AP,PLA_DRIVER,timerListAonAdd_0,P_VALUE,swLogPrintf("HibTimer : Aontimer %d add to list ");
265216,543459328,0,0,PLAT_AP,PLA_DRIVER,timerListAonDel_0,P_VALUE,swLogPrintf("HibTimer : Aontimer %d delete from list ");
265216,543461376,0,0,PLAT_AP,PLA_DRIVER,hibTimerAdd_0,P_WARNING,swLogPrintf("HibTimer : TimerList full ID = %d ");
265216,543463424,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrAdd_0,P_WARNING,swLogPrintf("HibTimer : User TimerList full ID = %d ");
265216,543465728,0,0,PLAT_AP,PLA_DRIVER,hibTimerDelete_0,P_VALUE,swLogPrintf("HibTimer : hibtimer delete success ID = %d index = %d ");
265216,543467520,0,0,PLAT_AP,PLA_DRIVER,hibTimerDelete_1,P_WARNING,swLogPrintf("HibTimer : hibtimer delete failed ID = %d ");
265216,543469824,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrDelete_0,P_VALUE,swLogPrintf("HibTimer : Usr hibtimer delete success ID = %d index = %d ");
265216,543471616,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrDelete_1,P_WARNING,swLogPrintf("HibTimer : User hibtimer delete failed ID = %d ");
265216,543474432,0,0,PLAT_AP,PLA_DRIVER,hibTimerCalculateTargetHibCnt_0,P_VALUE,swLogPrintf("HibTimer : Timer ID = %d , Handle = 0x%x , TargetValue = 0x%x , i = %d ");
265216,543476480,0,0,PLAT_AP,PLA_DRIVER,hibTimerCalculateTargetHibCnt_1,P_VALUE,swLogPrintf("HibTimer : User Timer ID = %d , Handle = 0x%x , TargetValue = 0x%x , i = %d ");
265216,543478272,0,0,PLAT_AP,PLA_DRIVER,hibTimerCalculateTargetHibCnt_2,P_VALUE,swLogPrintf("HibTimer : Aon Timer ID = %d , Handle = 0x%x , TargetValue = 0x%x ");
265216,543480064,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrGetRemainMs_0,P_VALUE,swLogPrintf("HibTimer : User Timer ID = %d , Remain Time = %d ms ");
265216,543482112,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrGetRemainMs_1,P_VALUE,swLogPrintf("HibTimer : User Timer ID = %d , Remain Time = %d ms ");
265216,543483904,0,0,PLAT_AP,PLA_DRIVER,hibTimerUsrGetRemainMs_2,P_VALUE,swLogPrintf("HibTimer : User Timer not exist , timerId = %d ");
265216,543487999,0,0,PLAT_AP,PLA_DRIVER,hibTimerCheckFlashUpdate_0,P_VALUE,swLogPrintf("HibTimer : DeepSleep Timer Need Update Flash ");
265216,543488256,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_1,P_VALUE,swLogPrintf("HibTimer : Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543490304,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_2,P_VALUE,swLogPrintf("HibTimer : Timer In Advance ID = %d , In Advance HibCnt = %d ");
265216,543492608,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_3,P_VALUE,swLogPrintf("HibTimer : Start Timer ID = %d , Remain HibCnt = %d , Remain ms = %d \n ");
265216,543494400,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_4,P_VALUE,swLogPrintf("HibTimer : User Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543496448,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_5,P_VALUE,swLogPrintf("HibTimer : User Timer In Advance ID = %d , In Advance HibCnt = %d ");
265216,543498752,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_6,P_VALUE,swLogPrintf("HibTimer : Start User Timer ID = %d , Remain HibCnt = %d , Remain ms = %d \n ");
265216,543500800,0,0,PLAT_AP,PLA_DRIVER,hibTimerWakeupRecreate_7,P_VALUE,swLogPrintf("HibTimer : Aon Timer After Slp , curHibCnt = 0x%x , targetCnt = 0x%x , remainMs = %d ");
265216,543503360,0,0,PLAT_AP,PLA_DRIVER,hibTimerBTCompensate_1,P_SIG,swLogPrintf("HibTimer BT Compensate : Timer ID = %d , remain_ms = %u to %u , CurHibCnt = %u , TarHibCnt = %u ");
265216,543505408,0,0,PLAT_AP,PLA_DRIVER,hibTimerBTCompensate_2,P_SIG,swLogPrintf("User HibTimer BT Compensate : Timer ID = %d , remain_ms = %u to %u , CurHibCnt = %u , TarHibCnt = %u ");
265216,543507456,0,0,PLAT_AP,PLA_DRIVER,hibTimerBTCompensate_3,P_SIG,swLogPrintf("Aon HibTimer BT Compensate : Timer ID = %d , remain_ms = %u to %u , CurHibCnt = %u , TarHibCnt = %u ");
265216,543508736,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_1,P_VALUE,swLogPrintf("HibTimer : Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543510784,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_2,P_VALUE,swLogPrintf("HibTimer : Timer In Advance ID = %d , Remain HibCnt = %d ");
265216,543513344,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_3,P_VALUE,swLogPrintf("HibTimer : Check Wakeup Timer Id = %d , %d , Remain HibCnt = %d about %d ms \n ");
265216,543514880,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_4,P_VALUE,swLogPrintf("HibTimer : Timer Nearly trigger , Id = %d remain = %d ms ");
265216,543516928,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_5,P_VALUE,swLogPrintf("HibTimer : sw cnt id = %d , target = %d ");
265216,543518976,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_7,P_VALUE,swLogPrintf("HibTimer : User Timer Exceed ID = %d , Exceed HibCnt = %d ");
265216,543521024,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_8,P_VALUE,swLogPrintf("HibTimer : User Timer In Advance ID = %d , Remain HibCnt = %d ");
265216,543523584,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_9,P_VALUE,swLogPrintf("HibTimer : Check Wakeup Timer User Id = %d , %d , HibCnt = %d about %d ms \n ");
265216,543525120,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_10,P_VALUE,swLogPrintf("HibTimer : User Timer Nearly trigger , Id = %d remain = %d ms ");
265216,543527168,0,0,PLAT_AP,PLA_DRIVER,hibTimerNeedSwitchFullImg_11,P_VALUE,swLogPrintf("HibTimer : Aon Timer %d need wakeup remain = %d ms ");
265216,543529216,0,0,PLAT_AP,PLA_DRIVER,hibTimerGetNearestMs_0,P_VALUE,swLogPrintf("HibTimer : Remain HibCnt = %d , ID = %d ");
265216,543531264,0,0,PLAT_AP,PLA_DRIVER,hibTimerGetNearestMs_1,P_VALUE,swLogPrintf("User HibTimer : Remain HibCnt = %d , ID = %d ");
265216,543533312,0,0,PLAT_AP,PLA_DRIVER,hibTimerGetNearestMs_2,P_VALUE,swLogPrintf("Aon HibTimer : Aon Timer %d , remain %d hibCnt ");
265216,543535616,0,0,PLAT_AP,PLA_DRIVER,apmuSdkFlashWrReq_1,P_VALUE,swLogPrintf("Flash Write Request ID = %d , Write Flag = 0x%x , apFlashWrBm = 0x%x ");
265216,543537152,0,0,PLAT_AP,PLA_DRIVER,apmuSdkFlashBlockBeWr_1,P_WARNING,swLogPrintf("Check whether Flash block need Write , request ID = %d not valid , return FALSE ");
265216,543541247,0,0,PLAT_AP,PLA_DRIVER,apmuGetPhyFlashWrReq_0,P_VALUE,swLogPrintf("apmuGetPhyFlashWrReq , cp no need to write flash ");
265216,543541248,0,0,PLAT_AP,PLA_DRIVER,apmuGetPhyFlashWrReq_1,P_VALUE,swLogPrintf("apmuGetPhyFlashWrReq , cpFlashWr_bm = 0x%x ");
265216,543545343,0,0,PLAT_AP,PLA_DRIVER,apmuRecoverCPPmuMemory_2,P_VALUE,swLogPrintf("CP Never request to write flash ");
265216,543547391,0,0,PLAT_AP,PLA_DRIVER,apmuRecoverCPPmuMemory_0,P_VALUE,swLogPrintf("Recover CP AonMem From ASMB ");
265216,543549439,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_0,P_WARNING,swLogPrintf("V-Apy with no name ");
265216,543551487,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_1,P_WARNING,swLogPrintf("V-Apy with invalid name ");
265216,543553535,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_3,P_WARNING,swLogPrintf("V-Apy Vote Handle Full ");
265216,543555583,0,0,PLAT_AP,PLA_DRIVER,slpManApplyPlatVoteHandle_4,P_WARNING,swLogPrintf("V-Apy Unknow ERROR ");
265216,543555840,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_0,P_WARNING,swLogPrintf("V-Gbk Failed Invalid Handle = 0x%x , handle = %d ");
265216,543557888,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_1,P_WARNING,swLogPrintf("V-Gbk Failed Sleep1 bitmap not Clear = 0x%x , handle = %d ");
265216,543559936,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_2,P_WARNING,swLogPrintf("V-Gbk Failed Sleep2 bitmap not Clear = 0x%x , handle = %d ");
265216,543561984,0,0,PLAT_AP,PLA_DRIVER,slpManGivebackPlatVoteHandle_3,P_WARNING,swLogPrintf("V-Gbk Failed hib bitmap not Clear = 0x%x , handle = %d ");
265216,543564288,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteDisableSleep_0,P_WARNING,swLogPrintf("Platform Vote Invalid Handle = 0x%x <- %d , status = %d ");
265216,543566848,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteDisableSleep_1,P_VALUE,swLogPrintf("Platform Vote Result = 0x%x , 0x%x , 0x%x Handle = 0x%x , Return = %d ");
265216,543568384,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteEnableSleep_0,P_WARNING,swLogPrintf("Platform Vote Invalid Handle = 0x%x <- %d , status = %d ");
265216,543570944,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteEnableSleep_1,P_VALUE,swLogPrintf("Platform Vote Result = 0x%x , 0x%x , 0x%x Handle = 0x%x , Return = %d ");
265216,543572224,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteForceEnableSleep_0,P_WARNING,swLogPrintf("Platform Vote Invalid Handle = 0xx% <- %d , status = %d ");
265216,543575040,0,0,PLAT_AP,PLA_DRIVER,slpManPlatVoteForceEnableSleep_1,P_VALUE,swLogPrintf("Platform Vote Result = 0x%x , 0x%x , 0x%x , Force Sleep Handle = %u , Return = %d ");
265216,543576064,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Expired,P_VALUE,swLogPrintf("User Deep Sleep Timer Expired ID = %d ");
265216,543578112,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_RegisterCb_0,P_ERROR,swLogPrintf("User HibTimer Callback is NULL , TimerID = %d ");
265216,543580416,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_RegisterCb_1,P_VALUE,swLogPrintf("User Register a Deep Sleep Timer Callback = 0x%x to TimerID = %d ");
265216,543582208,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_0,P_ERROR,swLogPrintf("User HibTimer timeout = 0 , TimerID = %d ");
265216,543584512,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_1,P_SIG,swLogPrintf("User DeepSleep Timer Renew ID = %d , ticks = %d ");
265216,543586560,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_2,P_SIG,swLogPrintf("User DeepSleep Timer Change Period ID = %d , ticks = %d ");
265216,543588608,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_3,P_SIG,swLogPrintf("Wakeup From User DeepSleep , Timer Restart ID = %d , ticks = %d ");
265216,543590656,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Start_4,P_SIG,swLogPrintf("User DeepSleep Timer New ID = %d , ticks = %d ");
265216,543592448,0,0,PLAT_AP,PLA_DRIVER,HibTimer_Usr_Del_0,P_VALUE,swLogPrintf("Delete DeepSleep Timer of User ID = %d ");
265216,543594752,0,0,PLAT_AP,PLA_DRIVER,slpManGetWakeupSrc_1,P_VALUE,swLogPrintf("slpMan WakeupBm = 0x%x , GetWakeupSrc = %e<slpManWakeSrc_e> ");
265216,543596800,0,0,PLAT_AP,PLA_DRIVER,tcocTblInit_1,P_WARNING,swLogPrintf("Init bc = bt , bt_ref = 0x%x , tick_ref = %u ");
265216,543598848,0,0,PLAT_AP,PLA_DRIVER,tcocPostSleepCompensate_3,P_WARNING,swLogPrintf("systick gets smaller , tick_caculate = %u , oldtick = %u ");
265216,543601664,0,0,PLAT_AP,PLA_DRIVER,tcocPostSleepCompensate_1,P_VALUE,swLogPrintf("old_bt_ref = 0x%x , tick_ref = %u , new_bt_ref = 0x%x , StepTick = %u , inputTick = %u ");
265216,543602944,0,0,PLAT_AP,PLA_DRIVER,tcocPostSleepCompensate_4,P_WARNING,swLogPrintf("systick gets smaller , tick_caculate = %u , oldtick = %u ");
265216,543605760,0,0,PLAT_AP,PLA_DRIVER,tcocPostSleepCompensate_2,P_VALUE,swLogPrintf("old_bt_ref = 0x%x , tick_ref = %u , new_bt_ref = 0x%x , StepTick = %u , inputTick = %u ");
265216,543607040,0,0,PLAT_AP,PLA_DRIVER,tcocDeepSleepFailCompensate_2,P_WARNING,swLogPrintf("systick gets smaller , tick_caculate = %u , oldtick = %u ");
265216,543609856,0,0,PLAT_AP,PLA_DRIVER,tcocDeepSleepFailCompensate_1,P_VALUE,swLogPrintf("old_bt_ref = 0x%x , tick_ref = %u , new_bt_ref = 0x%x , StepTick = %u , inputTick = %u ");
265216,543611136,0,0,PLAT_AP,PLA_DRIVER,tcocPostDozeCompensate_2,P_VALUE,swLogPrintf("systick gets smaller , tick_caculate = %u , oldtick = %u ");
265216,543612928,0,0,PLAT_AP,PLA_DRIVER,tcocSetOffsetUpdate_1,P_VALUE,swLogPrintf("bt_hw_offset = 0x%x ");
265216,543614976,0,0,PLAT_AP,PLA_DRIVER,SlowCounter32KFreqSave_1,P_VALUE,swLogPrintf("32KT Calibration Result = 0x%x ");
265216,543619071,0,0,PLAT_AP,PLA_DRIVER,SlowCounter32KTFreqGet_1,P_VALUE,swLogPrintf("32K Calibration Result Invalid , use 32768 ");
265216,543619072,0,0,PLAT_AP,PLA_DRIVER,SlowCounter32KFreqReal_1,P_VALUE,swLogPrintf("32K SlowCounter32KFreqReal = %u ");
265216,543623167,0,0,PLAT_AP,PLA_DRIVER,SlowCounterToSysTick_1,P_ERROR,swLogPrintf("Debug Assert : tmpSystick>0xffffffff ");
265216,543625215,0,0,PLAT_AP,PLA_DRIVER,SlowCounterToMs_1,P_ERROR,swLogPrintf("Debug Assert : tmpSc>0xffffffff ");
265216,543627263,0,0,PLAT_AP,PLA_DRIVER,SysTickToSlowCounter_1,P_ERROR,swLogPrintf("Debug Assert : tmpSc>0xffffffff ");
265216,543629311,0,0,PLAT_AP,PLA_DRIVER,rng_lockFail,P_ERROR,swLogPrintf("rng lock fail ");
265216,543629312,0,0,PLAT_AP,PLA_DRIVER,rng_retFail,P_ERROR,swLogPrintf("rng ret fail : %d ");
265216,543632384,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_e_1,P_ERROR,swLogPrintf("SCT ERROR! ErrStatus.masterErr : %d , ErrStatus.mgrErr : %d , ErrStatus.descErr : %d , RDErrMem : 0x%x , WTErrMem : 0x%x ");
265216,543635455,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_1,P_ERROR,swLogDump("SCT ERROR , SCT_RNDIS_PPP_CFG_REG : ");
265216,543637503,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_2,P_ERROR,swLogDump("SCT ERROR , SCT_COMM_CFG_REG : ");
265216,543639551,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_3,P_ERROR,swLogDump("SCT ERROR , SCT_CHANNELS_CFG_REG : ");
265216,543641599,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_4,P_ERROR,swLogDump("SCT ERROR , SCT_MEM_GUARD_CFG_REG : ");
265216,543643647,0,0,PLAT_AP,PLA_DRIVER,SctErrIsr_dump_e_5,P_ERROR,swLogDump("SCT ERROR , SCT_CHS_STATE_REG : ");
265216,543645695,0,0,PLAT_AP,PLA_DRIVER,uldpUsbClrCmpltFlg_0,P_SIG,swLogPrintf("uldp help to clr xic in usb int context! ");
265216,543645696,0,0,PLAT_AP,PLA_DRIVER,vcom0_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543647744,0,0,PLAT_AP,PLA_DRIVER,vcom1_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543649792,0,0,PLAT_AP,PLA_DRIVER,vcom2_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543651840,0,0,PLAT_AP,PLA_DRIVER,vcom3_earlyinit_finish_1,P_WARNING,swLogPrintf("dlyalloc ret %d ");
265216,543653888,0,0,PLAT_AP,PLA_DRIVER,usb_ccid_ext_xfer_1,P_INFO,swLogPrintf("notify tx stat %d ");
265216,543657983,0,0,PLAT_AP,PLA_DRIVER,ecm_func_hostdet_update_1,P_SIG,swLogPrintf("ecm host detect ");
265216,543660031,0,0,PLAT_AP,PLA_DRIVER,usb_ecm_ctrl_xfer_comp_1,P_INFO,swLogPrintf("");
265216,543660288,0,0,PLAT_AP,PLA_DRIVER,usb_ecm_ext_xfer_1,P_INFO,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543662080,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_1,P_DEBUG,swLogPrintf("dtoh , ext buf len %x ");
265216,543664128,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_2,P_DEBUG,swLogPrintf("dtoh , int listbuf len %x ");
265216,543666176,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_3,P_DEBUG,swLogPrintf("dtoh , intern enbuf len %x ");
265216,543668224,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_func_setup_4,P_DEBUG,swLogPrintf("htod , reqlen %x ");
265216,543670272,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_ep0_dout_stage_comp_1,P_DEBUG,swLogPrintf("MsgType %x ");
265216,543674367,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_ep0_dout_stage_comp_2,P_DEBUG,swLogDump("encap buf data : ");
265216,543676415,0,0,PLAT_AP,PLA_DRIVER,rndis_func_datain_1,P_DEBUG,swLogPrintf("notify xfer comp ");
265216,543678463,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_diep_xfer_cond_1,P_WARNING,swLogPrintf("ext xfer ignored ");
265216,543678464,0,0,PLAT_AP,PLA_DRIVER,rndis_diep_ext_xfer_req_1,P_DEBUG,swLogPrintf("xfer conn stat %d ");
265216,543680512,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_diep_xfer_finish_1,P_DEBUG,swLogPrintf("poll mode detected val %d ");
265216,543684607,0,0,PLAT_AP,PLA_DRIVER,rndis_func_gen_xfer_mux_src_1,P_DEBUG,swLogPrintf("internal encbuf overlap ");
265216,543686655,0,0,PLAT_AP,PLA_DRIVER,rndis_func_gen_xfer_mux_src_2,P_DEBUG,swLogPrintf("exernal encbuf overlap ");
265216,543686912,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_int_encbuf_xfer_1,P_DEBUG,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543688960,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_int_listbuf_xfer_1,P_DEBUG,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543691008,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_ext_xfer_1,P_DEBUG,swLogPrintf("notify tx stat %d , xfer_cur_stat %d ");
265216,543692800,0,0,PLAT_AP,PLA_DRIVER,usb_rndis_auto_next_notify_1,P_DEBUG,swLogPrintf("ext_buf|int_encbuf|int_listbuf 0x%x ");
265216,543694848,0,0,PLAT_AP,PLA_DRIVER,vcom_tplfunc_setup_1,P_WARNING,swLogPrintf("rxtransfer wLength %d ");
265216,543696896,0,0,PLAT_AP,PLA_DRIVER,vcom_tplfunc_try_notify_xfer_1,P_INFO,swLogPrintf("notify tx stat %d ");
265216,543699200,0,0,PLAT_AP,PLA_DRIVER,t_usbd_multi_ep_record_1,P_WARNING,swLogPrintf("ep_idx %d , max_pktsz %d ");
265216,543700992,0,0,PLAT_AP,PLA_DRIVER,t_usbd_multi_ep_record_2,P_WARNING,swLogPrintf("inep mps 8 / 512 [ high / low 16bits ] map 0x%x ");
265216,543705087,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_1,P_ERROR,swLogPrintf("pfunc_mtd->func_desc_get_cfginfo = = NULL ");
265216,543705088,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_2,P_ERROR,swLogPrintf("cfginfo.epin_num %d ");
265216,543707136,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_3,P_ERROR,swLogPrintf("cfginfo.epout_num %d ");
265216,543709440,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_4,P_ERROR,swLogPrintf("func_elem_idx %d , arr cnt %d ");
265216,543713279,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_5,P_ERROR,swLogPrintf("func_desc_get_clstype ");
265216,543713280,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_6,P_ERROR,swLogPrintf("cls_type %d ");
265216,543715584,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_8_1,P_ERROR,swLogPrintf("loop_idx %d , ep_idx %d ");
265216,543717632,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_8_2,P_ERROR,swLogPrintf("loop_idx %d , ep_idx %d , valid already ");
265216,543719936,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_8_5,P_WARNING,swLogPrintf("ep_idx %d , loop_idx %d , attr %d ");
265216,543721472,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_1,P_ERROR,swLogPrintf("ep_idx %d ");
265216,543723776,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_2,P_ERROR,swLogPrintf("ep_idx %d , arr_cnt %d ");
265216,543727615,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_3,P_ERROR,swLogPrintf("ep mapped already ");
265216,543728128,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_9_6,P_WARNING,swLogPrintf("ep_idx %d , loop_idx %d , attr %d ");
265216,543729664,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_load_locmap_10,P_WARNING,swLogPrintf("func_info_result32 0x%x ");
265216,543731968,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_1,P_ERROR,swLogPrintf("p_usb_func %d , intf_idx %d ");
265216,543733760,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_2,P_ERROR,swLogPrintf("intf_idx %d , bind_flag NULL ");
265216,543735808,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_3,P_ERROR,swLogPrintf("intf_idx %d , pfunc_mtd NULL ");
265216,543737856,0,0,PLAT_AP,PLA_DRIVER,usb_multi_ep0_dout_stage_comp_4,P_ERROR,swLogPrintf("intf_idx %d , func_ep0_dout_stage_comp NULL ");
265216,543739904,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %d error ");
265216,543742208,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_2_0,P_ERROR,swLogPrintf("load_idx %d , map_res_idx %d ");
265216,543744256,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_2_1,P_ERROR,swLogPrintf("usbd_mutli_func_tbl [ %d ] = = NULL , map_res_idx %d ");
265216,543746304,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_3,P_ERROR,swLogPrintf("usbd_mutli_bind_pfn_tbl [ %d ] = = NULL , map_res_idx %d ");
265216,543748610,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_func_fill_4,P_WARNING,swLogPrintf("[ %d ] = %s , type = %d ");
265216,543750144,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %d ");
265216,543752192,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_2_1,P_ERROR,swLogPrintf("usbd_mutli_func_tbl [ %d ] = = NULL ");
265216,543754752,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_2_2,P_ERROR,swLogPrintf("clstype %d , inst_id , maintp %d , subtp %d , ");
265216,543758335,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_ccinst_fill_3,P_WARNING,swLogPrintf("success ");
265216,543760383,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_1,P_ERROR,swLogPrintf("p_multidev_custom_org = = NULL ");
265216,543760384,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_2,P_WARNING,swLogPrintf("p_dev_name = = NULL , cust_idx %d ");
265216,543762432,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_3,P_WARNING,swLogPrintf("rndis filter , cust_idx %d ");
265216,543764480,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_4,P_WARNING,swLogPrintf("ecm filter , cust_idx %d ");
265216,543766528,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_custom_filter_fill_5,P_WARNING,swLogPrintf("p_multidev_custom_filter->elem_cnt %d ");
265216,543768576,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_1,P_ERROR,swLogPrintf("p_multidev_load->load_stat %d ");
265216,543770624,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_3,P_ERROR,swLogPrintf("p_multidev_custom_filter->elem_cnt %d ");
265216,543772672,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_4_2,P_ERROR,swLogPrintf("elem_update_stat %d ");
265216,543774720,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_5,P_ERROR,swLogPrintf("cust_idx %d ");
265216,543776768,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_update_8,P_WARNING,swLogPrintf("finded result 0x%x after filter ");
265216,543778816,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_end_1,P_ERROR,swLogPrintf("fail %d ");
265216,543782911,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_end_2,P_ERROR,swLogPrintf("ccinst fill fail ");
265216,543782912,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_load_end_3,P_ERROR,swLogPrintf("fail %d ");
265216,543784960,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %d ");
265216,543787264,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_2_1,P_ERROR,swLogPrintf("clstype_result32 0x%x , map_res_result32 = 0x%x ");
265216,543789056,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_2_2,P_ERROR,swLogPrintf("usbd_mutli_bind_pfn_tbl [ %d ] = = NULL ");
265216,543791360,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_3_1,P_ERROR,swLogPrintf("clstype_result32 0x%x , map_res_result32 = 0x%x ");
265216,543795199,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_3_2,P_ERROR,swLogPrintf("p_clsdev_base = = NULL ");
265216,543795712,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_clstype_fill_5,P_WARNING,swLogPrintf("map_res_result32 = 0x%x , clstype_result32 0x%x , ulog_cls_entry 0x%x ");
265216,543799295,0,0,PLAT_AP,PLA_DRIVER,usbd_mdev_bind_update_1,P_ERROR,swLogPrintf("clstype fill fail ");
265216,543799296,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_usrcfg_global_init_1,P_ERROR,swLogPrintf("fail loc %d ");
265216,543803391,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_usrcfg_update_bind_1,P_ERROR,swLogPrintf("fail ");
265216,543804160,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_get_func_clstype_1,P_INFO,swLogPrintf("load_stat %x , func_idx %d , cls_type %d , ret%d ");
265216,543807487,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_libcall_cmndesc_1,P_ERROR,swLogPrintf("fail ");
265216,543807488,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_dev_extmsg_1,P_ERROR,swLogPrintf("usbd_mutli_bind_pfn_tbl [ %d ] = = NULL ");
265216,543809792,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_dev_extmsg_2,P_ERROR,swLogPrintf("%d , %d ");
265216,543813631,0,0,PLAT_AP,PLA_DRIVER,usbd_multi_lib_dev_extmsg_3,P_ERROR,swLogPrintf("para error ");
265216,543813888,0,0,PLAT_AP,PLA_DRIVER,ep_cfg_dump_1,P_ERROR,swLogPrintf("ep_idx %d , mps %d ");
265216,543815680,0,0,PLAT_AP,PLA_DRIVER,cfg_fifo_2,P_ERROR,swLogPrintf("totalused %x ");
265216,543817728,0,0,PLAT_AP,PLA_DRIVER,retwkups2_bkfifo_cfg_1,P_ERROR,swLogPrintf("totalused %x ");
265216,543820032,0,0,PLAT_AP,PLA_DRIVER,usbc_ctrl_epin_activate_1,P_WARNING,swLogPrintf("bkup_inep_dpid %x , epx %d ");
265216,543822080,0,0,PLAT_AP,PLA_DRIVER,usbc_ctrl_epout_activate_1,P_WARNING,swLogPrintf("bkup_oep_dpid %x , epx %d ");
265216,543823872,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_wkup_intr_00,P_WARNING,swLogPrintf("gintr_status.d32 : %x ");
265216,543825920,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_resume_intr_00,P_WARNING,swLogPrintf("gpwrdn : %x ");
265216,543827968,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_reset_intr_1,P_WARNING,swLogPrintf("retval : %d ");
265216,543830016,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_reset_intr_00,P_WARNING,swLogPrintf("hibwkgpwrdn : %x ");
265216,543832320,0,0,PLAT_AP,PLA_DRIVER,usbc_backup_essregs_1_0,P_WARNING,swLogPrintf("pcgcctl : %x , dcfg 0x%x ");
265216,543834368,0,0,PLAT_AP,PLA_DRIVER,usbc_backup_essregs_1_1,P_WARNING,swLogPrintf("bkup_inep_dpid : %x , bkup_oep_dpid%x ");
265216,543836416,0,0,PLAT_AP,PLA_DRIVER,usbc_restore_ess_regs_1,P_WARNING,swLogPrintf("pcgcctl : %x , dcfg 0x%x ");
265216,543840255,0,0,PLAT_AP,PLA_DRIVER,usbc_restore_wait_restoredone_1,P_WARNING,swLogPrintf("restoredone timeout ");
265216,543840768,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_restore_1,P_WARNING,swLogPrintf("pcgcctl 0x%x , dcfg 0x%x , dctl : 0x%x ");
265216,543842304,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_hibernate_resume_intr_1,P_WARNING,swLogPrintf("dev stat : %x ");
265216,543846399,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_suspend_intr_0,P_WARNING,swLogPrintf("noret_hib_suspend already ");
265216,543846656,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_suspend_intr_1,P_WARNING,swLogPrintf("low_power %d , real_suspend : %d ");
265216,543850495,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_susp2hib_0,P_ERROR,swLogPrintf("real_suspend not match ");
265216,543852543,0,0,PLAT_AP,PLA_DRIVER,usbc_proc_susp2hib_1,P_ERROR,swLogPrintf("susp_res_pair_need not match ");
265216,543852544,0,0,PLAT_AP,PLA_DRIVER,usb_trace_step_1,P_WARNING,swLogPrintf("step : %d ");
265216,543854848,0,0,PLAT_AP,PLA_DRIVER,usb_trace_step_2,P_WARNING,swLogPrintf("step : %d , gintsts = 0x%x ");
265216,543857408,0,0,PLAT_AP,PLA_DRIVER,usb_trace_iep_1,P_WARNING,swLogPrintf("or_intsts %x , iepctl %x , iepsz %x , stage_or_txfsts %x ");
265216,543858688,0,0,PLAT_AP,PLA_DRIVER,usb_trace_oep_type_1,P_WARNING,swLogPrintf("iep_or_oep = %d ");
265216,543861248,0,0,PLAT_AP,PLA_DRIVER,usb_trace_oep_1,P_WARNING,swLogPrintf("or_intsts %x , oepctl %x , oepsz %x ");
265216,543863040,0,0,PLAT_AP,PLA_DRIVER,usb_iep_trace_wrtxfifo_1,P_WARNING,swLogPrintf("wr start , epnum %x , txf_sts %x ");
265216,543865344,0,0,PLAT_AP,PLA_DRIVER,usb_iep_trace_wrtxfifo_2,P_WARNING,swLogPrintf("epnum %x , wr len %x , txf_sts %x ");
265216,543868927,0,0,PLAT_AP,PLA_DRIVER,usb_trace_setup_1,P_WARNING,swLogDump("setup data : ");
265216,543868928,0,0,PLAT_AP,PLA_DRIVER,usb_iep0_start_xfer_1,P_WARNING,swLogPrintf("xfer_len_or_size %x ");
265216,543871232,0,0,PLAT_AP,PLA_DRIVER,dataout_handler_1,P_WARNING,swLogPrintf("stg %x , remainlen %x ");
265216,543873024,0,0,PLAT_AP,PLA_DRIVER,usb_uldp_oep0_start_xfer_1,P_WARNING,swLogPrintf("xfer_len %x ");
265216,543877119,0,0,PLAT_AP,PLA_DRIVER,usbd_trace_ep0_setup_breakstage_1,P_WARNING,swLogPrintf("");
265216,543877120,0,0,PLAT_AP,PLA_DRIVER,usblpw_check_gpwrdn_lnstchg_1,P_WARNING,swLogPrintf("gpwrdn.b.linestate%d ");
265216,543879424,0,0,PLAT_AP,PLA_DRIVER,usblpw_noret_remote_wkup_1,P_SIG,swLogPrintf("pwr state %d , remote_wkup_en %d ");
265216,543881216,0,0,PLAT_AP,PLA_DRIVER,usblpw_noret_remote_wkup_2,P_WARNING,swLogPrintf("dev stat : %x ");
265216,543885311,0,0,PLAT_AP,PLA_DRIVER,usblpw_enable_lpusbwkup_src_1,P_VALUE,swLogPrintf("NVIC_GetPendingIRQ LpusbWakeup_IRQn true ");
265216,543885312,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_normal_0_1,P_VALUE,swLogPrintf("force_cfg_pwr_down %d ");
265216,543887360,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_normal_0_2,P_VALUE,swLogPrintf("force_cfg_pwr_down %d ");
265216,543889408,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_normal_1,P_VALUE,swLogPrintf("cur_pwr_state %d ");
265216,543891456,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_wkmon_0_1,P_VALUE,swLogPrintf("force_cfg_pwr_down 0x%x ");
265216,543893504,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_wkmon_0_2,P_VALUE,swLogPrintf("cur_pwr_state 0x%x ");
265216,543895552,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_wkmon_1,P_VALUE,swLogPrintf("cur_pwr_state 0x%x ");
265216,543897600,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_0_0,P_VALUE,swLogPrintf("ISER %x ");
265216,543899648,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_0_1,P_VALUE,swLogPrintf("force_cfg_pwr_down 0x%x ");
265216,543901696,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_start_proc_0_2,P_VALUE,swLogPrintf("cur_pwr_state 0x%x ");
265216,543904000,0,0,PLAT_AP,PLA_DRIVER,usblpw_enter_abort_proc_wkmon_1,P_VALUE,swLogPrintf("wkmon_ll_enter_ctx %d , wkmon_lpusbwkup_flag %d ");
265216,543906304,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_break_1,P_VALUE,swLogPrintf("gpwr_cur %x , gpwr_prev %x , hold cnt %d reset ");
265216,543908608,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_break_2,P_VALUE,swLogPrintf("gpwr_cur %x , gpwr_prev %x , hold cnt %d reset , break2_cnt %d ");
265216,543910144,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_break_3,P_VALUE,swLogPrintf("break_cnt %x , break2_cnt %x ");
265216,543912192,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_match_2,P_VALUE,swLogPrintf("stage %d , detect gpwr ( 0x%x ) timeout ");
265216,543914496,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_poll_gpwr_match_3,P_VALUE,swLogPrintf("detect cnt %x , gpwr_cur %x , detect gpwr ( 0x%x ) ");
265216,543916032,0,0,PLAT_AP,PLA_DRIVER,usblpw_pre_restore_1,P_VALUE,swLogPrintf("detect gpwr 0x%x ");
265216,543918080,0,0,PLAT_AP,PLA_DRIVER,usblpw_pre_restore_2,P_VALUE,swLogPrintf("usblpw_get_cur_pwr_state %d ");
265216,543922175,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_hibslp2_try_stack_rest_1,P_WARNING,swLogPrintf("usblpw_retothwk_stackrest_chk_illegal ");
265216,543924223,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_hibslp2_try_stack_rest_2,P_WARNING,swLogPrintf("usblpw_retothwk_hibslp2_stack_restore fail ");
265216,543926271,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_slp1_try_stack_rest_1,P_WARNING,swLogPrintf("usblpw_retothwk_stackrest_chk_illegal ");
265216,543928319,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_slp1_try_stack_rest_2,P_WARNING,swLogPrintf("usblpw_retwkup_slp1_stack_restore fail ");
265216,543928320,0,0,PLAT_AP,PLA_DRIVER,usblpw_retothwk_wkmon_actv_proc_1,P_WARNING,swLogPrintf("retothwk wkmon stage %d not match ");
265216,543930368,0,0,PLAT_AP,PLA_DRIVER,usb_lpwkup_step_show_1,P_VALUE,swLogPrintf("usb_lpwkup_step 0x%x ");
265216,543934463,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_1,P_VALUE,swLogPrintf("reset ");
265216,543934464,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_4,P_VALUE,swLogPrintf("permit %d ");
265216,543936512,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_3,P_VALUE,swLogPrintf("dlychk %d ");
265216,543938560,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_5,P_VALUE,swLogPrintf("usbc_proc_susp2hib %d ");
265216,543940608,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2hib_6,P_VALUE,swLogPrintf("premit_proc %d ");
265216,543944703,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_1_0,P_WARNING,swLogPrintf("guard none ");
265216,543944704,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_2_1,P_WARNING,swLogPrintf("invalid guard status %d ");
265216,543946752,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_2_2,P_VALUE,swLogPrintf("start %d ");
265216,543948800,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_4,P_VALUE,swLogPrintf("permit %d ");
265216,543950848,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_3,P_VALUE,swLogPrintf("dlychk %d ");
265216,543952896,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_5_1,P_VALUE,swLogPrintf("premit_proc %d ");
265216,543954944,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_5_2,P_VALUE,swLogPrintf("clear unexpect %d ");
265216,543956992,0,0,PLAT_AP,PLA_DRIVER,usblpw_susp2vbustbl_6,P_VALUE,swLogPrintf("unexpected guard state%d ");
265216,543961087,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_pre_recovery_0,P_WARNING,swLogPrintf("Disable LpusbWakeup_IRQn ");
265216,543961344,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_pre_recovery_1,P_VALUE,swLogPrintf("vbus_nvic rec %d , vbus_pad %d ");
265216,543963392,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_gint_regs,P_WARNING,swLogPrintf("gintsts 0x%x , gintmsk 0x%x ");
265216,543967231,0,0,PLAT_AP,PLA_DRIVER,usblpw_is_retothwks2_slp1_start_2,P_WARNING,swLogPrintf("Disable LpusbWakeup_IRQn ");
265216,543969279,0,0,PLAT_AP,PLA_DRIVER,usblpw_is_retothwks2_slp1_start_3,P_WARNING,swLogPrintf("usblpw_innophy_susp_chk_patch ");
265216,543969280,0,0,PLAT_AP,PLA_DRIVER,usblpw_is_retothwks2_slp1_start_4,P_WARNING,swLogPrintf("reg ctxstat %d unmatch ");
265216,543971584,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_1,P_VALUE,swLogPrintf("ctx state ( %d ) is not none , vbus_nvic rec %d , wkup hard restore skip ");
265216,543973632,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_2,P_VALUE,swLogPrintf("prev ctx state ( %d ) before slp1 not success , vbus [ 2 ] or pad [ 1 ] or vbus_nvic_r [ 0 ] 0x%x , wkup hard restore skip ");
265216,543975680,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_3,P_VALUE,swLogPrintf("vbus_nvic rec %d , vbus_pad %d ");
265216,543979519,0,0,PLAT_AP,PLA_DRIVER,usblpw_sleep1_later_recovery_2,P_ERROR,swLogPrintf("vbus_mode_en and vbus pad nvic enabled , conflict stat ");
265216,543980032,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_4,P_VALUE,swLogPrintf("hard_rest_warning or case 0x%x , usbslpmsk_en 0x%x , reg_retwkup_ctxstat 0x%x ");
265216,543982336,0,0,PLAT_AP,PLA_DRIVER,usblpw_retwkup_sleep1_locinit_6,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x , inimod 0x%x ");
265216,543983616,0,0,PLAT_AP,PLA_DRIVER,usblpw_sleep1_later_recovery_nvic,P_VALUE,swLogPrintf("NVIC 0x%x ");
265216,543986176,0,0,PLAT_AP,PLA_DRIVER,usblpw_sleep1_later_recovery_1,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x ");
265216,543989759,0,0,PLAT_AP,PLA_DRIVER,usbpcd_retwkup_stack_restore_1,P_ERROR,swLogPrintf("early init fail ");
265216,543991807,0,0,PLAT_AP,PLA_DRIVER,usbpcd_retwkup_stack_restore_2,P_ERROR,swLogPrintf("early load fail ");
265216,543993855,0,0,PLAT_AP,PLA_DRIVER,usbpcd_retwkup_stack_restore_3,P_ERROR,swLogPrintf("retwkup restore fail ");
265216,543995903,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_pre_1,P_WARNING,swLogPrintf("clk ungated ");
265216,543997951,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_1,P_ERROR,swLogPrintf("early init fail ");
265216,543999999,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_2,P_ERROR,swLogPrintf("early load fail ");
265216,544002047,0,0,PLAT_AP,PLA_DRIVER,usbpcd_init_3,P_ERROR,swLogPrintf("dev init fail ");
265216,544004095,0,0,PLAT_AP,PLA_DRIVER,usbpcd_proc_sim_cfgreq_1,P_VALUE,swLogPrintf("sim usb init start ");
265216,544005376,0,0,PLAT_AP,PLA_DRIVER,UtfwDrvErrIsr_e_1,P_ERROR,swLogPrintf("UTFW ERROR! errStatus : 0x%lx ( %d , %d , %d ) , AhbRdErrAddr : 0x%x , AhbWdErrAddr : 0x%x ");
265216,544008191,0,0,PLAT_AP,PLA_DRIVER,UtfwDrvErrIsr_dump_e_1,P_ERROR,swLogDump("UTFW ERROR , UTFW_OTHER_DEBUG_REG : ");
265216,544009216,0,0,PLAT_AP,PLA_DRIVER,UtfwDrvErrIsr_ep_1,P_ERROR,swLogPrintf("UTFW ERROR! ep : %d , epCfg : 0x%lx ( %d , %d , %d ) ");
265216,544010496,0,0,PLAT_AP,PLA_DRIVER,adcProxyVBatCallback_1,P_VALUE,swLogPrintf("raw_result = 0x%x , vbat = 0x%x ");
265216,544012544,0,0,PLAT_AP,PLA_DRIVER,adcProxyThermalCallback_1,P_VALUE,swLogPrintf("rawResult = 0x%x , Thermal = 0x%x ");
265216,544014592,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_0,P_SIG,swLogPrintf("DeepSleep Timer Renew ID = %d , ticks = %d ");
265216,544016640,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_1,P_SIG,swLogPrintf("DeepSleep Timer Change Period ID = %d , ticks = %d ");
265216,544018688,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_2,P_SIG,swLogPrintf("Wakeup From DeepSleep , Timer Restart ID = %d , ticks = %d ");
265216,544020736,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Start_3,P_SIG,swLogPrintf("DeepSleep Timer New ID = %d , ticks = %d ");
265216,544022528,0,0,PLAT_AP,PLA_DRIVER,HibTimer_PS_Del_1,P_SIG,swLogPrintf("DeepSleep Timer Delete ID = %d ");
265216,544026623,0,0,PLAT_AP,PLA_DRIVER,OsaGetFlashValue_1,P_INFO,swLogPrintf("get cclk time value , file not exist , create default one ");
265216,544028671,0,0,PLAT_AP,PLA_DRIVER,OsaGetFlashValue_2,P_INFO,swLogPrintf("get cclk time value , file header error , create default one ");
265216,544030719,0,0,PLAT_AP,PLA_DRIVER,OsaGetFlashValue_3,P_INFO,swLogPrintf("cclk time value file read sucess ");
265216,544032767,0,0,PLAT_AP,PLA_DRIVER,OsaSetFlashValue_1,P_INFO,swLogPrintf("set cclk time value , file not exist , create default one ");
265216,544034815,0,0,PLAT_AP,PLA_DRIVER,OsaSetFlashValue_2,P_INFO,swLogPrintf("cclk time value file write sucess ");
265216,544035584,0,0,PLAT_AP,PLA_DRIVER,adc_efuse_read,P_INFO,swLogPrintf("adc efuse trim value , gain : 0x%x , offset : 0x%x , tcode : 0x%x , t0 : 0x%x ");
265216,544037379,0,0,PLAT_AP,PLA_DRIVER,assert_func_1,P_ERROR,swLogPrintf("Assert , expr : %s , file : %s , line : %d \r \n ");
265216,544040959,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_1,P_ERROR,swLogPrintf("Can ' t open ' plat_config ' file , use the defult value ");
265216,544043007,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_2,P_ERROR,swLogPrintf("Can ' t read ' plat_config ' file header , use the defult value ");
265216,544043008,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_5,P_ERROR,swLogPrintf("' plat_config ' version : %d not right , use the defult value ");
265216,544045568,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_3,P_ERROR,swLogPrintf("' plat_config ' version : %d file body size not right : ( %u / %u ) , use the defult value ");
265216,544047616,0,0,PLAT_AP,PLA_DRIVER,BSP_LoadPlatConfig_4,P_ERROR,swLogPrintf("Can ' t read ' plat_config ' version : %d file body , or body not right , ( %u / %u ) , use the defult value ");
265216,544051199,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfig_1,P_ERROR,swLogPrintf("Can ' t open / create ' plat_config ' file , save plat_config failed ");
265216,544053247,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfig_2,P_ERROR,swLogPrintf("Write ' plat_config ' file header failed ");
265216,544055295,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfig_3,P_ERROR,swLogPrintf("Write ' plat_config ' file body failed ");
265216,544057343,0,0,PLAT_AP,PLA_DRIVER,BSP_SetFSAssertCount_0,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544059391,0,0,PLAT_AP,PLA_DRIVER,BSP_SetFSAssertCount_1,P_ERROR,swLogPrintf("Update fsAssertCount value error!!! ");
265216,544061439,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_1,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544063487,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_2,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544065535,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_3,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544067583,0,0,PLAT_AP,PLA_DRIVER,BSP_SavePlatConfigToRawFlash_4,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544069631,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_1,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544071679,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_2,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544073727,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_3,P_ERROR,swLogPrintf("Erase flash error!!! ");
265216,544075775,0,0,PLAT_AP,PLA_DRIVER,BSP_WriteToRawFlash_4,P_ERROR,swLogPrintf("Save plat config to raw flash error!!! ");
265216,544076032,0,0,PLAT_AP,PLA_DRIVER,BSP_GET_PLAT_CFG_3,P_WARNING,swLogPrintf("non-identical baud between fs ( %d ) & raw ( %d ) ! ");
265216,544078592,0,0,PLAT_AP,PLA_DRIVER,CLOCK_Trace_1,P_WARNING,swLogPrintf("Clock Trace , id = 0x%x isEnable = %d counter = %d , funcPtr = %x ");
265216,544080384,0,0,PLAT_AP,PLA_DRIVER,CLOCK_Trace_2,P_WARNING,swLogPrintf("Clock Trace , id = 0x%x counter = %d may overflow , funcPtr = %x ");
265216,544082176,0,0,PLAT_AP,PLA_DRIVER,CLOCK_clockEnable_1,P_WARNING,swLogPrintf("Clock Enable Failed , id = 0x%x counter = %d ");
265216,544083968,0,0,PLAT_AP,PLA_DRIVER,CLOCK_clockDisable_0,P_WARNING,swLogPrintf("Clock Disable check failed , id = 0x%x ");
265216,544088063,0,0,PLAT_AP,PLA_DRIVER,i2sSetSampleRate_1,P_INFO,swLogPrintf("start to change samplerate ");
265216,544088320,0,0,PLAT_AP,PLA_DRIVER,i2sSetSampleRate_2,P_DEBUG,swLogPrintf("i2s0 : integer : %x , frac : %x ");
265216,544090368,0,0,PLAT_AP,PLA_DRIVER,i2sSetSampleRate_3,P_DEBUG,swLogPrintf("i2s1 : integer : %x , frac : %x ");
265216,544092416,0,0,PLAT_AP,PLA_DRIVER,TIMER_netlightPWM_1,P_SIG,swLogPrintf("Netlight mode = %u Instance = %d ");
265216,544094208,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_init_1,P_WARNING,swLogPrintf("usb_wkup_pad_idx %d ");
265216,544096512,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_1_1,P_WARNING,swLogPrintf("filter reset detect evt %x , vbus %d ");
265216,544098560,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_1_2,P_WARNING,swLogPrintf("filter reset ( to ) evt %x , vbus %d ");
265216,544100608,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_1,P_WARNING,swLogPrintf("port filtered unstable evt %x , vbus %d ");
265216,544102656,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_2,P_WARNING,swLogPrintf("port vbus filter unstable level vbus last %d , vbus cur = %d ");
265216,544104448,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_3,P_WARNING,swLogPrintf("port filtered type2 ( to ) invalid vbus , evt %x , vbus 0 ");
265216,544106496,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_4,P_WARNING,swLogPrintf("port filtered type3 ( to ) invalid vbus , evt %x , vbus 1 ");
265216,544108800,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_5,P_WARNING,swLogPrintf("port vbus trigger warning , ctx stat not valid %x , vbus %d ");
265216,544110848,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_2_6,P_INFO,swLogPrintf("port vbus trigger , evt %x , vbus %d ");
265216,544114687,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_1,P_WARNING,swLogPrintf("BSP_UsbDeInit ");
265216,544116735,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_2,P_ERROR,swLogPrintf("BSP_UsbDeInit , ctx stat not match ");
265216,544118783,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_3,P_WARNING,swLogPrintf("BSP_UsbInit ");
265216,544120831,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_4,P_ERROR,swLogPrintf("BSP_UsbInit , ctx stat not match ");
265216,544121088,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_3_5,P_WARNING,swLogPrintf("port vbus last %d , vbus cur = %d ");
265216,544124927,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_4_1,P_WARNING,swLogPrintf("port stable wait evt change ");
265216,544124928,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_task_4_2,P_WARNING,swLogPrintf("port stable detect evt %x ");
265216,544126976,0,0,PLAT_AP,PLA_DRIVER,usb_portmon_intr_cb_1,P_INFO,swLogPrintf("wkup_val : 0x%x ");
265216,544129792,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_ccinfo_map_1,P_ERROR,swLogPrintf("clstype %d , inst_id %d , maintp %d , subtp %d ");
265216,544131840,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_ccinfo_map_2,P_ERROR,swLogPrintf("clstype %d , inst_id %d , maintp %d , subtp %d ");
265216,544133120,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_cfg_end_1,P_ERROR,swLogPrintf("p_multidev_load->load_cnt %x ");
265216,544135948,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidevstr_desc_1,P_DEBUG,swLogPrintf("cls_type %d , inst_id 0x%x , name %s , intf string %s ");
265216,544137985,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_cmndesc_1,P_DEBUG,swLogPrintf("name %s , cls = 0x%x , subcls 0x%x , protocol 0x%x ");
265216,544140804,0,0,PLAT_AP,PLA_DRIVER,usbcustom_multidev_ctrl_proc_1,P_DEBUG,swLogPrintf("cls_type = %d , inst_id %d , name %s , req 0x%x , %d , %x , %x ");
265216,544143359,0,0,PLAT_AP,PLA_DRIVER,SoftSimInit_0,P_INFO,swLogPrintf("Softsim task has already been created ");
265216,544145407,0,0,PLAT_AP,PLA_DRIVER,SoftSimInit_1,P_INFO,swLogPrintf("Start softsim task ");
265216,544145664,0,0,PLAT_AP,PLA_DRIVER,halI2sStartStop_0,P_DEBUG,swLogPrintf("startStop = %e<I2sStartStop_e> , ctrlRegMode = %e<I2sCtrlMode_e> ");
265216,544147456,0,0,PLAT_AP,PLA_DRIVER,halI2sStartStop_1,P_DEBUG,swLogPrintf("ret = %d ");
265216,544151551,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_1,P_VALUE,swLogPrintf("Log above print through uart ");
265216,544153599,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_2,P_VALUE,swLogPrintf("Log below print through usb ");
265216,544155647,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_4,P_VALUE,swLogPrintf("Log below print through usb ");
265216,544155648,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtInit_5,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtInit Process Time = %d ");
265216,544157696,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtDinit_1,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtDinit Process Time = %d ");
265216,544159744,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtReset_1,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtReset Process Time = %d ");
265216,544163839,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtSuspend_1,P_VALUE,swLogPrintf("Log above print through usb ");
265216,544165887,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtSuspend_3,P_VALUE,swLogPrintf("Log below print through uart ");
265216,544165888,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtSuspend_4,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtSuspend Process Time = %d ");
265216,544169983,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_1,P_VALUE,swLogPrintf("Log above print through uart ");
265216,544172031,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_2,P_VALUE,swLogPrintf("Low below print through usb ");
265216,544174079,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_3,P_VALUE,swLogPrintf("Low below print through usb ");
265216,544174080,0,0,PLAT_AP,PLA_DRIVER,usbDevLowLvlEvtResume_4,P_VALUE,swLogPrintf("USB IRQ usbDevLowLvlEvtResume Process Time = %d ");
265216,544176640,0,0,PLAT_AP,PLA_DRIVER,npiLoadNvmConfig_4,P_ERROR,swLogPrintf("Can ' t read ' npiconfig.nvm ' version : %d file body , or body not right , ( %u / %u ) , use the defult value ");
265216,544178176,0,0,PLAT_AP,PLA_DRIVER,npiLoadNvmConfig_5,P_ERROR,swLogPrintf("' npiconfig.nvm ' version : %d not right , use the defult value ");
265216,544180736,0,0,PLAT_AP,PLA_DRIVER,xTimerGenericCommand_1,P_WARNING,swLogPrintf("OsTimer Operation in ISR , msgId = %u , value = %d , pTimer = 0x%x ");
266240,545261568,0,0,PLAT_AP,PLA_HAL,ApmuHandleScCalibrCancel,P_INFO,swLogPrintf("ApmuHandleScCalibration Cancelled! and timer status is %d ");
266240,545265663,0,0,PLAT_AP,PLA_HAL,ApmuScCalibrTimerExpired_0,P_INFO,swLogPrintf("ApmuScCalibrTimerExpired! ");
266240,545267711,0,0,PLAT_AP,PLA_HAL,ApmuHandleScCalibrReq_0,P_INFO,swLogPrintf("ApmuHandleScCalibrReq! ");
266240,545267712,0,0,PLAT_AP,PLA_HAL,SctPmuLowPowerExitCallBack_w_1,P_WARNING,swLogPrintf("SCT , callback should be only called before exit sleep1 , not : %d ");
266240,545271040,0,0,PLAT_AP,PLA_HAL,SctDrvChanlLoopWaitDone_w_1,P_WARNING,swLogPrintf("SCT chan : %d , loop wait done fail , loop : %d / %d , chanState : 0x%lx / %d / %d ");
266240,545271808,0,0,PLAT_AP,PLA_HAL,utfcEpnClear_w_1,P_WARNING,swLogPrintf("UTFC , clear EP : %d , failed !!!! ");
266240,545273856,0,0,PLAT_AP,PLA_HAL,UtfwPmuLowPowerExitCallBack_w_1,P_WARNING,swLogPrintf("UTFW , callback should be only called before exit sleep1 , not : %d ");
266240,545276160,0,0,PLAT_AP,PLA_HAL,UtfwDrvEpReset_w_1,P_WARNING,swLogPrintf("UTFW EP : %d reset , EP reset not done : 0x%lx ");
266240,545278208,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , AES SHA channel Info : %d / %d ");
266240,545280000,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_idx_w_2,P_WARNING,swLogPrintf("SCT ERROR ISR , AES SHA channel , FIFO idx : %d ");
266240,545284095,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , AES SHA FIFO DESC DUMP : ");
266240,545286143,0,0,PLAT_AP,PLA_HAL,SctAesShaChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , AES SHA channel DESC DUMP : ");
266240,545288191,0,0,PLAT_AP,PLA_HAL,SctAesShaInit_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , can ' t create mutex ");
266240,545290239,0,0,PLAT_AP,PLA_HAL,SctAesShaInit_w_2,P_WARNING,swLogPrintf("SCT AES / SHA , can ' t create semaphore ");
266240,545292287,0,0,PLAT_AP,PLA_HAL,SctAesShaPollTrigger_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , polling calc / triger failed ");
266240,545292288,0,0,PLAT_AP,PLA_HAL,SctAesShaOsTrigger_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , wait for semphore failed : %d ");
266240,545294336,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_addr_1,P_WARNING,swLogPrintf("SCT SHA , SHA HDR : 0x%x , can ' t be accessed by SCT ");
266240,545298431,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , busy , can ' t be started ");
266240,545300479,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_w_2,P_WARNING,swLogPrintf("SCT SHA , can ' t be called in ISR ");
266240,545302527,0,0,PLAT_AP,PLA_HAL,SctShaSegStart_w_4,P_WARNING,swLogPrintf("SCT SHA , can ' t lock the mutex ");
266240,545303040,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_e_1,P_ERROR,swLogPrintf("SCT SHA , append input not right , shaMode : %d , pInput : %d , inputLen : %d ");
266240,545304576,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_addr_1,P_WARNING,swLogPrintf("SCT SHA , SHA input : 0x%x , can ' t be accessed by SCT ");
266240,545307392,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_w_1,P_WARNING,swLogPrintf("SCT SHA , channel state not right , init : %d , start : %d , shaMode : %d / %d ");
266240,545309440,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_w_2,P_WARNING,swLogPrintf("SCT SHA , channel state not right , init : %d , start : %d , mutexId : %d , semId : %d ");
266240,545310976,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_w_3,P_WARNING,swLogPrintf("SCT SHA , mutex locked by taskId : 0x%x , not curtaskId : 0x%x , ERROR! ");
266240,545314815,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_calc_w_1,P_ERROR,swLogPrintf("SCT SHA , SHA calc failed !!! ");
266240,545316863,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_calc_w_2,P_ERROR,swLogPrintf("SCT SHA , SHA calc backup data failed !!! ");
266240,545318911,0,0,PLAT_AP,PLA_HAL,SctShaAppendSeg_calc_w_3,P_ERROR,swLogPrintf("SCT SHA , SHA calc input data failed !!! ");
266240,545318912,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_addr_1,P_WARNING,swLogPrintf("SCT SHA , SHA output : 0x%x , can ' t be accessed by SCT ");
266240,545321728,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_1,P_WARNING,swLogPrintf("SCT SHA , SHA END , channel state not right , init : %d , start : %d , shaMode : %d / %d ");
266240,545323776,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_2,P_WARNING,swLogPrintf("SCT SHA , SHA END , channel state not right , init : %d , start : %d , mutexId : %d , semId : %d ");
266240,545325312,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_3,P_WARNING,swLogPrintf("SCT SHA , SHA END , mutex locked by taskId : 0x%x , not curtaskId : 0x%x , ERROR! ");
266240,545329151,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_w_4,P_WARNING,swLogPrintf("SCT SHA , SHA END , no input data before , ERROR ");
266240,545331199,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_calc_w_1,P_ERROR,swLogPrintf("SCT SHA , SHA END , SHA calc failed !!! ");
266240,545333247,0,0,PLAT_AP,PLA_HAL,SctShaSegEnd_calc_done_1,P_INFO,swLogPrintf("SCT SHA , SHA END , SHA calc done ");
266240,545333760,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_input_1,P_WARNING,swLogPrintf("SCT SHA , input not right , pInput : 0x%x , inputLen : %d , shaOutput : 0x%x ");
266240,545335552,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_input_2,P_WARNING,swLogPrintf("SCT SHA , input not right , shaHdr : 0x%x , shaHdrByteLen : %d ");
266240,545339391,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , busy , can ' t calc SHA ");
266240,545341439,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_2,P_WARNING,swLogPrintf("SCT SHA , can ' t be called in ISR ");
266240,545343487,0,0,PLAT_AP,PLA_HAL,SctShaCala_w_4,P_WARNING,swLogPrintf("SCT SHA , busy , can ' t lock the mutex ");
266240,545343488,0,0,PLAT_AP,PLA_HAL,SctShaCala_allc_w_1,P_ERROR,swLogPrintf("SCT SHA , can ' t alloc buf in heap , size : %d ");
266240,545347583,0,0,PLAT_AP,PLA_HAL,SctShaCala_calc_w_1,P_ERROR,swLogPrintf("SCT SHA , SHA calc failed !!! ");
266240,545349631,0,0,PLAT_AP,PLA_HAL,SctShaCala_calc_done_1,P_INFO,swLogPrintf("SCT SHA , SHA calc done ");
266240,545351679,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_1,P_WARNING,swLogPrintf("SCT AES , no input !!! ");
266240,545352192,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_2,P_WARNING,swLogPrintf("SCT AES , invalid input , inputByteLen : %d , pInput : 0x%x , pOutput : 0x%x ");
266240,545353728,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_3,P_WARNING,swLogPrintf("SCT AES , invalid input , CK from input , but input CK is NULL , or not 4 bytes aligned : 0x%x ");
266240,545355776,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_4,P_WARNING,swLogPrintf("SCT AES , CBC / CTR mode , invalid input , IV is NULL , or not 4 bytes aligned : 0x%x ");
266240,545359871,0,0,PLAT_AP,PLA_HAL,SctAesCalc_input_w_5,P_WARNING,swLogPrintf("SCT AES , CK from EFUSE , but not support AES_256 , only support AES_128 / AES_192 ");
266240,545361919,0,0,PLAT_AP,PLA_HAL,SctAesCalc_w_1,P_WARNING,swLogPrintf("SCT AES / SHA , busy , can ' t calc AES ");
266240,545363967,0,0,PLAT_AP,PLA_HAL,SctAesCalc_w_2,P_WARNING,swLogPrintf("SCT AES , can ' t be called in ISR ");
266240,545366015,0,0,PLAT_AP,PLA_HAL,SctAesCalc_w_4,P_WARNING,swLogPrintf("SCT AES , busy , can ' t lock the mutex ");
266240,545368063,0,0,PLAT_AP,PLA_HAL,SctAesCalc_calc_w_1,P_ERROR,swLogPrintf("SCT AES , AES calc failed !!! ");
266240,545370111,0,0,PLAT_AP,PLA_HAL,SctAesCalc_calc_done_1,P_INFO,swLogPrintf("SCT AES , AES calc done ");
266240,545370624,0,0,PLAT_AP,PLA_HAL,SctHmacSha_key_w_1,P_WARNING,swLogPrintf("SCT , mode : %d , calc HMAC key failed : %d , inputLen : %d ");
266240,545372672,0,0,PLAT_AP,PLA_HAL,SctHmacSha_calc_w_1,P_WARNING,swLogPrintf("SCT , mode : %d , HMAC SCT calc failed : %d , inputLen : %d ");
266240,545374464,0,0,PLAT_AP,PLA_HAL,SctHmacSha_calc_w_2,P_WARNING,swLogPrintf("SCT , mode : %d , HMAC SCT final calc failed : %d ");
266240,545376256,0,0,PLAT_AP,PLA_HAL,SctNasChanlIsr_e_1,P_WARNING,swLogPrintf("SCT ISR , NAS channel , ChanState : 0x%x , but no ISR FUNC !!! ");
266240,545378560,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , NAS channel Info : %d / %d ");
266240,545380352,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_idx_w_2,P_WARNING,swLogPrintf("SCT ERROR ISR , NAS channel , FIFO idx : %d ");
266240,545384447,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , NAS FIFO DESC DUMP : ");
266240,545386495,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , NAS channel DESC DUMP : ");
266240,545388543,0,0,PLAT_AP,PLA_HAL,SctNasChanlErrIsr_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , no NAS ISR callback !!! ");
266240,545388544,0,0,PLAT_AP,PLA_HAL,SctUpChanlIsr_e_1,P_WARNING,swLogPrintf("SCT ISR , UP channel , ChanState : 0x%x , but no ISR FUNC !!! ");
266240,545390848,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , UP channel Info : %d / %d ");
266240,545392640,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_idx_w_2,P_WARNING,swLogPrintf("SCT ERROR ISR , UP channel , FIFO idx : %d ");
266240,545396735,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , UP FIFO DESC DUMP : ");
266240,545398783,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , UP channel DESC DUMP : ");
266240,545400831,0,0,PLAT_AP,PLA_HAL,SctUpChanlErrIsr_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , no UP ISR callback !!! ");
266240,545400832,0,0,PLAT_AP,PLA_HAL,SctNasChanlReset_w_1,P_WARNING,swLogPrintf("SCT NAS channel , can ' t waiting for reset done , chanlState : 0x%x ");
266240,545402880,0,0,PLAT_AP,PLA_HAL,SctUpChanlReset_w_1,P_WARNING,swLogPrintf("SCT UP channel , can ' t waiting for reset done , chanlState : 0x%x ");
266240,545406975,0,0,PLAT_AP,PLA_HAL,SctIpDeInit_w_reset,P_WARNING,swLogPrintf("SCT IP chan , deinit / reset ");
266240,545406976,0,0,PLAT_AP,PLA_HAL,SctIpDeInit_w_1,P_WARNING,swLogPrintf("SCT IP chan , can ' t waiting for reset done , chanlState : 0x%x ");
266240,545409536,0,0,PLAT_AP,PLA_HAL,SctIpSecOutboundEnc_w_1,P_WARNING,swLogPrintf("SCT IP chan , IpsecOutEnc no valid data need calc , alg : %d , pOut : 0x%lx , pPkg : 0x%lx ");
266240,545411328,0,0,PLAT_AP,PLA_HAL,SctIpSecAuth_key_w_1,P_WARNING,swLogPrintf("SCT IP , hash mode : %d , calc HMAC key failed , keyLen : %d ");
266240,545413376,0,0,PLAT_AP,PLA_HAL,SctIpSecAuth_calc_w_1,P_WARNING,swLogPrintf("SCT , hash mode : %d , HMAC SCT calc failed , inputLen : %d ");
266240,545415168,0,0,PLAT_AP,PLA_HAL,SctIpSecAuth_calc_w_2,P_WARNING,swLogPrintf("SCT , hash mode : %d , HMAC SCT final calc failed ");
266240,545419263,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlErrIsr_dump_w_1,P_WARNING,swLogDump("SCT ERROR ISR , sctCh2PppCrcCBA DUMP : ");
266240,545419520,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlErrIsr_idx_w_1,P_WARNING,swLogPrintf("SCT ERROR ISR , PPP channel , cfgIdx : %d , doneIdx : %d ");
266240,545423359,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlErrIsr_dump_w_3,P_WARNING,swLogDump("SCT ERROR ISR , PPP FIFO DESC DUMP : ");
266240,545425407,0,0,PLAT_AP,PLA_HAL,SctPppCrcDeInit_w_reset,P_WARNING,swLogPrintf("SCT PPP RAM chan , deinit / reset ");
266240,545425408,0,0,PLAT_AP,PLA_HAL,SctPppCrcDeInit_w_1,P_WARNING,swLogPrintf("SCT PPP RAM chan , can ' t waiting for reset done , chanlState : 0x%x ");
266240,545429503,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlCheck_w_1,P_WARNING,swLogPrintf("SCT PPP CRC , API can ' t be called in ISR ");
266240,545429760,0,0,PLAT_AP,PLA_HAL,SctPppCrcChanlCheck_full_1,P_ERROR,swLogPrintf("SCT PPP , channel full , can ' t PPP escape / deescape , SCT cfgId : %d , doneIdx : %d , abnormal!!! ");
266240,545431552,0,0,PLAT_AP,PLA_HAL,SctPppEscapeStatic_s_1,P_VALUE,swLogPrintf("SCT PPP , escape done , pkgNum : %d ");
266240,545433856,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_w_1,P_WARNING,swLogPrintf("SCT PPP , deescape , invalid input , two bytes 0x7E , validOffset : %d , length : %d ");
266240,545437695,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_7E_w_2,P_WARNING,swLogDump("SCT PPP , deescape error , input : ");
266240,545439743,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_7E_w_3,P_WARNING,swLogDump("SCT PPP , deescape error , only one 7E , input : ");
266240,545440000,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_w_nopkg_1,P_WARNING,swLogPrintf("SCT PPP , deescape , no valid escaped PKG input , foundPppStart : %d , foundRawPkg : %d ");
266240,545443839,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_w_nopkg_2,P_WARNING,swLogPrintf("SCT PPP , deescape , all input escaped pkg invalid ");
266240,545445120,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_crc_nok,P_WARNING,swLogPrintf("SCT PPP , deescape , pkgIdx : %d / pkgNum : %d , crc not right : 0x%x , 0x%x , 0x%x , 0x%x ");
266240,545446400,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_len_nok,P_WARNING,swLogPrintf("SCT PPP , deescape , pkgIdx : %d / pkgNum : %d , deescape len : %d abnormal , should at least 2 bytes ");
266240,545447936,0,0,PLAT_AP,PLA_HAL,SctPppDeEscapeStatic_s_1,P_VALUE,swLogPrintf("SCT PPP , deescape done , pkgNum : %d ");
266240,545452031,0,0,PLAT_AP,PLA_HAL,SctPppEscapeAccmConfig_w_1,P_WARNING,swLogPrintf("SCT PPP , set ACCM , but SCT PPP Tx is ongoing , pending cur ACCM cfg ");
266240,545452800,0,0,PLAT_AP,PLA_HAL,SctPppEscapeCalcSize_w_1,P_WARNING,swLogPrintf("SCT PPP , calc size , invalid input : : pHead : 0x%x , pOutList : 0x%x , listSize : %d , pRetNext : 0x%x ");
266240,545454080,0,0,PLAT_AP,PLA_HAL,SctPppEscapeCalcSize_s_1,P_VALUE,swLogPrintf("SCT PPP , escape calc size done , pkgNum : %d ");
266240,545456128,0,0,PLAT_AP,PLA_HAL,SctPppTest_e_1,P_ERROR,swLogPrintf("PPP TEST , calc escape size error : %d ");
266240,545458176,0,0,PLAT_AP,PLA_HAL,SctPppTest_e_2,P_ERROR,swLogPrintf("PPP TEST , PKG escape error : %d ");
266240,545460224,0,0,PLAT_AP,PLA_HAL,SctPppTest_e_3,P_ERROR,swLogPrintf("PPP TEST , PKG deescape error : %d ");
266240,545462784,0,0,PLAT_AP,PLA_HAL,SctPppTest_de_1,P_ERROR,swLogPrintf("PPP TEST , PKG deescape crcNok : %d , or len : %d ! = %d , not right ");
266240,545466367,0,0,PLAT_AP,PLA_HAL,SctPppTest_de_dl_1,P_ERROR,swLogDump("PPP TEST , DL PKG : ");
266240,545468415,0,0,PLAT_AP,PLA_HAL,SctPppTest_de_ul_1,P_ERROR,swLogDump("PPP TEST , UL PKG : ");
266240,545468416,0,0,PLAT_AP,PLA_HAL,SctPppTest_s_e_1,P_SIG,swLogPrintf("PPP TEST , escape & descape SUCC , pkgNum : %d ");
266240,545471232,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_add_ws_1,P_DEBUG,swLogPrintf("SCT USB TCP , DL TCP SYN , ipType : %d , hostPort : %d , rmtPort : %d , ws : %d , try add into list ");
266240,545473280,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_disable_ws_1,P_VALUE,swLogPrintf("SCT USB TCP , ipType : %d , hostPort : %d , rmtPort : %d , dlScaled : %d , list full , disable WS option ");
266240,545475072,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_no_ws_1,P_DEBUG,swLogPrintf("SCT USB TCP , DL TCP SYN , ipType : %d , hostPort : %d , rmtPort : %d , no WS option , try RM from list ");
266240,545477632,0,0,PLAT_AP,PLA_HAL,SctUsbTcpWSProcess_win_1,P_INFO,swLogPrintf("SCT USB TCP WIN ADPT , hostPort : %d , free ul buffer %u , old win %u , new win %u , scaling value %u ");
266240,545479168,0,0,PLAT_AP,PLA_HAL,ApIdleTimeStatis_0,P_INFO,swLogPrintf("AP in IdleTask Percent : %d idleTaskCnt = %d , isrCnt = %d ");
266240,545481216,0,0,PLAT_AP,PLA_HAL,ApIdleTimeStatis_1,P_SIG,swLogPrintf("AP in IdleTask Percent : %d idleTaskCnt = %d , isrCnt = %d ");
266240,545483264,0,0,PLAT_AP,PLA_HAL,ApIdleTimeStatis_2,P_WARNING,swLogPrintf("AP in IdleTask Percent : %d idleTaskCnt = %d , isrCnt = %d ");
266240,545485312,0,0,PLAT_AP,PLA_HAL,UtfwEpIsr_w_1,P_WARNING,swLogPrintf("UTFW ISR , epId : %d , isrType : %d , nextDoneIdx : %d , but no EP context found , maybe de-init ");
266240,545488895,0,0,PLAT_AP,PLA_HAL,UtfwEpIsr_reset_1,P_ERROR,swLogPrintf("UTFW reset done ISR , should no such ISR in cur ver ");
266240,545489152,0,0,PLAT_AP,PLA_HAL,UTFWUsbChanlIsr_timeout_1,P_WARNING,swLogPrintf("UTFW timeout warning ISR , epId : %d , current ongoing chain index : %d !!! ");
266240,545492991,0,0,PLAT_AP,PLA_HAL,UtfwExitSleepCallback_1,P_INFO,swLogPrintf("UTFW , wake up from sleep1 , do nothing , wait USB init / reset ");
266240,545492992,0,0,PLAT_AP,PLA_HAL,UtfwFlushEp_w_1,P_WARNING,swLogPrintf("UTFW , not support to flush EP : %d ");
266240,545495040,0,0,PLAT_AP,PLA_HAL,UtfwFlushEp_w_2,P_WARNING,swLogPrintf("UTFW USB , USB is reseting , don ' t need reflush EP : %d ");
266240,545497600,0,0,PLAT_AP,PLA_HAL,UtfwEpIsTxFifoEmpty_s_1,P_SIG,swLogPrintf("UTFW , EP : %d , DIEPTXFI : 0x%x , TxFIFOSize : %d ");
266240,545499648,0,0,PLAT_AP,PLA_HAL,UtfwEpIsTxFifoEmpty_s_2,P_SIG,swLogPrintf("UTFW , EP : %d , DTXFSTSI : 0x%x , TxFIFOAvail : %d ");
266240,545502208,0,0,PLAT_AP,PLA_HAL,UtfwProcEpTimeout_tmrout_1,P_WARNING,swLogPrintf("UTFW USB , epId : %d tx timeout , cfgId : %d , doneIdx : %d , procId : %d , try rest EP and block %d ms ");
266240,545503744,0,0,PLAT_AP,PLA_HAL,UtfwTxRawDataStatic_full_1,P_WARNING,swLogPrintf("UTFW USB , channel full , can ' t Tx anymore , UTFW cfgId : %d , doneIdx : %d , procIdx : %d ");
266240,545505792,0,0,PLAT_AP,PLA_HAL,UtfwTxRawDataStatic_PPP_trig_1,P_INFO,swLogPrintf("UTFW , EP : %d , PPP orig pkg size : %d , one chain transfer size : %d ");
266240,545507584,0,0,PLAT_AP,PLA_HAL,UtfwTxRawDataStatic_trig_1,P_INFO,swLogPrintf("UTFW , EP : %d , one chain transfer size : %d ");
266240,545509376,0,0,PLAT_AP,PLA_HAL,UtfwTxRawDataStatic_txfr_w_1,P_WARNING,swLogPrintf("UTFW , USB reset , UTFW can ' t send RAW data to USB EP : %d ");
266240,545511424,0,0,PLAT_AP,PLA_HAL,UtfwTxRawDataStatic_txfr_sec_1,P_SIG,swLogPrintf("UTFW , current transfer size : %d , but still more data , TX retry ");
266240,545513472,0,0,PLAT_AP,PLA_HAL,UtfwTxPppDataStatic_highwater_1,P_WARNING,swLogPrintf("UTFW USB , PPP Tx pending / ongoing len : %d , highwater , return pending ");
266240,545516032,0,0,PLAT_AP,PLA_HAL,UtfwTxPppDataStatic_full_1,P_WARNING,swLogPrintf("UTFW USB PPP , channel full , can ' t Tx anymore , UTFW cfgId : %d , doneIdx : %d , procIdx : %d ");
266240,545517824,0,0,PLAT_AP,PLA_HAL,UtfwTxPppDataStatic_calc_size_1,P_ERROR,swLogPrintf("UTFW USB PPP , call UTFW to calc PPP escape size error , ret : %d , retBlk : 0x%lx ");
266240,545519616,0,0,PLAT_AP,PLA_HAL,UtfwTxPppDataStatic_mem_1,P_ERROR,swLogPrintf("UTFW USB PPP , no heap mem left for PPP escape pkg , size : %d , discard all PPP pkg ");
266240,545521664,0,0,PLAT_AP,PLA_HAL,UtfwTxPppDataStatic_esp_1,P_ERROR,swLogPrintf("UTFW USB PPP , UTFW PPP escape error , ret : %d , discard PPP ");
266240,545525759,0,0,PLAT_AP,PLA_HAL,UtfwTxPppDataStatic_accm_p_1,P_SIG,swLogPrintf("UTFW , PPP escape ACCM config pending , allow to cfg now ");
266240,545526016,0,0,PLAT_AP,PLA_HAL,UtfwEpTxData_epck_1,P_WARNING,swLogPrintf("UTFW USB , Tx MAX EPID : %d , can ' t Tx to EP : %d , discard all Tx data ");
266240,545528064,0,0,PLAT_AP,PLA_HAL,UtfwEpTxData_usbnok_1,P_WARNING,swLogPrintf("UTFW USB , USB is NOK now , or EP not enum : 0x%lx , can ' t Tx to EP : %d , discard all Tx data ");
266240,545529856,0,0,PLAT_AP,PLA_HAL,UtfwEpTxData_unblocked_1,P_SIG,swLogPrintf("UTFW USB , EP : %d , unblock now ");
266240,545532416,0,0,PLAT_AP,PLA_HAL,UtfwEpTxData_blocked_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , is blocked untill sysTick : 0x%x , curTick : 0x%x , discard all Tx data ");
266240,545533952,0,0,PLAT_AP,PLA_HAL,UtfwEpTxData_blockTmr_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , CTS block timer is runing , epState : UTFW_USB_CTS_NOT_ALLOW , backup Tx data ");
266240,545536000,0,0,PLAT_AP,PLA_HAL,UtfwEpTxData_cts_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , CTS is not allow , discard all Tx data ");
266240,545538560,0,0,PLAT_AP,PLA_HAL,UtfwTxData_w_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , bPPP : %d , Tx data , failed ret : %d , discard ");
266240,545540608,0,0,PLAT_AP,PLA_HAL,UtfwTxData_f_w_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , bPPP : %d , not all tx , ret : %d , need backup ");
266240,545542400,0,0,PLAT_AP,PLA_HAL,UtfwInitConfig_new_1,P_SIG,swLogPrintf("UTFW USB , num of Tx ep : %d , epbitmap : 0x%x ");
266240,545546239,0,0,PLAT_AP,PLA_HAL,UtfwInitConfig_w_1,P_WARNING,swLogPrintf("UTFW USB , num of Tx ep : 0 , not need to init UTFW ");
266240,545548287,0,0,PLAT_AP,PLA_HAL,UtfwInitConfig_w_2,P_WARNING,swLogPrintf("UTFW USB , USB reset / deinit , can ' t config utfcSetZLForSct ");
266240,545548544,0,0,PLAT_AP,PLA_HAL,UtfwInitConfig_utfc_w_1,P_WARNING,swLogPrintf("UTFW USB , Ep : %d , config utfcSetZLForSct , return NOK ( %d ) , USB / UTFC must reset / deinit ");
266240,545550336,0,0,PLAT_AP,PLA_HAL,UtfwProcDoneChainInfo_w_1,P_WARNING,swLogPrintf("UTFW USB , epId : %d event , but no EP context , maybe de-inited ");
266240,545552384,0,0,PLAT_AP,PLA_HAL,UtfwProcDoneChainInfo_avail_1,P_VALUE,swLogPrintf("UTFW USB , EP : %d avaiable , tx pending PDU ");
266240,545556479,0,0,PLAT_AP,PLA_HAL,UtfwProcUsbEvent_reset_1,P_WARNING,swLogPrintf("UTFW USB is RESET , discard all ongoing chain / txInfo ");
266240,545558527,0,0,PLAT_AP,PLA_HAL,UtfwProcUsbEvent_init_1,P_SIG,swLogPrintf("UTFW USB is INIT , OK for UTFW ");
266240,545560575,0,0,PLAT_AP,PLA_HAL,UtfwProcUsbEvent_full_s_1,P_SIG,swLogPrintf("UTFW USB full speed version , MPS set to 64 ");
266240,545562623,0,0,PLAT_AP,PLA_HAL,UtfwProcUsbEvent_high_s_1,P_SIG,swLogPrintf("UTFW USB high speed version , MPS set to 512 ");
266240,545562624,0,0,PLAT_AP,PLA_HAL,UtfwProcTimerExpiry_w_2,P_WARNING,swLogPrintf("UTFW , EP : %d , CTS pending time expiry , but time is NULL ");
266240,545564672,0,0,PLAT_AP,PLA_HAL,UtfwProcTimerExpiry_cts_w_2,P_WARNING,swLogPrintf("UTFW , EP : %d , CTS pending time expiry , but CTS still not allow Tx , discard all pending Tx data ");
266240,545566976,0,0,PLAT_AP,PLA_HAL,UtfwProcTimerExpiry_ab_1,P_WARNING,swLogPrintf("UTFW , EP : %d , CTS pending time expiry , but epState : %d , seems not right ");
266240,545569280,0,0,PLAT_AP,PLA_HAL,UtfwProcEpUnblock_w_1,P_WARNING,swLogPrintf("UTFW USB , recv unblock sig , but invalid input / state , EP : %d , pEpInfo : 0x%x , epState : %d ");
266240,545570816,0,0,PLAT_AP,PLA_HAL,UtfwProcEpUnblock_s_1,P_SIG,swLogPrintf("UTFW USB , EP : %d , recv unblock sig ");
266240,545572864,0,0,PLAT_AP,PLA_HAL,UtfwProcEpUnblock_w_2,P_WARNING,swLogPrintf("UTFW USB , EP : %d , recv unblock sig , but some PDU pending before , discard ");
266240,545575424,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_w_1,P_WARNING,swLogPrintf("UTFW USB , invalid EP : %d , or no EpInfo : 0x%lx , CTS bAllow Tx : %d ");
266240,545576960,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_allow_1,P_SIG,swLogPrintf("UTFW USB , EP : %d , CTS Allow Tx ");
266240,545579264,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_allow_w_2,P_WARNING,swLogPrintf("UTFW USB , EP : %d , CTS Allow Tx , but epState : %d , seems not right ");
266240,545581056,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_allow_w_3,P_WARNING,swLogPrintf("UTFW USB , EP : %d , CTS Allow Tx , but old data in USB FIFO not Tx , flush USB FIFO anyway ");
266240,545583104,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_avail_1,P_VALUE,swLogPrintf("UTFW USB , EP : %d CTS allow Tx , tx pending PDU ");
266240,545585152,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_not_allow_w_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , CTS not allow Tx , pending 10 sec ");
266240,545587456,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_tr_w_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , CTS not allow , epState : %d , retry / pending timer is running , need to stop it , then start CTS pending timer ");
266240,545589504,0,0,PLAT_AP,PLA_HAL,UtfwCtsBeAllowSend_t_w_1,P_WARNING,swLogPrintf("UTFW USB , EP : %d , pending timer start failed : %d , discard all backup data ");
266240,545591296,0,0,PLAT_AP,PLA_HAL,UtfwUsbStateEventInIsr_1,P_SIG,swLogPrintf("UTFW USB state change to : %d , ( 0-DEINT , 1-INIT , 2-RESET ) ");
266240,545595391,0,0,PLAT_AP,PLA_HAL,UtfwUsbStateEventInIsr_reset_1,P_WARNING,swLogPrintf("UTFW USB is RESET / Deinit... ");
266240,545595392,0,0,PLAT_AP,PLA_HAL,ACIpcAlone0Isr_00,P_VALUE,swLogPrintf("IPC0 Msg = 0x%x ");
266240,545597440,0,0,PLAT_AP,PLA_HAL,ACIpcAlone0Isr_1,P_ERROR,swLogPrintf("CP Dump , AP is in ImageType = %d , ( 0 ) AP Paging ( 1 ) AP FullImage ");
266240,545600000,0,0,PLAT_AP,PLA_HAL,ACIpcAlone1Isr_info_1,P_INFO,swLogPrintf("AP RECV IPC ID : 0x%x , msgLen : %d , bFast : %d ");
266240,545601536,0,0,PLAT_AP,PLA_HAL,A2CSendFastIpcMsg_sig_1,P_SIG,swLogPrintf("AP SEND fast IPC ID : 0x%x , to start / wakeup CP... ");
266240,545603840,0,0,PLAT_AP,PLA_HAL,A2CSendIpcMsg_info_1,P_INFO,swLogPrintf("AP SEND IPC ID : 0x%x , msgLen : %d ");
266240,545605632,0,0,PLAT_AP,PLA_HAL,A2CSendIpcMsg_sig_1,P_SIG,swLogPrintf("AP SEND IPC ID : 0x%x , to start / wakeup CP... ");
266240,545607680,0,0,PLAT_AP,PLA_HAL,A2CSendIpcMsg_info_3,P_INFO,swLogPrintf("AP SEND IPC Finish : gA2CNextWriteAddr_ap_rw = 0x%X ");
266240,545609728,0,0,PLAT_AP,PLA_HAL,A2CSendExceptionMsg_1,P_WARNING,swLogExcep("Warning , Last IPC0 Message not pop out , last msg = 0x%x ");
266240,545611776,0,0,PLAT_AP,PLA_HAL,A2CSendExceptionMsg_2,P_WARNING,swLogExcep("AP exception happens , wakeup cp to dead loop msgLen : %d ");
266240,545614080,0,0,PLAT_AP,PLA_HAL,halPhySetDebugCfgInfo_w_1,P_WARNING,swLogPrintf("HAL PHY , phyModId : %d , incorrect paramNum : %d ");
267264,547358720,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonWriteCP_0,P_VALUE,swLogPrintf("Write CP Reset Flag = 0x%x ");
267264,547360768,0,0,PLAT_AP,EXCEP_PRINT,cpNVIC_SystemReset_0,P_VALUE,swLogPrintf("CP NVIC Reset , CFG = 0x%x ");
267264,547363072,0,0,PLAT_AP,EXCEP_PRINT,ResetSetSWResetReason_1,P_WARNING,swLogPrintf("Old Reset reason = %e<ResetReason_e> exist , write reason = %e<ResetReason_e> failed ");
267264,547366911,0,0,PLAT_AP,EXCEP_PRINT,ResetCPWatchdogIsr_0,P_WARNING,swLogPrintf("Reset , CP Watchdog Isr trigger ");
267264,547368959,0,0,PLAT_AP,EXCEP_PRINT,ResetCPLockupIsr_0,P_WARNING,swLogPrintf("Reset , CP Lockup Isr trigger ");
267264,547368960,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonWriteAP_0,P_VALUE,swLogPrintf("Write AP Reset Flag = 0x%x ");
267264,547371008,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_0,P_VALUE,swLogPrintf("Reset Por Status : 0x%x ");
267264,547375103,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_1,P_WARNING,swLogPrintf("Reset Por Status : Pad Reset ");
267264,547377151,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_2,P_WARNING,swLogPrintf("Reset Por Status : Aon Watch dog Reset ");
267264,547379199,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_3,P_WARNING,swLogPrintf("Reset Por Status : AP Software Reset ");
267264,547381247,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_4,P_WARNING,swLogPrintf("Reset Por Status : AP Watch dog Reset ");
267264,547383295,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_5,P_WARNING,swLogPrintf("Reset Por Status : AP Lockup Reset ");
267264,547385343,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_6,P_WARNING,swLogPrintf("Reset Por Status : AP Ext Reset ");
267264,547387391,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_7,P_WARNING,swLogPrintf("Reset Por Status : CP Software Reset ");
267264,547389439,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_8,P_WARNING,swLogPrintf("Reset Por Status : CP Watch dog Reset ");
267264,547391487,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_9,P_WARNING,swLogPrintf("Reset Por Status : CP Lockup Reset ");
267264,547393535,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_10,P_WARNING,swLogPrintf("Reset Por Status : CP Ext Reset ");
267264,547393536,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_11,P_WARNING,swLogPrintf("AP Reset Reason : %e<ResetReason_e> ");
267264,547395584,0,0,PLAT_AP,EXCEP_PRINT,ResetPrintPorStatus_12,P_WARNING,swLogPrintf("CP Reset Reason : %e<ResetReason_e> ");
267264,547399679,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_0,P_WARNING,swLogPrintf("CP Reset : Software Active Reset ");
267264,547399680,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_1,P_WARNING,swLogPrintf("CP Reset Reason : %e<ResetReason_e> ");
267264,547403775,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_2,P_WARNING,swLogPrintf("CP Reset : Software Active Reset ");
267264,547405823,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_3,P_WARNING,swLogPrintf("CP Reset : CP watch dog force reset ");
267264,547407871,0,0,PLAT_AP,EXCEP_PRINT,ResetReasonCpRstCheck_4,P_WARNING,swLogPrintf("Reset : CP lockup force reset ");
267264,547409919,0,0,PLAT_AP,EXCEP_PRINT,check_excep_func_call_1,P_ERROR,swLogExcep("try to parse exception call stack by address compare! ");
267264,547409920,0,0,PLAT_AP,EXCEP_PRINT,check_excep_func_call_2,P_ERROR,swLogExcep("maybe function address @ 0x%x ");
267264,547414015,0,0,PLAT_AP,EXCEP_PRINT,excepSystemReset_0,P_ERROR,swLogExcep("exception system reset ");
267264,547416063,0,0,PLAT_AP,EXCEP_PRINT,excepPrintCurCPRegs_0,P_ERROR,swLogExcep("Cp is Sleeping ");
267264,547418111,0,0,PLAT_AP,EXCEP_PRINT,excepPrintCurCPRegs_1,P_ERROR,swLogExcep("Current CP Reg Info : ");
267264,547418112,0,0,PLAT_AP,EXCEP_PRINT,cpRegR0,P_ERROR,swLogExcep("CP R0 : 0x%x ");
267264,547420160,0,0,PLAT_AP,EXCEP_PRINT,cpRegR1,P_ERROR,swLogExcep("CP R1 : 0x%x ");
267264,547422208,0,0,PLAT_AP,EXCEP_PRINT,cpRegR2,P_ERROR,swLogExcep("CP R2 : 0x%x ");
267264,547424256,0,0,PLAT_AP,EXCEP_PRINT,cpRegR3,P_ERROR,swLogExcep("CP R3 : 0x%x ");
267264,547426304,0,0,PLAT_AP,EXCEP_PRINT,cpRegR4,P_ERROR,swLogExcep("CP R4 : 0x%x ");
267264,547428352,0,0,PLAT_AP,EXCEP_PRINT,cpRegR5,P_ERROR,swLogExcep("CP R5 : 0x%x ");
267264,547430400,0,0,PLAT_AP,EXCEP_PRINT,cpRegR6,P_ERROR,swLogExcep("CP R6 : 0x%x ");
267264,547432448,0,0,PLAT_AP,EXCEP_PRINT,cpRegR7,P_ERROR,swLogExcep("CP R7 : 0x%x ");
267264,547434496,0,0,PLAT_AP,EXCEP_PRINT,cpRegR8,P_ERROR,swLogExcep("CP R8 : 0x%x ");
267264,547436544,0,0,PLAT_AP,EXCEP_PRINT,cpRegR9,P_ERROR,swLogExcep("CP R9 : 0x%x ");
267264,547438592,0,0,PLAT_AP,EXCEP_PRINT,cpRegR10,P_ERROR,swLogExcep("CP R10 : 0x%x ");
267264,547440640,0,0,PLAT_AP,EXCEP_PRINT,cpRegR11,P_ERROR,swLogExcep("CP R11 : 0x%x ");
267264,547442688,0,0,PLAT_AP,EXCEP_PRINT,cpRegR12,P_ERROR,swLogExcep("CP R12 : 0x%x ");
267264,547444736,0,0,PLAT_AP,EXCEP_PRINT,cpRegSP,P_ERROR,swLogExcep("CP SP : 0x%x ");
267264,547446784,0,0,PLAT_AP,EXCEP_PRINT,cpRegLR,P_ERROR,swLogExcep("CP LR : 0x%x ");
267264,547448832,0,0,PLAT_AP,EXCEP_PRINT,cpRegPC,P_ERROR,swLogExcep("CP PC : 0x%x ");
267264,547450880,0,0,PLAT_AP,EXCEP_PRINT,cpRegXPSR,P_ERROR,swLogExcep("CP XPSR : 0x%x ");
267264,547452928,0,0,PLAT_AP,EXCEP_PRINT,cpRegMSP,P_ERROR,swLogExcep("CP MSP : 0x%x ");
267264,547454976,0,0,PLAT_AP,EXCEP_PRINT,cpRegPSP,P_ERROR,swLogExcep("CP PSP : 0x%x ");
267264,547457024,0,0,PLAT_AP,EXCEP_PRINT,cpRegCONTROL,P_ERROR,swLogExcep("CP CONTROL : 0x%x ");
267264,547459072,0,0,PLAT_AP,EXCEP_PRINT,cpRegFAULTMASK,P_ERROR,swLogExcep("CP FAULTMASK : 0x%x ");
267264,547461120,0,0,PLAT_AP,EXCEP_PRINT,cpRegBASEPRI,P_ERROR,swLogExcep("CP BASEPRI : 0x%x ");
267264,547463168,0,0,PLAT_AP,EXCEP_PRINT,cpRegPRIMASK,P_ERROR,swLogExcep("CP PRIMASK : 0x%x ");
267264,547467263,0,0,PLAT_AP,EXCEP_PRINT,dump_ram_to_flash_0,P_ERROR,swLogExcep("4M Flash , no flash dump area ");
267264,547469311,0,0,PLAT_AP,EXCEP_PRINT,dump_ram_to_flash_1,P_ERROR,swLogExcep("start dump ram to flash! ");
267264,547471359,0,0,PLAT_AP,EXCEP_PRINT,dump_ram_to_flash_2,P_ERROR,swLogExcep("Finsh dump ram to flash! ");
267264,547473407,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_0,P_ERROR,swLogExcep("RNDIS HALT FAILED ");
267264,547473408,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_1,P_ERROR,swLogExcep("CP Dump , AP help to dump , reason = %e<ACIPC0MSGID> ");
267264,547475712,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_2,P_ERROR,swLogExcep("CP hardFault triggered!!exceptionStore = 0x%x , 0x%x ");
267264,547477505,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_3,P_ERROR,swLogExcep("hardFault in : %s ");
267264,547479552,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_4,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547482368,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_5,P_ERROR,swLogExcep("dump stack frame : 0x%x 0x%x 0x%x 0x%x ");
267264,547485695,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_6,P_ERROR,swLogExcep("CP assert triggered!! ");
267264,547485697,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_7,P_ERROR,swLogExcep("Assert INFO : %s ");
267264,547487745,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_8,P_ERROR,swLogExcep("assert in : %s ");
267264,547489792,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_9,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547492608,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_10,P_ERROR,swLogExcep("dump stack frame : 0x%x 0x%x 0x%x 0x%x ");
267264,547493888,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_11,P_ERROR,swLogExcep("Current exception action : %d ");
267264,547497983,0,0,PLAT_AP,EXCEP_PRINT,excepCPDump_15,P_ERROR,swLogExcep("cp exception occurs , the system will reset ");
267264,547500031,0,0,PLAT_AP,EXCEP_PRINT,excepCheckFaultType_1,P_ERROR,swLogExcep("hardfault : casued by vector fetch error! ");
267264,547502079,0,0,PLAT_AP,EXCEP_PRINT,excepCheckFaultType_2,P_ERROR,swLogExcep("hardfault : casued by debug event! ");
267264,547504127,0,0,PLAT_AP,EXCEP_PRINT,mmfault_1,P_ERROR,swLogExcep("mem fault : instruction access violatio ");
267264,547506175,0,0,PLAT_AP,EXCEP_PRINT,mmfault_2,P_ERROR,swLogExcep("mem fault : data access violation ");
267264,547508223,0,0,PLAT_AP,EXCEP_PRINT,mmfault_3,P_ERROR,swLogExcep("mem fault : unstacking error ");
267264,547510271,0,0,PLAT_AP,EXCEP_PRINT,mmfault_4,P_ERROR,swLogExcep("mem fault : stacking error ");
267264,547510272,0,0,PLAT_AP,EXCEP_PRINT,mmfault_5,P_ERROR,swLogExcep("memory manage fault address @ 0x%x ");
267264,547514367,0,0,PLAT_AP,EXCEP_PRINT,busfault_1,P_ERROR,swLogExcep("bus fault : instrunction acess error ");
267264,547516415,0,0,PLAT_AP,EXCEP_PRINT,busfault_2,P_ERROR,swLogExcep("bus fault : precise data acess error ");
267264,547518463,0,0,PLAT_AP,EXCEP_PRINT,busfault_3,P_ERROR,swLogExcep("bus fault : imprecise data acess error ");
267264,547520511,0,0,PLAT_AP,EXCEP_PRINT,busfault_4,P_ERROR,swLogExcep("bus fault : unstacking error ");
267264,547522559,0,0,PLAT_AP,EXCEP_PRINT,busfault_5,P_ERROR,swLogExcep("bus fault : stacking error ");
267264,547522560,0,0,PLAT_AP,EXCEP_PRINT,busfault_6,P_ERROR,swLogExcep("bus fault address @ 0x%x ");
267264,547526655,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_1,P_ERROR,swLogExcep("usage fault : try to execute undefined instruction ");
267264,547528703,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_2,P_ERROR,swLogExcep("usage fault : try to switch to wrong state ( ARM ) ");
267264,547530751,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_3,P_ERROR,swLogExcep("usage fault : execute EXC_RETURN error ");
267264,547532799,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_4,P_ERROR,swLogExcep("usage fault : try to execute coprocessor instruction ");
267264,547534847,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_5,P_ERROR,swLogExcep("usage fault : unaligned access ");
267264,547536895,0,0,PLAT_AP,EXCEP_PRINT,usgaefault_6,P_ERROR,swLogExcep("usage fault : divide by zero ");
267264,547538943,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_1,P_ERROR,swLogExcep("dump regs start : ");
267264,547538944,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_2,P_ERROR,swLogExcep("dump reg : r0 : 0x%x ! ");
267264,547540992,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_3,P_ERROR,swLogExcep("dump reg : r1 : 0x%x ! ");
267264,547543040,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_4,P_ERROR,swLogExcep("dump reg : r2 : 0x%x ! ");
267264,547545088,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_5,P_ERROR,swLogExcep("dump reg : r3 : 0x%x ! ");
267264,547547136,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_6,P_ERROR,swLogExcep("dump reg : r4 : 0x%x ! ");
267264,547549184,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_7,P_ERROR,swLogExcep("dump reg : r5 : 0x%x ! ");
267264,547551232,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_8,P_ERROR,swLogExcep("dump reg : r6 : 0x%x ! ");
267264,547553280,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_9,P_ERROR,swLogExcep("dump reg : r7 : 0x%x ! ");
267264,547555328,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_10,P_ERROR,swLogExcep("dump reg : r8 : 0x%x ! ");
267264,547557376,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_11,P_ERROR,swLogExcep("dump reg : r9 : 0x%x ! ");
267264,547559424,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_12,P_ERROR,swLogExcep("dump reg : r10 : 0x%x ! ");
267264,547561472,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_13,P_ERROR,swLogExcep("dump reg : r11 : 0x%x ! ");
267264,547563520,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_14,P_ERROR,swLogExcep("dump reg : r12 : 0x%x ! ");
267264,547565568,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_15,P_ERROR,swLogExcep("dump reg : sp : 0x%x ! ");
267264,547567616,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_16,P_ERROR,swLogExcep("dump reg : msp : 0x%x ! ");
267264,547569664,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_17,P_ERROR,swLogExcep("dump reg : psp : 0x%x ! ");
267264,547571712,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_18,P_ERROR,swLogExcep("dump reg : lr : 0x%x ! ");
267264,547573760,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_19,P_ERROR,swLogExcep("dump reg : exception pc : 0x%x ! ");
267264,547575808,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_20,P_ERROR,swLogExcep("dump reg : psr : 0x%x ! ");
267264,547577856,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_21,P_ERROR,swLogExcep("dump reg : exc_return : 0x%x ! ");
267264,547579904,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_22,P_ERROR,swLogExcep("dump reg BASEPRI : 0x%x ! ");
267264,547581952,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_23,P_ERROR,swLogExcep("dump reg PRIMASK : 0x%x ! ");
267264,547584000,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_24,P_ERROR,swLogExcep("dump reg FAULTMASK : 0x%x ! ");
267264,547586048,0,0,PLAT_AP,EXCEP_PRINT,stack_frame_25,P_ERROR,swLogExcep("dump reg CONTROL : 0x%x ! ");
267264,547588096,0,0,PLAT_AP,EXCEP_PRINT,hardfault_1,P_ERROR,swLogExcep("Current fault action : %d ");
267264,547592191,0,0,PLAT_AP,EXCEP_PRINT,hardfault_excepSystemReset,P_ERROR,swLogExcep("Current fault excepSystemReset ");
267264,547592448,0,0,PLAT_AP,EXCEP_PRINT,excepHardFaultHandler_1,P_WARNING,swLogExcep("AP : Min of max free block in histroy : [ %d , %d ) ");
267264,547594752,0,0,PLAT_AP,EXCEP_PRINT,excepHardFaultHandler_2,P_WARNING,swLogExcep("AP : Current max free block size : %d in [ %d , %d ) ");
267264,547596289,0,0,PLAT_AP,EXCEP_PRINT,exception_task0,P_ERROR,swLogExcep("hardfault task : %s ");
267264,547600383,0,0,PLAT_AP,EXCEP_PRINT,hardfault_rndis,P_ERROR,swLogExcep("RNDIS HALT FAILED ");
267264,547602431,0,0,PLAT_AP,EXCEP_PRINT,hardfault_enter0,P_ERROR,swLogExcep("AP hard fault triggered!! ");
267264,547602432,0,0,PLAT_AP,EXCEP_PRINT,stack_dump_1,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547605248,0,0,PLAT_AP,EXCEP_PRINT,stack_dump_2,P_ERROR,swLogExcep("dump stack frame : 0x%x 0x%x 0x%x 0x%x ");
267264,547606529,0,0,PLAT_AP,EXCEP_PRINT,exception_task,P_ERROR,swLogExcep("hardfault task : %s ");
267264,547610623,0,0,PLAT_AP,EXCEP_PRINT,hardfault_2,P_ERROR,swLogExcep("hardfault occurs , the system will reset ");
267264,547610625,0,0,PLAT_AP,EXCEP_PRINT,unilogAssertInfo_1,P_ERROR,swLogExcep("ASSERT , FUNC : %s ");
267264,547612673,0,0,PLAT_AP,EXCEP_PRINT,unilogAssertInfo_2,P_ERROR,swLogExcep("ASSERT , FILE : %s ");
267264,547615488,0,0,PLAT_AP,EXCEP_PRINT,unilogAssertInfo_3,P_ERROR,swLogExcep("ASSERT line : %d , val is 0x%x , 0x%x , 0x%x ");
267264,547616768,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_7,P_ERROR,swLogExcep("Current exception action : %d ");
267264,547619072,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_001,P_WARNING,swLogExcep("AP : Min of max free block in histroy : [ %d , %d ) ");
267264,547621376,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_002,P_WARNING,swLogExcep("AP : Current max free block size : %d in [ %d , %d ) ");
267264,547622913,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_00,P_ERROR,swLogExcep("Assert INFO : %s ");
267264,547624961,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_01,P_ERROR,swLogExcep("assert in task : %s ");
267264,547627009,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_02,P_ERROR,swLogExcep("assert in : %s ");
267264,547629057,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_03,P_ERROR,swLogExcep("assert in : %s ");
267264,547631616,0,0,PLAT_AP,EXCEP_PRINT,ecAssert_enter_0,P_ERROR,swLogExcep("AP assert triggered!!SP = 0x%x , PSP = 0x%x , MSP = 0x%x ");
267264,547635199,0,0,PLAT_AP,EXCEP_PRINT,assert_rndis,P_ERROR,swLogExcep("RNDIS HALT FAILED ");
267264,547635201,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_0,P_ERROR,swLogExcep("Assert INFO : %s ");
267264,547637248,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_1,P_ERROR,swLogExcep("dump latest %d words stack start ");
267264,547640064,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_2,P_ERROR,swLogExcep("dump stack frame : 0x%x 0x%x 0x%x 0x%x ");
267264,547641345,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_3,P_ERROR,swLogExcep("assert in task : %s ");
267264,547643393,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_4,P_ERROR,swLogExcep("assert in : %s ");
267264,547645441,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_5,P_ERROR,swLogExcep("assert in : %s ");
267264,547649535,0,0,PLAT_AP,EXCEP_PRINT,excepEcAssert_11,P_ERROR,swLogExcep("assert occurs , the system will reset ");
267264,547649536,0,0,PLAT_AP,EXCEP_PRINT,LFS_DaemonTaskEntry_e_1,P_ERROR,swLogPrintf("LFS deamon , can ' t proc reqType : %d ");
267264,547651840,0,0,PLAT_AP,EXCEP_PRINT,LFS_Init_0,P_ERROR,swLogPrintf("FS region reformat threshold : %d , Current FS assert count : %d ");
267264,547655679,0,0,PLAT_AP,EXCEP_PRINT,LFS_Init_1,P_ERROR,swLogPrintf("FS region reformat failed!!! ");
268288,549456641,0,0,PLAT_AP,OSA,OsaCheckDebugFalse_e_1,P_ERROR,swLogPrintf("Debug Error , file : %s , line : %d , ( 0x%x , 0x%x ) ");
268288,549458688,0,0,PLAT_AP,OSA,OsaCfgNvmRemoveParam_e_1,P_ERROR,swLogPrintf("OSA CFG NVM , filesize : %d , remove size : %d + %d , can ' t remove paramId : %d , discard whole cfg file ");
268288,549460480,0,0,PLAT_AP,OSA,OsaCfgNvmGetParam_e_1,P_ERROR,swLogPrintf("OSA CFG NVN , can ' t get paramId : %d , file overflow , pCfgParse : 0x%x , pCfgEnd : 0x%x , reset whole config file ");
268288,549462784,0,0,PLAT_AP,OSA,OsaCfgNvmGetNextParam_e_1,P_ERROR,swLogPrintf("OSA CFG NVM , parse file erro , paramId : %d , type : %d , endlen : %d , but filesize only : %d , discard whole cfg file ");
268288,549465088,0,0,PLAT_AP,OSA,OsaCfgNvmAddParam_input_w_1,P_WARNING,swLogPrintf("OSA CFG NVN , can ' t add param , invalid input : paramId : %d , cfgType : %d , len : %d , paramAddr : 0x%x , NVMBody : 0x%x ");
268288,549466624,0,0,PLAT_AP,OSA,OsaCfgNvmAddParam_input_w_2,P_WARNING,swLogPrintf("OSA CFG NVN , cfgType : %d , but size : %d > 2 , can ' t add param : %d ");
268288,549468672,0,0,PLAT_AP,OSA,OsaCfgNvmAddParam_size_w_1,P_ERROR,swLogPrintf("OSA CFG NVN , cfg file size : %d , new added size : %d , already > 4KB , can ' t add paramId : %d ");
268288,549471232,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_input_w_1,P_WARNING,swLogPrintf("OSA CFG NVN , can ' t update param , invalid input : paramId : %d , cfgType : %d , len : %d , paramAddr : 0x%x , NVMBody : 0x%x ");
268288,549472768,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_input_w_2,P_WARNING,swLogPrintf("OSA CFG NVN , cfgType : %d , but size : %d > 2 , can ' t update param : %d ");
268288,549474304,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_null_1,P_VALUE,swLogPrintf("OSA CFG NVN , paramId : %d , not found in NVM , can ' t update , should add new into NVM ");
268288,549477120,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_replace_e_1,P_ERROR,swLogPrintf("OSA CFG NVM , paramId : %d , type : %d , paramLen not right , new : %d , old : %d ");
268288,549478912,0,0,PLAT_AP,OSA,OsaCfgNvmUpdateParam_replace_e_2,P_ERROR,swLogPrintf("OSA CFG NVM , paramId : %d , type : %d not the same as old : %d ");
268288,549480960,0,0,PLAT_AP,OSA,OsaCfgNvmParseParam_w_1,P_WARNING,swLogPrintf("OSA CFG NVM , paramId : %d , type : %d not right : %d , can ' t parse ");
268288,549483264,0,0,PLAT_AP,OSA,OsaCfgNvmParseParam_w_2,P_WARNING,swLogPrintf("OSA CFG NVM , paramId : %d , type : %d , expect len not right : %d , %d , can ' t parse ");
268288,549485312,0,0,PLAT_AP,OSA,OsaMemPoolIdAlloc_w_1,P_WARNING,swLogPrintf("OSA POOL MEM , can ' t alloc size : %d > etySize : %d , from poolId : %d , request by : %d ");
268288,549487360,0,0,PLAT_AP,OSA,OsaMemPoolIdAlloc_null_1,P_WARNING,swLogPrintf("OSA POOL MEM , PoolId : %d , allocated Num : %d , no left , can ' t alloc size : %d , request by : %d ");
268288,549488896,0,0,PLAT_AP,OSA,OsaMemPoolAlloc_warning_1,P_WARNING,swLogPrintf("OSA POOL MEM , no pool is suitable for wantedSize : %d , callerId : %d ");
268288,549491201,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskRead_e_2,P_ERROR,swLogPrintf("OSA NVM , file : %s , can ' t read header , readLen : %d , wanted : %d , remove it ");
268288,549493249,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskRead_e_3,P_ERROR,swLogPrintf("OSA NVM , file : %s , invalid file size : %d > %d , not support , remove it ");
268288,549495297,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskRead_e_4,P_ERROR,swLogPrintf("OSA NVM , file : %s , can ' t read body , readLen : %d , wantedSize : %d , remove it ");
268288,549497345,0,0,PLAT_AP,OSA,OsaNvmDaemonTaskWrite_e_1,P_ERROR,swLogPrintf("OSA NVM , file : %s , can ' t write file , wrSize : %d > MAX : %d ");
268288,549499392,0,0,PLAT_AP,OSA,OsaNvmRead_w_1,P_WARNING,swLogPrintf("OSA NVM , read NVM , invalid input , fileName : 0x%x , bodyInfo : 0x%x , bodyInfo.pbuf : 0x%x ");
268288,549501441,0,0,PLAT_AP,OSA,OsaNvmRead_w_2,P_WARNING,swLogPrintf("OSA NVM , file : %s , nameLen : %d > %d , or 0 , invalid , can ' t read file ");
268288,549503233,0,0,PLAT_AP,OSA,OsaNvmRead_lfs_w_1,P_WARNING,swLogPrintf("OSA NVM , can ' t read NVM file : %s , ret : %d ");
268288,549505283,0,0,PLAT_AP,OSA,OsaNvmRead_filename_w_1,P_WARNING,swLogPrintf("OSA NVM , read file : %s , but the filename header is : %s , not valid file , remove file ");
268288,549507841,0,0,PLAT_AP,OSA,OsaNvmRead_cks_w_1,P_WARNING,swLogPrintf("OSA NVM , read file : %s , len : %d , checksum not right , calc : 0x%x , want : 0x%x , remove file ");
268288,549509632,0,0,PLAT_AP,OSA,OsaNvmWrite_input_w_1,P_WARNING,swLogPrintf("OSA NVM , write file , invalid input , fileNameAddr : 0x%x , pData : 0x%x , size : %d , should < 4096 ");
268288,549511681,0,0,PLAT_AP,OSA,OsaNvmWrite_filename_w_1,P_WARNING,swLogPrintf("OSA NVM , file : %s , nameLen : %d > %d , or 0 , invalid , can ' t write file ");
268288,549513473,0,0,PLAT_AP,OSA,OsaNvmWrite_lfs_w_1,P_WARNING,swLogPrintf("OSA NVM , can ' t write NVM file : %s , ret : %d ");
268288,549515776,0,0,PLAT_AP,OSA,CUST_SIGNAL,P_INFO,swLogPrintf("Sig to task msgQ : 0x%lx , sigId : 0x%x , bodyLen : %d ");
268288,549517312,0,0,PLAT_AP,OSA,OsaSendNoLogNoAssertSignal_1,P_WARNING,swLogPrintf("This taskId : %d has not been created , can ' t send signal to it. ");
268288,549519360,0,0,PLAT_AP,OSA,OsaHibTimerExpiryCallback_1,P_SIG,swLogPrintf("HIB Timer Expired , ID : %e<OsaHibTimerId> ");
268288,549521920,0,0,PLAT_AP,OSA,osa_timeSync1,P_INFO,swLogPrintf("new---NITZ , year-mon-day : 0x%x , hour-min-sec-tz : 0x%x , sec from 1970 is 0x%x ");
268288,549523456,0,0,PLAT_AP,OSA,osa_timeSync3,P_INFO,swLogPrintf("SNTP secs since 1970 : 0x%x ");
268288,549525504,0,0,PLAT_AP,OSA,osa_timeSync4,P_INFO,swLogPrintf("curr---ctTimerCurr : 0x%x ");
268288,549528064,0,0,PLAT_AP,OSA,osa_timeSync5,P_INFO,swLogPrintf("update time info to flash utc : 0x%x , ct : 0x%x , zone : 0x%x ");
268288,549530368,0,0,PLAT_AP,OSA,osa_timeSync6,P_INFO,swLogPrintf("update time info to flash again utc : 0x%x , ct : 0x%x , zone : 0x%x , ret = %d ");
268288,549531648,0,0,PLAT_AP,OSA,osa_timeSync7,P_INFO,swLogPrintf("utcSeconds from flash : 0x%x ");
268288,549533696,0,0,PLAT_AP,OSA,osa_timeSync8,P_INFO,swLogPrintf("old---CTtimer : 0x%x ");
268288,549536000,0,0,PLAT_AP,OSA,osa_timeSync9,P_INFO,swLogPrintf("utcRang : 0x%x , ctTimerRang : 0x%x ");
268288,549538304,0,0,PLAT_AP,OSA,osa_timeSync10,P_INFO,swLogPrintf("update time info to flash utc : 0x%x , ct : 0x%x , zone : 0x%x ");
268288,549540608,0,0,PLAT_AP,OSA,osa_timeSync11,P_INFO,swLogPrintf("update time info to flash again utc : 0x%x , ct : 0x%x , zone : 0x%x , ret = %d ");
268288,549542400,0,0,PLAT_AP,OSA,osa_timeSync12,P_INFO,swLogPrintf("update time info to flash utc : 0x%x , ct : 0x%x , zone : 0x%x ");
268288,549544704,0,0,PLAT_AP,OSA,osa_timeSync13,P_INFO,swLogPrintf("update time info to flash again utc : 0x%x , ct : 0x%x , zone : 0x%x , ret = %d ");
268288,549546496,0,0,PLAT_AP,OSA,OsaTimerUtcToLocalTimeh,P_INFO,swLogPrintf("local---NITZ , year-mon-day : 0x%x , hour-min-sec-tz : 0x%x , sec from 1970 is 0x%x ");
268288,549550079,0,0,PLAT_AP,OSA,osa_time9,P_INFO,swLogPrintf("NO time sync triggered , use the default time 2000.1.1 ");
268288,549550336,0,0,PLAT_AP,OSA,osa_time10_0,P_INFO,swLogPrintf("read UTC flash maybe err , ctTimerCurr 0x%x , CTtimer 0x%x ");
268288,549552384,0,0,PLAT_AP,OSA,osa_time10,P_INFO,swLogPrintf("read sec flash utc is 0x%x , ct period is 0x%x ");
268288,549556223,0,0,PLAT_AP,OSA,OsaSystemTimeReadUtc0,P_INFO,swLogPrintf("use default time seting , senice 2000 ");
268288,549556480,0,0,PLAT_AP,OSA,OsaSystemTimeReadUtc1,P_INFO,swLogPrintf("read UTC flash maybe err , ctTimerCurr 0x%x , CTtimer 0x%x ");
268288,549558528,0,0,PLAT_AP,OSA,OsaSystemTimeReadUtc2,P_INFO,swLogPrintf("read UTC flash utc is 0x%x , ct period is 0x%x ");
268288,549560832,0,0,PLAT_AP,OSA,OsaSystemTimeReadUtc3,P_INFO,swLogPrintf("time1 is 0x%x , time2 is 0x%x , ms is %d ");
268288,549564415,0,0,PLAT_AP,OSA,OsaSystemTimeReadRamUtc0,P_INFO,swLogPrintf("use default time seting , senice 2000 ");
268288,549564672,0,0,PLAT_AP,OSA,OsaSystemTimeReadRamUtc1,P_INFO,swLogPrintf("read UTC flash maybe err , ctTimerCurr 0x%x , CTtimer 0x%x ");
268288,549566720,0,0,PLAT_AP,OSA,OsaSystemTimeReadRamUtc2,P_INFO,swLogPrintf("read UTC flash utc is 0x%x , ct period is 0x%x ");
268288,549569537,0,0,PLAT_AP,OSA,PsOsCreateTask_1,P_ERROR,swLogPrintf("PS Task : %s , id : %d , create Failed - %u , %u , %u ");
268288,549572607,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_1,P_SIG,swLogPrintf("Create CMS task... ");
268288,549574655,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_w_1,P_WARNING,swLogPrintf("CMS Task already created , not need to create again ");
268288,549574915,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_name_e_1,P_ERROR,swLogPrintf("CMS Task already created , but task name not right : %s , must be : %s ");
268288,549576960,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_pri_e_1,P_ERROR,swLogPrintf("CMS Task already created , but task priority not right : %d , must be : %d ");
268288,549579264,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_task_e_1,P_ERROR,swLogPrintf("CMS Task Create Failed - %u , %u , %u ");
268288,549581312,0,0,PLAT_AP,OSA,CmsTaskAndQCeate_queue_e_1,P_ERROR,swLogPrintf("CMS Task queue Create Failed - %u , %u , %u ");
268288,549582848,0,0,PLAT_AP,OSA,PsInitialiseTasks_1,P_SIG,swLogPrintf("Create PS tasks... , PS tasks created before : %d ");
268288,549585152,0,0,PLAT_AP,OSA,EC_HEAP,P_INFO,swLogPrintf("EC heap size is %d , start addr is 0x%x! ");
268288,549586944,0,0,PLAT_AP,OSA,ULFC_TIMER_EXPR_1,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549589760,0,0,PLAT_AP,OSA,ULFC_TIMER_EXPR_2,P_SIG,swLogPrintf("UlfcMem ( %d ) : task ( %d / 0x%x ) unset ( %d ) timer event! ");
268288,549591040,0,0,PLAT_AP,OSA,ULFC_GET_USED_THRES_ALERT_PCT,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549593344,0,0,PLAT_AP,OSA,ULFC_SET_USED_THRES_ALERT_PCT,P_WARNING,swLogPrintf("invalid chanNo ( %d ) or alertPct ( %d ) err! ");
268288,549595136,0,0,PLAT_AP,OSA,ULFC_GET_USED_THRES,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549597184,0,0,PLAT_AP,OSA,ULFC_SET_USED_THRES,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549599232,0,0,PLAT_AP,OSA,ULFC_QUERY_ENABLE_STATE,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549601280,0,0,PLAT_AP,OSA,ULFC_QUERY_AVLB_SIZE,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549604096,0,0,PLAT_AP,OSA,OSA_ULFC_ALLOC,P_SIG,swLogPrintf("UlfcMem ( %d ) : alerting water! usedSize ( %d ) , alertThres ( %d / %d%% ) ");
268288,549605376,0,0,PLAT_AP,OSA,OSA_ULFC_ENABLE_1,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549608712,0,0,PLAT_AP,OSA,OSA_ULFC_ENABLE_2,P_SIG,swLogPrintf("UlfcMem ( %d ) : set task ( %d / 0x%x ) to %s mode ( %d ) , latest ref ( %d ) ! ");
268288,549609472,0,0,PLAT_AP,OSA,OSA_ULFC_DISABLE_1,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549612288,0,0,PLAT_AP,OSA,OSA_ULFC_DISABLE_2,P_SIG,swLogPrintf("UlfcMem ( %d ) : unset task ( %d / 0x%x ) , latest ref ( %d ) ! ");
268288,549613568,0,0,PLAT_AP,OSA,OSA_ULFC_DISABLE_3,P_SIG,swLogPrintf("UlfcMem ( %d ) : create unset timer! ");
268288,549615616,0,0,PLAT_AP,OSA,ULFC_NOTIFY_MEM_EVT,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
268288,549618690,0,0,PLAT_AP,OSA,OSA_ULFC_EVT_NOTIF,P_SIG,swLogPrintf("UlfcMem ( %d ) : %s water ( %d ) , usedSize ( %d ) , @bmTaskId ( 0x%x ) ! ");
268288,549619712,0,0,PLAT_AP,OSA,ULFC_CONFM_MEM_EVT,P_WARNING,swLogPrintf("invalid chanNo ( %d ) err! ");
269312,551553024,0,0,PLAT_AP,PMU,ec_main_2,P_VALUE,swLogPrintf("Current BT1MsCnt = %d ");
269312,551557119,0,0,PLAT_AP,PMU,apmuStartPowerOff_0,P_SIG,swLogPrintf("Power Off Failed , try again ");
269312,551557376,0,0,PLAT_AP,PMU,apmuGetAPWakeupSrc,P_VALUE,swLogPrintf("APmu : padWakeup = 0x%x , rtcWakeup = 0x%x ");
269312,551561215,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_2,P_VALUE,swLogPrintf("APMU CpSleepEnd : CP Vote for sleep1 ");
269312,551563263,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_3,P_VALUE,swLogPrintf("APMU CpSleepEnd : CP Vote for sleep2 ");
269312,551565311,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_4,P_VALUE,swLogPrintf("APMU CpSleepEnd : CP Vote for hibernate ");
269312,551567359,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_5,P_VALUE,swLogPrintf("APMU CpSleepEnd : CP Vote for sleep0 ");
269312,551569407,0,0,PLAT_AP,PMU,apmuCPSleepEndIntHandler_1,P_WARNING,swLogPrintf("APMU CpSleepEnd : Unknow sleep type! ");
269312,551571455,0,0,PLAT_AP,PMU,apmuCPWakeupEndIntHandler_1,P_VALUE,swLogPrintf("APMU CpWakeupEnd : CP Wakeup! ");
269312,551573503,0,0,PLAT_AP,PMU,apmuCPAssistReqIntHandler_1,P_VALUE,swLogPrintf("AP : Int Enter->CP Assist Req ");
269312,551575551,0,0,PLAT_AP,PMU,apmuCPRstReqIntHandler_1,P_VALUE,swLogPrintf("AP : Int Enter->CP Reset Req ");
269312,551576320,0,0,PLAT_AP,PMU,apmuCheckLdoBeforeSlp_1,P_VALUE,swLogPrintf("Ldo state , aonio = %d , sim = %d , aio = %d , usbMode = %d ");
269312,551577600,0,0,PLAT_AP,PMU,apmuUpdateCPPllState_1,P_VALUE,swLogPrintf("apmuUpdateCPPllState = %d ");
269312,551581695,0,0,PLAT_AP,PMU,apmuStartCPTimerExp_0,P_VALUE,swLogPrintf("apmuStartCPTimer Expired ");
269312,551583743,0,0,PLAT_AP,PMU,apmuStartCPTimerExp_1,P_VALUE,swLogPrintf("Still not time to start cp , start modem timer again ");
269312,551585791,0,0,PLAT_AP,PMU,apmuSetCPFastBoot_1,P_WARNING,swLogPrintf("Warning : CP Code in invalid , skip cp fast boot config ");
269312,551585792,0,0,PLAT_AP,PMU,apmuTrgCPPowerOn_0,P_SIG,swLogPrintf("Error : CP is already power on. Last WakeupSrc = 0x%x ");
269312,551589887,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep1_1,P_WARNING,swLogPrintf("apmuCPSwPowerOnIntModeStep1 not call in irqmode ");
269312,551591935,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep1_2,P_VALUE,swLogPrintf("CP is powered off. Start CP Power on flow ");
269312,551592192,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep1_3,P_VALUE,swLogPrintf("ap share : 0x%x , len : 0x%x ");
269312,551596031,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep1_4,P_SIG,swLogPrintf("Cp Auto Power On After setting assist boot ");
269312,551598079,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep1_5,P_WARNING,swLogPrintf("Warning : CP Code in invalid , No code in CP Flash ");
269312,551598080,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep1_6,P_VALUE,swLogPrintf("apmuCPSwPowerOnIntModeStep1 runTime = %d cycles ");
269312,551602175,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep2_1,P_WARNING,swLogPrintf("apmuCPSwPowerOnIntModeStep2 not call in irqmode ");
269312,551602176,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep2_4,P_VALUE,swLogPrintf("apmuCPSwPowerOnIntModeStep2 runTime = %d cycles ");
269312,551606271,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep3_1,P_WARNING,swLogPrintf("apmuCPSwPowerOnIntModeStep3 not call in irqmode ");
269312,551606272,0,0,PLAT_AP,PMU,apmuCPSwPowerOnIntModeStep3_3,P_VALUE,swLogPrintf("apmuCPSwPowerOnIntModeStep3 runTime = %d cycles ");
269312,551610367,0,0,PLAT_AP,PMU,apmuCPSwPowerOn_0,P_VALUE,swLogPrintf("CP is powered off. Start CP Power on flow ");
269312,551610624,0,0,PLAT_AP,PMU,apmuCPSwPowerOn_00,P_VALUE,swLogPrintf("ap share : 0x%x , len : 0x%x ");
269312,551614463,0,0,PLAT_AP,PMU,apmuCPSwPowerOn_1,P_SIG,swLogPrintf("Cp Auto Power On After setting assist boot ");
269312,551616511,0,0,PLAT_AP,PMU,apmuSetCPFastBoot_00,P_WARNING,swLogPrintf("Warning : CP Code in invalid , No code in CP Flash ");
269312,551618559,0,0,PLAT_AP,PMU,funcTestAPSleep1_1,P_SIG,swLogPrintf("funcTestAPSleep1 Test ");
269312,551620607,0,0,PLAT_AP,PMU,funcTestAPSleep1_2,P_SIG,swLogPrintf("Ap go sleep1 ");
269312,551622655,0,0,PLAT_AP,PMU,funcTestAPSleep1_3,P_SIG,swLogPrintf("funcTestAPSleep1 sleep failed ");
269312,551624703,0,0,PLAT_AP,PMU,funcTestAPSleep1_4,P_SIG,swLogPrintf("funcTestAPSleep1 sleep success ");
269312,551626751,0,0,PLAT_AP,PMU,apmuSlpTestExtWakeupSleep2_1,P_SIG,swLogPrintf("SleepDeep Test ");
269312,551627008,0,0,PLAT_AP,PMU,apmuSlpTestExtWakeupSleep2_2,P_SIG,swLogPrintf("DeepSleep Test : bootFlg = %d , slpMode = %d ");
269312,551630847,0,0,PLAT_AP,PMU,apmuSlpTestExtWakeupSleep2_3,P_SIG,swLogPrintf("Deep Sleep failed ");
269312,551632895,0,0,PLAT_AP,PMU,apmuGetBT10MsCnt_1,P_SIG,swLogPrintf("hibCnt Wrap in small image , should go fullimage to write timeoffset ");
269312,551634943,0,0,PLAT_AP,PMU,apmuGetBT10MsCnt_2,P_SIG,swLogPrintf("hibCnt Wrap in full image , should write flash ");
269312,551636991,0,0,PLAT_AP,PMU,ApmuAonRegWR_0,P_INFO,swLogPrintf("ApmuAonRegWR! ");
269312,551639039,0,0,PLAT_AP,PMU,ApmuAonRegRecovery_0,P_INFO,swLogPrintf("ApmuAonRegRecovery! ");
269312,551641087,0,0,PLAT_AP,PMU,ApmuScDivDisable,P_SIG,swLogPrintf("set sc div ratio to 0 by sw! ");
269312,551642112,0,0,PLAT_AP,PMU,ApmuGetSleepLength_0,P_VALUE,swLogPrintf("startSc is %d , wakeupSc is %d , diviRatio is %d , load 0x%X|%d ");
269312,551643392,0,0,PLAT_AP,PMU,ApmuGetSleepLength_1,P_VALUE,swLogPrintf("sleepLength is %d , totalSleepLength is %d ( unit is ms ) ");
269312,551645184,0,0,PLAT_AP,PMU,ApmuWaitBcLdComplete,P_VALUE,swLogPrintf("BcLd triggered and curSc is %d ");
269312,551647488,0,0,PLAT_AP,PMU,ApmuFeedWtdg_1,P_VALUE,swLogPrintf("Feed Aon Watchdog , current sc = %d , WdtEn = %d ");
269312,551650304,0,0,PLAT_AP,PMU,ApmuF2sRatioAtcUpdt_40K,P_VALUE,swLogPrintf("old ratio is 0x%X , new one is 0x%X , sleepLength is %d , atcAdj is %d , ApSleepLength = %d ( / 32 ) ");
269312,551652352,0,0,PLAT_AP,PMU,ApmuF2sRatioAtcUpdt_0,P_VALUE,swLogPrintf("old ratio is 0x%X , new one is 0x%X , sleepLength is %d , atcAdj is %d , ApSleepLength = %d ( / 32 ) ");
269312,551653888,0,0,PLAT_AP,PMU,ApmuBfLtchPreProc_0,P_VALUE,swLogPrintf("sleepLength is %d , f2sRatio is 0x%X , scCnt is %d ");
269312,551656704,0,0,PLAT_AP,PMU,ApmuBfLtchPreProc_1,P_VALUE,swLogPrintf("scDiv is %d , scMask is 0x%X , deltaBc 0x%X|%d , btSysTime 0x%X|%d ");
269312,551657728,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_1,P_WARNING,swLogPrintf("illegal! scOfstNew2Start is %d , maxSleepLen is %d ");
269312,551659520,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_2,P_WARNING,swLogPrintf("bcLd very near or past! scOfstNew2Bcld is %d ");
269312,551662336,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_3,P_VALUE,swLogPrintf("currSc is %d , scDiff = %d , bcLd 0x%X|%d ");
269312,551663872,0,0,PLAT_AP,PMU,ApmuUnschdWakeupProc_4,P_WARNING,swLogPrintf("illegal! RTC wakeup missed! currSc is %d , newWakeupSc is %d ");
269312,551665920,0,0,PLAT_AP,PMU,apmuScSyncDoneProc_1,P_VALUE,swLogPrintf("f2s ratio fast clock result start = %d , stop = %d ");
269312,551668480,0,0,PLAT_AP,PMU,apmuScSyncDoneProc,P_SIG,swLogPrintf("SlowClock Calibration Finished! , f2sRatio = 0x%X , fcDiff = %d , scDiff = %d , 32K freq = %d ");
269312,551670528,0,0,PLAT_AP,PMU,SC_SYNC_REQ_SLEEP_PREPROC_0,P_VALUE,swLogPrintf("startSc is %d , wakeupSc is %d , bcLd 0x%X|%d ");
269312,551672576,0,0,PLAT_AP,PMU,ApmuSniffProc,P_VALUE,swLogPrintf("newRatio is 0x%X , f2sRatio is 0x%X , sleepLength is %d , timingShift is %d ");
269312,551674112,0,0,PLAT_AP,PMU,ApmuSc40KJudge,P_VALUE,swLogPrintf("current slowCounter clock source is %d and last source is %d ( 0 : 32K , 1 : 40K ) ");
269312,551677951,0,0,PLAT_AP,PMU,ApmuSleepPreProc,P_ERROR,swLogPrintf("DCXO sleep cannot in AP hibernate! ");
269312,551678464,0,0,PLAT_AP,PMU,GetsleepLength,P_VALUE,swLogPrintf("CPSleepLengthTotal is %d , ApSleepLength = %d ( / 32 ) , sleepLengthAdj = %d ");
269312,551682047,0,0,PLAT_AP,PMU,ApmuSleepFailPostProc,P_SIG,swLogPrintf("sleep fail prcoess enter! ");
269312,551682304,0,0,PLAT_AP,PMU,funcTestCPAssistReq_0,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551684352,0,0,PLAT_AP,PMU,funcTestCPAssistReq_1,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551686400,0,0,PLAT_AP,PMU,funcTestCPAssistReq_2,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551688448,0,0,PLAT_AP,PMU,funcTestCPAssistReq_3,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551692287,0,0,PLAT_AP,PMU,funcTestCPAssistReq_4,P_SIG,swLogPrintf("Flush out ");
269312,551692544,0,0,PLAT_AP,PMU,funcTestCPAssistReq_5,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551696383,0,0,PLAT_AP,PMU,apmuPadWakeupTest_00,P_SIG,swLogPrintf("AP Pad Wakeup Test , 6Pad , pwrkey , charge Negetive , 10 second RTC ");
269312,551696640,0,0,PLAT_AP,PMU,apmuPadWakeupTest_1,P_SIG,swLogPrintf("pad wakeup test-%d , target Sc = %d ");
269312,551700479,0,0,PLAT_AP,PMU,apmuPadWakeupTest_2,P_SIG,swLogPrintf("funcTestPadWakeupTest sleep failed ");
269312,551702527,0,0,PLAT_AP,PMU,funcTestAONDeepSlpLatch_0,P_SIG,swLogPrintf("funcTestAONDeepSlpLatch Test , default set high ");
269312,551704575,0,0,PLAT_AP,PMU,funcTestAONDeepSlpLatch_1,P_SIG,swLogPrintf("Test AON IO Level , Pad can wakeup ");
269312,551706623,0,0,PLAT_AP,PMU,funcTestAONDeepSlpLatch_2,P_SIG,swLogPrintf("funcTestPadWakeupTest sleep failed ");
269312,551708671,0,0,PLAT_AP,PMU,funcTestCacheBypass_0,P_SIG,swLogPrintf("funcTestCacheBypass , do not bypass cache ");
269312,551710719,0,0,PLAT_AP,PMU,funcTestCacheBypass_1,P_SIG,swLogPrintf("funcTestCacheBypass , cache bypass ");
269312,551712767,0,0,PLAT_AP,PMU,funcTestCacheBypass_2,P_SIG,swLogPrintf("funcTestCacheBypass , Recover , do not bypass ");
269312,551714815,0,0,PLAT_AP,PMU,funcTestHardfault_0,P_WARNING,swLogPrintf("funcTestHardfault , trigger a hardfault ");
269312,551714816,0,0,PLAT_AP,PMU,funcTestWatchDog_0,P_WARNING,swLogPrintf("funcTestWatchDog , a while loop at last , rstReason = %d ");
269312,551718911,0,0,PLAT_AP,PMU,funcTestWatchDog_1,P_WARNING,swLogPrintf("should add while loop in nmi handler ");
269312,551719168,0,0,PLAT_AP,PMU,funcTestWatchDog_2,P_WARNING,swLogPrintf("aonreg15 = 0x%x , apTimer = 0x%x , cptimer = 0 ");
269312,551723007,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_0,P_SIG,swLogPrintf("AP Force deepsleep , if cp allow ");
269312,551725055,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_1,P_SIG,swLogPrintf("CP do not allow ap deep sleep ");
269312,551727103,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_2,P_SIG,swLogPrintf("CP allow ap deep sleep ");
269312,551729151,0,0,PLAT_AP,PMU,funcTestForceDeepSlpWithCP_3,P_SIG,swLogPrintf("funcTestForceDeepSlpWithCP sleep failed ");
269312,551731199,0,0,PLAT_AP,PMU,funcTestSysMon_1,P_SIG,swLogPrintf("AP SysMon Test ");
269312,551733247,0,0,PLAT_AP,PMU,funcTestDFCSysMon_1,P_SIG,swLogPrintf("Sysmon open for DFC test ");
269312,551735295,0,0,PLAT_AP,PMU,funcTestDozeSysMon_1,P_SIG,swLogPrintf("Sysmon open for Doze test ");
269312,551737343,0,0,PLAT_AP,PMU,funcPllBypass_0,P_SIG,swLogPrintf("funcTestAPSleep1 Test ");
269312,551739391,0,0,PLAT_AP,PMU,funcPllBypass_1,P_ERROR,swLogPrintf("iso clk ref incorrect ");
269312,551741439,0,0,PLAT_AP,PMU,funcPllBypass_2,P_ERROR,swLogPrintf("iso clk pll incorrect ");
269312,551743487,0,0,PLAT_AP,PMU,funcPllBypass_3,P_SIG,swLogPrintf("Ap go sleep1 ");
269312,551745535,0,0,PLAT_AP,PMU,funcPllBypass_12,P_SIG,swLogPrintf("clk Status correct-in mcu mode ");
269312,551747583,0,0,PLAT_AP,PMU,funcPllBypass_13,P_SIG,swLogPrintf("clk Status not correct-in mcu mode ");
269312,551749631,0,0,PLAT_AP,PMU,funcPllBypass_121,P_SIG,swLogPrintf("clk Status correct-in normal mode ");
269312,551751679,0,0,PLAT_AP,PMU,funcPllBypass_131,P_SIG,swLogPrintf("clk Status not correct-in normal mode ");
269312,551753727,0,0,PLAT_AP,PMU,funcPllBypass_4,P_SIG,swLogPrintf("funcTestAPSleep1 sleep failed ");
269312,551755775,0,0,PLAT_AP,PMU,funcPllBypass_5,P_SIG,swLogPrintf("funcTestAPSleep1 sleep success ");
269312,551757823,0,0,PLAT_AP,PMU,funcPllBypass_6,P_VALUE,swLogPrintf("enter mcu mode correct ");
269312,551759871,0,0,PLAT_AP,PMU,funcPllBypass_61,P_ERROR,swLogPrintf("enter mcu mode incorrect ");
269312,551761919,0,0,PLAT_AP,PMU,funcPllBypass_62,P_VALUE,swLogPrintf("wakeup in normal mode correct ");
269312,551763967,0,0,PLAT_AP,PMU,funcPllBypass_63,P_ERROR,swLogPrintf("wakeup in normal mode incorrect ");
269312,551766015,0,0,PLAT_AP,PMU,funcPllBypass_7,P_VALUE,swLogPrintf("enter mcu mode correct ");
269312,551768063,0,0,PLAT_AP,PMU,funcPllBypass_8,P_VALUE,swLogPrintf("ison valid ");
269312,551770111,0,0,PLAT_AP,PMU,funcPllBypass_9,P_VALUE,swLogPrintf("ison invalid ");
269312,551772159,0,0,PLAT_AP,PMU,funcPllBypass_10,P_VALUE,swLogPrintf("pll force on failed ");
269312,551774207,0,0,PLAT_AP,PMU,funcPllBypass_11,P_VALUE,swLogPrintf("pll force on success ");
269312,551776255,0,0,PLAT_AP,PMU,funcPllBypass_14,P_SIG,swLogPrintf("clk Status correct after mcu mode force on pll ");
269312,551778303,0,0,PLAT_AP,PMU,funcPllBypass_15,P_SIG,swLogPrintf("clk Status not correct after mcu mode force on pll ");
269312,551778304,0,0,PLAT_AP,PMU,funcTestDFCTest_0,P_WARNING,swLogPrintf("DeltaTime when not vote = %d ");
269312,551780352,0,0,PLAT_AP,PMU,funcTestDFCTest_1,P_WARNING,swLogPrintf("DeltaTime when not vote = %d ");
269312,551784447,0,0,PLAT_AP,PMU,funcTestDFCTest_2,P_VALUE,swLogPrintf("ap clk change to 26M ");
269312,551784448,0,0,PLAT_AP,PMU,funcTestDFCTest_3,P_VALUE,swLogPrintf("Err : ap clk not change to 26M-apDFCVote = 0x%x ");
269312,551788543,0,0,PLAT_AP,PMU,funcTestDFCTest_4,P_VALUE,swLogPrintf("cp clk change to 26M ");
269312,551788544,0,0,PLAT_AP,PMU,funcTestDFCTest_5,P_VALUE,swLogPrintf("Err : cp clk not change to 26M-cpDFCVote = 0x%x ");
269312,551790592,0,0,PLAT_AP,PMU,funcTestDFCTest_6,P_WARNING,swLogPrintf("clkStatus = 0x%x ");
269312,551792640,0,0,PLAT_AP,PMU,funcTestMcuModeWakeup_1,P_WARNING,swLogPrintf("McuMode Wakeup Test , case = %d ");
269312,551794688,0,0,PLAT_AP,PMU,funcTestMcuModeWakeup_2,P_WARNING,swLogPrintf("Delay 7w in comm mode = %d ");
269312,551796736,0,0,PLAT_AP,PMU,funcTestMcuModeWakeup_4,P_WARNING,swLogPrintf("Delay 7w in mcu mode = %d ");
269312,551800831,0,0,PLAT_AP,PMU,funcTestMcuModeInActive_1,P_WARNING,swLogPrintf("McuMode Test in active ");
269312,551800832,0,0,PLAT_AP,PMU,funcTestMcuModeInActive_2,P_WARNING,swLogPrintf("Delay 7w in comm mode = %d ");
269312,551802880,0,0,PLAT_AP,PMU,funcTestMcuModeInActive_3,P_WARNING,swLogPrintf("Delay 7w in mcu mode = %d ");
269312,551804928,0,0,PLAT_AP,PMU,funcTestMcuModeInActive_4,P_WARNING,swLogPrintf("Delay 7w in comm mode = %d ");
269312,551809023,0,0,PLAT_AP,PMU,funcTestAonReadWrite_0,P_WARNING,swLogPrintf("funcTestAonReadWrite Read and write ");
269312,551811071,0,0,PLAT_AP,PMU,funcTestAonReadWrite_1,P_WARNING,swLogPrintf("funcTestAonReadWrite Test Failed ");
269312,551813119,0,0,PLAT_AP,PMU,funcTestSlowCnt_3,P_WARNING,swLogPrintf("funcTestSlowCnt Read ");
269312,551813120,0,0,PLAT_AP,PMU,funcTestSlowCnt_0,P_VALUE,swLogPrintf("slow cnt 0 = %d ");
269312,551815168,0,0,PLAT_AP,PMU,funcTestSlowCnt_1,P_VALUE,swLogPrintf("slow cnt 1 = %d ");
269312,551817216,0,0,PLAT_AP,PMU,funcTestSlowCnt_2,P_VALUE,swLogPrintf("slow cnt 2 = %d ");
269312,551821311,0,0,PLAT_AP,PMU,funcTestSlowCnt_4,P_VALUE,swLogPrintf("funcTestSlowCnt Test failed ");
269312,551823359,0,0,PLAT_AP,PMU,funcTestWakeupPinValue_0,P_WARNING,swLogPrintf("Test AP Wakeup Pin Value ");
269312,551823360,0,0,PLAT_AP,PMU,funcTestWakeupPinValue_1,P_SIG,swLogPrintf("PinValue = 0x%x ");
269312,551827455,0,0,PLAT_AP,PMU,funcTestAPCPDapWakeup_0,P_SIG,swLogPrintf("funcTestAPCPDapWakeup Test ");
269312,551829503,0,0,PLAT_AP,PMU,funcTestAPCPDapWakeup_1,P_SIG,swLogPrintf("Error : CP is already power on ");
269312,551831551,0,0,PLAT_AP,PMU,funcTestCPDapWakeup_2,P_SIG,swLogPrintf("CP Dap Wakeup Enable , connect AP Jlink to wakeup cp ");
269312,551833599,0,0,PLAT_AP,PMU,funcTestCPCPDapWakeup_0,P_SIG,swLogPrintf("funcTestCPCPDapWakeup Test ");
269312,551835647,0,0,PLAT_AP,PMU,funcTestCPCPDapWakeup_1,P_SIG,swLogPrintf("Error : CP is already power on ");
269312,551837695,0,0,PLAT_AP,PMU,funcTestCPCPDapWakeup_2,P_SIG,swLogPrintf("CP Dap Wakeup Enable , connect CP Jlink to wakeup cp ");
269312,551837696,0,0,PLAT_AP,PMU,funcTestAPSysReset_1,P_SIG,swLogPrintf("AP Arm Reset Test , rstReason = %d ");
269312,551839744,0,0,PLAT_AP,PMU,funcTestAPSysReset_3,P_SIG,swLogPrintf("Aon Reset Reason = 0x%x ");
269312,551842048,0,0,PLAT_AP,PMU,funcTestAPSysReset_4,P_WARNING,swLogPrintf("aonreg15 = 0x%x , apTimer = 0x%x ");
269312,551845887,0,0,PLAT_AP,PMU,funcTestAPSysReset_2,P_SIG,swLogPrintf("AP Arm Reseting...... ");
269312,551846912,0,0,PLAT_AP,PMU,funcTestAllReset_1,P_SIG,swLogPrintf("PorStatus = 0x%x , SwaReg = 0x%x , SwaScSel = 0x%x , SwaTrim = 0x%x , SlowCnt = %d ");
269312,551848960,0,0,PLAT_AP,PMU,funcTestAllReset_2,P_SIG,swLogPrintf("AonScReg = 0x%x , AonUPmu = 0x%x , AonMPmu = 0x%x , CpmuReg = 0x%x , LpuartDlr = 0x%x ");
269312,551850752,0,0,PLAT_AP,PMU,funcTestAllReset_3,P_SIG,swLogPrintf("ApTimer = 0x%x , CpTimer = 0x%x , bbReg = 0x%x , seqReg = 0x%x ");
269312,551852288,0,0,PLAT_AP,PMU,funcTestAllReset_4,P_SIG,swLogPrintf("ApWdt = 0x%x , CpWdt = 0x%x ");
269312,551854080,0,0,PLAT_AP,PMU,funcTestAllReset_41,P_SIG,swLogPrintf("ApSrc = 0x%x ");
269312,551857152,0,0,PLAT_AP,PMU,funcTestAllReset_5,P_SIG,swLogPrintf("PorStatus = 0x%x , SwaReg = 0x%x , SwaScSel = 0x%x , SwaTrim = 0x%x , SlowCnt = %d ");
269312,551859200,0,0,PLAT_AP,PMU,funcTestAllReset_6,P_SIG,swLogPrintf("AonScReg = 0x%x , AonUPmu = 0x%x , AonMPmu = 0x%x , CpmuReg = 0x%x , LpuartDlr = 0x%x ");
269312,551860992,0,0,PLAT_AP,PMU,funcTestAllReset_7,P_SIG,swLogPrintf("ApTimer = 0x%x , CpTimer = 0x%x , bbReg = 0x%x , seqReg = 0x%x ");
269312,551862528,0,0,PLAT_AP,PMU,funcTestAllReset_8,P_SIG,swLogPrintf("ApWdt = 0x%x , CpWdt = 0x%x ");
269312,551864320,0,0,PLAT_AP,PMU,funcTestTmuCntRead_1,P_SIG,swLogPrintf("GPR TmuMs Read = %d ");
269312,551867392,0,0,PLAT_AP,PMU,funcTestTmuCntRead_2,P_SIG,swLogPrintf("GPR Bc Read = %d , %d , %d , %d , BT = %d ");
269312,551868416,0,0,PLAT_AP,PMU,cpmuTestWatchDogReset_1,P_WARNING,swLogPrintf("chip ID = 0x%x ");
269312,551872511,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_0,P_SIG,swLogPrintf("funcTestBootOnCPFlash Test , CP XIP Init By AP ");
269312,551874559,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_1,P_SIG,swLogPrintf("Error : CP is already power on ");
269312,551876607,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_2,P_SIG,swLogPrintf("Wait CP Power On ");
269312,551878655,0,0,PLAT_AP,PMU,funcTestBootOnCPFlash_3,P_SIG,swLogPrintf("CP Power On Finish , connet CP Jlink to comfirm ");
269312,551880703,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_0,P_SIG,swLogPrintf("funcTestBootCPOnCSMB Test , by copy code to csmb and assist boot ");
269312,551882751,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_1,P_SIG,swLogPrintf("Error : CP is already power on ");
269312,551884799,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_2,P_SIG,swLogPrintf("Wait CP Power On ");
269312,551886847,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_3,P_SIG,swLogPrintf("CP Power On Finish ");
269312,551887104,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_4,P_SIG,swLogPrintf("Vector Read Back Error = 0x%x , 0x%x ");
269312,551888896,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_5,P_SIG,swLogPrintf("Code Write Err @ %d ");
269312,551890944,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_6,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551895039,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_7,P_SIG,swLogPrintf("Case pass , CP Code Run Success ");
269312,551897087,0,0,PLAT_AP,PMU,funcTestBootCPOnCSMB_8,P_SIG,swLogPrintf("Case funcTestBootCPOnCSMB Fail ");
269312,551899135,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_0,P_SIG,swLogPrintf("funcTestBootCPOnCSMB Test , by copy code to csmb and assist boot ");
269312,551901183,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_1,P_SIG,swLogPrintf("Error : CP is already power on ");
269312,551901440,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_4,P_SIG,swLogPrintf("Vector Read Back Error = 0x%x , 0x%x ");
269312,551903232,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_5,P_SIG,swLogPrintf("Code Write Err @ %d ");
269312,551905280,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_6,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551909375,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_7,P_SIG,swLogPrintf("Case pass , CP Code Run Success ");
269312,551911423,0,0,PLAT_AP,PMU,funcTestBootCPOnMSMB_8,P_SIG,swLogPrintf("Case funcTestBootCPOnMSMB Fail ");
269312,551913471,0,0,PLAT_AP,PMU,funcTestCPStatusRead_0,P_SIG,swLogPrintf("funcTestCPStatusRead , CP running to change state , AP read ");
269312,551913472,0,0,PLAT_AP,PMU,funcTestCPStatusRead_1,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551915520,0,0,PLAT_AP,PMU,funcTestCPStatusRead_2,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551918080,0,0,PLAT_AP,PMU,funcTestCPStatusRead_3,P_SIG,swLogPrintf("0x4d030064 = %x 0x4d030068 = %x 0x4d03006C = %x ");
269312,551920128,0,0,PLAT_AP,PMU,funcTestCPStatusRead_4,P_SIG,swLogPrintf("0x4d030070 = %x 0x4d030074 = %x 0x4d030078 = %x ");
269312,551923711,0,0,PLAT_AP,PMU,funcTestBootCPIPC_0,P_SIG,swLogPrintf("funcTestBootCPIPC , power on cp using ipc ");
269312,551925759,0,0,PLAT_AP,PMU,funcTestBootCPIPC_1,P_SIG,swLogPrintf("Error : CP is already power on ");
269312,551925760,0,0,PLAT_AP,PMU,funcTestBootCPIPC_2,P_SIG,swLogPrintf("CPmuStatus = 0x%x ");
269312,551927808,0,0,PLAT_AP,PMU,funcTestBootCPIPC_3,P_SIG,swLogPrintf("CP Power On Finish , CPmuStatus = 0x%x ");
269312,551929856,0,0,PLAT_AP,PMU,funcTestAonWatchdog_00,P_SIG,swLogPrintf("Aon Reset Reason = 0x%x ");
269312,551932416,0,0,PLAT_AP,PMU,funcTestAonWatchdog_1,P_SIG,swLogPrintf("funcTestAonWatchdog , current = %d , target = %d , changed = %d ");
269312,551933952,0,0,PLAT_AP,PMU,funcTestLockupTest_1,P_SIG,swLogPrintf("funcTestLockupTest , rstReason = %d ");
269312,551936256,0,0,PLAT_AP,PMU,funcTestLockupTest_2,P_WARNING,swLogPrintf("aonreg15 = 0x%x , apTimer = 0x%x , cptimer = 0 ");
269312,551938048,0,0,PLAT_AP,PMU,funcTestSIPCTest_1,P_WARNING,swLogPrintf("AP SIPC Lock Result = %d ");
269312,551940096,0,0,PLAT_AP,PMU,funcTestSIPCTest_3,P_WARNING,swLogPrintf("Ier = 0x%x ");
269312,551944191,0,0,PLAT_AP,PMU,funcTestSIPCTest_2,P_WARNING,swLogPrintf("AP SIPC Release ");
269312,551944448,0,0,PLAT_AP,PMU,CpStatusTask_1,P_SIG,swLogPrintf("CPmuStatus = 0x%x , IntCtrl = 0x%x ");
269312,551948287,0,0,PLAT_AP,PMU,funcTestCPAPBReset_1,P_SIG,swLogPrintf("AP funcTestCPAPBReset ");
269312,551948288,0,0,PLAT_AP,PMU,funcTestCPAPBReset_2,P_SIG,swLogPrintf("Start Wait CP Set Wdt , but not start , wdtReg = 0x%x ");
269312,551950336,0,0,PLAT_AP,PMU,funcTestCPAPBReset_3,P_SIG,swLogPrintf("CP Set Wdt , Reg = 0x%x ");
269312,551954431,0,0,PLAT_AP,PMU,funcTestCPAPBReset_4,P_SIG,swLogPrintf("AP Arm Reseting...... ");
269312,551956479,0,0,PLAT_AP,PMU,RegTimeRead_0,P_VALUE,swLogPrintf("AonReg Read Err ");
269312,551956480,0,0,PLAT_AP,PMU,RegTimeRead_1,P_VALUE,swLogPrintf("AonRegRead 5000 time = 0x%x ");
269312,551958528,0,0,PLAT_AP,PMU,RegTimeRead_2,P_VALUE,swLogPrintf("mpGPRRegRead 5000 time = 0x%x ");
269312,551960576,0,0,PLAT_AP,PMU,RegTimeRead_3,P_VALUE,swLogPrintf("rmiGPRRegRead 5000 time = 0x%x ");
269312,551962624,0,0,PLAT_AP,PMU,RegTimeRead_4,P_VALUE,swLogPrintf("cpWdtRegRead 5000 time = 0x%x ");
269312,551964672,0,0,PLAT_AP,PMU,RegTimeRead_40,P_VALUE,swLogPrintf("apWdtRegRead 5000 time = 0x%x ");
269312,551966720,0,0,PLAT_AP,PMU,RegTimeRead_5,P_VALUE,swLogPrintf("msmbRegRead 5000 time = 0x%x ");
269312,551968768,0,0,PLAT_AP,PMU,RegTimeRead_6,P_VALUE,swLogPrintf("csmbRegRead 5000 time = 0x%x ");
269312,551970816,0,0,PLAT_AP,PMU,RegTimeRead_7,P_VALUE,swLogPrintf("asmbRegRead 5000 time = 0x%x ");
269312,551974911,0,0,PLAT_AP,PMU,systickTest1,P_VALUE,swLogPrintf("before smp switch , current 30M , before delay 1000 tick ");
269312,551976959,0,0,PLAT_AP,PMU,systickTest2,P_VALUE,swLogPrintf("before smp switch , current 30M , after delay 1000 tick ");
269312,551979007,0,0,PLAT_AP,PMU,systickTest3,P_VALUE,swLogPrintf("before smp switch , current 26M , before delay 1000 tick ");
269312,551981055,0,0,PLAT_AP,PMU,systickTest4,P_VALUE,swLogPrintf("before smp switch , current 26M , after delay 1000 tick ");
269312,551983103,0,0,PLAT_AP,PMU,funcHWTestSleepMode_1,P_VALUE,swLogPrintf("Start Sleep1 Test...... \r \n ");
269312,551985151,0,0,PLAT_AP,PMU,funcHWTestSleepMode_2,P_VALUE,swLogPrintf("Start Sleep2 With ASMB+CSMB Retention Test...... \r \n ");
269312,551987199,0,0,PLAT_AP,PMU,funcHWTestSleepMode_3,P_VALUE,swLogPrintf("Test Failed : Failed to Enter Sleep2 With ASMB+CSMB Retention \r \n ");
269312,551989247,0,0,PLAT_AP,PMU,funcHWTestSleepMode_4,P_VALUE,swLogPrintf("Start Sleep2 With ASMB Retention Test...... \r \n ");
269312,551991295,0,0,PLAT_AP,PMU,funcHWTestSleepMode_5,P_VALUE,swLogPrintf("Test Failed : Failed to Enter Sleep2 With ASMB Retention. \r \n ");
269312,551993343,0,0,PLAT_AP,PMU,funcHWTestSleepMode_6,P_VALUE,swLogPrintf("Start Sleep2 With ASMB+MSMB Retention Test...... \r \n ");
269312,551995391,0,0,PLAT_AP,PMU,funcHWTestSleepMode_7,P_VALUE,swLogPrintf("Test Failed : Failed to Enter Sleep2 With ASMB+MSMB Retention. \r \n ");
269312,551997439,0,0,PLAT_AP,PMU,funcHWTestSleepMode_8,P_VALUE,swLogPrintf("Start Hibernate with no retention Test...... \r \n ");
269312,551999487,0,0,PLAT_AP,PMU,funcHWTestSleepMode_9,P_VALUE,swLogPrintf("Test Failed : Failed to Enter Hibernate with no retention. \r \n ");
269312,552001535,0,0,PLAT_AP,PMU,funcHWTestSleepMode_10,P_VALUE,swLogPrintf("Start Off Test...... \r \n ");
269312,552003583,0,0,PLAT_AP,PMU,funcHWTestSleepMode_11,P_VALUE,swLogPrintf("Test Failed : Failed to Enter Off State. \r \n ");
269312,552005631,0,0,PLAT_AP,PMU,funcHWTestSleepMode_12,P_VALUE,swLogPrintf("WFI Normal IO On \r \n ");
269312,552007679,0,0,PLAT_AP,PMU,funcHWTestSleepMode_13,P_VALUE,swLogPrintf("WFI Normal IO Off \r \n ");
269312,552009727,0,0,PLAT_AP,PMU,funcHWTestSleepMode_14,P_VALUE,swLogPrintf("WFI 26M \r \n ");
269312,552011775,0,0,PLAT_AP,PMU,funcHWTestSleepMode_15,P_VALUE,swLogPrintf("WFI Mcu Mode \r \n ");
269312,552011776,0,0,PLAT_AP,PMU,AONIO_ISR_1,P_VALUE,swLogPrintf("AONIO_ISR Enter Counter = %d ");
269312,552015871,0,0,PLAT_AP,PMU,slpManSetWakeupPadCfg_1,P_WARNING,swLogPrintf("slpManSetWakeupPadCfg : Pad Num should < = WAKEUP_PAD_5 ");
269312,552017919,0,0,PLAT_AP,PMU,slpManSetWakeupPadCfg_2,P_WARNING,swLogPrintf("slpManSetWakeupPadCfg : Pull Up and Pull down at the same time is not allowed ");
269312,552019967,0,0,PLAT_AP,PMU,apmuSwitch2McuMode_0,P_SIG,swLogPrintf("Already in mcu mode ");
269312,552022015,0,0,PLAT_AP,PMU,mcuSwitch2CommMode_0,P_SIG,swLogPrintf("Already in comm mode ");
269312,552024063,0,0,PLAT_AP,PMU,mcuModeInit_0,P_SIG,swLogPrintf("Mcu Mode : Switch to Mcu Mode ");
269312,552026111,0,0,PLAT_AP,PMU,mcuModeInit_1,P_SIG,swLogPrintf("Mcu Mode : Switch to Comm Mode ");
269312,552028159,0,0,PLAT_AP,PMU,slpManStartPowerOff_0,P_SIG,swLogPrintf("Power Off Start ");
269312,552029184,0,0,PLAT_AP,PMU,slpManAonWdtFeed_1,P_VALUE,swLogPrintf("Current Systick = %u nvicEnable = 0x%x , nvicPending = 0x%x , SystickEn = 0x%x , SystickCfg = 0x%x ");
269312,552030208,0,0,PLAT_AP,PMU,slpManSetCPSleepEnable_1,P_SIG,swLogPrintf("SetCPSleepEnable = %d ");
269312,552032256,0,0,PLAT_AP,PMU,slpManRegisterPSRamInitCb_1,P_VALUE,swLogPrintf("Register PS Ram Init callback = 0x%x ");
269312,552034560,0,0,PLAT_AP,PMU,slpManRegisterPSRamInitCb_2,P_WARNING,swLogPrintf("PS Ram Init callback exist = 0x%x , but rewrite by new callback = 0x%x ");
269312,552036608,0,0,PLAT_AP,PMU,dcxoRestore,P_INFO,swLogPrintf("DCXO restore! temprPreAttach = %d , freqPPMPreAttach = %d ");
269312,552040447,0,0,PLAT_AP,PMU,cmsProcSignal_Utc,P_ERROR,swLogPrintf("SIG_CMS_UTC_TIME_DCXO_REQ UTC Read Error! ");
269312,552040704,0,0,PLAT_AP,PMU,mainTask_1,P_VALUE,swLogPrintf("APHL BootFlag = %e<APBootFlag_e> , APLL BootFlag = %e<APBootFlag_e> ");
269312,552042752,0,0,PLAT_AP,PMU,IPC0_Check,P_VALUE,swLogPrintf("XIC0 Latch = 0x%x , NVIC = 0x%x ");
269312,552044544,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_pre_0,P_WARNING,swLogPrintf("ctx stat reg %d ");
269312,552047360,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_0,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x , othwk stg 0x%x ");
269312,552049408,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_1,P_VALUE,swLogPrintf("pwr state 0x%x , bootstat 0x%x , lastwkup 0x%x , inimod 0x%x ");
269312,552050944,0,0,PLAT_AP,PMU,usblpw_wkup_or_init_2,P_VALUE,swLogPrintf("othwk stg 0x%x , proc_stat 0x%x ");
269312,552052736,0,0,PLAT_AP,PMU,chargeStatusCb_1,P_VALUE,swLogPrintf("Charge Status update = %d ");
269312,552054784,0,0,PLAT_AP,PMU,apflashXIPSize,P_VALUE,swLogPrintf("AP Flash XIP Size = 0x%x ");
269312,552056832,0,0,PLAT_AP,PMU,Pad0_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pad%d Wakeup ");
269312,552060927,0,0,PLAT_AP,PMU,ChrgPad_WakeupIntHandler_1,P_VALUE,swLogPrintf("charge Wakeup ");
269312,552062975,0,0,PLAT_AP,PMU,PwrKey_WakeupIntHandler_1,P_VALUE,swLogPrintf("Pwr key Wakeup ");
269312,552062976,0,0,PLAT_AP,PMU,GPR_rmiErrDetectIsr_1,P_WARNING,swLogPrintf("Rmi Err Detect Address = 0x%x ");
269312,552067071,0,0,PLAT_AP,PMU,apmu2PeriWFITimerExp_0,P_VALUE,swLogPrintf("apmu2PeriWFITimerExp Enter ");
269312,552067584,0,0,PLAT_AP,PMU,apmuPeriStartWFITimer_0,P_ERROR,swLogPrintf("clkRet1 = %d , clkRet2 = %d , CLKFREQ = 0x%x ");
269312,552069120,0,0,PLAT_AP,PMU,apmuPeriStartWFITimer_1,P_VALUE,swLogPrintf("apmuPeriStartWFITimer set to %u ms ");
269312,552071680,0,0,PLAT_AP,PMU,apmuPeriStartCPTimer_0,P_ERROR,swLogPrintf("clkRet1 = %d , clkRet2 = %d , CLKFREQ = 0x%x ");
269312,552073216,0,0,PLAT_AP,PMU,apmuPeriStartCPTimer_1,P_VALUE,swLogPrintf("apmuCreateModemStartTimer set to %u ms ");
269312,552075264,0,0,PLAT_AP,PMU,chargeIntHandler_1,P_VALUE,swLogPrintf("Charger Int Enter , Status Update = %d ");
269312,552077312,0,0,PLAT_AP,PMU,chargeDetectInit_1,P_VALUE,swLogPrintf("Charger Detect Init , Status Update = %d ");
269312,552081407,0,0,PLAT_AP,PMU,pwrKeySendKeyStatus_1,P_VALUE,swLogPrintf("Power Key message send error ");
269312,552083455,0,0,PLAT_AP,PMU,pwrKeySendKeyStatus_2,P_VALUE,swLogPrintf("Power Key queue not ready ");
269312,552083456,0,0,PLAT_AP,PMU,pwrKeySendKeyStatusInIsr_1,P_VALUE,swLogPrintf("Power Key message send in isr error , status = %d ");
269312,552087551,0,0,PLAT_AP,PMU,pwrKeySendKeyStatusInIsr_2,P_VALUE,swLogPrintf("Power Key queue not ready in isr ");
269312,552089599,0,0,PLAT_AP,PMU,pwrKeyQueueInit_1,P_VALUE,swLogPrintf("Power Key task queue init error ");
269312,552089600,0,0,PLAT_AP,PMU,pwrKeyInit_1,P_VALUE,swLogPrintf("Pwrkey Status = %d ");
269312,552093695,0,0,PLAT_AP,PMU,cmsProcSignal_1,P_VALUE,swLogPrintf("cmsProcSignal CP start ind ");
270336,553650432,0,0,PLAT_AP,CCIO,ADD_DEV_1,P_INFO,swLogPrintf("device ( 0x%x / %d ) is added! ");
270336,553652224,0,0,PLAT_AP,CCIO,DEL_DEV_0,P_INFO,swLogPrintf("device ( 0x%x ) is deleted! ");
270336,553656319,0,0,PLAT_AP,CCIO,DEL_DEV_1,P_SIG,swLogPrintf("no devices in the list! ");
270336,553656320,0,0,PLAT_AP,CCIO,FIND_DEV_1,P_SIG,swLogPrintf("device ( 0x%x ) is not registered! ");
270336,553658368,0,0,PLAT_AP,CCIO,FIND_DEV_2,P_SIG,swLogPrintf("device ( 0x%x ) is not found! ");
270336,553662463,0,0,PLAT_AP,CCIO,FIND_DEV_BY_TYPES_1,P_SIG,swLogPrintf("no device in the list! ");
270336,553662976,0,0,PLAT_AP,CCIO,FIND_DEV_BY_TYPES_2,P_SIG,swLogPrintf("device ( %d / %d / %d ) is not found! ");
270336,553666559,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPES,P_SIG,swLogPrintf("no avail device to be assigned! ");
270336,553666816,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPES_1,P_SIG,swLogPrintf("%d / %d device can be assigned ");
270336,553670655,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPE,P_SIG,swLogPrintf("no avail device to be assigned! ");
270336,553670912,0,0,PLAT_AP,CCIO,ASGN_DEV_BY_TYPE_1,P_INFO,swLogPrintf("%d / %d device can be assigned ");
270336,553674751,0,0,PLAT_AP,CCIO,TRAVERSE_DEV_BY_HT,P_SIG,swLogPrintf("no device in the list! ");
270336,553675520,0,0,PLAT_AP,CCIO,SET_DEV_WORK_STATE,P_SIG,swLogPrintf("device ( 0x%x ) wkState : old ( %d ) --> new ( %d ) , hwAcm ( %d ) ! ");
270336,553677056,0,0,PLAT_AP,CCIO,ADD_ENTITY_1,P_WARNING,swLogPrintf("entity ( 0x%x ) has been assigned with devices ( 0x%x ) ? ");
270336,553678848,0,0,PLAT_AP,CCIO,ADD_ENTITY_2,P_WARNING,swLogPrintf("entity ( %d ) has already been used before? ");
270336,553682943,0,0,PLAT_AP,CCIO,DEL_ENTITY_0,P_SIG,swLogPrintf("no entity in the list! ");
270336,553682944,0,0,PLAT_AP,CCIO,DEL_ENTITY_1,P_WARNING,swLogPrintf("entity ( %d ) does not exist? ");
270336,553684992,0,0,PLAT_AP,CCIO,FIND_ENTITY_1,P_SIG,swLogPrintf("warning! entity ( %d ) has no device? ");
270336,553689087,0,0,PLAT_AP,CCIO,FIND_ENTITY_BY_TYPES_1,P_SIG,swLogPrintf("no entity in the list! ");
270336,553689344,0,0,PLAT_AP,CCIO,FIND_ENTITY_BY_TYPES_2,P_SIG,swLogPrintf("entity ( %d / %d ) is not found! ");
270336,553691392,0,0,PLAT_AP,CCIO,TRY_ASGN_DEV_0,P_SIG,swLogPrintf("try assign device to entity ( %d / %d ) ... ");
270336,553693184,0,0,PLAT_AP,CCIO,TRY_ASGN_DEV_1,P_INFO,swLogPrintf("succ! device ( 0x%x ) is assigned! ");
270336,553697279,0,0,PLAT_AP,CCIO,TRY_ASGN_DEV_2,P_SIG,swLogPrintf("failed! try again later... ");
270336,553697792,0,0,PLAT_AP,CCIO,RBUF_GET_XBATCH_1,P_WARNING,swLogPrintf("rbuf ( %d ) : RxWinSz ( %d ) < minSz ( %d ) ! wait ulfc event... ");
270336,553699840,0,0,PLAT_AP,CCIO,RBUF_GET_XBATCH_3,P_VALUE,swLogPrintf("rbuf ( %d ) : rbuf->writeIdx : %d , startIdx : %d ");
270336,553703168,0,0,PLAT_AP,CCIO,RBUF_GET_XBATCH_2,P_VALUE,swLogPrintf("rbuf ( %d ) : batchCnt ( %d / %d|%d ) @sti ( %d ) , wri ( %d --> %d ) , dummy ( 0x%x ) ");
270336,553704448,0,0,PLAT_AP,CCIO,RBUF_MAPPING_NPT,P_VALUE,swLogPrintf("rbuf ( %d ) : xferCnt ( %d ) , range [ %d , %d ] , aligned ( %d ) ");
270336,553705472,0,0,PLAT_AP,CCIO,RBUF_DLVR_XBATCH,P_SIG,swLogPrintf("rbuf ( %d ) : deliver zero bytes? ");
270336,553707776,0,0,PLAT_AP,CCIO,RBUF_HANDLE_FULL_PT_3,P_INFO,swLogPrintf("rbuf ( %d ) : new ulpdu addr : %p ");
270336,553710080,0,0,PLAT_AP,CCIO,RBUF_HANDLE_FULL_PT_1,P_SIG,swLogPrintf("rbuf ( %d ) : %d bytes @sti ( %d ) shall be flushed? ");
270336,553711872,0,0,PLAT_AP,CCIO,RBUF_HANDLE_FULL_PT_2,P_WARNING,swLogPrintf("rbuf ( %d ) : %d bytes ' valid ' data in the tail? ");
270336,553713664,0,0,PLAT_AP,CCIO,RBUF_HANDLE_HALF_NPT_1,P_INFO,swLogPrintf("rbuf ( %d ) : more frNodes? ");
270336,553716480,0,0,PLAT_AP,CCIO,RBUF_HANDLE_HALF_NPT_2,P_VALUE,swLogPrintf("rbuf ( %d ) : more frames? xblkSize ( %d ) / xferSize ( %d ) @pcb ( 0x%x ) ");
270336,553717760,0,0,PLAT_AP,CCIO,RBUF_HANDLE_HALF_NPT_3,P_WARNING,swLogPrintf("rbuf ( %d ) : discard it... ");
270336,553720576,0,0,PLAT_AP,CCIO,RBUF_IS_LAST_RDI,P_VALUE,swLogPrintf("rbuf ( %d ) : vmode ( %d ) free @sti ( %d ) , rdi ( %d ) ");
270336,553722628,0,0,PLAT_AP,CCIO,RBUF_IS_NEXT_NPT_FREE,P_VALUE,swLogPrintf("rbuf ( %d ) : next @sti ( %d ) %s free ( %d refs ) ");
270336,553724928,0,0,PLAT_AP,CCIO,RBUF_ADJUST_PT_RW_ZONE,P_SIG,swLogPrintf("rbuf ( %d ) : adjust xferCnt ( %d --> %d ) , sti ( %d --> %d ) ");
270336,553726976,0,0,PLAT_AP,CCIO,RBUF_ADJUST_NPT_RW_ZONE,P_SIG,swLogPrintf("rbuf ( %d ) : adjust sti ( %d --> %d ) , rdi ( %d --> %d ) ");
270336,553728000,0,0,PLAT_AP,CCIO,RBUF_PT_DEQUEUE,P_DEBUG,swLogPrintf("rbuf ( %d ) : zero xfer? just free PT pcb node? ");
270336,553731072,0,0,PLAT_AP,CCIO,RBUF_NPT_DEQUEUE_1,P_VALUE,swLogPrintf("rbuf ( %d ) : range [ %d , %d ] free @root ( 0x%x / %d ) ");
270336,553732864,0,0,PLAT_AP,CCIO,RBUF_NPT_DEQUEUE_2,P_VALUE,swLogPrintf("rbuf ( %d ) : free @sti ( %d ) , rdi ( %d ) , refCnt ( %d ) ");
270336,553734400,0,0,PLAT_AP,CCIO,RBUF_GET,P_SIG,swLogPrintf("%d / %d rbuf node ( s ) have been used! ");
270336,553736192,0,0,PLAT_AP,CCIO,RBUF_UNGET,P_SIG,swLogPrintf("%d rbuf nodes have been used! ");
270336,553738496,0,0,PLAT_AP,CCIO,RBUF_UNGET_ULPCB,P_WARNING,swLogPrintf("rbuf ( %d ) : pcb ( 0x%x ) is a global variable? ");
270336,553740288,0,0,PLAT_AP,CCIO,RBUF_QUEUE_1,P_DEBUG,swLogPrintf("rbuf ( %d ) : zero batch , all handled before? ");
270336,553742336,0,0,PLAT_AP,CCIO,RBUF_QUEUE_2,P_DEBUG,swLogPrintf("rbuf ( %d ) : more xbatch on the way? ");
270336,553745408,0,0,PLAT_AP,CCIO,RBUF_QUEUE_3,P_VALUE,swLogPrintf("rbuf ( %d ) : next batch @sti ( %d|0x%x ) / wri ( %d ) / rdi ( %d ) ");
270336,553746944,0,0,PLAT_AP,CCIO,RBUF_DEQUEUE,P_INFO,swLogPrintf("rbuf ( %d ) : rdi up ( %d --> %d ) ");
270336,553748992,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_0,P_WARNING,swLogPrintf("rbuf ( %d ) : flush %d bytes @sti ( %d ) ? ");
270336,553750528,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_1,P_DEBUG,swLogPrintf("rbuf ( %d ) : zero batch , all handled before? ");
270336,553752832,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_2,P_WARNING,swLogPrintf("rbuf ( %d ) : %d bytes ' valid ' data in the tail? ");
270336,553754624,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_3,P_DEBUG,swLogPrintf("rbuf ( %d ) : no xfer to be flushed? ");
270336,553757184,0,0,PLAT_AP,CCIO,RBUF_SEL_FLUSH_XFER_4,P_VALUE,swLogPrintf("rbuf ( %d ) : next batch @wri ( %d ) / rdi ( %d ) ");
270336,553759488,0,0,PLAT_AP,CCIO,RBUF_START_RECV_XFER,P_SIG,swLogPrintf("rbuf ( %d ) : start batch recv @sti ( %d ) / wri ( %d ) / rdi ( %d ) ");
270336,553760768,0,0,PLAT_AP,CCIO,RBUF_SET_WKSTATE_0,P_WARNING,swLogPrintf("isSetData : %d ");
270336,553764352,0,0,PLAT_AP,CCIO,RBUF_SET_WKSTATE_1,P_SIG,swLogPrintf("rbuf ( %d ) : bmMode ( 0x%x-->0x%x ) , cctSize ( %d-->%d ) , alignVal ( %d-->%d ) ! ");
270336,553764864,0,0,PLAT_AP,CCIO,RBUF_SET_WKSTATE_2,P_WARNING,swLogPrintf("rbuf ( %d ) : set data conf err , device pulled out? ");
270336,553766912,0,0,PLAT_AP,CCIO,CDIO_RBUF_INIT,P_INFO,swLogPrintf("rbuf ( 0x%x ) has already inited! ");
270336,553768960,0,0,PLAT_AP,CCIO,CCID_DEV_PWON_0,P_SIG,swLogPrintf("ccid dev ( 0x%x ) power on! ");
270336,553771008,0,0,PLAT_AP,CCIO,CCID_DEV_PWOFF_0,P_SIG,swLogPrintf("ccid dev ( 0x%x ) power off! ");
270336,553773056,0,0,PLAT_AP,CCIO,CEIO_INPUT_ENT_1,P_WARNING,swLogPrintf("ecm ( 0x%x ) : unblock sct usb ep failure! ");
270336,553775616,0,0,PLAT_AP,CCIO,CEIO_INPUT_ENT_2,P_WARNING,swLogPrintf("ecm ( 0x%x ) : state ( %d ) is not connected! discard it ( 0x%p ) ! ");
270336,553779199,0,0,PLAT_AP,CCIO,CEIO_OUTPUT_ENT,P_WARNING,swLogPrintf("ecm media is not up! discard it... ");
270336,553779200,0,0,PLAT_AP,CCIO,CEIO_RBUF_INIT,P_INFO,swLogPrintf("rbuf ( 0x%x ) has already inited! ");
270336,553781248,0,0,PLAT_AP,CCIO,ECM_DEV_PWON_0,P_SIG,swLogPrintf("ecm dev ( 0x%x ) power on! ");
270336,553785343,0,0,PLAT_AP,CCIO,ECM_DEV_PWON_1,P_WARNING,swLogPrintf("chentStatusCb is not inited? ");
270336,553785344,0,0,PLAT_AP,CCIO,ECM_DEV_PWOFF_0,P_SIG,swLogPrintf("ecm dev ( 0x%x ) power off! ");
270336,553787392,0,0,PLAT_AP,CCIO,EUTRA_DEV_PWON,P_SIG,swLogPrintf("eutra dev ( 0x%x ) power on! ");
270336,553789440,0,0,PLAT_AP,CCIO,EUTRA_DEV_PWOFF,P_SIG,swLogPrintf("eutra dev ( 0x%x ) power off! ");
270336,553791488,0,0,PLAT_AP,CCIO,CRIO_INPUT_ENT_1,P_WARNING,swLogPrintf("rndis ( 0x%x ) : unblock sct usb ep failure! ");
270336,553794048,0,0,PLAT_AP,CCIO,CRIO_INPUT_ENT_2,P_WARNING,swLogPrintf("rndis ( 0x%x ) : state ( %d ) is not connected! discard it ( 0x%p ) ! ");
270336,553797631,0,0,PLAT_AP,CCIO,CRIO_OUTPUT_ENT,P_WARNING,swLogPrintf("rndis media is not up! discard it... ");
270336,553797632,0,0,PLAT_AP,CCIO,CRIO_RBUF_INIT,P_INFO,swLogPrintf("rbuf ( 0x%x ) has already inited! ");
270336,553799680,0,0,PLAT_AP,CCIO,RNDIS_DEV_PWON_0,P_SIG,swLogPrintf("rndis dev ( 0x%x ) power on! ");
270336,553803775,0,0,PLAT_AP,CCIO,RNDIS_DEV_PWON_1,P_WARNING,swLogPrintf("chentStatusCb is not inited? ");
270336,553803776,0,0,PLAT_AP,CCIO,RNDIS_DEV_PWOFF_0,P_SIG,swLogPrintf("rndis dev ( 0x%x ) power off! ");
270336,553805824,0,0,PLAT_AP,CCIO,CLEAR_PPP_UL_REMAINS,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : clear ppp pending ulpdu! ");
270336,553807872,0,0,PLAT_AP,CCIO,AT_ENT_INPUT_1,P_WARNING,swLogPrintf("serlEnt ( 0x%x ) : unblock sct usb ep failure! ");
270336,553809920,0,0,PLAT_AP,CCIO,AT_ENT_INPUT_2,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : special pattern ( +++ ) ! ");
270336,553812480,0,0,PLAT_AP,CCIO,AT_ENT_INPUT_3,P_WARNING,swLogPrintf("serlEnt ( 0x%x ) : malloc ( %d ) failure @bContinue ( %d ) ! ");
270336,553814016,0,0,PLAT_AP,CCIO,CLEAR_PPP_DL_REMAINS_1,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : clear ppp outdated dlpdu! ");
270336,553816064,0,0,PLAT_AP,CCIO,CLEAR_PPP_DL_REMAINS_2,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : clear ppp pending dlpdu! ");
270336,553818880,0,0,PLAT_AP,CCIO,PPPENT_INPUT_UNESC,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : fcs ( 0x%x ) error! drop %d / %d bytes! ");
270336,553820160,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_LIST_1,P_ERROR,swLogPrintf("pppEnt ( %d ) : unescape via sct failure! ");
270336,553822464,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_LIST_2,P_ERROR,swLogPrintf("pppEnt ( %d ) : dropping bad fcs packet ( 0x%x ) ! ");
270336,553825280,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_END_1,P_SIG,swLogPrintf("pppEnt ( %d ) : concat rbuf ( 0x%x / %d , 0x%x / %d ) ! ");
270336,553826816,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_END_2,P_WARNING,swLogPrintf("pppEnt ( %d ) : length ( %d ) overflows! dropping it ( 0x%x ) ! ");
270336,553828608,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_1,P_INFO,swLogPrintf("pppEnt ( %d ) : alloc ( %d ) failure! waiting ulfc evt... ");
270336,553830656,0,0,PLAT_AP,CCIO,PPPENT_SCT_INPUT_2,P_ERROR,swLogPrintf("pppEnt ( %d ) : dropping bad fcs packet ( 0x%x ) ! ");
270336,553832448,0,0,PLAT_AP,CCIO,PPPENT_INPUT_0,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : unblock sct usb ep failure! ");
270336,553835008,0,0,PLAT_AP,CCIO,PPPENT_INPUT_1,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : disconnected ( %d ) ! discard all ( 0x%p ) ! ");
270336,553836544,0,0,PLAT_AP,CCIO,PPPENT_INPUT_2,P_SIG,swLogPrintf("pppEnt ( 0x%x ) : special pattern ( +++ ) ! ");
270336,553839360,0,0,PLAT_AP,CCIO,PPPENT_OUTPUT_1,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : sessn ( 0x%x ) is lost or not in data mode ( %d ) ! discard it ( 0x%p ) ... ");
270336,553840896,0,0,PLAT_AP,CCIO,PPPENT_OUTPUT_2,P_WARNING,swLogPrintf("pppEnt ( 0x%x ) : sessn is lost , discard it ( 0x%p ) ... ");
270336,553842688,0,0,PLAT_AP,CCIO,OPAQ_ENT_INPUT,P_WARNING,swLogPrintf("serlEnt ( 0x%x ) : unblock sct usb ep failure! ");
270336,553846783,0,0,PLAT_AP,CCIO,SERL_DEV_AUDIO_RBUF1,P_INFO,swLogPrintf("audio rbuf init1 ");
270336,553848831,0,0,PLAT_AP,CCIO,SERL_DEV_AUDIO_RBUF2,P_INFO,swLogPrintf("audio rbuf init2 ");
270336,553849088,0,0,PLAT_AP,CCIO,SERL_DEV_PWON_0,P_SIG,swLogPrintf("serv ( %d ) dev ( 0x%x ) power on! ");
270336,553852927,0,0,PLAT_AP,CCIO,SERL_DEV_PWON_1,P_WARNING,swLogPrintf("chentStatusCb is not inited? ");
270336,553854975,0,0,PLAT_AP,CCIO,SERL_DEV_PWON_2,P_WARNING,swLogPrintf("chentStatusCb is not inited? ");
270336,553855232,0,0,PLAT_AP,CCIO,SERL_DEV_PWOFF_0,P_SIG,swLogPrintf("serv ( %d ) dev ( 0x%x ) power off! ");
270336,553857024,0,0,PLAT_AP,CCIO,SET_PPP_SCT_RRLC,P_SIG,swLogPrintf("ppp latest sct rrlc is : 0x%x ");
270336,553859072,0,0,PLAT_AP,CCIO,SET_PPP_SCT_RRCM,P_SIG,swLogPrintf("ppp latest sct rrcm is : 0x%x ");
270336,553863167,0,0,PLAT_AP,CCIO,INIT_AT_ENTITY,P_SIG,swLogPrintf("at entity has been already inited! ");
270336,553865215,0,0,PLAT_AP,CCIO,INIT_PPP_ENTITY_0,P_SIG,swLogPrintf("ppp entity already exists! ");
270336,553867263,0,0,PLAT_AP,CCIO,INIT_PPP_ENTITY_1,P_SIG,swLogPrintf("fatal error! ppp entity malloc failed! ");
270336,553867776,0,0,PLAT_AP,CCIO,setupchannel_0,P_WARNING,swLogPrintf("serlEnt->isChgMode = %d , chdev->bmHwAcm = %d , bmHwAcm = %d ");
270336,553870080,0,0,PLAT_AP,CCIO,SET_CHAN_MODE,P_INFO,swLogPrintf("serial ( 0x%x / %d ) chanMode : %d --> %d ");
270336,553871616,0,0,PLAT_AP,CCIO,ALT_CHAN_TYPE_1,P_WARNING,swLogPrintf("serial ( 0x%x ) : same servType ( %d ) ? ");
270336,553873920,0,0,PLAT_AP,CCIO,ALT_CHAN_TYPE_2,P_SIG,swLogPrintf("serial ( 0x%x ) servType : %d --> %d ");
270336,553875968,0,0,PLAT_AP,CCIO,TRY_ADJUST_DLFC_MEM_1,P_INFO,swLogPrintf("serlEnt ( 0x%x ) : ppp start @baud ( %d ) with DlfcMem ( %d ) \n ");
270336,553878016,0,0,PLAT_AP,CCIO,TRY_ADJUST_DLFC_MEM_2,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : adjust Dlfc MemThres ( %d --> %d ) ! \n ");
270336,553880064,0,0,PLAT_AP,CCIO,TRY_RESTORE_DLFC_MEM_1,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : restore Dlfc MemThres ( %d --> %d ) ! \n ");
270336,553881600,0,0,PLAT_AP,CCIO,usbUldpEehInit_1,P_SIG,swLogPrintf("dump outep num %d ");
270336,553883648,0,0,PLAT_AP,CCIO,eehDumpMediaPollingEp0_1,P_INFO,swLogPrintf("eehDumpMediaPollingEp0 : avoid host suspend %d ");
270336,553885696,0,0,PLAT_AP,CCIO,eehDumpMediaPollingRndisHalt_0,P_INFO,swLogPrintf("eehDumpMediaPollingRndisHalt0 : avoid host suspend %d ");
270336,553887744,0,0,PLAT_AP,CCIO,eehDumpMediaPollingRndisHalt_1,P_INFO,swLogPrintf("eehDumpMediaPollingRndisHalt1 : avoid host suspend %d ");
270336,553891839,0,0,PLAT_AP,CCIO,INIT_CUST_TXTASK,P_INFO,swLogPrintf("create cust Tx task... ");
270336,553893887,0,0,PLAT_AP,CCIO,DEINIT_CUST_TXTASK,P_INFO,swLogPrintf("destroy cust Tx task... ");
270336,553893888,0,0,PLAT_AP,CCIO,SENDTO_CUST_TXTASK,P_INFO,swLogPrintf("send msg ( 0x%x ) to cust Tx task... ");
270336,553895936,0,0,PLAT_AP,CCIO,USBD_EXEC_CUST_INSTR_1,P_INFO,swLogPrintf("recv usb cust instr ( 0x%x ) ! ");
270336,553897984,0,0,PLAT_AP,CCIO,USBD_EXEC_CUST_INSTR_2,P_ERROR,swLogPrintf("warning! unknown usb exec cust instr ( 0x%x ) ! ");
270336,553900032,0,0,PLAT_AP,CCIO,UARTD_EXEC_CUST_INSTR_1,P_INFO,swLogPrintf("recv uart cust instr ( 0x%x ) ! ");
270336,553902080,0,0,PLAT_AP,CCIO,UARTD_EXEC_CUST_INSTR_2,P_ERROR,swLogPrintf("warning! unknown uart exec cust instr ( 0x%x ) ! ");
270336,553904128,0,0,PLAT_AP,CCIO,RADIOD_EXEC_CUST_INSTR_1,P_INFO,swLogPrintf("recv radio cust instr ( 0x%x ) ! ");
270336,553906176,0,0,PLAT_AP,CCIO,RADIOD_EXEC_CUST_INSTR_2,P_ERROR,swLogPrintf("warning! unknown radio exec cust instr ( 0x%x ) ! ");
270336,553908224,0,0,PLAT_AP,CCIO,HANDLE_CUST_DEV_STATUS_1,P_INFO,swLogPrintf("handle cust DS ( 0x%x ) ! ");
270336,553910272,0,0,PLAT_AP,CCIO,HANDLE_CUST_DEV_STATUS_2,P_SIG,swLogPrintf("err! unknown cust dsFlags ( 0x%x ) ! ");
270336,553912320,0,0,PLAT_AP,CCIO,HANDLE_CUST_ENT_STATUS_1,P_INFO,swLogPrintf("handle cust ES ( 0x%x ) ! ");
270336,553914368,0,0,PLAT_AP,CCIO,HANDLE_CUST_ENT_STATUS_2,P_SIG,swLogPrintf("err! unknown cust esFlags ( 0x%x ) ! ");
270336,553916416,0,0,PLAT_AP,CCIO,HANDLE_CUST_CHAN_MSG_1,P_INFO,swLogPrintf("handle cust chanMsg ( 0x%x ) ! ");
270336,553918464,0,0,PLAT_AP,CCIO,INIT_CHAN_MSG_TBL,P_WARNING,swLogPrintf("invalid msgId ( 0x%x ) ! ");
270336,553921024,0,0,PLAT_AP,CCIO,HANDLE_DEV_ADD_0,P_SIG,swLogPrintf("device ( %d / %d / %d ) is added! ");
270336,553922560,0,0,PLAT_AP,CCIO,HANDLE_DEV_ADD_1,P_ERROR,swLogPrintf("undef device type ( %d ) ! ");
270336,553925376,0,0,PLAT_AP,CCIO,HANDLE_DEV_DEL_0,P_SIG,swLogPrintf("device ( 0x%x : %d / %d / %d ) is deleted! ");
270336,553926912,0,0,PLAT_AP,CCIO,HANDLE_RBUF_FLUSH,P_WARNING,swLogPrintf("device ( 0x%x ) : flush rbuf for flag ( 0x%x ) ... ");
270336,553928704,0,0,PLAT_AP,CCIO,HANDLE_SYS_PWOFF_1,P_ERROR,swLogPrintf("malloc dlpdu ( %d bytes ) failure! ");
270336,553930752,0,0,PLAT_AP,CCIO,HANDLE_SERL_CHG_1,P_WARNING,swLogPrintf("device ( 0x%x ) : change serial config err! ");
270336,553933056,0,0,PLAT_AP,CCIO,HANDLE_SERL_STATE_1,P_WARNING,swLogPrintf("device ( 0x%x ) : unknown serial state ( %d ) ! ");
270336,553935360,0,0,PLAT_AP,CCIO,HANDLE_AUTO_BAUD_1,P_SIG,swLogPrintf("device ( 0x%x ) detected baud : %d , config : %d ");
270336,553937665,0,0,PLAT_AP,CCIO,SET_ETHER_LAN_MEDIA,P_SIG,swLogPrintf("%s ( %d ) lan state : %d --> %d ");
270336,553940991,0,0,PLAT_AP,CCIO,ETHER_LAN_INIT,P_SIG,swLogPrintf("warining! fast path is not avail! ");
270336,553941761,0,0,PLAT_AP,CCIO,HANDLE_USB_STATE,P_SIG,swLogPrintf("usb is %s ( %d / %d / %d ) for i / o! ");
270336,553945087,0,0,PLAT_AP,CCIO,HANDLE_SCT_TXDONE,P_WARNING,swLogPrintf("warning! sct is still not avail!!! ");
270336,553946376,0,0,PLAT_AP,CCIO,HANDLE_WAN_NOTIF_1,P_SIG,swLogPrintf("handle wan ( 0x%x , 0x%x ) / %d notif to %s @lanstate ( e%d , p%d ) ");
270336,553947904,0,0,PLAT_AP,CCIO,HANDLE_WAN_NOTIF_2,P_WARNING,swLogPrintf("non-identical wan ( 0x%x , 0x%x ) , local ( 0x%x , 0x%x ) ");
270336,553949184,0,0,PLAT_AP,CCIO,HANDLE_DEV_OUT_XFER,P_ERROR,swLogPrintf("unspported out xferType ( %d ) ! ");
270336,553953279,0,0,PLAT_AP,CCIO,HANDLE_RBUF_EBNA,P_SIG,swLogPrintf("warning! recv rbuf bna message... ");
270336,553955327,0,0,PLAT_AP,CCIO,HANDLE_USB_ESTATUS,P_SIG,swLogPrintf("warning! recv usb status err message... ");
270336,553957375,0,0,PLAT_AP,CCIO,HANDLE_AHB_EADDR,P_SIG,swLogPrintf("warning! recv ahb addr err message... ");
270336,553957376,0,0,PLAT_AP,CCIO,HANDLE_CMSG_0,P_WARNING,swLogPrintf("err! unknown msgId ( 0x%x ) ! ");
270336,553959424,0,0,PLAT_AP,CCIO,HANDLE_CMSG_1,P_WARNING,swLogPrintf("err! unsupported msgId ( 0x%x ) ! ");
270336,553961472,0,0,PLAT_AP,CCIO,HANDLE_CMSG_2,P_WARNING,swLogPrintf("err! unmatched msgId ( 0x%x ) ! ");
270336,553963520,0,0,PLAT_AP,CCIO,HANDLE_CMSG_3,P_VALUE,swLogPrintf("handle chan message : %e<CcioChanMessageId_e , 0xFF00FFFF> ");
270336,553965569,0,0,PLAT_AP,CCIO,INIT_CHAN_TASK_1,P_SIG,swLogPrintf("create %s task... ");
270336,553967616,0,0,PLAT_AP,CCIO,INIT_CHAN_TASK_2,P_SIG,swLogPrintf("And succ! tid ( 0x%x ) ");
270336,553969664,0,0,PLAT_AP,CCIO,DEINIT_CHAN_TASK_1,P_SIG,swLogPrintf("tid ( 0x%x ) terminated succ! ");
270336,553973759,0,0,PLAT_AP,CCIO,SEND_TO_RXTASK_0,P_WARNING,swLogPrintf("CcioRxTask is not running! ");
270336,553974016,0,0,PLAT_AP,CCIO,SEND_TO_RXTASK_1,P_VALUE,swLogPrintf("send message ( 0x%x ) to Rx ( %d ) task! ");
270336,553975809,0,0,PLAT_AP,CCIO,SEND_TO_TXTASK_0,P_WARNING,swLogPrintf("%s is not running yet! ");
270336,553978112,0,0,PLAT_AP,CCIO,SEND_TO_TXTASK_1,P_WARNING,swLogPrintf("discard Tx ( %d ) message ( 0x%x ) ! ");
270336,553980160,0,0,PLAT_AP,CCIO,SEND_TO_TXTASK_2,P_VALUE,swLogPrintf("send message ( 0x%x ) to Tx ( %d ) task! ");
270336,553983999,0,0,PLAT_AP,CCIO,CHAN_RX_TASK_1,P_SIG,swLogPrintf("rx msgq ( 1 ) is pending!!! ");
270336,553986047,0,0,PLAT_AP,CCIO,CHAN_RX_TASK_2,P_SIG,swLogPrintf("rx msgq ( 2 ) is pending!!! ");
270336,553986560,0,0,PLAT_AP,CCIO,WAIT_TX_CMPLT,P_INFO,swLogPrintf("device ( 0x%x ) : waiting for txHandle [ %d ] ( 0x%x ) ... ");
270336,553988608,0,0,PLAT_AP,CCIO,SET_TX_CMPLT,P_INFO,swLogPrintf("device ( 0x%x ) : set txHandle [ %d ] ( 0x%x ) done! ");
270336,553990144,0,0,PLAT_AP,CCIO,SET_WAN_ENT,P_INFO,swLogPrintf("set wan entity ( %d ) ");
270336,553992192,0,0,PLAT_AP,CCIO,UNSET_WAN_ENT,P_INFO,swLogPrintf("unset wan entity ( %d ) ");
270336,553994496,0,0,PLAT_AP,CCIO,SET_LAN_ENT_1,P_INFO,swLogPrintf("set lan ( %d ) entity ( 0x%x ) ");
270336,553996544,0,0,PLAT_AP,CCIO,SET_LAN_ENT_2,P_SIG,swLogPrintf("rndisEnt ( %p ) already exists! lanEntType ( 0x%x ) ");
270336,553998592,0,0,PLAT_AP,CCIO,SET_LAN_ENT_3,P_SIG,swLogPrintf("ecmEnt ( %p ) already exists! lanEntType ( 0x%x ) ");
270336,554000640,0,0,PLAT_AP,CCIO,SET_LAN_ENT_4,P_SIG,swLogPrintf("pppEnt ( %p ) already exists! lanEntType ( 0x%x ) ");
270336,554002432,0,0,PLAT_AP,CCIO,UNSET_LAN_ENT_1,P_INFO,swLogPrintf("unset lan ( %d ) entity ");
270336,554004736,0,0,PLAT_AP,CCIO,SET_DIAG_ENT,P_INFO,swLogPrintf("set diagEnt ( 0x%x ) , latest rdcm ( 0x%x ) ");
270336,554006784,0,0,PLAT_AP,CCIO,UNSET_DIAG_ENT,P_INFO,swLogPrintf("unset diagEnt ( 0x%x ) , latest rdcm ( 0x%x ) ");
270336,554008832,0,0,PLAT_AP,CCIO,SET_AUDIO_ENT,P_INFO,swLogPrintf("set audioEnt ( 0x%x ) , latest rdcm ( 0x%x ) ");
270336,554010880,0,0,PLAT_AP,CCIO,UNSET_AUDIO_ENT,P_INFO,swLogPrintf("unset audioEnt ( 0x%x ) , latest rdcm ( 0x%x ) ");
270336,554012929,0,0,PLAT_AP,CCIO,SET_RXSYNC_FLAG,P_SIG,swLogPrintf("set Rx sync flag : %s ( %d ) ");
270336,554014977,0,0,PLAT_AP,CCIO,GET_RXSYNC_FLAG,P_SIG,swLogPrintf("get Rx sync flag : %s ( %d ) ");
270336,554016768,0,0,PLAT_AP,CCIO,SETUP_CHANS_1,P_SIG,swLogPrintf("err! invalid chanType ( %d ) ! ");
270336,554018816,0,0,PLAT_AP,CCIO,SETUP_CHANS_2,P_INFO,swLogPrintf("set up channel ( %d ) ... ");
270336,554020864,0,0,PLAT_AP,CCIO,PULLDOWN_CHANS_1,P_SIG,swLogPrintf("err! invalid chanType ( %d ) ! ");
270336,554022912,0,0,PLAT_AP,CCIO,PULLDOWN_CHANS_2,P_INFO,swLogPrintf("pull down channel ( %d ) ... ");
270336,554024960,0,0,PLAT_AP,CCIO,HANDLE_DEV_STATUS_1,P_DEBUG,swLogPrintf("handle DS : %e<CcioDevStatusFlags_e> ");
270336,554027008,0,0,PLAT_AP,CCIO,HANDLE_DEV_STATUS_2,P_SIG,swLogPrintf("err! unknown dsFlags ( 0x%x ) ! ");
270336,554029056,0,0,PLAT_AP,CCIO,HANDLE_ENT_STATUS_1,P_INFO,swLogPrintf("handle ES : %e<CcioEntStatusFlags_e> ");
270336,554031104,0,0,PLAT_AP,CCIO,HANDLE_ENT_STATUS_2,P_SIG,swLogPrintf("err! unknown esFlags ( 0x%x ) ! ");
270336,554033409,0,0,PLAT_AP,CCIO,IS_ULDP_PPP_AVLB,P_SIG,swLogPrintf("uldp ppp scheme %s avail ( %d ) ");
270336,554035456,0,0,PLAT_AP,CCIO,INIT_ETHER_PROVIDER_1,P_WARNING,swLogPrintf("ether provider ( %p / %d ) has already been inited! ");
270336,554039295,0,0,PLAT_AP,CCIO,INIT_ETHER_PROVIDER_2,P_ERROR,swLogPrintf("ether provider init failure! ");
270336,554039552,0,0,PLAT_AP,CCIO,DEINIT_ETHER_PROVIDER_1,P_WARNING,swLogPrintf("ether provider ( %p / %d ) is not inited! ");
270336,554041600,0,0,PLAT_AP,CCIO,DEINIT_ETHER_PROVIDER_2,P_WARNING,swLogPrintf("ether provider ( %p / %p ) is different! ");
270336,554043904,0,0,PLAT_AP,CCIO,INIT_DIAG_PROVIDER_1,P_WARNING,swLogPrintf("unilog [ %d ] provider ( %p / %d ) has already been inited! ");
270336,554045440,0,0,PLAT_AP,CCIO,INIT_DIAG_PROVIDER_2,P_ERROR,swLogPrintf("unilog [ %d ] provider init failure! ");
270336,554048000,0,0,PLAT_AP,CCIO,DEINIT_DIAG_PROVIDER_1,P_WARNING,swLogPrintf("unilog ( %d ) provider ( %p / %d ) is not inited! ");
270336,554050048,0,0,PLAT_AP,CCIO,DEINIT_DIAG_PROVIDER_2,P_WARNING,swLogPrintf("unilog ( %d ) provider ( %p / %p ) is different! ");
270336,554051840,0,0,PLAT_AP,CCIO,INIT_OPAQ_PROVIDER_1,P_WARNING,swLogPrintf("opaq provider ( %p / %d ) has already been inited! ");
270336,554055679,0,0,PLAT_AP,CCIO,INIT_OPAQ_PROVIDER_2,P_WARNING,swLogPrintf("warning! no more available opaq providers! ");
270336,554057727,0,0,PLAT_AP,CCIO,INIT_OPAQ_PROVIDER_3,P_ERROR,swLogPrintf("opaq provider init failure! ");
270336,554059775,0,0,PLAT_AP,CCIO,DEINIT_OPAQ_PROVIDER_1,P_WARNING,swLogPrintf("opaq provider is not inited! ");
270336,554059776,0,0,PLAT_AP,CCIO,ALTER_OPAQ_PROVIDER_1,P_WARNING,swLogPrintf("newType ( %d ) is unsupported! ");
270336,554062080,0,0,PLAT_AP,CCIO,INIT_EUTRA_PROVIDER_1,P_WARNING,swLogPrintf("eutra provider ( %p / %d ) has already been inited! ");
270336,554065919,0,0,PLAT_AP,CCIO,INIT_EUTRA_PROVIDER_2,P_INFO,swLogPrintf("eutra provider init failure! ");
270336,554066176,0,0,PLAT_AP,CCIO,DEINIT_EUTRA_PROVIDER_1,P_WARNING,swLogPrintf("eutra provider ( %p / %d ) is not inited! ");
270336,554068224,0,0,PLAT_AP,CCIO,DEINIT_EUTRA_PROVIDER_2,P_WARNING,swLogPrintf("eutra provider ( %p / %p ) is different! ");
270336,554070016,0,0,PLAT_AP,CCIO,PREGET_DEV_RBUF_1,P_WARNING,swLogPrintf("unsupported rbusage ( %d ) ! ");
270336,554072064,0,0,PLAT_AP,CCIO,PREUNGET_DEV_RBUF_1,P_WARNING,swLogPrintf("unsupported rbusage ( %d ) ! ");
270336,554074112,0,0,PLAT_AP,CCIO,GET_PROVIDER_RBUF_1,P_WARNING,swLogPrintf("unsupported rbusage ( %d ) ! ");
270336,554076160,0,0,PLAT_AP,CCIO,UNGET_PROVIDER_RBUF_1,P_WARNING,swLogPrintf("unsupported rbusage ( %d ) ! ");
270336,554078208,0,0,PLAT_AP,CCIO,GET_RBUF_CCT_SIZE_1,P_WARNING,swLogPrintf("unsupported rbusage ( %d ) ! ");
270336,554080256,0,0,PLAT_AP,CCIO,i2sDevUpdateRecvXfer_1,P_DEBUG,swLogPrintf("AUDIOH : in i2s irq , before update. writeIdx = %d ");
270336,554082304,0,0,PLAT_AP,CCIO,i2sDevUpdateRecvXfer_2,P_DEBUG,swLogPrintf("AUDIOH : in i2s irq , after update. writeIdx = %d ");
270336,554084608,0,0,PLAT_AP,CCIO,i2sDevTriggNextXfer_1,P_DEBUG,swLogPrintf("AUDIOH : new WriteIdx : %d , old readIdx : %d ");
270336,554086656,0,0,PLAT_AP,CCIO,i2sDevTriggNextXfer_2,P_DEBUG,swLogPrintf("AUDIOH : xbatchFsm : %d , xferCnt : %d ");
270336,554088448,0,0,PLAT_AP,CCIO,i2sDevTriggNextXfer_3,P_DEBUG,swLogPrintf("AUDIOH : scaleSize : %d ");
270336,554090496,0,0,PLAT_AP,CCIO,i2sDevTriggNextXfer_4,P_DEBUG,swLogPrintf("AUDIOH : freeSize : %d ");
270336,554092800,0,0,PLAT_AP,CCIO,i2sDevTriggNextXfer_5,P_DEBUG,swLogPrintf("AUDIOH : i2s recv addr : %x , cfgRecvSize = %d ");
270336,554096639,0,0,PLAT_AP,CCIO,i2sDevTriggNextXfer_6,P_INFO,swLogPrintf("AUDIOH : clear devWrap->isTriggerEn = 0 ");
270336,554098687,0,0,PLAT_AP,CCIO,i2sDevTriggNextXfer_7,P_INFO,swLogPrintf("AUDIOH : set devWrap->isTriggerEn = 1 ");
270336,554100735,0,0,PLAT_AP,CCIO,i2sDevRxCb_1,P_INFO,swLogPrintf("AUDIOH : enter i2s irq ");
270336,554102783,0,0,PLAT_AP,CCIO,i2sDevTxCb_1,P_INFO,swLogPrintf("AUDIOH : enter i2s tx cb ");
270336,554102784,0,0,PLAT_AP,CCIO,i2sExecSetRecvConf_1,P_DEBUG,swLogPrintf("AUDIOH : new readIdx : %d ");
270336,554104832,0,0,PLAT_AP,CCIO,i2sExecSetRecvConf_2,P_DEBUG,swLogPrintf("AUDIOH : isTriggEn : %d ");
270336,554106880,0,0,PLAT_AP,CCIO,i2sExecSetRecvConf_3,P_DEBUG,swLogPrintf("AUDIOH : forceTrigg : %d ");
270336,554110975,0,0,PLAT_AP,CCIO,i2sExecGetRecvConf_1,P_INFO,swLogPrintf("AUDIOH : get recv conf ");
270336,554113023,0,0,PLAT_AP,CCIO,I2S_ExecSet_1,P_INFO,swLogPrintf("AUDIOH : static conf ");
270336,554115071,0,0,PLAT_AP,CCIO,i2sExecSetStaticConf_1,P_INFO,swLogPrintf("AUDIOH : i2s / codec create done ");
270336,554117119,0,0,PLAT_AP,CCIO,i2sAllDone_1,P_INFO,swLogPrintf("AUDIOH : i2s / ccio all done ");
270336,554117632,0,0,PLAT_AP,CCIO,i2sDevRapClear_1,P_DEBUG,swLogPrintf("AUDIOS : devRap.writeIdx : %d , readIdx : %d , isTriggerEn : %d ");
270336,554119168,0,0,PLAT_AP,CCIO,I2SD_OUTPUT_1,P_INFO,swLogPrintf("AUDIOP : voiceType : %d ");
270336,554121216,0,0,PLAT_AP,CCIO,I2SD_OUTPUT_2,P_INFO,swLogPrintf("AUDIOP : start speech loop play , sampleRate : %d ");
270336,554125311,0,0,PLAT_AP,CCIO,I2SD_OUTPUT_3,P_INFO,swLogPrintf("AUDIOP : start tone loop play ");
270336,554127359,0,0,PLAT_AP,CCIO,i2sDevRecv_1,P_VALUE,swLogPrintf("AUDIOR : clean rbuf first ");
270336,554129407,0,0,PLAT_AP,CCIO,i2sDevRecv_2,P_VALUE,swLogPrintf("AUDIOR : clean ulpcb first ");
270336,554129408,0,0,PLAT_AP,CCIO,i2sDevRecv_3,P_VALUE,swLogPrintf("AUDIOR : change to 8k , trunkLength = %d ");
270336,554131456,0,0,PLAT_AP,CCIO,i2sDevRecv_4,P_VALUE,swLogPrintf("AUDIOR : change to 16k , trunkLength = %d ");
270336,554133504,0,0,PLAT_AP,CCIO,I2SD_EXEC_INSTR_1,P_DEBUG,swLogPrintf("AUDIOH : recv i2s instr : %e<CcioDevExecFlags_e> ");
270336,554137599,0,0,PLAT_AP,CCIO,i2sDevInit_1,P_INFO,swLogPrintf("AUDIOH : i2s dev init ");
270336,554139647,0,0,PLAT_AP,CCIO,I2S_CREATE_1,P_INFO,swLogPrintf("AUDIOH : create i2s device1 ");
270336,554141695,0,0,PLAT_AP,CCIO,I2SD_DESTROY_1,P_INFO,swLogPrintf("AUDIOD : destroy i2s device ");
270336,554143743,0,0,PLAT_AP,CCIO,i2sDevDeinit_2,P_VALUE,swLogPrintf("AUDIOD : clean ulpcb before deinit ");
270336,554145791,0,0,PLAT_AP,CCIO,I2SD_DESTROY_3,P_WARNING,swLogPrintf("AUDIOD : i2sd : chdevStatusCb is null? ");
270336,554147839,0,0,PLAT_AP,CCIO,i2sDevDeinit_3,P_INFO,swLogPrintf("AUDIOD : sem delete now ");
270336,554147840,0,0,PLAT_AP,CCIO,RADIOD_EXEC_INSTR_1,P_INFO,swLogPrintf("recv radio instr ( 0x%x ) ! ");
270336,554149888,0,0,PLAT_AP,CCIO,RADIOD_EXEC_INSTR_2,P_ERROR,swLogPrintf("warning! unknown radio exec instr ( %d ) ! ");
270336,554153983,0,0,PLAT_AP,CCIO,RADIOD_OUTPUT,P_INFO,swLogPrintf("send radio data to ps! ");
270336,554153984,0,0,PLAT_AP,CCIO,RADIOD_CREATE_0,P_SIG,swLogPrintf("err! cid ( %d ) overflows! ");
270336,554156032,0,0,PLAT_AP,CCIO,RADIOD_CREATE_1,P_INFO,swLogPrintf("create radio device ( %d ) ");
270336,554158080,0,0,PLAT_AP,CCIO,RADIOD_DESTROY_0,P_SIG,swLogPrintf("err! cid ( %d ) overflows! ");
270336,554160128,0,0,PLAT_AP,CCIO,RADIOD_DESTROY_1,P_INFO,swLogPrintf("destroy radio device ( %d ) ");
270336,554164223,0,0,PLAT_AP,CCIO,RADIOD_NOTIFY_DPC_0,P_SIG,swLogPrintf("warning! radio device is not working! ");
270336,554164992,0,0,PLAT_AP,CCIO,RADIOD_NOTIFY_DPC_2,P_SIG,swLogPrintf("notify fastpath ( 0x%x , 0x%x ) media ( %d ) state ( %d ) ");
270336,554168319,0,0,PLAT_AP,CCIO,RADIOD_NOTIFY_DPC_3,P_SIG,swLogPrintf("err! notify fastpath media state failure! ");
270336,554169096,0,0,PLAT_AP,CCIO,RADIOD_QUERY_WAN_MEDIA,P_INFO,swLogPrintf("fastpath ( 0x%x , 0x%x ) media ( %d ) state is %s! ");
270336,554170368,0,0,PLAT_AP,CCIO,RADIOD_LAN_LINK_CHG,P_ERROR,swLogPrintf("notify change of lan ( %d ) status failure! ");
270336,554172672,0,0,PLAT_AP,CCIO,RADIOD_LAN_LINK_UP,P_ERROR,swLogPrintf("notify lan ( %d / %d ) linkup failure! ");
270336,554174720,0,0,PLAT_AP,CCIO,RADIOD_LAN_LINK_DOWN,P_ERROR,swLogPrintf("notify lan ( %d / %d ) linkdown failure! ");
270336,554176512,0,0,PLAT_AP,CCIO,USBD_NOTIFY_STATE_1,P_SIG,swLogPrintf("usbd : notify isr state ( %d ) ! ");
270336,554180607,0,0,PLAT_AP,CCIO,USBD_NOTIFY_STATE_2,P_WARNING,swLogPrintf("no usb device agent? ");
270336,554180608,0,0,PLAT_AP,CCIO,USBD_DISABLE_RTS,P_SIG,swLogPrintf("usbd ( %d ) : rts flow ctrl triggered! ");
270336,554182656,0,0,PLAT_AP,CCIO,USBD_ENABLE_RTS,P_SIG,swLogPrintf("usbd ( %d ) : rts flow ctrl released! ");
270336,554185472,0,0,PLAT_AP,CCIO,USBD_HAS_OBZP,P_SIG,swLogPrintf("xferCnt ( %d ) , wri ( %d ) , magic ( 0x%x ) , obzp ( %d ) ");
270336,554188288,0,0,PLAT_AP,CCIO,USBD_UPDATE_XFER,P_VALUE,swLogPrintf("usbd ( %d ) : xferCnt ( %d / %d / %d ) @wri ( +%d|%d --> %d ) ");
270336,554189568,0,0,PLAT_AP,CCIO,USBD_NEXT_XFER_1,P_SIG,swLogPrintf("usbd ( %d ) : avlbSize ( %d ) < avlbThres ( %d / %d ) ! waiting more... ");
270336,554192128,0,0,PLAT_AP,CCIO,USBD_NEXT_XFER_2,P_VALUE,swLogPrintf("usbd ( %d ) : next xfer @N.WR ( +%d|%d ) / N.RD ( %d ) / A.SZ ( %d ) / G.T.E ( %d ) ");
270336,554193408,0,0,PLAT_AP,CCIO,USBD_GET_RX_CONF,P_INFO,swLogPrintf("usbd ( %d ) : rxWinSize ( %d ) , xferCnt ( %d ) ");
270336,554195200,0,0,PLAT_AP,CCIO,USBD_ETH_MEDIA_STATE_1,P_SIG,swLogPrintf("rndis media state ( %d ) ind , errno ( %d ) ! ");
270336,554197248,0,0,PLAT_AP,CCIO,USBD_ETH_MEDIA_STATE_2,P_SIG,swLogPrintf("ecm media state ( %d ) ind , errno ( %d ) ! ");
270336,554199296,0,0,PLAT_AP,CCIO,USBD_ETH_MEDIA_STATE_3,P_ERROR,swLogPrintf("error! eth media ( %d ) state ( %d ) ind timeout ( 200ms ) ! ");
270336,554201344,0,0,PLAT_AP,CCIO,USBD_DCD_STATUS,P_SIG,swLogPrintf("usbd ( %d ) : set serl dcd state ( 0x%x ) ! ");
270336,554203136,0,0,PLAT_AP,CCIO,USBD_RI_DONE,P_SIG,swLogPrintf("usbd ( %d ) : ri done! ");
270336,554205952,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_1,P_SIG,swLogPrintf("usbd ( %d ) : set serl ri state ( %d * %d / %d%% ) ");
270336,554207232,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_2,P_SIG,swLogPrintf("usbd ( %d ) : restore high level ");
270336,554209280,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_3,P_ERROR,swLogPrintf("usbd ( %d ) : create ri timer error! ");
270336,554211328,0,0,PLAT_AP,CCIO,USBD_RI_STATUS_4,P_WARNING,swLogPrintf("usbd ( %d ) : ri cycleCnt > 15!!! ");
270336,554213376,0,0,PLAT_AP,CCIO,USBD_EXEC_INSTR_1,P_DEBUG,swLogPrintf("recv usb instr : %e<CcioDevExecFlags_e> ");
270336,554215424,0,0,PLAT_AP,CCIO,USBD_EXEC_INSTR_2,P_ERROR,swLogPrintf("warning! unknown usb exec instr ( 0x%x ) ! ");
270336,554217728,0,0,PLAT_AP,CCIO,USBD_OUTPUT_0,P_WARNING,swLogPrintf("usbd ( %d ) : disabled! discard all dlpdu ( 0x%x ) ... ");
270336,554219776,0,0,PLAT_AP,CCIO,USBD_OUTPUT_3,P_ERROR,swLogPrintf("usbd ( %d ) : sct tx err ( %d ) ! discard all pending dlpdu... ");
270336,554221824,0,0,PLAT_AP,CCIO,USBD_OUTPUT_SIGNAL_1,P_ERROR,swLogPrintf("ifIdx ( %d ) is out of scope [ 0 , %d ) ! ");
270336,554223872,0,0,PLAT_AP,CCIO,USBD_OUTPUT_SIGNAL_2,P_WARNING,swLogPrintf("usbd ( %d ) : unsupported ifType-%e<UsbIfType_e>! ");
270336,554225920,0,0,PLAT_AP,CCIO,USBD_OUTPUT_SIGNAL_3,P_WARNING,swLogPrintf("usbd ( %d ) : output pstn serl state failure ( %d ) ! ");
270336,554227712,0,0,PLAT_AP,CCIO,USBD_RNDIS_EVT_INIT,P_WARNING,swLogPrintf("usbd ( %d ) : chdevStatusCb ? = NULL ");
270336,554229760,0,0,PLAT_AP,CCIO,USBD_RNDIS_EVT_DEINIT,P_WARNING,swLogPrintf("usbd ( %d ) : chdevStatusCb ? = NULL ");
270336,554232320,0,0,PLAT_AP,CCIO,USBD_CTS_EVT_1,P_INFO,swLogPrintf("usbd ( %d ) : cts state ( %d ) @epNum ( %d ) ");
270336,554234368,0,0,PLAT_AP,CCIO,USBD_CTS_EVT_2,P_SIG,swLogPrintf("usbd ( %d ) : cts state ( %d --> %d ) ");
270336,554236160,0,0,PLAT_AP,CCIO,USBD_DTR_EVT_1,P_INFO,swLogPrintf("usbd ( %d ) : dtr state ( %d ) ");
270336,554238464,0,0,PLAT_AP,CCIO,USBD_DTR_EVT_2,P_SIG,swLogPrintf("usbd ( %d ) : dtr state ( %d --> %d ) ");
270336,554240512,0,0,PLAT_AP,CCIO,USBD_CFG_OUT_XFER_0,P_DEBUG,swLogPrintf("usbd ( %d ) : cfg xfer , type : %e<UsbIfType_e> , size : %d! ");
270336,554242304,0,0,PLAT_AP,CCIO,USBD_CFG_OUT_XFER_1,P_ERROR,swLogPrintf("usbd ( %d ) : err! cfg next xfer fail , ret = %d ");
270336,554244096,0,0,PLAT_AP,CCIO,USBD_CREATE_0,P_WARNING,swLogPrintf("err! usbIfIdx ( %d ) overflows! ");
270336,554246144,0,0,PLAT_AP,CCIO,USBD_CREATE_1,P_INFO,swLogPrintf("create usb device ( %d ) ");
270336,554248192,0,0,PLAT_AP,CCIO,USBD_CREATE_2,P_SIG,swLogPrintf("usbd ( %d ) : serve as an agent... ");
270336,554250240,0,0,PLAT_AP,CCIO,USBD_DESTROY_0,P_WARNING,swLogPrintf("err! usbIfIdx ( %d ) overflows! ");
270336,554252288,0,0,PLAT_AP,CCIO,USBD_DESTROY_1,P_INFO,swLogPrintf("destroy usb device ( %d ) ");
270336,554254336,0,0,PLAT_AP,CCIO,USBD_DESTROY_2,P_SIG,swLogPrintf("usbd ( %d ) : no more serve as an agent... ");
270336,554256384,0,0,PLAT_AP,CCIO,USBD_DESTROY_3,P_SIG,swLogPrintf("usbd ( %d ) : serve as a new agent... ");
270336,554258432,0,0,PLAT_AP,CCIO,USBD_INPUT_0,P_WARNING,swLogPrintf("usbd ( %d ) : err! idx overflows! ");
270336,554260992,0,0,PLAT_AP,CCIO,USBD_INPUT_1,P_WARNING,swLogPrintf("usbd ( %d ) : not in working state ( %d ) or not enabled ( %d ) ! ");
270336,554262528,0,0,PLAT_AP,CCIO,USBD_INPUT_2,P_SIG,swLogPrintf("usbd ( %d ) : special pattern ( +++ ) ! ");
270336,554264832,0,0,PLAT_AP,CCIO,USBD_ECM_EVT_1,P_SIG,swLogPrintf("usbd ( %d ) recv ecm event ( 0x%x ) ! ");
270336,554266624,0,0,PLAT_AP,CCIO,USBD_ECM_EVT_2,P_WARNING,swLogPrintf("usbd ( %d ) : chdevStatusCb ? = NULL ");
270336,554268672,0,0,PLAT_AP,CCIO,USBD_RNDIS_EVT,P_SIG,swLogPrintf("usbd recv rndis event ( 0x%x ) ! ");
270336,554270976,0,0,PLAT_AP,CCIO,USBD_SERL_EVT_1,P_DEBUG,swLogPrintf("usbd ( %d ) : serl request set-line-state ( 0x%x ) ! ");
270336,554272768,0,0,PLAT_AP,CCIO,USBD_SERL_EVT_2,P_ERROR,swLogPrintf("usbd ( %d ) : err! idx overflows! ");
270336,554275072,0,0,PLAT_AP,CCIO,USBD_SCT_TX_DONE_1,P_DEBUG,swLogPrintf("usb Tx done ( %d ) notif to sct , triggFlag ( %d ) ! ");
270336,554278911,0,0,PLAT_AP,CCIO,USBD_SCT_TX_DONE_2,P_WARNING,swLogPrintf("no usb device agent? ");
270336,554278912,0,0,PLAT_AP,CCIO,USBD_STATE_TO_SCT_1,P_SIG,swLogPrintf("usb state ( %d ) notif to sct! ");
270336,554283007,0,0,PLAT_AP,CCIO,USBD_STATE_TO_SCT_2,P_WARNING,swLogPrintf("no usb device agent? ");
270336,554283008,0,0,PLAT_AP,CCIO,USBD_T_EXPIRY_TO_SCT_1,P_SIG,swLogPrintf("usb timer expiry ( %d ) notif to sct! ");
270336,554287103,0,0,PLAT_AP,CCIO,USBD_T_EXPIRY_TO_SCT_2,P_WARNING,swLogPrintf("no usb device agent? ");
270336,554287104,0,0,PLAT_AP,CCIO,USBD_EP_UNBLOCK_TO_SCT_1,P_SIG,swLogPrintf("usb EP unblock ( %d ) notif to sct! ");
270336,554291199,0,0,PLAT_AP,CCIO,USBD_EP_UNBLOCK_TO_SCT_2,P_WARNING,swLogPrintf("no usb device agent? ");
270336,554291968,0,0,PLAT_AP,CCIO,USBD_TABLE_INIT_0,P_VALUE,swLogPrintf("elem_idx ( %d ) : cls_type ( %d ) , inep ( %d ) , outep ( %d ) ! ");
270336,554294016,0,0,PLAT_AP,CCIO,USBD_TABLE_INIT_1,P_VALUE,swLogPrintf("usbd ( %d ) : %e<UsbIfType_e> , inep ( %d ) , outep ( %d ) ! ");
270336,554295552,0,0,PLAT_AP,CCIO,USBD_TABLE_INIT_2,P_VALUE,swLogPrintf("And ulgInepNum ( %d ) @usbd ( %d ) ! ");
270336,554297344,0,0,PLAT_AP,CCIO,NETIF_DLPDU_OUTPUT,P_ERROR,swLogPrintf("unsupported lanType ( %d ) err! ");
270336,554299392,0,0,PLAT_AP,CCIO,NETIF_DLPDU_FAST_OUTPUT,P_ERROR,swLogPrintf("unsupported lanType ( %d ) err! ");
270336,554301440,0,0,PLAT_AP,CCIO,NETIF_DLPDU_OUTPUT_ERR,P_WARNING,swLogPrintf("dlpdu ( 0x%x ) should be null! ");
270336,554303488,0,0,PLAT_AP,CCIO,ETH_PREVIEW,P_WARNING,swLogPrintf("unsupported ether type ( 0x%x ) ");
270336,554306560,0,0,PLAT_AP,CCIO,ETH_HAS_OBZP,P_SIG,swLogPrintf("xferCnt ( %d / %d ) , magic ( 0x%x ) , obzp ( %d ) @ulpdu ( 0x%x ) ");
270336,554307841,0,0,PLAT_AP,CCIO,ETH_DATA_INPUT,P_INFO,swLogPrintf("%s ( %d ) ulpdu fast input... ");
270336,554309889,0,0,PLAT_AP,CCIO,ETH_DATA_OUTPUT_1,P_INFO,swLogPrintf("%s ( %d ) dlpdu output... ");
270336,554311937,0,0,PLAT_AP,CCIO,ETH_DATA_FAST_OUTPUT_1,P_INFO,swLogPrintf("%s ( %d ) dlpdu fast output... ");
270336,554313984,0,0,PLAT_AP,CCIO,OPAQ_ACTIVATE_CTX_1,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : opaqCid ( %d ) is activated! ");
270336,554315776,0,0,PLAT_AP,CCIO,OPAQ_ACTIVATE_CTX_2,P_WARNING,swLogPrintf("gptOpaqEntMan [ %d ] is already added to the list!! ");
270336,554318080,0,0,PLAT_AP,CCIO,OPAQ_DEACTIVATE_CTX_1,P_SIG,swLogPrintf("serlEnt ( 0x%x ) : opaqCid ( %d ) is deactivated! ");
270336,554319872,0,0,PLAT_AP,CCIO,OPAQ_DEACTIVATE_CTX_2,P_WARNING,swLogPrintf("gptOpaqEntMan [ %d ] is not found in the list!! ");
270336,554322696,0,0,PLAT_AP,CCIO,OPAQ_GET_PEND_LIST,P_INFO,swLogPrintf("opaqCid ( %d / 0x%x ) : %d %s line ( s ) in total... ");
270336,554323968,0,0,PLAT_AP,CCIO,OPAQ_DATA_INPUT,P_INFO,swLogPrintf("opaqCid ( %d ) : opaq data input... ");
270336,554326272,0,0,PLAT_AP,CCIO,OPAQ_DATA_OUTPUT_EX_1,P_ERROR,swLogPrintf("opaqCid ( %d ) : discard 0x%p for unregistration! ");
270336,554328320,0,0,PLAT_AP,CCIO,OPAQ_DATA_OUTPUT_EX_3,P_ERROR,swLogPrintf("opaqCid ( %d ) : dlpdu count ( %d ) overflows!! ");
272384,557845248,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_2,P_VALUE,swLogPrintf("CmdLen = %d , CmdFlag = %d , rc = %d , chaanId = %d ");
272384,557846529,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_3,P_SIG,swLogPrintf("Regs : %s ");
272384,557848576,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_6,P_SIG,swLogPrintf("SarAdc 1st : 0x%x ");
272384,557850625,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_4,P_SIG,swLogPrintf("duplexLoss 1st : %s ");
272384,557854719,0,0,PLAT_AP,ATCMD,atRfTestCmdCnf_5,P_SIG,swLogPrintf("Len = 0 ");
272384,557856767,0,0,PLAT_AP,ATCMD,appTriggerTau_1,P_INFO,swLogPrintf("appTriggerTau ");
272384,557858815,0,0,PLAT_AP,ATCMD,appTriggerTau_2,P_INFO,swLogPrintf("appTriggerTau done ");
272384,557860863,0,0,PLAT_AP,ATCMD,appTriggerRel_1,P_INFO,swLogPrintf("appTriggerRel ");
272384,557862911,0,0,PLAT_AP,ATCMD,appTriggerRel_2,P_INFO,swLogPrintf("appTriggerRel done ");
272384,557864959,0,0,PLAT_AP,ATCMD,appGetWifiScanInfo_info,P_INFO,swLogPrintf("appGetWifiScanInfo api ");
272384,557865472,0,0,PLAT_AP,ATCMD,appGetWifiScanInfo_warn,P_WARNING,swLogPrintf("appGetWifiScanInfo invalid Params , maxTimeOut ( %ld ) should NOT less than round ( %d ) * scanTimeOut ( %d ) * 1000 ");
273408,559941633,0,0,PLAT_AP,ATCMD_PARSER,OperatorStringToNumericPlmn_1,P_WARNING,swLogPrintf("invalid input PLMN : %s ");
273408,559943681,0,0,PLAT_AP,ATCMD_PARSER,OperatorStringToNumericPlmn_2,P_WARNING,swLogPrintf("invalid input PLMN : %s ");
274432,562040831,0,0,PLAT_AP,ATCMD_EXEC,RfAtNstCmdPreHandle_1,P_INFO,swLogPrintf("AT+ECRFNST : crc check error ");
274432,562042879,0,0,PLAT_AP,ATCMD_EXEC,RfAtNstCmdPreHandle_2,P_INFO,swLogPrintf("AT+ECRFNST : data unfinished ");
274432,562042880,0,0,PLAT_AP,ATCMD_EXEC,RfAtNstCmdPreHandle_3,P_INFO,swLogPrintf("AT+ECRFNST : ResumeTrans , tempBlockCounter = %d ");
274432,562045184,0,0,PLAT_AP,ATCMD_EXEC,RfAtTestCmd_1,P_INFO,swLogPrintf("RC32K PTEST : aabbccdd , %x , %x ");
274432,562047488,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_1,P_INFO,swLogPrintf("AT+ECRFNST : CPReturn cmdid = %d , RetV = %d , dataLen = %d ");
274432,562051071,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_2,P_INFO,swLogPrintf("AT+ECRFNST : Write selfcal table ");
274432,562051072,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_4,P_INFO,swLogPrintf("Crc Calulate and value = %d ");
274432,562055167,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspInd_3,P_INFO,swLogPrintf("AT+ECRFNST : Urc end ");
274432,562057215,0,0,PLAT_AP,ATCMD_EXEC,atRfCaliGetThermal,P_ERROR,swLogPrintf("Rf Cali Adc convert timeout ");
274432,562057728,0,0,PLAT_AP,ATCMD_EXEC,atRf32KCapCali_1,P_ERROR,swLogPrintf("32K cali Failure , scGap = %d , fcGap = %d , rf32kCtune = 0x%X ");
274432,562059776,0,0,PLAT_AP,ATCMD_EXEC,atRf32KCapCali_3,P_SIG,swLogPrintf("32K cali Success , scGap = %d , fcGap = %d , rf32kCtune = 0x%X ");
274432,562062080,0,0,PLAT_AP,ATCMD_EXEC,atRf32KCapCali_2,P_SIG,swLogPrintf("32K Cali Step = %d , val1 = %d , val2 = %d , val3 = 0x%X ");
274432,562065407,0,0,PLAT_AP,ATCMD_EXEC,ResumeTrans_1,P_ERROR,swLogPrintf("AT+ECRFNST : TRANSDATABLOCK Index error ");
274432,562065920,0,0,PLAT_AP,ATCMD_EXEC,ResumeTrans_2,P_SIG,swLogPrintf("AT+ECRFNST : Rsp dataBlockCounter = %d , datalen = %d , startPos = %d ");
274432,562069503,0,0,PLAT_AP,ATCMD_EXEC,atRfNstRspDebug_1,P_VALUE,swLogPrintf("NstRspDebug ");
274432,562069760,0,0,PLAT_AP,ATCMD_EXEC,RfOpenApiDcdcVpaCfg_1,P_INFO,swLogPrintf("dcdc vpa Cfg , %x , %x ");
274432,562071808,0,0,PLAT_AP,ATCMD_EXEC,RfOpenApiLdoFemVbatCfg_1,P_INFO,swLogPrintf("ldoFemVbat Cfg , %x , %x ");
274432,562073856,0,0,PLAT_AP,ATCMD_EXEC,smsEncodeConcatenatedSms8bit_warn_1,P_WARNING,swLogPrintf("AT CMD , UDH is illegal : maxNum : %d , seqNum : %d ");
274432,562075648,0,0,PLAT_AP,ATCMD_EXEC,smsPduEncodeUDH_warn_1,P_WARNING,swLogPrintf("UDH_IEI : %d is not support ");
274432,562077696,0,0,PLAT_AP,ATCMD_EXEC,smsPduDecodeUDH_warn_1,P_WARNING,swLogPrintf("UDH_IEI : %d is not support ");
274432,562080512,0,0,PLAT_AP,ATCMD_EXEC,smsSendTextSms_1,P_INFO,swLogPrintf("SC address Type : %d , address Length : %d , bcd [ 0 ] : %c , bcd [ 1 ] : %c ");
274432,562081792,0,0,PLAT_AP,ATCMD_EXEC,smsSendSms_warn_1,P_WARNING,swLogPrintf("AT CMD , AT+CMGC does not support TEXT mode : %d ");
277504,568330496,0,0,PLAT_AP,PS_DIAL,psDialGetPlmnCfgByImsi_1,P_WARNING,swLogPrintf("Can ' t find DialPlmnCfg for PLMN : 0x%x , 0x%x ");
277504,568332544,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsBearerActedInd_1,P_WARNING,swLogPrintf("PS DIAL , bearer type : %d not valid , cid : %d ");
277504,568334336,0,0,PLAT_AP,PS_DIAL,psDialProccCmiPsBearerDeActInd_1,P_VALUE,swLogPrintf("PS DIAL , CID : %d , deactivated. ");
277504,568338431,0,0,PLAT_AP,PS_DIAL,psDialProcCmiDevSilentResetInd_1,P_WARNING,swLogPrintf("PS Silent Reset! ");
277504,568338432,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDynBearerCtxParamCnf_1,P_WARNING,swLogPrintf("CID : %d maybe a non-ip type bearer ");
277504,568342527,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDynBearerCtxParamCnf_2,P_VALUE,swLogPrintf("PS DIAL , BEARER don ' t has valid context , maybe dedicated BR , or not acted ");
277504,568344575,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDynBearerCtxParamCnf_ded_1,P_VALUE,swLogPrintf("PS DIAL , wakeup proc , CGSCONTRDP get all activated dedicated BR ");
277504,568346623,0,0,PLAT_AP,PS_DIAL,psDialProcCmiPsReadDedBearerDynCtxParamCnf_tft_1,P_VALUE,swLogPrintf("PS DIAL , wakeup proc , CGTFTRDP get all activated TFT config ");
277504,568348671,0,0,PLAT_AP,PS_DIAL,psDialProcCmiDevSetPowerStateCnf_1,P_VALUE,swLogPrintf("PS DIAL , wakeup proc , CGCONTRDP get all activated default BR ");
277504,568350719,0,0,PLAT_AP,PS_DIAL,psDialProcCmiMmTriggerRrcRelCnf_1,P_VALUE,swLogPrintf("PS DIAL , RRC local releasing... ");
277504,568352767,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_5,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi get plmn dns fail ");
277504,568354815,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_1,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv4Dns0 fail ");
277504,568356863,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_2,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv4Dns1 fail ");
277504,568358911,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_3,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv6Dns0 fail ");
277504,568360959,0,0,PLAT_AP,PS_DIAL,psDailGetCfgDnsByUeImsi_4,P_WARNING,swLogPrintf("psDailGetCfgDnsByUeImsi parse ipv6Dns1 fail ");
277504,568361216,0,0,PLAT_AP,PS_DIAL,psDailGetPlmnPreferBandList_1,P_WARNING,swLogPrintf("Can ' t find DialPlmnCfg for PLMN : 0x%x , 0x%x , can ' t get prefer band ");
277504,568363008,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndBindCid_no_net_0,P_VALUE,swLogPrintf("PS DIAL NET , usbCtrl %d , not enable RNDIS / ECM , not need bind CID ");
277504,568365312,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndBindCid_invalid_cid_1,P_WARNING,swLogPrintf("PS DIAL NET , NETDEVCTL opt : %d , but req bind invalid CID : %d , can ' t bind ");
277504,568367104,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndBindCid_def_1,P_VALUE,swLogPrintf("PS DIAL NET , CID : %d not activated , can ' t bind ");
277504,568369408,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndBindCid_unbind_1,P_VALUE,swLogPrintf("PS DIAL NET , try to bind new CID : %d , but need to unbind old CID : %d ");
277504,568371200,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndActPdp_no_net_0,P_VALUE,swLogPrintf("PS DIAL NET , usbCtrl %d , not enable RNDIS / ECM , not need check / act bound PDP ");
277504,568373504,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndActPdp_invalid_cid_1,P_WARNING,swLogPrintf("PS DIAL NET , NETDEVCTL opt : %d , but bind invalid CID : %d ");
277504,568375296,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndActPdp_ded_2,P_WARNING,swLogPrintf("PS DIAL NET , bind CID : %d not default BR , can ' t act and bind to RNDIS / ECM ");
277504,568377344,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndActPdp_def_1,P_VALUE,swLogPrintf("PS DIAL NET , bind CID : %d , default BR already activated ");
277504,568379392,0,0,PLAT_AP,PS_DIAL,psDialNetCheckAndActPdp_act_1,P_VALUE,swLogPrintf("PS DIAl NET , get CGCONTRDP failed , try to act CID : %d ");
277504,568383487,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtl_none_0,P_VALUE,swLogPrintf("PS DIAL NET , NETDEVCTL no action need , return ");
277504,568383488,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtl_same_0,P_VALUE,swLogPrintf("PS DIAL NET , NETDEVCTL bind CID : %d , already bound before , return ");
277504,568387583,0,0,PLAT_AP,PS_DIAL,psDialNetDevCtl_laninfo_w_0,P_WARNING,swLogPrintf("PS DIAL NET , Get LANStatus failed ");
277504,568389631,0,0,PLAT_AP,PS_DIAL,psDialNetProcApplInd_unbind_1,P_VALUE,swLogPrintf("PS DIAL NET , ETH unbind , check whether need to rebind ");
277504,568389632,0,0,PLAT_AP,PS_DIAL,psDialNetAutoDialCheck_0,P_VALUE,swLogPrintf("PS DIAL NET , cancel Auto Dial Check due to usbCtrl %d ");
277504,568393727,0,0,PLAT_AP,PS_DIAL,psDialNetAutoDialCheck_2,P_VALUE,swLogPrintf("PS DIAl NET , getAllBearersCidsBasicInfo failed , report bind failure ");
277504,568394496,0,0,PLAT_AP,PS_DIAL,psDialNetInit_ethhost_1,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , ethHostAddr : %u.%u.%u.%u ");
277504,568396544,0,0,PLAT_AP,PS_DIAL,psDialNetInit_getway_1,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , ethLocalAddr : %u.%u.%u.%u ");
277504,568397824,0,0,PLAT_AP,PS_DIAL,psDialNetInit_mask_1,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , mask : %u ");
277504,568399872,0,0,PLAT_AP,PS_DIAL,psDialNetInit_dns1_1,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , dns server 2 : %u ");
277504,568401920,0,0,PLAT_AP,PS_DIAL,psDialNetInit_dns2_1,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , dns server 2 : %u ");
277504,568404736,0,0,PLAT_AP,PS_DIAL,psDialNetInit_2,P_VALUE,swLogPrintf("PS DIAL , Ethlan config , ethLocalAddr : %u.%u.%u.%u ");
277504,568406016,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_s_1,P_INFO,swLogPrintf("PS DIAL ISR , proc CP event : %e<CpPagingImgEventId> ");
277504,568408064,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_w_1,P_WARNING,swLogPrintf("PS DIAL , CMS task already created , forward the CP event : %d , to task ");
277504,568412159,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_paging_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as recv UE paging ");
277504,568414207,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_paging_2,P_WARNING,swLogPrintf("PS DIAL ISR , only need wakeup AP , as recv UE paging ");
277504,568416255,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_serving_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as serving cell measurement ");
277504,568418303,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_serving_2,P_SIG,swLogPrintf("PS DIAL ISR , only need wakeup AP , as serving cell measurement ");
277504,568420351,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_reselect_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as need cell re-selection ");
277504,568422399,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_reselect_2,P_WARNING,swLogPrintf("PS DIAL ISR , only need wakeup AP , as need cell re-selection ");
277504,568424447,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_meas_1,P_SIG,swLogPrintf("PS DIAL ISR , need wakeup AP & CP , as cell measurement event ");
277504,568426495,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_cell_meas_2,P_SIG,swLogPrintf("PS DIAL ISR , only need wakeup AP , as cell measurement event ");
277504,568426496,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingImgEventIsr_err_1,P_ERROR,swLogPrintf("PS DIAL ISR , can ' t proc CP event : %d ");
277504,568430591,0,0,PLAT_AP,PS_DIAL,cmsWakeupCheckPagingEvent_paging_s_1,P_SIG,swLogPrintf("PS DIAL , UE paging event to RRC ");
277504,568432639,0,0,PLAT_AP,PS_DIAL,psDialWakeupCheckPagingEvent_meas_s_1,P_SIG,swLogPrintf("PS DIAL , UE measure event to RRC ");
277504,568434687,0,0,PLAT_AP,PS_DIAL,psDialWakeupCheckPagingEvent_reselect_s_1,P_SIG,swLogPrintf("PS DIAL , UE re-select event to RRC ");
277504,568434688,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_s_1,P_SIG,swLogPrintf("PS DIAL , PS is ready , forward CP event : %d , to RRC ");
277504,568436736,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_paging_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as recv UE paging , ret : %d ");
277504,568438784,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_serving_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as serving cell measurement , ret : %d ");
277504,568440832,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_cell_reselect_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as need cell re-selection , ret : %d ");
277504,568442880,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_cell_meas_1,P_SIG,swLogPrintf("PS DIAL , need wakeup PS , as cell measurement event , ret : %d ");
277504,568446975,0,0,PLAT_AP,PS_DIAL,psDialProcCpPagingEventIndIsrSig_not_start_ps_1,P_SIG,swLogPrintf("PS DIAL , proc CP event , not need wake up PS ");
277504,568447232,0,0,PLAT_AP,PS_DIAL,psDialWakeupPs_value_1,P_VALUE,swLogPrintf("PS DIAL recv CMI CNF , SgId : %d , PrimId : %d , netif not recovery , still need pending ");
277504,568451071,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun0_1,P_SIG,swLogPrintf("PS DIAL , CFUN 0 power on , don ' t power on PS... ");
277504,568453119,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun4_1,P_SIG,swLogPrintf("PS DIAL , CFUN 4 power on , power on PS... ");
277504,568453120,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun1_w_1,P_WARNING,swLogPrintf("PS DIAL , unsupported poweron cfun : %d , change to CFUN 1 , power on PS... ");
277504,568457215,0,0,PLAT_AP,PS_DIAL,psDialFirstPowerOn_cfun1_s_1,P_SIG,swLogPrintf("PS DIAL , CFUN 1 power on , power on PS... ");
277504,568459263,0,0,PLAT_AP,PS_DIAL,psDialStartPs_w_1,P_WARNING,swLogPrintf("PS DIAL , PS task is ready , don ' t need to restart ");
277504,568459520,0,0,PLAT_AP,PS_DIAL,psCamCmiReq_start_1,P_SIG,swLogPrintf("PS DIAL , request PS service , sgId : %d , primId : %d , need start PS firstly ");
279552,572526591,0,0,PLAT_AP,CMS,apmuWakeupPsNoneBlock_w_1,P_WARNING,swLogPrintf("CMS , not need send signal to wake up PS , if failed enter sleep2 / HIB ");
279552,572528639,0,0,PLAT_AP,CMS,cmsStartPs_s_1,P_SIG,swLogPrintf("Call CMS SYN API to start PS... ");
279552,572530687,0,0,PLAT_AP,CMS,cmsStartPsNonBlock_s_1,P_SIG,swLogPrintf("Call CMS non-block API to start PS... ");
279552,572530688,0,0,PLAT_AP,CMS,cmsPriSynApiCall_1,P_DEBUG,swLogPrintf("SIG sent pointer : %x ");
279552,572532736,0,0,PLAT_AP,CMS,psDialWakeupPs_1,P_WARNING,swLogPrintf("PS DIAL received sig : 0x%x , while waiting for PS waking up , just enqueue ");
279552,572534784,0,0,PLAT_AP,CMS,psDialFirstPowerPs_1,P_WARNING,swLogPrintf("PS DIAL received sig : 0x%x , during first power cfun , just enqueue ");
279552,572537088,0,0,PLAT_AP,CMS,smsGsmDefaultAlphabet2Ascii_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid input pInGsm [ %d ] : 0x%x ");
279552,572539136,0,0,PLAT_AP,CMS,smsAscii2GsmDefaultAlphabet_warn_1,P_WARNING,swLogPrintf("PSIL SMS , output length ( %d ) should not exceed %d ");
279552,572541184,0,0,PLAT_AP,CMS,smsAscii2GsmDefaultAlphabet_warn_2,P_WARNING,swLogPrintf("PSIL SMS , input length ( %d ) should not exceed %d ");
279552,572543232,0,0,PLAT_AP,CMS,smsAscii2GsmDefaultAlphabet_warn_3,P_WARNING,swLogPrintf("PSIL SMS , invalid input pInGsm [ %d ] : 0x%x ");
279552,572545024,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid UCS2 length : %d ");
279552,572549119,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_2,P_WARNING,swLogPrintf("PSIL SMS , user data header length is 0 ");
279552,572551167,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_3,P_WARNING,swLogPrintf("PSIL SMS , UDH is not supported in DCS 8BIT ");
279552,572553215,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_4,P_WARNING,swLogPrintf("PSIL SMS , user data header length is 0 ");
279552,572553216,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_5,P_WARNING,swLogPrintf("PSIL SMS , length = %d , user data size should be from 0 to 140 ");
279552,572557311,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_6,P_WARNING,swLogPrintf("PSIL SMS , not valid UCS2 PDU ");
279552,572559359,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_7,P_WARNING,swLogPrintf("PSIL SMS , UDH is not supported in DCS UCS2 ");
279552,572561407,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_8,P_WARNING,swLogPrintf("PSIL SMS , user data header length is 0 ");
279552,572561408,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_9,P_WARNING,swLogPrintf("PSIL SMS , invalid codingScheme = %d ");
279552,572563456,0,0,PLAT_AP,CMS,smsMsgEncodeUserData_warn_10,P_WARNING,swLogPrintf("PSIL SMS , length = %d , user data size should be from 0 to 140 ");
279552,572565760,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_warn_1,P_WARNING,swLogPrintf("PSIL SMS , send Text SMS , length : %d > MAX : %d ");
279552,572567808,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_info_1,P_INFO,swLogPrintf("PSIL SMS , send Text SMS , length : %d , MAX : %d ");
279552,572570368,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_info_2,P_INFO,swLogPrintf("PSIL SMS , Da length : %d , offset : %d , DSC : %d , VPF : %d ");
279552,572572160,0,0,PLAT_AP,CMS,smsSubmitText2Pdu_info_3,P_INFO,swLogPrintf("PSIL SMS , enCode PDU length : %d , offset : %d , DSC : %d ");
279552,572573952,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_warn_1,P_WARNING,swLogPrintf("PSIL SMS , deliver Text SMS , length : %d is 0 , or > MAX : %d ");
279552,572576000,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_info_1,P_INFO,swLogPrintf("PSIL SMS , deliver Text SMS , length : %d , MAX : %d ");
279552,572578304,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_info_2,P_INFO,swLogPrintf("PSIL SMS , Da length : %d , offset : %d , DSC : %d ");
279552,572580352,0,0,PLAT_AP,CMS,smsDeliverText2Pdu_info_3,P_INFO,swLogPrintf("PSIL SMS , enCode PDU length : %d , offset : %d , DSC : %d ");
279552,572582656,0,0,PLAT_AP,CMS,smsSendPduSms_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid SC address in input PDU , hex vale : 0x%x , digit Length : %d , lenInHdr : %d , offset : %d ");
279552,572583936,0,0,PLAT_AP,CMS,smsWriteTextSmsToStorage_warn_1,P_WARNING,swLogPrintf("PSIL SMS , smsMsgType %d not supported ");
279552,572585984,0,0,PLAT_AP,CMS,smsWriteTextSmsToStorage_warn_2,P_WARNING,swLogPrintf("PSIL SMS , smsMsgType %d not supported ");
279552,572588032,0,0,PLAT_AP,CMS,smsWriteTextSmsToStorage_warn_3,P_WARNING,swLogPrintf("PSIL SMS , smsMemType %d not supported ");
279552,572590848,0,0,PLAT_AP,CMS,smsWritePduSmsToStorage_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid SC address in input PDU , hex vale : 0x%x , digit Length : %d , lenInHdr : %d , offset : %d ");
279552,572592128,0,0,PLAT_AP,CMS,smsWritePduSmsToStorage_warn_2,P_WARNING,swLogPrintf("PSIL SMS , smsRecMsgType %d is not supported ");
279552,572594176,0,0,PLAT_AP,CMS,smsWritePduSmsToStorage_warn_3,P_WARNING,swLogPrintf("PSIL SMS , smsMemType %d not supported ");
279552,572596224,0,0,PLAT_AP,CMS,smsSendStoredSms_warn_1,P_WARNING,swLogPrintf("PSIL SMS , TP-MTI ( %d ) is not SMS-SUBMIT ");
279552,572599040,0,0,PLAT_AP,CMS,smsSrvCenterAddrToText_1,P_INFO,swLogPrintf("SC address Type : %d , Address Len : %d , bcd [ 0 ] : %c , bcd [ 1 ] : %c ");
279552,572600320,0,0,PLAT_AP,CMS,smsSrvCenterAddrToText_2,P_INFO,swLogPrintf("smscBufLen %d is not enouth ");
279552,572602368,0,0,PLAT_AP,CMS,smsSetSrvCenterAddr_warn_1,P_WARNING,swLogPrintf("PSIL SMS , invalid UCS2 length : %d ");
279552,572606463,0,0,PLAT_AP,CMS,smsDeleteSmsStoreRecord_2,P_WARNING,swLogPrintf("PSIL SMS , read SMS storage memory failure ! ");
279552,572606976,0,0,PLAT_AP,CMS,smsDeleteSmsStoreRecord_3,P_WARNING,swLogPrintf("PSIL SMS , delete fail , input param are invalid , Del_Operat : %d , DEL_Index : %d , Del_Flag : %d ");
279552,572609024,0,0,PLAT_AP,CMS,smsPduDecodeUserData_1,P_INFO,swLogPrintf("userDataLen %d , msgParsed %d , msgBodyLen %d ");
279552,572611076,0,0,PLAT_AP,CMS,smsPduDecodeUserData_2,P_INFO,swLogPrintf("PSIL SMS , codingType : %d , out Length : %d , decodeUserData : %s ");
279552,572612864,0,0,PLAT_AP,CMS,smsGetTPUserDataSize_0,P_INFO,swLogPrintf("PSIL SMS , pTPUDLen : %d , pduDataLen : %d ");
279552,572614912,0,0,PLAT_AP,CMS,smsSubmitTpduLen_0,P_INFO,swLogPrintf("PSIL SMS , offset : %d , tpUserDataLen : %d ");
279552,572617216,0,0,PLAT_AP,CMS,SmsSumbitPduToText_1,P_INFO,swLogPrintf("SmsSubmitPduToText , FO : %d , offset : %d , VPF : %d ");
279552,572619264,0,0,PLAT_AP,CMS,SmsSubmitPduToText_2,P_INFO,swLogPrintf("PSIL SMS , PDU length : %d , offset : %d , VPF : %d ");
279552,572621568,0,0,PLAT_AP,CMS,SmsSubmitPduToText_3,P_INFO,swLogPrintf("PSIL SMS , pduLen : %d , dsc : %d , hdrpresent : %d , offset : %d ");
279552,572623104,0,0,PLAT_AP,CMS,smsDeliverTpduLen_0,P_INFO,swLogPrintf("PSIL SMS , offset : %d , tpUserDataLen : %d ");
279552,572625664,0,0,PLAT_AP,CMS,SmsDeliverPduToText_1,P_INFO,swLogPrintf("PSIL SMS , PDU length : %d , dsc : %d , hdrpresent : %d , offset : %d ");
279552,572626944,0,0,PLAT_AP,CMS,SmsSubmitRptPduToText_1,P_ERROR,swLogPrintf("PSIL SMS , PDU length is wrong : %d ");
279552,572628992,0,0,PLAT_AP,CMS,SmsSubmitRptPduToText_2,P_ERROR,swLogPrintf("PSIL SMS , PDU length is wrong : %d ");
279552,572631040,0,0,PLAT_AP,CMS,smsStateStrToInt_1,P_INFO,swLogPrintf("PSIL SMS , SMS status : %d ");
279552,572633089,0,0,PLAT_AP,CMS,smsStateIntToStr_1,P_INFO,swLogPrintf("PSIL SMS , SMS Status : %s ");
279552,572635652,0,0,PLAT_AP,CMS,smsDecodeCbsData_1,P_INFO,swLogPrintf("PSIL SMS , codingType : %d , out Length : %d , decodeUserData : %s ");
279552,572637442,0,0,PLAT_AP,CMS,smsAsciiToUcs2_1,P_INFO,swLogPrintf("PSIL SMS , iLengh : %d , pAscii : %s ");
279552,572639490,0,0,PLAT_AP,CMS,smsUcs2ToAscii_1,P_INFO,swLogPrintf("PSIL SMS , iLengh : %d , pUcs2 : %s ");
283648,580915199,0,0,PLAT_AP,CMS_PS_IL,phySetPhyInfo_start_1,P_SIG,swLogPrintf("PS PHY IF , set PHY CFG , need start PS firstly ");
283648,580915200,0,0,PLAT_AP,CMS_PS_IL,psUint8Ipv6AddrToStr_invalid_0,P_WARNING,swLogPrintf("psUint8Ipv6AddrToStr , ipv6 addrType : %d is invalid ");
283648,580917248,0,0,PLAT_AP,CMS_PS_IL,psUint8IpAddrToStr_invalid_0,P_WARNING,swLogPrintf("psUint8IpAddrToStr , addrType : %d is invalid ");
283648,580921343,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromStr_0,P_WARNING,swLogPrintf("AT PS , pCmiIp is PNULL or pIpStr is PNULL ");
283648,580921603,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromStr_w_1,P_WARNING,swLogPrintf("PS IF , can ' t decode IP addr and mask from str : %s , parsed : %s ");
283648,580924168,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromSt_num_w_1,P_WARNING,swLogPrintf("PS IF , intOffset : %d , addrNum : %d , numVal : %d , can ' t decode IP addr and mask from str : %s ");
283648,580925698,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromStr_addrNum_w_1,P_WARNING,swLogPrintf("PS IF , addr num : %d not right , can ' t decode IP addr and mask from str : %s ");
283648,580928004,0,0,PLAT_AP,CMS_PS_IL,psParseIpAddrAndMaskFromStr_mask_w_1,P_WARNING,swLogPrintf("PS IF , ip mask : %d , not right , idx : %d , can ' t decode IP addr and mask from str : %s ");
283648,580931583,0,0,PLAT_AP,CMS_PS_IL,psParsePfPortInfoFromStr_invalid_0,P_WARNING,swLogPrintf("PS IF , pPfPortInfo is NULL or pStr is NULL ");
283648,580932100,0,0,PLAT_AP,CMS_PS_IL,psParsePfPortInfoFromStr_w_1,P_WARNING,swLogPrintf("PS IF , can ' t parse port range : %d , %d from str : %s ");
283648,580935679,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_0,P_WARNING,swLogPrintf("AT PS , pTosMask is PNULL or pStr is PNULL ");
283648,580935681,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_1,P_WARNING,swLogPrintf("PS IF , can ' t parse TOS and mask from str : %s ");
283648,580937986,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_2,P_WARNING,swLogPrintf("PS IF , invalid TOS : %d , str : %s ");
283648,580939777,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_3,P_WARNING,swLogPrintf("PS IF , can ' t parse TOS from str : %s ");
283648,580942082,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_4,P_WARNING,swLogPrintf("PS IF , invalid TOS MASK : %d , str : %s ");
283648,580943873,0,0,PLAT_AP,CMS_PS_IL,psParseTosMaskFromStr_w_5,P_WARNING,swLogPrintf("PS IF , can ' t parse TOS MASK from str : %s ");
283648,580946176,0,0,PLAT_AP,CMS_PS_IL,psSendUserData_invalid_0,P_WARNING,swLogPrintf("psSendUserData , transfer str to hex , strLen : %d , hexLen : %d , Error ");
283648,580950015,0,0,PLAT_AP,CMS_PS_IL,psGetCGATTSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGACT CMD , pPsState is PNULL ");
283648,580950016,0,0,PLAT_AP,CMS_PS_IL,psGetCGATTSync_invalid_1,P_WARNING,swLogPrintf("AT PS CGACT , syn api return %d error ");
283648,580954111,0,0,PLAT_AP,CMS_PS_IL,psGetAllBearersCidsBasicInfoSync_invalid_0,P_WARNING,swLogPrintf("AT PS pCmiAllBrCidBasicInf is PNULL ");
283648,580954112,0,0,PLAT_AP,CMS_PS_IL,psGetAllBearersCidsBasicInfoSync_invalid_1,P_WARNING,swLogPrintf("AT PS syn api return %d , FAIL ");
283648,580958207,0,0,PLAT_AP,CMS_PS_IL,psSetCGAUTHSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGAUTH , pCmiSetAuthInfo is NULL ");
283648,580958208,0,0,PLAT_AP,CMS_PS_IL,psSetCGAUTHSync_invalid_1,P_WARNING,swLogPrintf("AT PS CGAUTH , syn api return %d ");
283648,580960256,0,0,PLAT_AP,CMS_PS_IL,psGetOneCGAUTHSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGAUTH , cid %d invalid or pCmiGetAuthCnf is NULL ");
283648,580962304,0,0,PLAT_AP,CMS_PS_IL,psGetOneCGAUTHSync_invalid_1,P_WARNING,swLogPrintf("AT PS CGAUTH , syn api return %d error ");
283648,580966399,0,0,PLAT_AP,CMS_PS_IL,psSetCGDCONTSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGDCONT , pCmiDefinePdpCtxReq is PNULL ");
283648,580966400,0,0,PLAT_AP,CMS_PS_IL,psSetCGDCONTSync_invalid_1,P_WARNING,swLogPrintf("AT PS CGDCONT , syn api return %d ");
283648,580968448,0,0,PLAT_AP,CMS_PS_IL,psGetOneCGDCONTSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGDCONT , cid %d invalid or pCmiGetdefinedPdpCnf is NULL ");
283648,580970496,0,0,PLAT_AP,CMS_PS_IL,psGetOneCGDCONTSync_invalid_1,P_WARNING,swLogPrintf("AT PS CGDCONT , syn api return %d ");
283648,580972544,0,0,PLAT_AP,CMS_PS_IL,psDelCGDCONTSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGDCONT , cid %d is invalid ");
283648,580974592,0,0,PLAT_AP,CMS_PS_IL,psDelCGDCONTSync_invalid_1,P_WARNING,swLogPrintf("AT PS CGDCONT , syn api return %d ");
283648,580976640,0,0,PLAT_AP,CMS_PS_IL,psGetCGCONTRDPSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGCONTRDP , CID : %d or pDynBearerCtxParamCnf NULL , invalid! ");
283648,580978688,0,0,PLAT_AP,CMS_PS_IL,psGetCGCONTRDPSync_result_0,P_WARNING,swLogPrintf("AT PS CGCONTRDP , syn api result : %d , FAIL ");
283648,580980736,0,0,PLAT_AP,CMS_PS_IL,psGetCGTFTRDPSync_invalid_0,P_WARNING,swLogPrintf("AT PS CGTFTRDP , cid %d is invalid , or pDynTftCnf is PNULL ");
283648,580982784,0,0,PLAT_AP,CMS_PS_IL,psGetCGTFTRDPSync_invalid_1,P_WARNING,swLogPrintf("AT PS CGTFTRDP , syn api return %d ");
284672,583010560,0,0,PLAT_AP,CMS_SOCK_MGR,udp_send_dns_resolve_result_len_check_1,P_ERROR,swLogPrintf("cmsSockMgrSendAsyncRequest length %u big than message body len %u ");
285696,585109503,0,0,PLAT_AP,EC_API,apIpcWakeup_0,P_SIG,swLogPrintf("Send IPC Wake up Signal ");
285696,585110016,0,0,PLAT_AP,EC_API,ApFpgaIpcIsr_0,P_SIG,swLogPrintf("msgId = %x , bFastMsg = %x , msgBodyLen = %x ");
285696,585113599,0,0,PLAT_AP,EC_API,ApFpgaIpcIsr_1,P_SIG,swLogPrintf("HandShake REQ Received! ");
285696,585115647,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone0Isr_0,P_SIG,swLogPrintf("Enter FPGA IPC ALONE0 ISR! ISR INFO WRONG ");
285696,585117695,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone0Isr_1,P_SIG,swLogPrintf("Enter FPGA IPC ALONE0 ISR! ");
285696,585119743,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone1Isr_0,P_SIG,swLogPrintf("Enter FPGA IPC ALONE1 ISR! ISR INFO WRONG ");
285696,585121791,0,0,PLAT_AP,EC_API,ApFpgaIpcAlone1Isr_1,P_SIG,swLogPrintf("Enter FPGA IPC ALONE1 ISR! ");
285696,585123839,0,0,PLAT_AP,EC_API,ApFpgaIpcMergeIsr_0,P_SIG,swLogPrintf("Enter FPGA IPC MERGE ISR! ISR INFO WRONG ");
285696,585125887,0,0,PLAT_AP,EC_API,ApFpgaIpcMergeIsr_1,P_SIG,swLogPrintf("Enter FPGA IPC MERGE ISR! ");
285696,585127935,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_0,P_SIG,swLogPrintf("AP SIPC ISR OK ");
285696,585129983,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_2,P_SIG,swLogPrintf("AP SIPC RESET OK ");
285696,585132031,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_3,P_SIG,swLogPrintf("AP SIPC RESET NOK ");
285696,585134079,0,0,PLAT_AP,EC_API,ApFpgaSipcIsr_1,P_SIG,swLogPrintf("AP SIPC ISR NOK ");
285696,585136127,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_0,P_SIG,swLogPrintf("Start IPC FGPA TEST! ");
285696,585138175,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_1,P_SIG,swLogPrintf("C2A_IPC_INIT_REQ RECEIVED ");
285696,585138176,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_2,P_SIG,swLogPrintf("Send Data to CP , caseIndex = %d \n ");
285696,585140736,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_3,P_SIG,swLogPrintf("M = %d , N = %d , X = %d ");
285696,585144319,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_4,P_SIG,swLogPrintf("RECEIVED CP DATA IND ( 1 ) ");
285696,585146367,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_5,P_SIG,swLogPrintf("RECEIVED CP DATA IND ( 2 ) ");
285696,585148415,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_6,P_SIG,swLogPrintf("RECEIVED CP DATA IND ( 3 ) ");
285696,585150463,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_7,P_SIG,swLogPrintf("SIPC Lock by AP ");
285696,585152511,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_8,P_SIG,swLogPrintf("SIPC Release by AP ");
285696,585154559,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_9,P_SIG,swLogPrintf("SIPC Release by CP ");
285696,585156607,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_10,P_SIG,swLogPrintf("SIPC SET INT ");
285696,585156608,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_11,P_SIG,swLogPrintf("Case Pass : caseIndex = %d \n ");
285696,585158656,0,0,PLAT_AP,EC_API,ApFpgaIpcTestMain_12,P_SIG,swLogPrintf("Case Fail : caseIndex = %d \n ");
285696,585160704,0,0,PLAT_AP,EC_API,appPsCmiReqBlockCallback_warn_1,P_WARNING,swLogPrintf("EC API , APP CMI request is busy , can ' t proc new , freeBitmap : 0x%x ");
285696,585163264,0,0,PLAT_AP,EC_API,psBlockProcCmiCnf_warning_1,P_WARNING,swLogPrintf("EC API , blocked psCmiReq , guard timer maybe expiried before , sgId : %d , primId : %d , subHdrId : %d ");
285696,585164800,0,0,PLAT_AP,EC_API,psBlockProcTimerExpiry_warning_1,P_WARNING,swLogPrintf("EC API , block timer expiry , but block info not exist , maybe confirmed before , subHdrId : %d ");
293888,601884928,0,0,PLAT_AP,LWIP_CORE,dns_init_1,P_WARNING,swLogPrintf("dns_init dns_query ( %u ) , dns_answer ( %u ) ");
293888,601888767,0,0,PLAT_AP,LWIP_CORE,dns_init_2,P_INFO,swLogPrintf("dns_init initializing ");
293888,601888768,0,0,PLAT_AP,LWIP_CORE,dns_clear_cache_1,P_INFO,swLogPrintf("dns_clearcache : type %u ");
293888,601890816,0,0,PLAT_AP,LWIP_CORE,dns_clear_cache_2,P_SIG,swLogPrintf("dns_clearcache : invalid type %u ");
293888,601894911,0,0,PLAT_AP,LWIP_CORE,dns_find_adpt_hib_tiny_entry_1,P_INFO,swLogPrintf("dns_find_adpt_hib_tiny_entry ");
293888,601896959,0,0,PLAT_AP,LWIP_CORE,dns_add_cache_entry_1,P_INFO,swLogPrintf("dns_add_cache_entry ");
293888,601899007,0,0,PLAT_AP,LWIP_CORE,dns_add_cache_entry_2,P_INFO,swLogPrintf("dns_add_cache_entry has timeout ");
293888,601899008,0,0,PLAT_AP,LWIP_CORE,dns_add_cache_entry_3,P_INFO,swLogPrintf("active dns entry cache timer %u ");
293888,601903103,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_1,P_INFO,swLogPrintf("dns_entry_retry_timer_handler timeout ");
293888,601905151,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,601905152,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_3,P_WARNING,swLogPrintf("invalid dns entry 0x%x ");
293888,601909247,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_4,P_INFO,swLogPrintf("dns_check_entry : timeout ");
293888,601909248,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_5,P_WARNING,swLogPrintf("dns_send returned error2 : ( %d ) ");
293888,601911552,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_6,P_INFO,swLogPrintf("active dns entry timout %u , entry 0x%x ");
293888,601915391,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_7,P_ERROR,swLogPrintf("unknown dns_table entry retry timeout invalid ");
293888,601915392,0,0,PLAT_AP,LWIP_CORE,dns_entry_retry_timer_handler_8,P_ERROR,swLogPrintf("unknown dns_table entry state %u ");
293888,601919487,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_1,P_INFO,swLogPrintf("dns_entry_cache_timer_handler timeout ");
293888,601921535,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,601923583,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_3,P_INFO,swLogPrintf("dns_check_entry : flush ");
293888,601923584,0,0,PLAT_AP,LWIP_CORE,dns_entry_cache_timer_handler_4,P_ERROR,swLogPrintf("unknown dns_table entry state %u ");
293888,601925632,0,0,PLAT_AP,LWIP_CORE,dns_lookup_1,P_INFO,swLogPrintf("dns_lookup found entry index %u ");
293888,601927936,0,0,PLAT_AP,LWIP_CORE,dns_lookup_timeout_1,P_INFO,swLogPrintf("dns_lookup has timeout entry index %u , result index %u ");
293888,601929984,0,0,PLAT_AP,LWIP_CORE,dns_lookup_timeout_2,P_INFO,swLogPrintf("dns_lookup has timeout entry index %u , result index %u ");
293888,601931776,0,0,PLAT_AP,LWIP_CORE,dns_send_1,P_INFO,swLogPrintf("dns_send dns_servers %u request ");
293888,601933824,0,0,PLAT_AP,LWIP_CORE,dns_send_2,P_ERROR,swLogPrintf("dns_send dns_servers %u request ");
293888,601936128,0,0,PLAT_AP,LWIP_CORE,dns_send_3,P_INFO,swLogPrintf("sending DNS request ID ( %d ) for name to server ( %d ) ");
293888,601937920,0,0,PLAT_AP,LWIP_CORE,dns_send_4,P_INFO,swLogPrintf("dns_send entry retry timeout %u ");
293888,601939968,0,0,PLAT_AP,LWIP_CORE,dns_send_5,P_INFO,swLogPrintf("dns_send entry retry timeout %u ");
293888,601944063,0,0,PLAT_AP,LWIP_CORE,dns_send_6,P_ERROR,swLogPrintf("dns_send entry retry timeout invalid ");
293888,601946111,0,0,PLAT_AP,LWIP_CORE,dns_call_found_2,P_INFO,swLogPrintf("invalid response ");
293888,601948159,0,0,PLAT_AP,LWIP_CORE,dns_call_found_1,P_ERROR,swLogPrintf("invalid response ");
293888,601948416,0,0,PLAT_AP,LWIP_CORE,dns_call_found_addrtype_1,P_INFO,swLogPrintf("dns table index %u , reqaddrtype %u ");
293888,601952255,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_1,P_ERROR,swLogPrintf("array index out of bounds ");
293888,601952256,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_2,P_WARNING,swLogPrintf("dns_send returned error1 : ( %d ) ");
293888,601954560,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_3,P_INFO,swLogPrintf("active dns entry retry timeout %u entry 0x%x ");
293888,601958399,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_4,P_INFO,swLogPrintf("dns_check_entry : timeout ");
293888,601958400,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_5,P_WARNING,swLogPrintf("dns_send returned error2 : ( %d ) ");
293888,601962495,0,0,PLAT_AP,LWIP_CORE,dns_check_entry_7,P_ERROR,swLogPrintf("unknown dns_table entry state ");
293888,601964543,0,0,PLAT_AP,LWIP_CORE,dns_clear_entry_1,P_ERROR,swLogPrintf("the name point is null ");
293888,601964544,0,0,PLAT_AP,LWIP_CORE,dns_clear_entry_2,P_INFO,swLogPrintf("dns_clear_entry index %u ");
293888,601968639,0,0,PLAT_AP,LWIP_CORE,dns_clear_all_entry_1,P_INFO,swLogPrintf("dns_clear_all_entry ");
293888,601970687,0,0,PLAT_AP,LWIP_CORE,dns_get_dns_server_info_1,P_WARNING,swLogPrintf("dns_get_dns_server_info invalid ");
293888,601970688,0,0,PLAT_AP,LWIP_CORE,dns_get_dns_server_info_2,P_INFO,swLogPrintf("dns_get_dns_server_info dns server index %u ");
293888,601972736,0,0,PLAT_AP,LWIP_CORE,dns_get_dns_server_info_3,P_INFO,swLogPrintf("dns_get_dns_server_info dns server number %u ");
293888,601976831,0,0,PLAT_AP,LWIP_CORE,dns_disable_all_cache_1,P_INFO,swLogPrintf("dns_disable_all_cache ");
293888,601978879,0,0,PLAT_AP,LWIP_CORE,dns_enable_all_cache_1,P_INFO,swLogPrintf("dns_disable_all_cache ");
293888,601979136,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_1,P_INFO,swLogPrintf("remove dns entry retry timer , entry index %u , max ttl %u ");
293888,601982975,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_2,P_INFO,swLogPrintf("dns_recv response = ");
293888,601982976,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_3,P_INFO,swLogPrintf("remove dns entry cache timer , entry 0x%x ");
293888,601985024,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_4,P_INFO,swLogPrintf("active dns entry cache timer %u ");
293888,601989119,0,0,PLAT_AP,LWIP_CORE,dns_correct_response_5,P_INFO,swLogPrintf("disable dns entry cache ");
293888,601991167,0,0,PLAT_AP,LWIP_CORE,dns_err_udp_1,P_WARNING,swLogPrintf("dns_err_udp invalid arg ");
293888,601991168,0,0,PLAT_AP,LWIP_CORE,dns_err_udp_2,P_INFO,swLogPrintf("remove dns entry retry timer , entry 0x%x ");
293888,601995263,0,0,PLAT_AP,LWIP_CORE,dns_err_udp_3,P_INFO,swLogPrintf("dns_err_udp dns udp pcb abort ");
293888,601997311,0,0,PLAT_AP,LWIP_CORE,dns_recv_9,P_INFO,swLogPrintf("dns_recv one packet ");
293888,601999359,0,0,PLAT_AP,LWIP_CORE,dns_recv_1,P_WARNING,swLogPrintf("dns_recv pbuf too small ");
293888,602001407,0,0,PLAT_AP,LWIP_CORE,dns_recv_2,P_INFO,swLogPrintf("dns_recv not a response ");
293888,602003455,0,0,PLAT_AP,LWIP_CORE,dns_recv_3,P_INFO,swLogPrintf("dns_recv response not match to query1 ");
293888,602005503,0,0,PLAT_AP,LWIP_CORE,dns_recv_4,P_INFO,swLogPrintf("dns_recv response not match to query2 ");
293888,602007551,0,0,PLAT_AP,LWIP_CORE,dns_recv_5,P_INFO,swLogPrintf("dns_recv response not match to query3 ");
293888,602009599,0,0,PLAT_AP,LWIP_CORE,dns_recv_6,P_INFO,swLogPrintf("dns_recv error in flags ");
293888,602011647,0,0,PLAT_AP,LWIP_CORE,dns_recv_7,P_INFO,swLogPrintf("dns_recv error in response ");
293888,602011648,0,0,PLAT_AP,LWIP_CORE,dns_recv_8,P_INFO,swLogPrintf("remove dns entry retry timer , entry 0x%x ");
293888,602015743,0,0,PLAT_AP,LWIP_CORE,dns_recv_memerr_1,P_ERROR,swLogPrintf("dns_recv memory error ");
293888,602015744,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_netif_invalid_1,P_ERROR,swLogPrintf("dns_enqueue can not find netif by cid %u ");
293888,602019839,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_1,P_INFO,swLogPrintf("dns_enqueue duplicate request ");
293888,602021887,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_2,P_INFO,swLogPrintf("dns_enqueue DNS entries table is full ");
293888,602021888,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_cahce_1,P_INFO,swLogPrintf("remove dns entry cache timer , entry 0x%x ");
293888,602025983,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_3,P_INFO,swLogPrintf("dns_enqueue DNS request entries table is full ");
293888,602025984,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_4,P_INFO,swLogPrintf("dns_enqueue use DNS entry ( %u ) ");
293888,602030079,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_5,P_WARNING,swLogPrintf("dns_enqueue failed to allocate a pcb ");
293888,602030080,0,0,PLAT_AP,LWIP_CORE,dns_enqueue_6,P_INFO,swLogPrintf("dns_enqueue use DNS pcb ( %u ) ");
293888,602034175,0,0,PLAT_AP,LWIP_CORE,dns_gethostbyname_addrtype_1,P_WARNING,swLogPrintf("dns_gethostbyname name too long to resolve ");
293888,602034176,0,0,PLAT_AP,LWIP_CORE,dns_gethostbyname_addrtype_type_1,P_INFO,swLogPrintf("dns_gethostbyname addr type %u ");
293888,602036480,0,0,PLAT_AP,LWIP_CORE,inet_cksum_pseudo_base_2,P_INFO,swLogPrintf("inet_chksum_pseudo ( ) pbuf 0x%x chain lwip_chksum ( ) = %x ");
293888,602040319,0,0,PLAT_AP,LWIP_CORE,inet_cksum_pseudo_partial_base_1,P_ERROR,swLogPrintf("delete me ");
293888,602042367,0,0,PLAT_AP,LWIP_CORE,mem_malloc_1,P_ERROR,swLogPrintf("malloc ( ) must return aligned memory ");
293888,602044415,0,0,PLAT_AP,LWIP_CORE,mem_free_1,P_ERROR,swLogPrintf("rmem = = NULL or rmem ! = MEM_ALIGN ( rmem ) ");
293888,602046463,0,0,PLAT_AP,LWIP_CORE,do_memp_malloc_pool_1,P_ERROR,swLogPrintf("memp_malloc : memp properly aligned ");
293888,602048511,0,0,PLAT_AP,LWIP_CORE,do_memp_malloc_pool_2,P_ERROR,swLogPrintf("memp_malloc : out of memory in pool ");
293888,602050559,0,0,PLAT_AP,LWIP_CORE,memp_malloc_pool_1,P_ERROR,swLogPrintf("invalid pool desc ");
293888,602052607,0,0,PLAT_AP,LWIP_CORE,memp_malloc_1,P_ERROR,swLogPrintf("memp_malloc : type < MEMP_MAX ");
293888,602052608,0,0,PLAT_AP,LWIP_CORE,memp_malloc_2,P_ERROR,swLogPrintf("memp_malloc : type %d fail ");
293888,602054912,0,0,PLAT_AP,LWIP_CORE,memp_malloc_3,P_INFO,swLogPrintf("memp_malloc : type %d , address 0x%x success ");
293888,602058751,0,0,PLAT_AP,LWIP_CORE,do_memp_free_pool_1,P_ERROR,swLogPrintf("memp_free : mem properly aligned ");
293888,602060799,0,0,PLAT_AP,LWIP_CORE,do_memp_free_pool_2,P_ERROR,swLogPrintf("memp sanity ");
293888,602062847,0,0,PLAT_AP,LWIP_CORE,memp_free_pool_1,P_ERROR,swLogPrintf("invalid pool desc ");
293888,602064895,0,0,PLAT_AP,LWIP_CORE,memp_free_1,P_ERROR,swLogPrintf("memp_free : type < MEMP_MAX ");
293888,602065152,0,0,PLAT_AP,LWIP_CORE,memp_free_3,P_INFO,swLogPrintf("memp_free : type %d , address 0x%x ");
293888,602067200,0,0,PLAT_AP,LWIP_CORE,memp_free_2,P_INFO,swLogPrintf("memp_free : type %d , address 0x%x success ");
293888,602071039,0,0,PLAT_AP,LWIP_CORE,netif_add_1,P_ERROR,swLogPrintf("No init function given ");
293888,602071808,0,0,PLAT_AP,LWIP_CORE,netif_add_2,P_INFO,swLogPrintf("netif 0x%x added list 0x%x interface %c%u IP ");
293888,602073600,0,0,PLAT_AP,LWIP_CORE,netif_add_3,P_INFO,swLogPrintf("netif 0x%x added list interface %c%u IP complete ");
293888,602076160,0,0,PLAT_AP,LWIP_CORE,netif_remove_1,P_INFO,swLogPrintf("netif_remove : 0x%x removed from list 0x%x netif %c%u , net_type %u ");
293888,602077696,0,0,PLAT_AP,LWIP_CORE,netif_remove_2,P_INFO,swLogPrintf("netif_remove : 0x%x removed from list netif %c%u complete ");
293888,602079232,0,0,PLAT_AP,LWIP_CORE,netif_remove_type_1,P_INFO,swLogPrintf("netif_remove_type : removed netif type : %d ");
293888,602081536,0,0,PLAT_AP,LWIP_CORE,netif_find_1,P_INFO,swLogPrintf("netif_find : found %c%u ");
293888,602083584,0,0,PLAT_AP,LWIP_CORE,netif_find_2,P_INFO,swLogPrintf("netif_find : didn ' t find %c%u ");
293888,602087423,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_mode_1,P_ERROR,swLogPrintf("netif_remove_type : invalid netif point ");
293888,602087424,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_mode_2,P_INFO,swLogPrintf("netif_set_arp_reply_mode : : %d ");
293888,602091519,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_ignore_addr_1,P_ERROR,swLogPrintf("netif_set_arp_reply_ignore_addr : invalid netif point ");
293888,602093567,0,0,PLAT_AP,LWIP_CORE,netif_set_arp_reply_ignore_addr_2,P_INFO,swLogPrintf("netif_set_arp_reply_ignore_addr ");
293888,602093824,0,0,PLAT_AP,LWIP_CORE,netif_enter_oos_1,P_INFO,swLogPrintf("netif_enter_oos : netif enter oos %c%u ");
293888,602095872,0,0,PLAT_AP,LWIP_CORE,netif_exit_oos_1,P_INFO,swLogPrintf("netif_exit_oos : netif exit oos %c%u ");
293888,602099711,0,0,PLAT_AP,LWIP_CORE,netif_enable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602101759,0,0,PLAT_AP,LWIP_CORE,netif_disable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602102016,0,0,PLAT_AP,LWIP_CORE,netif_set_netif_type_1,P_INFO,swLogPrintf("netif_set_netif_type : netif 0x%x set net type %u ");
293888,602105855,0,0,PLAT_AP,LWIP_CORE,netif_find_by_wan_netif_1,P_INFO,swLogPrintf("netif_find_by_wan_netif : didn ' t wan netif ");
293888,602106368,0,0,PLAT_AP,LWIP_CORE,netif_find_by_cid_1,P_INFO,swLogPrintf("netif_find : found %c%u cid %u ");
293888,602107904,0,0,PLAT_AP,LWIP_CORE,netif_find_by_cid_2,P_INFO,swLogPrintf("netif_find : didn ' t find %d ");
293888,602110464,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip4_cid_1,P_INFO,swLogPrintf("netif_find : found %c%u cid %u ");
293888,602112000,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip4_cid_2,P_INFO,swLogPrintf("netif_find : didn ' t find %d ");
293888,602114048,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ded_cid_in_w_1,P_INFO,swLogPrintf("netif_find , invalid ded_cid : %d , can ' t found netif ");
293888,602116096,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ded_cid_1,P_INFO,swLogPrintf("netif_find , found netif via ded_cid : %d ");
293888,602118144,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ded_cid_w_1,P_INFO,swLogPrintf("netif_find : didn ' t find ded_cid : %d ");
293888,602120704,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip6_cid_1,P_INFO,swLogPrintf("netif_find : found %c%u cid %u ");
293888,602122240,0,0,PLAT_AP,LWIP_CORE,netif_find_by_ip6_cid_2,P_INFO,swLogPrintf("netif_find : didn ' t find %d ");
293888,602124288,0,0,PLAT_AP,LWIP_CORE,NetGetLanTypeNetif_1,P_INFO,swLogPrintf("NetGetLanTypeNetif invalid type %u ");
293888,602128383,0,0,PLAT_AP,LWIP_CORE,netif_check_netif_type_1,P_INFO,swLogPrintf("netif_check_netif_type invalid parameter ");
293888,602130431,0,0,PLAT_AP,LWIP_CORE,netif_check_netif_type_is_wan_1,P_INFO,swLogPrintf("netif_check_netif_type invalid parameter ");
293888,602131456,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_1,P_INFO,swLogPrintf("netif_add_ip6_prefix_info : cid %u , state %u , source %u , life_time %u , active_time %u ");
293888,602134527,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_timeout_1,P_WARNING,swLogPrintf("netif_add_ip6_prefix_info life_time has timeout ");
293888,602136575,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_timeout_2,P_WARNING,swLogPrintf("netif_add_ip6_prefix_info life_time has timeout ");
293888,602138623,0,0,PLAT_AP,LWIP_CORE,netif_add_ip6_prefix_info_3,P_WARNING,swLogPrintf("netif_add_ip6_prefix_info malloc fail ");
293888,602138624,0,0,PLAT_AP,LWIP_CORE,netif_remove_ip6_prefix_info_1,P_INFO,swLogPrintf("netif_remove_ip6_prefix_info cid %u ");
293888,602140672,0,0,PLAT_AP,LWIP_CORE,netif_find_ip6_prefix_info_1,P_INFO,swLogPrintf("netif_find_ip6_prefix_info cid %u ");
293888,602144767,0,0,PLAT_AP,LWIP_CORE,netif_set_ipaddr_1,P_INFO,swLogPrintf("netif_set_ipaddr : netif address being changed ");
293888,602146048,0,0,PLAT_AP,LWIP_CORE,netif_set_ipaddr_2,P_INFO,swLogPrintf("netif : IP address of interface %c%u set to %u.%u.%u.%u ");
293888,602148096,0,0,PLAT_AP,LWIP_CORE,netif_set_gw_1,P_INFO,swLogPrintf("netif : GW address of interface %c%u set to %u.%u.%u.%u ");
293888,602150144,0,0,PLAT_AP,LWIP_CORE,netif_set_netmask_1,P_INFO,swLogPrintf("netif : netmask of interface %c%u set to %u.%u.%u.%u ");
293888,602151168,0,0,PLAT_AP,LWIP_CORE,netif_set_default_1,P_INFO,swLogPrintf("netif : setting default interface %c%u ");
293888,602155007,0,0,PLAT_AP,LWIP_CORE,netif_loop_output_1,P_ERROR,swLogPrintf("if first ! = NULL , last must also be ! = NULL ");
293888,602157055,0,0,PLAT_AP,LWIP_CORE,netif_poll_1,P_ERROR,swLogPrintf("bogus pbuf : len ! = tot_len but next = = NULL! ");
293888,602159103,0,0,PLAT_AP,LWIP_CORE,netif_poll_2,P_ERROR,swLogPrintf("netif->loop_cnt_current underflow ");
293888,602161151,0,0,PLAT_AP,LWIP_CORE,netif_poll_3,P_ERROR,swLogPrintf("should not be null since first ! = last! ");
293888,602163199,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_1,P_ERROR,swLogPrintf("addr6 ! = NULL ");
293888,602165247,0,0,PLAT_AP,LWIP_CORE,netif_ip6_prefx_length_set_1,P_ERROR,swLogPrintf("invalid netif ");
293888,602167295,0,0,PLAT_AP,LWIP_CORE,netif_ip6_prefix_length_get_1,P_ERROR,swLogPrintf("invalid netif ");
293888,602169343,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_parts_1,P_ERROR,swLogPrintf("addr6 ! = NULL or invalid index ");
293888,602171391,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_parts_2,P_INFO,swLogPrintf("netif_ip6_addr_set : netif address being changed ");
293888,602172160,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_parts_3,P_INFO,swLogPrintf("netif : IPv6 address %d of interface %c%u set to 0x%x ");
293888,602175487,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_state_1,P_ERROR,swLogPrintf("addr6 ! = NULL or invalid index ");
293888,602177535,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_state_2,P_INFO,swLogPrintf("netif_ip6_addr_set : netif address state being changed ");
293888,602178304,0,0,PLAT_AP,LWIP_CORE,netif_ip6_addr_set_state_3,P_INFO,swLogPrintf("netif : IPv6 address %d of interface %c%u set to 0x%x ");
293888,602180352,0,0,PLAT_AP,LWIP_CORE,pbuf_set_1,P_INFO,swLogPrintf("pbuf_set ( length = %u ) 0x%x type %d , payload 0x%x ");
293888,602183679,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_2,P_ERROR,swLogPrintf("pbuf_alloc : bad pbuf layer ");
293888,602183936,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_ps_dl_pkg_1,P_ERROR,swLogPrintf("LWIP , can ' t alloc pbuf from DL PKG MEM , layer : %d , size : %d ");
293888,602187775,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_5,P_ERROR,swLogPrintf("pbuf_alloc : pbuf->payload properly aligned ");
293888,602187776,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_6,P_WARNING,swLogPrintf("pbuf_alloc : Could not allocate MEMP_PBUF for PBUF type %d ");
293888,602189824,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_8,P_ERROR,swLogPrintf("LWIP , pbuf_alloc , erroneous type : %d ");
293888,602192384,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_9,P_INFO,swLogPrintf("pbuf_alloc 0x%x , the init ticktype %u , the dataLifeTime %u ");
293888,602194688,0,0,PLAT_AP,LWIP_CORE,pbuf_alloc_10,P_INFO,swLogPrintf("pbuf_alloc ( length = %u ) 0x%x layer ( %d ) type %d ");
293888,602195968,0,0,PLAT_AP,LWIP_CORE,pbuf_alloced_custom_1,P_INFO,swLogPrintf("pbuf_alloced_custom length %u ");
293888,602200063,0,0,PLAT_AP,LWIP_CORE,pbuf_alloced_custom_2,P_ERROR,swLogPrintf("pbuf_alloced_custom : bad pbuf layer ");
293888,602200064,0,0,PLAT_AP,LWIP_CORE,pbuf_alloced_custom_3,P_WARNING,swLogPrintf("pbuf_alloced_custom ( length = %u ) buffer too short ");
293888,602202368,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_w_1,P_INFO,swLogPrintf("LWIP , can ' t realloc pbuf , new_len : %d > = tot_len : %d ");
293888,602206207,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_2,P_ERROR,swLogPrintf("grow < max_u16_t ");
293888,602208255,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_3,P_ERROR,swLogPrintf("pbuf_realloc : q ! = NULL ");
293888,602210303,0,0,PLAT_AP,LWIP_CORE,pbuf_realloc_4,P_ERROR,swLogPrintf("mem_trim returned q = = NULL ");
293888,602212351,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_1,P_ERROR,swLogPrintf("p ! = NULL ");
293888,602214399,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_2,P_ERROR,swLogPrintf("increment_magnitude < = p->len ");
293888,602214656,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_6,P_WARNING,swLogPrintf("pbuf_header : failed as 0x%x < 0x%x ( not enough space for new header size ) ");
293888,602216704,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_3,P_WARNING,swLogPrintf("pbuf_header : failed as 0x%x < 0x%x ( not enough space for new header size ) ");
293888,602218752,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_4,P_WARNING,swLogPrintf("pbuf_header : failed as 0x%x < 0x%x ( not enough space for new header size ) ");
293888,602222591,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_5,P_ERROR,swLogPrintf("bad pbuf type ");
293888,602223104,0,0,PLAT_AP,LWIP_CORE,pbuf_header_impl_7,P_INFO,swLogPrintf("pbuf_header : old 0x%x new 0x%x %d ");
293888,602226687,0,0,PLAT_AP,LWIP_CORE,pbuf_free_1,P_ERROR,swLogPrintf("LWIP , pbuf_free , invalid input : p = = NULL ");
293888,602227200,0,0,PLAT_AP,LWIP_CORE,pbuf_free_2,P_INFO,swLogPrintf("LWIP , pbuf_free : 0x%x , ignore flag %u , ref %u ");
293888,602230783,0,0,PLAT_AP,LWIP_CORE,pbuf_free_4,P_ERROR,swLogPrintf("pbuf_free : p->ref > 0 ");
293888,602232831,0,0,PLAT_AP,LWIP_CORE,pbuf_free_e_5,P_ERROR,swLogPrintf("LWIP , can ' t free pbuf with type : PBUF_POOL , if PS DL PKG memory used ");
293888,602234879,0,0,PLAT_AP,LWIP_CORE,pbuf_ref_1,P_ERROR,swLogPrintf("pbuf ref overflow ");
293888,602236927,0,0,PLAT_AP,LWIP_CORE,pbuf_cat_1,P_ERROR,swLogPrintf("pbuf_cat invalid argument ");
293888,602238975,0,0,PLAT_AP,LWIP_CORE,pbuf_cat_2,P_ERROR,swLogPrintf("p->tot_len ! = p->len or p->next ! = NULL ");
293888,602239232,0,0,PLAT_AP,LWIP_CORE,pbuf_chain_1,P_INFO,swLogPrintf("pbuf_chain : 0x%x references 0x%x ");
293888,602243071,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_1,P_ERROR,swLogPrintf("p->tot_len = = p->len + q->tot_len ");
293888,602243072,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_2,P_INFO,swLogPrintf("pbuf_dechain : unreferencing 0x%x ");
293888,602245120,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_3,P_INFO,swLogPrintf("pbuf_dechain : deallocated 0x%x ( as it is no longer referenced ) ");
293888,602249215,0,0,PLAT_AP,LWIP_CORE,pbuf_dechain_4,P_ERROR,swLogPrintf("p->tot_len = = p->len ");
293888,602249472,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_1,P_INFO,swLogPrintf("pbuf_copy to 0x%x from 0x%x ");
293888,602253311,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_2,P_ERROR,swLogPrintf("pbuf_copy : target not big enough to hold source ");
293888,602255359,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_3,P_ERROR,swLogPrintf("offset_to > p_to->len or offset_from > p_from->len ");
293888,602257407,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_4,P_ERROR,swLogPrintf("p_to ! = NULL ");
293888,602259455,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_5,P_ERROR,swLogPrintf("pbuf_copy ( ) does not allow packet queues! ");
293888,602261503,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_6,P_ERROR,swLogPrintf("pbuf_copy ( ) does not allow packet queues! ");
293888,602263551,0,0,PLAT_AP,LWIP_CORE,pbuf_copy_partial_1,P_ERROR,swLogPrintf("pbuf_copy_partial : invalid buf or dataptr ");
293888,602265599,0,0,PLAT_AP,LWIP_CORE,updateSequenceBitmap_1,P_ERROR,swLogPrintf("updateSequenceBitmap parameter invalid ");
293888,602267647,0,0,PLAT_AP,LWIP_CORE,getSequenceBitmap_1,P_ERROR,swLogPrintf("getSequenceBitmap parameter invalid ");
293888,602269695,0,0,PLAT_AP,LWIP_CORE,pbuf_split_64k_1,P_ERROR,swLogPrintf("tot_len / len mismatch in last pbuf ");
293888,602271743,0,0,PLAT_AP,LWIP_CORE,pbuf_take_1,P_ERROR,swLogPrintf("pbuf_take : invalid buf or dataptr ");
293888,602273791,0,0,PLAT_AP,LWIP_CORE,pbuf_take_2,P_ERROR,swLogPrintf("pbuf_take : buf not large enough ");
293888,602275839,0,0,PLAT_AP,LWIP_CORE,pbuf_take_3,P_ERROR,swLogPrintf("pbuf_take : invalid pbuf ");
293888,602277887,0,0,PLAT_AP,LWIP_CORE,pbuf_take_4,P_ERROR,swLogPrintf("did not copy all data ");
293888,602279935,0,0,PLAT_AP,LWIP_CORE,pbuf_coalesce_1,P_ERROR,swLogPrintf("pbuf_copy failed ");
293888,602281983,0,0,PLAT_AP,LWIP_CORE,raw_input_1,P_ERROR,swLogPrintf("raw pcb recv callback altered pbuf payload pointer without eating packet ");
293888,602284031,0,0,PLAT_AP,LWIP_CORE,raw_sendto_1,P_INFO,swLogPrintf("raw_sendto ");
293888,602286079,0,0,PLAT_AP,LWIP_CORE,raw_sendto_5,P_WARNING,swLogPrintf("raw_sendto : No route to ");
293888,602288127,0,0,PLAT_AP,LWIP_CORE,raw_sendto_2,P_WARNING,swLogPrintf("raw_sendto : could not allocate header ");
293888,602288384,0,0,PLAT_AP,LWIP_CORE,raw_sendto_3,P_INFO,swLogPrintf("raw_sendto : added header pbuf 0x%x before given pbuf 0x%x ");
293888,602292223,0,0,PLAT_AP,LWIP_CORE,raw_sendto_4,P_ERROR,swLogPrintf("Can ' t restore header we just removed ");
293888,602294271,0,0,PLAT_AP,LWIP_CORE,raw_sendto_7,P_WARNING,swLogPrintf("Checksum must fit into first pbuf ");
293888,602296319,0,0,PLAT_AP,LWIP_CORE,raw_new_1,P_INFO,swLogPrintf("raw_new ");
293888,602296320,0,0,PLAT_AP,LWIP_CORE,raw_netif_enter_oos_state_1,P_INFO,swLogPrintf("raw_netif_enter_oos_state 0x%x ");
293888,602298368,0,0,PLAT_AP,LWIP_CORE,raw_netif_exit_oos_state_1,P_INFO,swLogPrintf("raw_netif_exit_oos_state 0x%x ");
293888,602300928,0,0,PLAT_AP,LWIP_CORE,TCP_REG_1,P_INFO,swLogPrintf("TCP_REG 0x%x local port %d to 0x%x ");
293888,602304511,0,0,PLAT_AP,LWIP_CORE,TCP_REG_2,P_ERROR,swLogPrintf("TCP_REG : tcp_tmp_pcb = = ( npcb ) ");
293888,602306559,0,0,PLAT_AP,LWIP_CORE,TCP_REG_3,P_ERROR,swLogPrintf("TCP_REG : pcb->state = = CLOSED ");
293888,602308607,0,0,PLAT_AP,LWIP_CORE,TCP_REG_4,P_ERROR,swLogPrintf("TCP_REG : npcb->next = = npcb ");
293888,602310655,0,0,PLAT_AP,LWIP_CORE,TCP_REG_5,P_ERROR,swLogPrintf("TCP_REG : tcp_pcbs sane ");
293888,602312703,0,0,PLAT_AP,LWIP_CORE,TCP_RMV_1,P_ERROR,swLogPrintf("TCP_RMV : pcbs = = NULL ");
293888,602312960,0,0,PLAT_AP,LWIP_CORE,TCP_RMV_2,P_INFO,swLogPrintf("TCP_RMV removing 0x%x from 0x%x ");
293888,602316799,0,0,PLAT_AP,LWIP_CORE,TCP_RMV_3,P_ERROR,swLogPrintf("TCP_RMV : tcp_pcbs sane ");
293888,602316800,0,0,PLAT_AP,LWIP_CORE,tcp_add_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("tcp_add_curr_hib_sleep2_pcb_num %u ");
293888,602318848,0,0,PLAT_AP,LWIP_CORE,tcp_del_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("tcp_del_curr_hib_sleep2_pcb_num %u ");
293888,602320896,0,0,PLAT_AP,LWIP_CORE,tcp_enable_hib_sleep2_mode_1,P_INFO,swLogPrintf("tcp_enable_hib_sleep2_mode %u ");
293888,602322944,0,0,PLAT_AP,LWIP_CORE,tcp_disable_hib_sleep2_mode_1,P_INFO,swLogPrintf("tcp_disable_hib_sleep2_mode %u ");
293888,602324992,0,0,PLAT_AP,LWIP_CORE,tcp_add_hib_sleep2_context_pcb_1,P_INFO,swLogPrintf("tcp_add_hib_sleep2_context_pcb alloc new tcp_pcb success , sockid %d ");
293888,602329087,0,0,PLAT_AP,LWIP_CORE,tcp_add_hib_sleep2_context_pcb_2,P_ERROR,swLogPrintf("tcp_add_hib_sleep2_context_pcb alloc new tcp_pcb fail ");
293888,602331135,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_active_1,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_active ");
293888,602331136,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_active_2,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_active change pcb 0x%x state to enable_active state ");
293888,602335231,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_deactive_1,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_deactive ");
293888,602335232,0,0,PLAT_AP,LWIP_CORE,tcp_check_hib_sleep2_pcb_deactive_2,P_INFO,swLogPrintf("tcp_check_hib_sleep2_pcb_deactive change pcb 0x%x state to enable_deactive state ");
293888,602339327,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_1,P_ERROR,swLogPrintf("tcp_get_sock_info invalid fd ");
293888,602341375,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_2,P_INFO,swLogPrintf("tcp_get_sock_info find adpat tcp hib pcb ");
293888,602343423,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_3,P_INFO,swLogPrintf("tcp_get_sock_info can not find adpat tcp hib pcb ");
293888,602345471,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_1,P_ERROR,swLogPrintf("tcp_get_sock_info_by_pcb invalid parameter ");
293888,602347519,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("tcp_get_sock_info_by_pcb find adpat tcppcb ");
293888,602349567,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_3,P_INFO,swLogPrintf("tcp_get_sock_info_by_pcb find adpat tcp hib pcb ");
293888,602351615,0,0,PLAT_AP,LWIP_CORE,tcp_get_sock_info_by_pcb_4,P_INFO,swLogPrintf("tcp_get_sock_info_by_pcb can not find adpat tcp hib pcb ");
293888,602353663,0,0,PLAT_AP,LWIP_CORE,tcp_listen_closed_1,P_ERROR,swLogPrintf("pcb = = NULL or pcb->state ! = LISTEN ");
293888,602355711,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_delayed_1,P_ERROR,swLogPrintf("pcb = = NULL ");
293888,602357759,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_delayed_2,P_ERROR,swLogPrintf("accepts_pending ! = 0 ");
293888,602359807,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_accepted_1,P_ERROR,swLogPrintf("pcb = = NULL ");
293888,602361855,0,0,PLAT_AP,LWIP_CORE,tcp_backlog_accepted_2,P_ERROR,swLogPrintf("accepts_pending ! = 0 ");
293888,602363903,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_5,P_SIG,swLogPrintf("tcp_close_shutdown THE hib / sleep2 tcp context pcb will shutdown ");
293888,602365951,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_1,P_ERROR,swLogPrintf("pcb->flags & TF_RXCLOSED ");
293888,602367999,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_2,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602368000,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_3,P_INFO,swLogPrintf("enable tcp time_wait timer %u ");
293888,602372095,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_4,P_INFO,swLogPrintf("tcp time_wait timer has active ");
293888,602374143,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_1,P_ERROR,swLogPrintf("pcb ! = NULL ");
293888,602376191,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_2,P_INFO,swLogPrintf("remove tcp sync rcv timer ");
293888,602378239,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_3,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602380287,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_4,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,602380288,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_5,P_INFO,swLogPrintf("enable tcp last ack timer %u ");
293888,602382336,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_local_abort_time,P_INFO,swLogPrintf("enable tcp close local abort time %u ");
293888,602384384,0,0,PLAT_AP,LWIP_CORE,tcp_close_shutdown_fin_6,P_INFO,swLogPrintf("enable tcp pending fin timer %u ");
293888,602388479,0,0,PLAT_AP,LWIP_CORE,tcp_close_1,P_INFO,swLogPrintf("tcp_close : closing in ");
293888,602390527,0,0,PLAT_AP,LWIP_CORE,tcp_shutdown_1,P_INFO,swLogPrintf("remove tcp refuse data timer ");
293888,602392575,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_12,P_SIG,swLogPrintf("tcp_abandon THE hib / sleep2 tcp context pcb will abandon ");
293888,602394623,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_1,P_ERROR,swLogPrintf("don ' t call tcp_abort / tcp_abandon for listen-pcbs ");
293888,602396671,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_2,P_INFO,swLogPrintf("remove time wait timer ");
293888,602398719,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_3,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602400767,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_4,P_INFO,swLogPrintf("remove tcp syncrcv timer ");
293888,602402815,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_5,P_INFO,swLogPrintf("remove tcp last ack timer ");
293888,602404863,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_6,P_INFO,swLogPrintf("remove tcp FIN_WAIT2 timer ");
293888,602406911,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_tcp_total_retry_time_1,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602406912,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_tcp_retry_time_1,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602411007,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_tcp_poll_time_1,P_INFO,swLogPrintf("remove tcp poll timer ");
293888,602413055,0,0,PLAT_AP,LWIP_CORE,tcp_abandon_11,P_INFO,swLogPrintf("tcp_abandon : sending RST ");
293888,602415103,0,0,PLAT_AP,LWIP_CORE,tcp_bind_1,P_ERROR,swLogPrintf("tcp_bind : can only bind in state CLOSED ");
293888,602415104,0,0,PLAT_AP,LWIP_CORE,tcp_bind_2,P_INFO,swLogPrintf("tcp_bind : bind to port %u ");
293888,602419199,0,0,PLAT_AP,LWIP_CORE,tcp_listen_with_backlog_and_err_1,P_ERROR,swLogPrintf("tcp_listen : pcb already connected ");
293888,602421247,0,0,PLAT_AP,LWIP_CORE,tcp_recved_1,P_ERROR,swLogPrintf("don ' t call tcp_recved for listen-pcbs ");
293888,602423295,0,0,PLAT_AP,LWIP_CORE,tcp_recved_2,P_ERROR,swLogPrintf("tcp_recved : len wrapped rcv_wnd ");
293888,602423808,0,0,PLAT_AP,LWIP_CORE,tcp_recved_3,P_INFO,swLogPrintf("tcp_recved : received ( %u ) bytes , wnd ( %u ) %u ");
293888,602427391,0,0,PLAT_AP,LWIP_CORE,tcp_connect_1,P_ERROR,swLogPrintf("tcp_connect : can only connect from state CLOSED ");
293888,602427392,0,0,PLAT_AP,LWIP_CORE,tcp_connect_2,P_INFO,swLogPrintf("tcp_connect to port %u ");
293888,602431487,0,0,PLAT_AP,LWIP_CORE,tcp_connect_3,P_SIG,swLogPrintf("tcp_connect : pcb has connected ");
293888,602433535,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_1,P_INFO,swLogPrintf("tcp_slowtmr : no active pcbs ");
293888,602435583,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_2,P_ERROR,swLogPrintf("tcp_slowtmr : active pcb->state inlavid ");
293888,602437631,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_3,P_INFO,swLogPrintf("tcp_slowtmr : max SYN retries reached ");
293888,602439679,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_4,P_INFO,swLogPrintf("tcp_slowtmr : max DATA retries reached ");
293888,602439936,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_5,P_INFO,swLogPrintf("tcp_slowtmr : rtime %u pcb->rto %u ");
293888,602441984,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_6,P_INFO,swLogPrintf("tcp_slowtmr : cwnd %u ssthresh %u ");
293888,602445823,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_7,P_INFO,swLogPrintf("tcp_slowtmr : removing pcb stuck in FIN-WAIT-2 ");
293888,602447871,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_8,P_INFO,swLogPrintf("tcp_slowtmr : KEEPALIVE timeout. Aborting connection to ");
293888,602449919,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_9,P_INFO,swLogPrintf("tcp_slowtmr : dropping OOSEQ queued data ");
293888,602451967,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_10,P_INFO,swLogPrintf("tcp_slowtmr : removing pcb stuck in SYN-RCVD ");
293888,602454015,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_11,P_INFO,swLogPrintf("tcp_slowtmr : removing pcb stuck in LAST-ACK ");
293888,602456063,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_12,P_ERROR,swLogPrintf("tcp_slowtmr : middle tcp ! = tcp_active_pcbs ");
293888,602458111,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_13,P_ERROR,swLogPrintf("tcp_slowtmr : first pcb = = tcp_active_pcbs ");
293888,602460159,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_14,P_INFO,swLogPrintf("tcp_slowtmr : polling application ");
293888,602462207,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_15,P_ERROR,swLogPrintf("tcp_slowtmr : TIME-WAIT pcb->state = = TIME-WAIT ");
293888,602464255,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_16,P_ERROR,swLogPrintf("tcp_slowtmr : middle tcp ! = tcp_tw_pcbs ");
293888,602466303,0,0,PLAT_AP,LWIP_CORE,tcp_slowtmr_17,P_ERROR,swLogPrintf("tcp_slowtmr : first pcb = = tcp_tw_pcbs ");
293888,602468351,0,0,PLAT_AP,LWIP_CORE,tcp_fasttmr_1,P_INFO,swLogPrintf("tcp_fasttmr : delayed ACK ");
293888,602470399,0,0,PLAT_AP,LWIP_CORE,tcp_fasttmr_2,P_INFO,swLogPrintf("tcp_fasttmr : pending FIN ");
293888,602472447,0,0,PLAT_AP,LWIP_CORE,tcp_enable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602474495,0,0,PLAT_AP,LWIP_CORE,tcp_disable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602474752,0,0,PLAT_AP,LWIP_CORE,tcp_remove_pcb_1,P_INFO,swLogPrintf("tcp_remove_pcb remove pcb 0x%x from list 0x%x ");
293888,602477056,0,0,PLAT_AP,LWIP_CORE,tcp_remove_pcb_2,P_INFO,swLogPrintf("tcp_remove_pcb send error %d event success , err fn 0x%x , err_arg 0x%x ");
293888,602480639,0,0,PLAT_AP,LWIP_CORE,tcp_delay_ack_handler_1,P_INFO,swLogPrintf("tcp_delay_ack_handler timeout ");
293888,602482687,0,0,PLAT_AP,LWIP_CORE,tcp_delay_ack_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602484735,0,0,PLAT_AP,LWIP_CORE,tcp_pending_fin_handler_1,P_INFO,swLogPrintf("tcp_pending_fin_handler timeout ");
293888,602486783,0,0,PLAT_AP,LWIP_CORE,tcp_pending_fin_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602488831,0,0,PLAT_AP,LWIP_CORE,tcp_refused_data_handler_1,P_INFO,swLogPrintf("tcp_refused_data_handler timeout ");
293888,602490879,0,0,PLAT_AP,LWIP_CORE,tcp_refused_data_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602492927,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_1,P_INFO,swLogPrintf("tcp_retry_timeout_handler timeout ");
293888,602494975,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602497023,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_3,P_ERROR,swLogPrintf("tcp_retry_timeout_handler : active pcb->state inlavid ");
293888,602499071,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_4,P_INFO,swLogPrintf("tcp_retry_timeout_handler : max SYN retries reached ");
293888,602501119,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_5,P_INFO,swLogPrintf("tcp_retry_timeout_handler : max DATA retries reached ");
293888,602501376,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_6,P_INFO,swLogPrintf("active tcp retry timer %u , pcb 0x%x ");
293888,602503936,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_7,P_INFO,swLogPrintf("tcp_retry_timeout_handler : pcb->rto %u nrtx %u sa %d sv %d ");
293888,602505472,0,0,PLAT_AP,LWIP_CORE,tcp_retry_timeout_handler_8,P_INFO,swLogPrintf("tcp_retry_timeout_handler : cwnd %u ssthresh %u ");
293888,602509311,0,0,PLAT_AP,LWIP_CORE,tcp_total_retry_timeout_handler_1,P_INFO,swLogPrintf("tcp_total_retry_timeout_handler timeout ");
293888,602511359,0,0,PLAT_AP,LWIP_CORE,tcp_total_retry_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602513407,0,0,PLAT_AP,LWIP_CORE,tcp_total_retry_timeout_handler_3,P_ERROR,swLogPrintf("tcp_total_retry_timeout_handler : active pcb->state inlavid ");
293888,602515455,0,0,PLAT_AP,LWIP_CORE,tcp_fin_wait2_timeout_handler_1,P_INFO,swLogPrintf("tcp_fin_wait2_timeout_handler timeout ");
293888,602517503,0,0,PLAT_AP,LWIP_CORE,tcp_fin_wait2_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602519551,0,0,PLAT_AP,LWIP_CORE,tcp_fin_wait2_timeout_handler_3,P_INFO,swLogPrintf("tcp_fin_wait2_timeout_handler : removing pcb stuck in FIN-WAIT-2 ");
293888,602521599,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_1,P_INFO,swLogPrintf("tcp_keepalive_timeout_handler timeout ");
293888,602523647,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602525695,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_3,P_INFO,swLogPrintf("tcp_keepalive_timeout_handler : KEEPALIVE timeout. Aborting connection to ");
293888,602525952,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_timeout_handler_4,P_INFO,swLogPrintf("active tcp keepalive intvl timer %u , send cnt %u ");
293888,602529791,0,0,PLAT_AP,LWIP_CORE,tcp_ooseq_timeout_handler_1,P_INFO,swLogPrintf("tcp_ooseq_timeout_handler timeout ");
293888,602531839,0,0,PLAT_AP,LWIP_CORE,tcp_ooseq_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602533887,0,0,PLAT_AP,LWIP_CORE,tcp_ooseq_timeout_handler_3,P_INFO,swLogPrintf("tcp_ooseq_timeout_handler : dropping OOSEQ queued data ");
293888,602535935,0,0,PLAT_AP,LWIP_CORE,tcp_syncrcv_timeout_handler_1,P_INFO,swLogPrintf("tcp_syncrcv_timeout_handler timeout ");
293888,602537983,0,0,PLAT_AP,LWIP_CORE,tcp_syncrcv_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602540031,0,0,PLAT_AP,LWIP_CORE,tcp_syncrcv_timeout_handler_3,P_INFO,swLogPrintf("tcp_syncrcv_timeout_handler : removing pcb stuck in SYN-RCVD ");
293888,602542079,0,0,PLAT_AP,LWIP_CORE,tcp_lastack_timeout_handler_1,P_INFO,swLogPrintf("tcp_lastack_timeout_handler timeout ");
293888,602544127,0,0,PLAT_AP,LWIP_CORE,tcp_lastack_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602546175,0,0,PLAT_AP,LWIP_CORE,tcp_lastack_timeout_handler_3,P_INFO,swLogPrintf("tcp_lastack_timeout_handler : removing pcb stuck in LAST-ACK ");
293888,602548223,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_timeout_handler_1,P_INFO,swLogPrintf("tcp_timewait_timeout_handler timeout ");
293888,602550271,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602552319,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_timeout_handler_3,P_INFO,swLogPrintf("tcp_timewait_timeout_handler : removing pcb in time wait state ");
293888,602554367,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_1,P_INFO,swLogPrintf("tcp_remove_all_timer invalid pcb point ");
293888,602556415,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_12,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602556416,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_2,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602560511,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_3,P_INFO,swLogPrintf("remove delay ack timer ");
293888,602562559,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_4,P_INFO,swLogPrintf("remove tcp pending fin timer ");
293888,602564607,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_5,P_INFO,swLogPrintf("remove tcp refuse data timer ");
293888,602566655,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_6,P_INFO,swLogPrintf("remove tcp fin wait2 timer ");
293888,602568703,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_7,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602570751,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_8,P_INFO,swLogPrintf("remove tcp ooseq timer ");
293888,602572799,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_9,P_INFO,swLogPrintf("remove tcp syncrcv timer ");
293888,602574847,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_10,P_INFO,swLogPrintf("remove tcp lastack timer ");
293888,602576895,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_11,P_INFO,swLogPrintf("remove tcp timewait timer ");
293888,602578943,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_13,P_INFO,swLogPrintf("remove tcp poll timer ");
293888,602580991,0,0,PLAT_AP,LWIP_CORE,tcp_remove_all_timer_14,P_INFO,swLogPrintf("remove tcp close local abort timer ");
293888,602583039,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_1,P_INFO,swLogPrintf("tcp_close_local_abort_timeout_handler timeout ");
293888,602585087,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602587135,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_3,P_ERROR,swLogPrintf("tcp_close_local_abort_timeout_handler : pcb->state inlavid ");
293888,602589183,0,0,PLAT_AP,LWIP_CORE,tcp_close_local_abort_timeout_handler_4,P_INFO,swLogPrintf("remove tcp timewait timer ");
293888,602591231,0,0,PLAT_AP,LWIP_CORE,tcp_poll_timeout_handler_1,P_INFO,swLogPrintf("tcp_poll_timeout_handler timeout ");
293888,602593279,0,0,PLAT_AP,LWIP_CORE,tcp_poll_timeout_handler_2,P_ERROR,swLogPrintf("invalid argument ");
293888,602593280,0,0,PLAT_AP,LWIP_CORE,tcp_poll_timeout_handler_3,P_INFO,swLogPrintf("tcp_poll_timeout_handler poll result %d ");
293888,602597375,0,0,PLAT_AP,LWIP_CORE,tcp_active_poll_timeout_timer_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602599423,0,0,PLAT_AP,LWIP_CORE,tcp_active_poll_timeout_timer_2,P_INFO,swLogPrintf("tcp_active_poll_timeout_timer poll timeout timer has active ");
293888,602599680,0,0,PLAT_AP,LWIP_CORE,tcp_active_poll_timeout_timer_3,P_INFO,swLogPrintf("active tcp poll timeour timer %u ms , pcb 0x%x ");
293888,602603519,0,0,PLAT_AP,LWIP_CORE,tcp_disable_keepalive_time_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602605567,0,0,PLAT_AP,LWIP_CORE,tcp_disable_keepalive_time_2,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602607615,0,0,PLAT_AP,LWIP_CORE,tcp_enable_keeplive_time_1,P_ERROR,swLogPrintf("invalid argument ");
293888,602607872,0,0,PLAT_AP,LWIP_CORE,tcp_enable_keeplive_time_state_1,P_INFO,swLogPrintf("pcb 0x%x state %u could not enable keepalive timer ");
293888,602611711,0,0,PLAT_AP,LWIP_CORE,tcp_enable_keeplive_time_2,P_INFO,swLogPrintf("tcp keepalive timer has active ");
293888,602611712,0,0,PLAT_AP,LWIP_CORE,tcp_enable_keeplive_time_3,P_INFO,swLogPrintf("enable tcp keepalive timer %u ");
293888,602613760,0,0,PLAT_AP,LWIP_CORE,tcp_enable_keeplive_time_4,P_INFO,swLogPrintf("tcp keepalive idle timer %u is invalid ");
293888,602617855,0,0,PLAT_AP,LWIP_CORE,tcp_send_unack_ul_state_1,P_ERROR,swLogPrintf("tcp_send_unack_ul_state : pcb invalid ");
293888,602619903,0,0,PLAT_AP,LWIP_CORE,tcp_send_unack_ul_state_2,P_ERROR,swLogPrintf("tcp_send_unack_ul_state : the pcb socketid is invalid ");
293888,602619904,0,0,PLAT_AP,LWIP_CORE,tcp_send_unack_ul_state_3,P_INFO,swLogPrintf("tcp_send_unack_ul_state : UL sequence state indicate success , the pcb socket id %u ");
293888,602623999,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_retry_times_1,P_ERROR,swLogPrintf("tcp_set_max_retry_times : pcb invalid ");
293888,602624000,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_retry_times_2,P_ERROR,swLogPrintf("tcp_set_max_retry_times : invalid tcp max retry times %u ");
293888,602628095,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_total_retry_time_1,P_ERROR,swLogPrintf("tcp_set_max_total_retry_time : pcb invalid ");
293888,602628096,0,0,PLAT_AP,LWIP_CORE,tcp_set_max_total_retry_time_2,P_ERROR,swLogPrintf("tcp_set_max_total_retry_time : invalid tcp max total retry time %u ");
293888,602632191,0,0,PLAT_AP,LWIP_CORE,tcp_set_init_retry_time_1,P_ERROR,swLogPrintf("tcp_set_init_retry_time : pcb invalid ");
293888,602632192,0,0,PLAT_AP,LWIP_CORE,tcp_set_init_retry_time_2,P_ERROR,swLogPrintf("tcp_set_init_retry_time : invalid tcp init retry times %u ");
293888,602636287,0,0,PLAT_AP,LWIP_CORE,tcp_ack_1,P_WARNING,swLogPrintf("tcp_ack : pcb invalid ");
293888,602638335,0,0,PLAT_AP,LWIP_CORE,tcp_ack_2,P_INFO,swLogPrintf("tcp delay ack timer has enable ");
293888,602638336,0,0,PLAT_AP,LWIP_CORE,tcp_ack_3,P_INFO,swLogPrintf("enable tcp delay ack timer %u ");
293888,602642431,0,0,PLAT_AP,LWIP_CORE,tcp_ack_now_1,P_WARNING,swLogPrintf("tcp_ack_now : pcb invalid ");
293888,602644479,0,0,PLAT_AP,LWIP_CORE,tcp_ack_now_2,P_INFO,swLogPrintf("tcp delay ack timer has enable , remove it ");
293888,602646527,0,0,PLAT_AP,LWIP_CORE,tcp_process_refused_data_1,P_INFO,swLogPrintf("tcp_input : notify kept packet ");
293888,602648575,0,0,PLAT_AP,LWIP_CORE,tcp_process_refused_data_2,P_INFO,swLogPrintf("tcp_input : drop incoming packets , because pcb is full ");
293888,602648576,0,0,PLAT_AP,LWIP_CORE,tcp_process_refused_data_3,P_INFO,swLogPrintf("enable tcp refse data timer %u ");
293888,602650880,0,0,PLAT_AP,LWIP_CORE,tcp_kill_prio_1,P_INFO,swLogPrintf("tcp_kill_prio : killing oldest PCB 0x%x ( %u ) ");
293888,602654719,0,0,PLAT_AP,LWIP_CORE,tcp_kill_state_1,P_INFO,swLogPrintf("tcp_kill_state invalid state ");
293888,602655232,0,0,PLAT_AP,LWIP_CORE,tcp_kill_state_2,P_INFO,swLogPrintf("tcp_kill_closing : killing oldest %d PCB 0x%x ( %u ) ");
293888,602657024,0,0,PLAT_AP,LWIP_CORE,tcp_kill_timewait_1,P_INFO,swLogPrintf("tcp_kill_timewait : killing oldest TIME-WAIT PCB 0x%x ( %u ) ");
293888,602660863,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_1,P_INFO,swLogPrintf("tcp_alloc : killing off oldest TIME-WAIT connection ");
293888,602662911,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_2,P_INFO,swLogPrintf("tcp_alloc : killing off oldest LAST-ACK connection ");
293888,602664959,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_3,P_INFO,swLogPrintf("tcp_alloc : killing off oldest CLOSING connection ");
293888,602664960,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_4,P_INFO,swLogPrintf("tcp_alloc : killing connection with prio lower than %d ");
293888,602667008,0,0,PLAT_AP,LWIP_CORE,tcp_alloc_5,P_INFO,swLogPrintf("tcp_alloc : current UE packet delay %u ");
293888,602671103,0,0,PLAT_AP,LWIP_CORE,tcp_recv_1,P_ERROR,swLogPrintf("invalid socket state for recv callback ");
293888,602673151,0,0,PLAT_AP,LWIP_CORE,tcp_sent_1,P_ERROR,swLogPrintf("invalid socket state for sent callback ");
293888,602675199,0,0,PLAT_AP,LWIP_CORE,tcp_err_1,P_ERROR,swLogPrintf("invalid socket state for err callback ");
293888,602677247,0,0,PLAT_AP,LWIP_CORE,tcp_poll_1,P_ERROR,swLogPrintf("invalid socket state for poll ");
293888,602679295,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_1,P_INFO,swLogPrintf("tcp_pcb_purge ");
293888,602681343,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_2,P_INFO,swLogPrintf("tcp_pcb_purge : data left on ->refused_data ");
293888,602683391,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_3,P_INFO,swLogPrintf("tcp_pcb_purge : not all data sent ");
293888,602685439,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_4,P_INFO,swLogPrintf("tcp_pcb_purge : data left on ->unacked ");
293888,602687487,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_5,P_INFO,swLogPrintf("tcp_pcb_purge : data left on ->ooseq ");
293888,602689535,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_6,P_INFO,swLogPrintf("remove tcp refuse data timer ");
293888,602691583,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_10,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602691584,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_7,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602695679,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_8,P_INFO,swLogPrintf("remove tcp ooseq timer ");
293888,602697727,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_9,P_INFO,swLogPrintf("remove fin wait2 timer ");
293888,602699775,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_last_ack_1,P_INFO,swLogPrintf("remove last ack timer ");
293888,602701823,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_close_local_abort,P_INFO,swLogPrintf("remove close local abort timer ");
293888,602703871,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_close_sync_rcv,P_INFO,swLogPrintf("remove sync rcv timer ");
293888,602705919,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_poll,P_INFO,swLogPrintf("remove tcp poll timer ");
293888,602707967,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_purge_11,P_SIG,swLogPrintf("tcp_pcb_purge THE hib / sleep2 tcp context pcb will shutdown ");
293888,602710015,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_4,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,602712063,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_1,P_ERROR,swLogPrintf("unsent or unacked segments leaking ");
293888,602714111,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_2,P_ERROR,swLogPrintf("ooseq segments leaking ");
293888,602716159,0,0,PLAT_AP,LWIP_CORE,tcp_pcb_remove_3,P_ERROR,swLogPrintf("tcp_pcb_remove : tcp_pcbs_sane ");
293888,602716160,0,0,PLAT_AP,LWIP_CORE,tcp_eff_send_mss_impl_1,P_INFO,swLogPrintf("netif_set_ipaddr : aborting TCP pcb 0x%x ");
293888,602718208,0,0,PLAT_AP,LWIP_CORE,tcp_netif_ip_addr_changed_1,P_INFO,swLogPrintf("tcp_netif_ip_addr_changed : aborting TCP hib pcb 0x%x ");
293888,602720256,0,0,PLAT_AP,LWIP_CORE,tcp_netif_enter_oos_state_1,P_INFO,swLogPrintf("tcp pcb 0x%x enter oos state event ");
293888,602722304,0,0,PLAT_AP,LWIP_CORE,tcp_netif_exit_oos_state_1,P_INFO,swLogPrintf("tcp pcb 0x%x exit oos state event ");
293888,602726399,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_1,P_INFO,swLogPrintf("TCP header : ");
293888,602726656,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_2,P_INFO,swLogPrintf("| %u | %u | ( src port , dest port ) ");
293888,602728704,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_3,P_INFO,swLogPrintf("| %u | %u | ( seq no ) ( ack no ) ");
293888,602732288,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_4,P_INFO,swLogPrintf("|%u|%u%u%u%u%u%u|%u| ( seq no ) ( hdrlen flags wnd ) ");
293888,602732800,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_5,P_INFO,swLogPrintf("| %u | %u | ( chksum , urgp ) ");
293888,602734592,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_state_1,P_INFO,swLogPrintf("State : %d ");
293888,602738687,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_1,P_INFO,swLogPrintf("FIN ");
293888,602740735,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_2,P_INFO,swLogPrintf("SYN ");
293888,602742783,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_3,P_INFO,swLogPrintf("RST ");
293888,602744831,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_4,P_INFO,swLogPrintf("PSH ");
293888,602746879,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_5,P_INFO,swLogPrintf("PSH ");
293888,602748927,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_6,P_INFO,swLogPrintf("URG ");
293888,602750975,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_7,P_INFO,swLogPrintf("ECE ");
293888,602753023,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_flags_8,P_INFO,swLogPrintf("CWR ");
293888,602753792,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_pcbs_1,P_INFO,swLogPrintf("Active PCB Local port ( %u ) foreign port ( %u ) snd_nxt ( %u ) rcv_nxt ( %u ) ");
293888,602755072,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_pcbs_2,P_INFO,swLogPrintf("Listen PCB Local port %u ");
293888,602757888,0,0,PLAT_AP,LWIP_CORE,tcp_debug_print_pcbs_3,P_INFO,swLogPrintf("TIME-WAIT PCB Local port ( %u ) foreign port ( %u ) snd_nxt ( %u ) rcv_nxt ( %u ) ");
293888,602761215,0,0,PLAT_AP,LWIP_CORE,tcp_pcbs_sane_1,P_ERROR,swLogPrintf("tcp_pcbs_sane ");
293888,602763263,0,0,PLAT_AP,LWIP_CORE,tcp_pcbs_sane_2,P_ERROR,swLogPrintf("tcp_pcbs_sane : tw pcb->state = = TIME-WAIT ");
293888,602763264,0,0,PLAT_AP,LWIP_CORE,tcp_input_1,P_WARNING,swLogPrintf("tcp_input : short packet ( %u bytes ) discarded ");
293888,602765312,0,0,PLAT_AP,LWIP_CORE,tcp_input_2,P_WARNING,swLogPrintf("tcp_input : packet discarded due to failing checksum 0x%x ");
293888,602767360,0,0,PLAT_AP,LWIP_CORE,tcp_input_3,P_WARNING,swLogPrintf("tcp_input : invalid header length ( %u ) ");
293888,602771455,0,0,PLAT_AP,LWIP_CORE,tcp_input_4,P_ERROR,swLogPrintf("p->next = = NULL ");
293888,602771456,0,0,PLAT_AP,LWIP_CORE,tcp_input_5,P_WARNING,swLogPrintf("tcp_input : options overflow second pbuf ( %u bytes ) ");
293888,602775551,0,0,PLAT_AP,LWIP_CORE,tcp_input_6,P_ERROR,swLogPrintf("p->len ! = 0 or p->tot_len ! = p->next->tot_len ");
293888,602777599,0,0,PLAT_AP,LWIP_CORE,tcp_input_7,P_ERROR,swLogPrintf("tcp_input : active pcb invalid state ");
293888,602779647,0,0,PLAT_AP,LWIP_CORE,tcp_input_8,P_ERROR,swLogPrintf("tcp_input : pcb->next ! = pcb ( before cache ) ");
293888,602781695,0,0,PLAT_AP,LWIP_CORE,tcp_input_9,P_ERROR,swLogPrintf("tcp_input : pcb->next ! = pcb ( after cache ) ");
293888,602783743,0,0,PLAT_AP,LWIP_CORE,tcp_input_10,P_ERROR,swLogPrintf("tcp_input : TIME-WAIT pcb->state = = TIME-WAIT ");
293888,602785791,0,0,PLAT_AP,LWIP_CORE,tcp_input_11,P_INFO,swLogPrintf("tcp_input : packed for TIME_WAITing connection ");
293888,602787839,0,0,PLAT_AP,LWIP_CORE,tcp_input_12,P_INFO,swLogPrintf("tcp_input : packed for LISTENing connection ");
293888,602789887,0,0,PLAT_AP,LWIP_CORE,tcp_input_13,P_INFO,swLogPrintf("tcp_input : flags ");
293888,602791935,0,0,PLAT_AP,LWIP_CORE,tcp_input_20,P_SIG,swLogPrintf("tcp receive rst , THE hib / sleep2 tcp context pcb will shutdown ");
293888,602793983,0,0,PLAT_AP,LWIP_CORE,tcp_input_14,P_ERROR,swLogPrintf("pcb->refused_data = = NULL ");
293888,602796031,0,0,PLAT_AP,LWIP_CORE,tcp_input_15,P_INFO,swLogPrintf("tcp refuse data timer has enable ");
293888,602796032,0,0,PLAT_AP,LWIP_CORE,tcp_input_16,P_INFO,swLogPrintf("enable tcp refuse data timer %u ");
293888,602800127,0,0,PLAT_AP,LWIP_CORE,tcp_input_17,P_WARNING,swLogPrintf("tcp_input : keep incoming packet , because pcb is full ");
293888,602802175,0,0,PLAT_AP,LWIP_CORE,tcp_input_18,P_WARNING,swLogPrintf("tcp_input : no PCB match found , resetting ");
293888,602804223,0,0,PLAT_AP,LWIP_CORE,tcp_input_19,P_WARNING,swLogPrintf("tcp_input : tcp_pcbs_sane ( ) ");
293888,602806271,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_1,P_INFO,swLogPrintf("tcp_listen_input : ACK in LISTEN , sending reset ");
293888,602806528,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_2,P_INFO,swLogPrintf("TCP connection request %u -> %u ");
293888,602808320,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_3,P_INFO,swLogPrintf("tcp_listen_input : listen backlog exceeded for port %u ");
293888,602812415,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_4,P_WARNING,swLogPrintf("tcp_listen_input : could not allocate PCB ");
293888,602812416,0,0,PLAT_AP,LWIP_CORE,tcp_listen_input_5,P_INFO,swLogPrintf("enable tcp syncrcy timer %u ");
293888,602816511,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_input_1,P_INFO,swLogPrintf("remove tcp time wait timer ");
293888,602816512,0,0,PLAT_AP,LWIP_CORE,tcp_timewait_input_2,P_INFO,swLogPrintf("enable tcp time wait timer %u ");
293888,602818560,0,0,PLAT_AP,LWIP_CORE,tcp_rebuild_seg_ul_sequence_bitmap_1,P_INFO,swLogPrintf("tcp_rebuild_seg_ul_sequence_bitmap disable sequence %d ");
293888,602822655,0,0,PLAT_AP,LWIP_CORE,tcp_process_1,P_INFO,swLogPrintf("tcp_process : Connection RESET ");
293888,602824703,0,0,PLAT_AP,LWIP_CORE,tcp_process_2,P_ERROR,swLogPrintf("tcp_process : pcb->state = = CLOSED ");
293888,602826751,0,0,PLAT_AP,LWIP_CORE,tcp_process_3,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,602827008,0,0,PLAT_AP,LWIP_CORE,tcp_process_4,P_INFO,swLogPrintf("tcp_process : unacceptable reset seqno %u rcv_nxt %u ");
293888,602829056,0,0,PLAT_AP,LWIP_CORE,tcp_process_5,P_INFO,swLogPrintf("tcp_process : Connection RESET seqno %u rcv_nxt %u ");
293888,602831360,0,0,PLAT_AP,LWIP_CORE,tcp_process_6,P_INFO,swLogPrintf("SYN-SENT : ackno %u pcb->snd_nxt %u unacked %u ");
293888,602834943,0,0,PLAT_AP,LWIP_CORE,tcp_process_7,P_INFO,swLogPrintf("tcp keepalive timer has active ");
293888,602834944,0,0,PLAT_AP,LWIP_CORE,tcp_process_8,P_INFO,swLogPrintf("enable tcp keepalive timer %u ");
293888,602837248,0,0,PLAT_AP,LWIP_CORE,tcp_process_9,P_INFO,swLogPrintf("tcp_process ( SENT ) : cwnd %u ssthresh %u ");
293888,602841087,0,0,PLAT_AP,LWIP_CORE,tcp_process_10,P_ERROR,swLogPrintf("pcb->snd_queuelen > 0 ");
293888,602841088,0,0,PLAT_AP,LWIP_CORE,tcp_process_11,P_INFO,swLogPrintf("tcp_process : SYN-SENT --queuelen %u ");
293888,602845183,0,0,PLAT_AP,LWIP_CORE,tcp_process_12,P_ERROR,swLogPrintf("no segment to free ");
293888,602845184,0,0,PLAT_AP,LWIP_CORE,tcp_process_13,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602847232,0,0,PLAT_AP,LWIP_CORE,tcp_process_14,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602849536,0,0,PLAT_AP,LWIP_CORE,tcp_process_15,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,602853375,0,0,PLAT_AP,LWIP_CORE,tcp_process_43,P_SIG,swLogPrintf("tcp_process THE tcp pcb ( enable hib / sleep2 ) has established ");
293888,602853376,0,0,PLAT_AP,LWIP_CORE,tcp_process_16,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602855680,0,0,PLAT_AP,LWIP_CORE,tcp_process_17,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,602859519,0,0,PLAT_AP,LWIP_CORE,tcp_process_18,P_INFO,swLogPrintf("remove tcp syncrcv timer ");
293888,602859776,0,0,PLAT_AP,LWIP_CORE,tcp_process_19,P_INFO,swLogPrintf("TCP connection established %u -> %u ");
293888,602863615,0,0,PLAT_AP,LWIP_CORE,tcp_process_20,P_ERROR,swLogPrintf("pcb->listener->accept ! = NULL ");
293888,602863872,0,0,PLAT_AP,LWIP_CORE,tcp_process_21,P_INFO,swLogPrintf("tcp_process ( SYN_RCVD ) : cwnd %u ssthresh %u ");
293888,602867711,0,0,PLAT_AP,LWIP_CORE,tcp_process_keep_alive_1,P_INFO,swLogPrintf("tcp keepalive timer has active ");
293888,602867712,0,0,PLAT_AP,LWIP_CORE,tcp_process_22,P_INFO,swLogPrintf("enable tcp keepalive timer %u ");
293888,602871807,0,0,PLAT_AP,LWIP_CORE,tcp_process_23,P_INFO,swLogPrintf("remove tcp keepalive timer ");
293888,602871808,0,0,PLAT_AP,LWIP_CORE,tcp_process_24,P_INFO,swLogPrintf("enable tcp ooseq timer %u ");
293888,602875903,0,0,PLAT_AP,LWIP_CORE,tcp_process_25,P_INFO,swLogPrintf("tcp ooseq timer has active ");
293888,602875904,0,0,PLAT_AP,LWIP_CORE,tcp_process_26,P_INFO,swLogPrintf("disable tcp ooseq timer %u ");
293888,602879999,0,0,PLAT_AP,LWIP_CORE,tcp_process_keep_alive_2,P_INFO,swLogPrintf("tcp keepalive timer has active ");
293888,602880000,0,0,PLAT_AP,LWIP_CORE,tcp_process_27,P_INFO,swLogPrintf("enable tcp keepalive timer %u ");
293888,602882304,0,0,PLAT_AP,LWIP_CORE,tcp_process_28,P_INFO,swLogPrintf("TCP connection closed : FIN_WAIT_1 %u -> %u ");
293888,602884096,0,0,PLAT_AP,LWIP_CORE,tcp_process_29,P_INFO,swLogPrintf("enable tcp timewait timeout %u ");
293888,602888191,0,0,PLAT_AP,LWIP_CORE,tcp_process_30,P_WARNING,swLogPrintf("tcp keepalive timer has active ");
293888,602888192,0,0,PLAT_AP,LWIP_CORE,tcp_process_31,P_INFO,swLogPrintf("enable tcp fin wait2 %u ");
293888,602892287,0,0,PLAT_AP,LWIP_CORE,tcp_process_32,P_WARNING,swLogPrintf("tcp FIN WAIT2 timer has active ");
293888,602892544,0,0,PLAT_AP,LWIP_CORE,tcp_process_33,P_INFO,swLogPrintf("TCP connection closed : FIN_WAIT_2 %u -> %u ");
293888,602896383,0,0,PLAT_AP,LWIP_CORE,tcp_process_34,P_INFO,swLogPrintf("remove fin wait2 timer ");
293888,602898431,0,0,PLAT_AP,LWIP_CORE,tcp_process_35,P_WARNING,swLogPrintf("tcp FIN WAIT2 timer has deactive ");
293888,602898432,0,0,PLAT_AP,LWIP_CORE,tcp_process_36,P_INFO,swLogPrintf("enable tcp time wait timer %u ");
293888,602902527,0,0,PLAT_AP,LWIP_CORE,tcp_process_37,P_WARNING,swLogPrintf("tcp TIME WAIT timer has active ");
293888,602902784,0,0,PLAT_AP,LWIP_CORE,tcp_process_38,P_INFO,swLogPrintf("TCP connection closed : CLOSING %u -> %u ");
293888,602904576,0,0,PLAT_AP,LWIP_CORE,tcp_process_39,P_INFO,swLogPrintf("enable tcp time wait timer %u ");
293888,602908671,0,0,PLAT_AP,LWIP_CORE,tcp_process_40,P_WARNING,swLogPrintf("tcp TIME WAIT timer has active ");
293888,602908928,0,0,PLAT_AP,LWIP_CORE,tcp_process_41,P_INFO,swLogPrintf("TCP connection closed : LAST_ACK %u -> %u ");
293888,602912767,0,0,PLAT_AP,LWIP_CORE,tcp_process_42,P_INFO,swLogPrintf("remove tcp last ack timer ");
293888,602914815,0,0,PLAT_AP,LWIP_CORE,tcp_receive_1,P_ERROR,swLogPrintf("tcp_receive : wrong state ");
293888,602914816,0,0,PLAT_AP,LWIP_CORE,tcp_receive_2,P_INFO,swLogPrintf("tcp_receive : window update %u ");
293888,602917888,0,0,PLAT_AP,LWIP_CORE,tcp_receive_3,P_INFO,swLogPrintf("tcp_receive : no window update lastack %u ackno %u wl1 %u seqno %u wl2 %u ");
293888,602918912,0,0,PLAT_AP,LWIP_CORE,tcp_receive_4,P_INFO,swLogPrintf("tcp_receive : slow start cwnd %u ");
293888,602920960,0,0,PLAT_AP,LWIP_CORE,tcp_receive_5,P_INFO,swLogPrintf("tcp_receive : congestion avoidance cwnd %u ");
293888,602923520,0,0,PLAT_AP,LWIP_CORE,tcp_receive_6,P_INFO,swLogPrintf("tcp_receive : ACK for %u , unacked->seqno %u : %u ");
293888,602925312,0,0,PLAT_AP,LWIP_CORE,tcp_receive_7,P_INFO,swLogPrintf("tcp_receive : removing %u : %u from pcb->unacked ");
293888,602927104,0,0,PLAT_AP,LWIP_CORE,tcp_receive_8,P_INFO,swLogPrintf("tcp_receive : queuelen %u ");
293888,602931199,0,0,PLAT_AP,LWIP_CORE,tcp_receive_9,P_ERROR,swLogPrintf("pcb->snd_queuelen > = pbuf_clen ( next->p ) ");
293888,602933247,0,0,PLAT_AP,LWIP_CORE,tcp_receive_38,P_ERROR,swLogPrintf("tcp_receive_37 : UL sequence state indicate fail , the pcb socketid is inavlid ");
293888,602933248,0,0,PLAT_AP,LWIP_CORE,tcp_receive_40,P_INFO,swLogPrintf("tcp_receive_37 : UL sequence state indicate success , the pcb socket id %u ");
293888,602935552,0,0,PLAT_AP,LWIP_CORE,tcp_receive_ul_total_status_1,P_INFO,swLogPrintf("tcp_receive_37 : socket %d , UL total status %u ");
293888,602937600,0,0,PLAT_AP,LWIP_CORE,tcp_receive_ul_total_status_2,P_INFO,swLogPrintf("tcp_receive_37 : socket %d , UL total status %u ");
293888,602939392,0,0,PLAT_AP,LWIP_CORE,tcp_receive_10,P_INFO,swLogPrintf("%u ( after freeing unacked ) ");
293888,602943487,0,0,PLAT_AP,LWIP_CORE,tcp_receive_11,P_ERROR,swLogPrintf("tcp_receive : valid queue length ");
293888,602943488,0,0,PLAT_AP,LWIP_CORE,tcp_receive_12,P_INFO,swLogPrintf("remove tcp retry time , pcb 0x%x ");
293888,602947583,0,0,PLAT_AP,LWIP_CORE,tcp_receive_tcp_total_retry_time1,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602947584,0,0,PLAT_AP,LWIP_CORE,tcp_receive_13,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,602949888,0,0,PLAT_AP,LWIP_CORE,tcp_receive_14,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,602953727,0,0,PLAT_AP,LWIP_CORE,tcp_receive_tcp_total_retry_time_2,P_INFO,swLogPrintf("remove tcp total retry timer ");
293888,602953728,0,0,PLAT_AP,LWIP_CORE,tcp_receive_tcp_total_retry_time_4,P_INFO,swLogPrintf("enable tcp total retry timer %u ");
293888,602956032,0,0,PLAT_AP,LWIP_CORE,tcp_receive_15,P_ERROR,swLogPrintf("tcp_receive : removing %u : %u from pcb->unsent ");
293888,602957824,0,0,PLAT_AP,LWIP_CORE,tcp_receive_16,P_INFO,swLogPrintf("tcp_receive : queuelen %u ");
293888,602961919,0,0,PLAT_AP,LWIP_CORE,tcp_receive_17,P_ERROR,swLogPrintf("pcb->snd_queuelen > = pbuf_clen ( next->p ) ");
293888,602961920,0,0,PLAT_AP,LWIP_CORE,tcp_receive_18,P_INFO,swLogPrintf("%u ( after freeing unsent ) ");
293888,602966015,0,0,PLAT_AP,LWIP_CORE,tcp_receive_19,P_ERROR,swLogPrintf("tcp_receive : valid queue length ");
293888,602966016,0,0,PLAT_AP,LWIP_CORE,tcp_receive_pool,P_INFO,swLogPrintf("tcp_receive : poll result %u ");
293888,602968576,0,0,PLAT_AP,LWIP_CORE,tcp_receive_20,P_INFO,swLogPrintf("tcp_receive : pcb->rttest %u rtseq %u ackno %u ");
293888,602970368,0,0,PLAT_AP,LWIP_CORE,tcp_receive_21,P_INFO,swLogPrintf("tcp_receive : experienced rtt %u ticks ( %u msec ) ");
293888,602972928,0,0,PLAT_AP,LWIP_CORE,tcp_receive_22,P_INFO,swLogPrintf("tcp_receive : RTO %u ( %u msec ) , sv %d , sa %d ");
293888,602976255,0,0,PLAT_AP,LWIP_CORE,tcp_receive_23,P_ERROR,swLogPrintf("inseg.p ! = NULL or insane offset! ");
293888,602978303,0,0,PLAT_AP,LWIP_CORE,tcp_receive_24,P_ERROR,swLogPrintf("pbuf too short! ");
293888,602980351,0,0,PLAT_AP,LWIP_CORE,tcp_receive_25,P_ERROR,swLogPrintf("pbuf_header failed1 ");
293888,602982399,0,0,PLAT_AP,LWIP_CORE,tcp_receive_26,P_ERROR,swLogPrintf("pbuf_header failed2 ");
293888,602982400,0,0,PLAT_AP,LWIP_CORE,tcp_receive_27,P_INFO,swLogPrintf("tcp_receive : duplicate seqno %u ");
293888,602984960,0,0,PLAT_AP,LWIP_CORE,tcp_receive_28,P_INFO,swLogPrintf("tcp_receive : other end overran receive window seqno %u len %u right edge %u ");
293888,602988543,0,0,PLAT_AP,LWIP_CORE,tcp_receive_29,P_ERROR,swLogPrintf("tcp_receive : segment not trimmed correctly to rcv_wnd ");
293888,602990591,0,0,PLAT_AP,LWIP_CORE,tcp_receive_30,P_INFO,swLogPrintf("tcp_receive : received in-order FIN , binning ooseq queue ");
293888,602992639,0,0,PLAT_AP,LWIP_CORE,tcp_receive_31,P_ERROR,swLogPrintf("tcp_receive : segment not trimmed correctly to ooseq queue ");
293888,602994687,0,0,PLAT_AP,LWIP_CORE,tcp_receive_32,P_ERROR,swLogPrintf("tcp_receive : tcplen > rcv_wnd ");
293888,602996735,0,0,PLAT_AP,LWIP_CORE,tcp_receive_33,P_INFO,swLogPrintf("tcp_receive : received FIN. ");
293888,602998783,0,0,PLAT_AP,LWIP_CORE,tcp_receive_34,P_ERROR,swLogPrintf("tcp_receive : ooseq tcplen > rcv_wnd ");
293888,603000831,0,0,PLAT_AP,LWIP_CORE,tcp_receive_35,P_INFO,swLogPrintf("tcp_receive : dequeued FIN ");
293888,603001344,0,0,PLAT_AP,LWIP_CORE,tcp_receive_36,P_INFO,swLogPrintf("tcp_receive : other end overran receive window seqno %u len %u right edge %u ");
293888,603004927,0,0,PLAT_AP,LWIP_CORE,tcp_receive_37,P_ERROR,swLogPrintf("tcp_receive : segment not trimmed correctly to rcv_wnd ");
293888,603006975,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_1,P_INFO,swLogPrintf("tcp_parseopt : EOL ");
293888,603009023,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_2,P_INFO,swLogPrintf("tcp_parseopt : NOP ");
293888,603011071,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_3,P_INFO,swLogPrintf("tcp_parseopt : MSS ");
293888,603013119,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_4,P_WARNING,swLogPrintf("tcp_parseopt : bad length ");
293888,603015167,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_5,P_INFO,swLogPrintf("tcp_parseopt : WND_SCALE ");
293888,603017215,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_6,P_WARNING,swLogPrintf("tcp_parseopt : bad length2 ");
293888,603019263,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_7,P_ERROR,swLogPrintf("tcp_parseopt : window not at default value ");
293888,603021311,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_10,P_INFO,swLogPrintf("tcp_parseopt : other ");
293888,603023359,0,0,PLAT_AP,LWIP_CORE,tcp_parseopt_11,P_WARNING,swLogPrintf("tcp_parseopt : bad length3 ");
293888,603025407,0,0,PLAT_AP,LWIP_CORE,tcp_output_alloc_header_1,P_ERROR,swLogPrintf("check that first pbuf can hold struct tcp_hdr ");
293888,603027455,0,0,PLAT_AP,LWIP_CORE,tcp_create_segment_1,P_WARNING,swLogPrintf("tcp_create_segment : no memory ");
293888,603029503,0,0,PLAT_AP,LWIP_CORE,tcp_create_segment_2,P_ERROR,swLogPrintf("p->tot_len > = optlen ");
293888,603031551,0,0,PLAT_AP,LWIP_CORE,tcp_create_segment_4,P_WARNING,swLogPrintf("tcp_create_segment : no room for TCP header in pbuf ");
293888,603033599,0,0,PLAT_AP,LWIP_CORE,tcp_pbuf_prealloc_1,P_ERROR,swLogPrintf("need unchained pbuf ");
293888,603035647,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_1,P_WARNING,swLogPrintf("tcp_write ( ) called in invalid state ");
293888,603035904,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_2,P_WARNING,swLogPrintf("tcp_write : too much data ( len %u > snd_buf %u ) ");
293888,603037696,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_3,P_INFO,swLogPrintf("tcp_write : queuelen : %u ");
293888,603040000,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_4,P_INFO,swLogPrintf("tcp_write : too long queue %u ( max %u ) ");
293888,603043839,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_5,P_ERROR,swLogPrintf("tcp_write : pbufs on queue = > at least one queue non-empty ");
293888,603045887,0,0,PLAT_AP,LWIP_CORE,tcp_write_checks_6,P_ERROR,swLogPrintf("tcp_write : no pbufs on queue = > both queues empty ");
293888,603046656,0,0,PLAT_AP,LWIP_CORE,tcp_write_1,P_INFO,swLogPrintf("tcp_write ( pcb = 0x%x , data = 0x%x , len = %u , apiflags = %u ) ");
293888,603049983,0,0,PLAT_AP,LWIP_CORE,tcp_write_2,P_ERROR,swLogPrintf("tcp_write : arg = = NULL ( programmer violates API ");
293888,603052031,0,0,PLAT_AP,LWIP_CORE,tcp_write_3,P_ERROR,swLogPrintf("mss_local is too small ");
293888,603054079,0,0,PLAT_AP,LWIP_CORE,tcp_write_4,P_ERROR,swLogPrintf("unsent_oversize mismatch ( pcb vs. last_unsent ) ");
293888,603056127,0,0,PLAT_AP,LWIP_CORE,tcp_write_5,P_ERROR,swLogPrintf("inconsistent oversize vs. space ");
293888,603058175,0,0,PLAT_AP,LWIP_CORE,tcp_write_6,P_ERROR,swLogPrintf("inconsistent oversize vs. len ");
293888,603058176,0,0,PLAT_AP,LWIP_CORE,tcp_write_7,P_INFO,swLogPrintf("tcp_write : could not allocate memory for pbuf copy size %u ");
293888,603062271,0,0,PLAT_AP,LWIP_CORE,tcp_write_8,P_ERROR,swLogPrintf("tcp_write : ROM pbufs cannot be oversized ");
293888,603064319,0,0,PLAT_AP,LWIP_CORE,tcp_write_9,P_WARNING,swLogPrintf("tcp_write : could not allocate memory for zero-copy pbuf ");
293888,603066367,0,0,PLAT_AP,LWIP_CORE,tcp_write_10,P_ERROR,swLogPrintf("unsent_oversize mismatch ( pcb->unsent is NULL ) ");
293888,603066368,0,0,PLAT_AP,LWIP_CORE,tcp_write_11,P_WARNING,swLogPrintf("tcp_write : could not allocate memory for pbuf copy size %u ");
293888,603070463,0,0,PLAT_AP,LWIP_CORE,tcp_write_12,P_ERROR,swLogPrintf("tcp_write : check that first pbuf can hold the complete seglen ");
293888,603072511,0,0,PLAT_AP,LWIP_CORE,tcp_write_13,P_ERROR,swLogPrintf("oversize = = 0 ");
293888,603074559,0,0,PLAT_AP,LWIP_CORE,tcp_write_14,P_WARNING,swLogPrintf("tcp_write : could not allocate memory for zero-copy pbu ");
293888,603076607,0,0,PLAT_AP,LWIP_CORE,tcp_write_15,P_WARNING,swLogPrintf("tcp_write : could not allocate memory for header pbuf ");
293888,603076864,0,0,PLAT_AP,LWIP_CORE,tcp_write_16,P_WARNING,swLogPrintf("tcp_write : queue too long %u ( %d ) ");
293888,603080703,0,0,PLAT_AP,LWIP_CORE,tcp_write_17,P_ERROR,swLogPrintf("prev_seg ! = NULL ");
293888,603080960,0,0,PLAT_AP,LWIP_CORE,tcp_write_18,P_INFO,swLogPrintf("tcp_write : queueing %u : %u ");
293888,603084799,0,0,PLAT_AP,LWIP_CORE,tcp_write_19,P_ERROR,swLogPrintf("last_unsent->oversize_left > = oversize_used ");
293888,603086847,0,0,PLAT_AP,LWIP_CORE,tcp_write_20,P_ERROR,swLogPrintf("tcp_write : cannot concatenate when pcb->unsent is empty ");
293888,603088895,0,0,PLAT_AP,LWIP_CORE,tcp_write_21,P_ERROR,swLogPrintf("tcp_write : extension of reference requires reference ");
293888,603088896,0,0,PLAT_AP,LWIP_CORE,tcp_write_23,P_INFO,swLogPrintf("tcp_write : %u ( after enqueued ) ");
293888,603092991,0,0,PLAT_AP,LWIP_CORE,tcp_write_24,P_ERROR,swLogPrintf("tcp_write : valid queue length ");
293888,603092992,0,0,PLAT_AP,LWIP_CORE,tcp_write_27,P_ERROR,swLogPrintf("tcp_write : UL sequence state indicate fail , because the pcb 0x%x socket id is invalid ");
293888,603095040,0,0,PLAT_AP,LWIP_CORE,tcp_write_28,P_INFO,swLogPrintf("tcp_write : UL sequence state indicate success , the pcb socket id %u ");
293888,603099135,0,0,PLAT_AP,LWIP_CORE,tcp_write_25,P_ERROR,swLogPrintf("tcp_write : valid queue length2 ");
293888,603099136,0,0,PLAT_AP,LWIP_CORE,tcp_write_26,P_INFO,swLogPrintf("tcp_write : %u ( with mem err ) ");
293888,603101184,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_1,P_INFO,swLogPrintf("tcp_enqueue_flags : queuelen : %u ");
293888,603105279,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_2,P_ERROR,swLogPrintf("tcp_enqueue_flags : need either TCP_SYN or TCP_FIN in flags ( programmer violates API ) ");
293888,603105536,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_3,P_INFO,swLogPrintf("tcp_enqueue_flags : too long queue %u ( max %u ) ");
293888,603109375,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_4,P_ERROR,swLogPrintf("tcp_enqueue_flags : check that first pbuf can hold optlen ");
293888,603111423,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_5,P_ERROR,swLogPrintf("tcp_enqueue_flags : seg->tcphdr not aligned or invalid segment length ");
293888,603111936,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_6,P_INFO,swLogPrintf("tcp_enqueue_flags : queueing %u : %u ( 0x%x ) ");
293888,603113472,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_7,P_INFO,swLogPrintf("tcp_enqueue_flags : %u ( after enqueued ) ");
293888,603117567,0,0,PLAT_AP,LWIP_CORE,tcp_enqueue_flags_8,P_ERROR,swLogPrintf("tcp_enqueue_flags : invalid queue length ");
293888,603119615,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_4,P_INFO,swLogPrintf("tcp delay ack timer has enable ");
293888,603119616,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_3,P_INFO,swLogPrintf("enable tcp delay ack timer %u ");
293888,603123711,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_1,P_INFO,swLogPrintf("tcp_output : ( ACK ) could not allocate pbuf ");
293888,603123712,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_2,P_INFO,swLogPrintf("tcp_output : sending ACK for %u ");
293888,603126016,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_port_mapping_1,P_INFO,swLogPrintf("tcp_send_empty_ack : port mapping from %u to %u ");
293888,603127808,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_ded_cid_check_1,P_INFO,swLogPrintf("tcp_send_empty_ack : tcp pcb bind ded cid : %u ");
293888,603129856,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_ded_cid_check_2,P_INFO,swLogPrintf("tcp_send_empty_ack : tcp pcb bind ded cid : %u ");
293888,603133951,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_5,P_INFO,swLogPrintf("tcp delay ack timer has enable ");
293888,603133952,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_6,P_INFO,swLogPrintf("enable tcp delay ack timer %u ");
293888,603138047,0,0,PLAT_AP,LWIP_CORE,tcp_send_empty_ack_7,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,603140095,0,0,PLAT_AP,LWIP_CORE,tcp_output_1,P_ERROR,swLogPrintf("don ' t call tcp_output for listen-pcbs ");
293888,603140096,0,0,PLAT_AP,LWIP_CORE,tcp_output_2,P_INFO,swLogPrintf("tcp_output : nothing to send 0x%x ");
293888,603142912,0,0,PLAT_AP,LWIP_CORE,tcp_output_3,P_INFO,swLogPrintf("tcp_output : snd_wnd ( %u ) cwnd ( %u ) wnd ( %u ) seq = = NULL , ack %u ");
293888,603145472,0,0,PLAT_AP,LWIP_CORE,tcp_output_4,P_INFO,swLogPrintf("tcp_output : snd_wnd ( %u ) cwnd ( %u ) wnd ( %u ) effwnd ( %u ) seq ( %u ) , ack %u ");
293888,603148287,0,0,PLAT_AP,LWIP_CORE,tcp_output_5,P_ERROR,swLogPrintf("RST not expected here! ");
293888,603149824,0,0,PLAT_AP,LWIP_CORE,tcp_output_6,P_INFO,swLogPrintf("tcp_output : snd_wnd ( %u ) cwnd ( %u ) wnd ( %u ) effwnd ( %u ) seq ( %u ) , ack %u i ( %u ) ");
293888,603152383,0,0,PLAT_AP,LWIP_CORE,tcp_output_8,P_SIG,swLogPrintf("tcp output fail because of UL suspending , it will retry later when retry time timeout ");
293888,603154431,0,0,PLAT_AP,LWIP_CORE,tcp_output_7,P_INFO,swLogPrintf("remove tcp delay ack timer ");
293888,603154688,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_5,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,603158527,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_6,P_WARNING,swLogPrintf("tcp retry timer has active ");
293888,603158528,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_tcp_total_retry_time_1,P_INFO,swLogPrintf("enable tcp total retry timer %u ");
293888,603162623,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_tcp_total_retry_time_2,P_WARNING,swLogPrintf("tcp total retry timer has active ");
293888,603162880,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_8,P_INFO,swLogPrintf("tcp output segment pbuf data ticktype %u , dataLifetime %u ");
293888,603164928,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_1,P_INFO,swLogPrintf("tcp_output_segment : rtseq %u , rttest %u ");
293888,603168767,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_10,P_INFO,swLogPrintf("tcp_output_segment : pcb in SYS_SENT state , discard rttest ");
293888,603169024,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_2,P_INFO,swLogPrintf("tcp_output_segment : %u : %u ");
293888,603171328,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_port_mapping_1,P_INFO,swLogPrintf("tcp_output_segment : port mapping from %u to %u , cid %u ");
293888,603172864,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_ded_cid_check_1,P_INFO,swLogPrintf("tcp_output_segment : tcp pcb bind ded cid : %u ");
293888,603174912,0,0,PLAT_AP,LWIP_CORE,tcp_output_segment_ded_cid_check_2,P_INFO,swLogPrintf("tcp_output_segment : tcp pcb bind ded cid : %u ");
293888,603179007,0,0,PLAT_AP,LWIP_CORE,tcp_rst_1,P_INFO,swLogPrintf("tcp_rst : could not allocate memory for pbuf ");
293888,603181055,0,0,PLAT_AP,LWIP_CORE,tcp_rst_2,P_ERROR,swLogPrintf("check that first pbuf can hold struct tcp_hdr ");
293888,603181568,0,0,PLAT_AP,LWIP_CORE,tcp_rst_port_mapping_1,P_INFO,swLogPrintf("tcp_rst : port mapping from %u to %u , cid %u ");
293888,603183360,0,0,PLAT_AP,LWIP_CORE,tcp_rst_3,P_INFO,swLogPrintf("tcp_rst : seqno %u ackno %u ");
293888,603185664,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_1,P_INFO,swLogPrintf("tcp_receive : dupacks %u ( %u ) fast retransmit %u ");
293888,603187456,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_2,P_INFO,swLogPrintf("tcp_receive : The minimum value for ssthresh %u should be min 2 mss %u ");
293888,603189248,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_3,P_INFO,swLogPrintf("remove tcp retry timer , pcb 0x%x ");
293888,603191552,0,0,PLAT_AP,LWIP_CORE,tcp_rexmit_fast_4,P_INFO,swLogPrintf("enable tcp retry timer %u , pcb 0x%x ");
293888,603195391,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_1,P_INFO,swLogPrintf("tcp_keepalive : sending KEEPALIVE probe to ");
293888,603195904,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_2,P_INFO,swLogPrintf("tcp_keepalive : tcp_ticks %u pcb->tmr %u pcb->keep_cnt_sent %u ");
293888,603199487,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_3,P_WARNING,swLogPrintf("tcp_keepalive : could not allocate memory for pbuf ");
293888,603200000,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_port_mapping_1,P_INFO,swLogPrintf("tcp_keepalive : port mapping from %u to %u , cid %u ");
293888,603201536,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_if_src_ded_cid_check_1,P_INFO,swLogPrintf("tcp_keepalive : tcp pcb bind ded cid : %u ");
293888,603203584,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_if_src_ded_cid_check_2,P_INFO,swLogPrintf("tcp_keepalive : tcp pcb bind ded cid : %u ");
293888,603205888,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_5,P_INFO,swLogPrintf("tcp_keepalive : pbuf tick type %u , dataLifeTime %u ");
293888,603208192,0,0,PLAT_AP,LWIP_CORE,tcp_keepalive_6,P_INFO,swLogPrintf("tcp_keepalive : seqno %u ackno %u err %d ");
293888,603211775,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_1,P_INFO,swLogPrintf("tcp_zero_window_probe : sending ZERO WINDOW probe to ");
293888,603212288,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_2,P_INFO,swLogPrintf("tcp_zero_window_probe : tcp_ticks %u pcb->tmr %u pcb->keep_cnt_sent %u ");
293888,603215871,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_3,P_WARNING,swLogPrintf("tcp_zero_window_probe : no memory for pbuf ");
293888,603216128,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_6,P_INFO,swLogPrintf("tcp_zero_window_probe : pbuf ticktype %u , datalifetime %u ");
293888,603218432,0,0,PLAT_AP,LWIP_CORE,tcp_zero_window_probe_7,P_INFO,swLogPrintf("tcp_zero_window_probe : seqno %u ackno %u err %d ");
293888,603222015,0,0,PLAT_AP,LWIP_CORE,sys_timeout_debug_1,P_ERROR,swLogPrintf("sys_timeout : timeout ! = NULL , alloc sys_timeout fail ");
293888,603224063,0,0,PLAT_AP,LWIP_CORE,tcpip_idle_timer_1,P_INFO,swLogPrintf("tcpip idle timer timeout ");
293888,603226111,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_1,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv6 rs retry timer ");
293888,603228159,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_2,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv6 address dad timer ");
293888,603228160,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_3,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp retry timer , arg 0x%x ");
293888,603232255,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_16,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp total retry timer ");
293888,603234303,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_4,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp delay ack timer ");
293888,603236351,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_5,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp pending fin timer ");
293888,603238399,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_6,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp refuse data timer ");
293888,603240447,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_7,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp fin wait2 timer ");
293888,603242495,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_8,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp ooseq timer ");
293888,603244543,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_9,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp syncrcv timer ");
293888,603246591,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_10,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp lastack timer ");
293888,603248639,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_11,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp timewait timer ");
293888,603250687,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_pool_check,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp pool timer ");
293888,603252735,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_keep_alive_check,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist keep alive timer ");
293888,603254783,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_close_local_abort_check,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist tcp close local abort timer ");
293888,603256831,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_12,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv4 frag timer ");
293888,603258879,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_13,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist ipv6 frag timer ");
293888,603260927,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_14,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist DNS retry timer ");
293888,603262975,0,0,PLAT_AP,LWIP_CORE,sys_check_timeouts_for_hib_sleep2_15,P_INFO,swLogPrintf("sys_check_timeouts_for_hib_sleep2 exist idle timer ");
293888,603262976,0,0,PLAT_AP,LWIP_CORE,udp_get_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("udp_get_curr_hib_sleep2_pcb_num %u ");
293888,603265024,0,0,PLAT_AP,LWIP_CORE,udp_add_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("udp_add_hib_sleep2_context_pcb %u ");
293888,603267072,0,0,PLAT_AP,LWIP_CORE,udp_del_curr_hib_sleep2_pcb_num_1,P_INFO,swLogPrintf("udp_del_curr_hib_sleep2_pcb_num %u ");
293888,603269120,0,0,PLAT_AP,LWIP_CORE,udp_enable_hib_sleep2_mode_1,P_INFO,swLogPrintf("udp_enable_hib_sleep2_mode %u ");
293888,603273215,0,0,PLAT_AP,LWIP_CORE,udp_disable_hib_sleep2_mode_1,P_INFO,swLogPrintf("udp_disable_hib_sleep2_mode ");
293888,603273216,0,0,PLAT_AP,LWIP_CORE,udp_add_hib_sleep2_context_pcb_1,P_INFO,swLogPrintf("udp_add_hib_sleep2_context_pcb alloc new udp_pcb success , sockid %d ");
293888,603277311,0,0,PLAT_AP,LWIP_CORE,udp_add_hib_sleep2_context_pcb_2,P_ERROR,swLogPrintf("udp_add_hib_sleep2_context_pcb alloc new udp_pcb fail ");
293888,603279359,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_active_1,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_active ");
293888,603279360,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_active_2,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_active change pcb 0x%x state to enable_active state ");
293888,603283455,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_deactive_1,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_deactive ");
293888,603283456,0,0,PLAT_AP,LWIP_CORE,udp_check_hib_sleep2_pcb_deactive_2,P_INFO,swLogPrintf("udp_check_hib_sleep2_pcb_deactive change pcb 0x%x state to enable_deactive state ");
293888,603287551,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_1,P_ERROR,swLogPrintf("udp_get_sock_info invalid fd ");
293888,603289599,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_2,P_INFO,swLogPrintf("udp_get_sock_info find adpat udp hib pcb ");
293888,603291647,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_3,P_INFO,swLogPrintf("udp_get_sock_info can not find adpat udp hib pcb ");
293888,603293695,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_1,P_ERROR,swLogPrintf("udp_get_sock_info_by_pcb invalid parameter ");
293888,603295743,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("udp_get_sock_info_by_pcb find adpat udp pcb ");
293888,603297791,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_3,P_INFO,swLogPrintf("udp_get_sock_info find adpat udp hib pcb ");
293888,603299839,0,0,PLAT_AP,LWIP_CORE,udp_get_sock_info_by_pcb_4,P_INFO,swLogPrintf("udp_get_sock_info_by_pcb can not find adpat udp pcb ");
293888,603299840,0,0,PLAT_AP,LWIP_CORE,udp_input_1,P_WARNING,swLogPrintf("udp_input : short UDP datagram ( %u bytes ) discarded ");
293888,603301888,0,0,PLAT_AP,LWIP_CORE,udp_input_2,P_INFO,swLogPrintf("udp_input : received datagram of length %u ");
293888,603304192,0,0,PLAT_AP,LWIP_CORE,udp_input_3,P_INFO,swLogPrintf("udp ( %u ) <-- ( %u ) ");
293888,603306240,0,0,PLAT_AP,LWIP_CORE,udp_input_4,P_INFO,swLogPrintf("pcb ( %u ) <-- ( %u ) ");
293888,603310079,0,0,PLAT_AP,LWIP_CORE,udp_input_5,P_INFO,swLogPrintf("udp_input : calculating checksum ");
293888,603312127,0,0,PLAT_AP,LWIP_CORE,udp_input_6,P_ERROR,swLogPrintf("pbuf_header failed ");
293888,603314175,0,0,PLAT_AP,LWIP_CORE,udp_input_7,P_INFO,swLogPrintf("udp_input : not for us ");
293888,603316223,0,0,PLAT_AP,LWIP_CORE,udp_input_8,P_WARNING,swLogPrintf("udp_input : not for us , and not reply icmp unreachable message ");
293888,603318271,0,0,PLAT_AP,LWIP_CORE,udp_input_9,P_WARNING,swLogPrintf("udp_input : UDP ( or UDP Lite ) datagram discarded due to failing checksum ");
293888,603320319,0,0,PLAT_AP,LWIP_CORE,udp_sendto_chksum_2,P_INFO,swLogPrintf("udp_sendto_chksum No route to ");
293888,603322367,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_2,P_INFO,swLogPrintf("udp_send : not yet bound to a port , binding now ");
293888,603324415,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_3,P_WARNING,swLogPrintf("udp_send : forced port bind failed ");
293888,603324928,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_port_mapping_1,P_INFO,swLogPrintf("udp_send : port mapping from %u to %u , cid %u ");
293888,603326464,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_ded_cid_check_1,P_INFO,swLogPrintf("udp_send : UDP pcb bind ded cid : %u ");
293888,603328512,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_ded_cid_check_2,P_INFO,swLogPrintf("udp_send : UDP pcb bind ded cid : %u ");
293888,603332607,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_4,P_WARNING,swLogPrintf("udp_send : could not allocate header ");
293888,603332864,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_5,P_INFO,swLogPrintf("udp_send : added header pbuf 0x%x before given pbuf 0x%x ");
293888,603334656,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_6,P_INFO,swLogPrintf("udp_send : added header in given pbuf 0x%x ");
293888,603338751,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_7,P_ERROR,swLogPrintf("check that first pbuf can hold struct udp_hdr ");
293888,603338752,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_8,P_INFO,swLogPrintf("udp_send : sending datagram of length %u ");
293888,603341056,0,0,PLAT_AP,LWIP_CORE,udp_sendto_if_src_chksum_12,P_INFO,swLogPrintf("udp_send : UDP packet checksum %u ip_output_if %u ");
293888,603342848,0,0,PLAT_AP,LWIP_CORE,udp_bind_1,P_INFO,swLogPrintf("udp_bind port = %u ");
293888,603346943,0,0,PLAT_AP,LWIP_CORE,udp_bind_2,P_WARNING,swLogPrintf("udp_bind : out of free UDP ports ");
293888,603346944,0,0,PLAT_AP,LWIP_CORE,udp_bind_3,P_INFO,swLogPrintf("udp_bind : local port %u already bound by another pcb ");
293888,603351039,0,0,PLAT_AP,LWIP_CORE,udp_bind_5,P_INFO,swLogPrintf("udp_bind : add active udp list ) ");
293888,603351040,0,0,PLAT_AP,LWIP_CORE,udp_bind_4,P_INFO,swLogPrintf("udp_bind : bound to port ( %u ) ");
293888,603353088,0,0,PLAT_AP,LWIP_CORE,udp_connect_1,P_INFO,swLogPrintf("udp_connect : connected to port ( %u ) ");
293888,603357183,0,0,PLAT_AP,LWIP_CORE,udp_connect_2,P_INFO,swLogPrintf("udp_bind : add active udp list ) ");
293888,603359231,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_1,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb : invalid parameter ");
293888,603361279,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_2,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb : malloc pbuf fail ");
293888,603361536,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_3,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb : reqeust_body 0x%x fail , len %d ");
293888,603363584,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_4,P_INFO,swLogPrintf("udp_send_pkg_to_pcb : reqeust_body 0x%x success , len %d ");
293888,603367423,0,0,PLAT_AP,LWIP_CORE,udp_send_pkg_to_pcb_5,P_ERROR,swLogPrintf("udp_send_pkg_to_pcb : the pcb is null ");
293888,603369471,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_state_ind_1,P_ERROR,swLogPrintf("udp_send_ul_state_ind : invalid parameter ");
293888,603369472,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_state_ind_body_len_check_1,P_ERROR,swLogPrintf("udp_send_ul_state_ind : invalid len %u big than &u ");
293888,603373567,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_state_ind_3,P_INFO,swLogPrintf("udp_send_ul_state_ind : no sequence state need indicate ");
293888,603375615,0,0,PLAT_AP,LWIP_CORE,udp_send_dns_resolve_result_1,P_ERROR,swLogPrintf("udp_send_dns_resolve_result : invalid parameter ");
293888,603377663,0,0,PLAT_AP,LWIP_CORE,udp_send_dns_resolve_result_2,P_ERROR,swLogPrintf("udp_send_dns_resolve_result : malloc fail ");
293888,603377664,0,0,PLAT_AP,LWIP_CORE,udp_send_ul_total_length_status_1,P_ERROR,swLogPrintf("udp_send_ul_state_ind : invalid len %u big than &u ");
293888,603381759,0,0,PLAT_AP,LWIP_CORE,udp_remove_1,P_INFO,swLogPrintf("udp_remove invalid pcb ");
293888,603383807,0,0,PLAT_AP,LWIP_CORE,udp_abort_1,P_ERROR,swLogPrintf("udp_abort invalid pcb ");
293888,603385855,0,0,PLAT_AP,LWIP_CORE,udp_abort_2,P_ERROR,swLogPrintf("udp_abort THE hib / sleep2 udp context pcb will abandon ");
293888,603387903,0,0,PLAT_AP,LWIP_CORE,udp_abort_3,P_ERROR,swLogPrintf("udp_abort invalid pcb errf ");
293888,603387904,0,0,PLAT_AP,LWIP_CORE,udp_netif_ip_addr_changed_1,P_INFO,swLogPrintf("udp_netif_ip_addr_changed : aborting UDP hib pcb 0x%x ");
293888,603389952,0,0,PLAT_AP,LWIP_CORE,udp_netif_enter_oos_state_1,P_INFO,swLogPrintf("udp_netif_enter_oos_state pcb 0x%x ");
293888,603392000,0,0,PLAT_AP,LWIP_CORE,udp_netif_exit_oos_state_1,P_INFO,swLogPrintf("udp_netif_exit_oos_state pcb 0x%x ");
293888,603394304,0,0,PLAT_AP,LWIP_CORE,udp_debug_print_1,P_INFO,swLogPrintf("UDP header : | %u | %u | ( src port , dest port ) ");
293888,603396352,0,0,PLAT_AP,LWIP_CORE,udp_debug_print_2,P_INFO,swLogPrintf("UDP header : | %u | %u | ( len , chksum ) ");
294912,603983871,0,0,PLAT_AP,LWIP_CORE_IP,NetifIp4PkgFwdWanFromLanSrcAddrProcess_1,P_VALUE,swLogPrintf("update ip4 src addr ");
294912,603985919,0,0,PLAT_AP,LWIP_CORE_IP,NetifIp4PkgFwdLanFromWanDestAddrProcess_1,P_VALUE,swLogPrintf("update ip4 dest addr ");
294912,603985920,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_1,P_INFO,swLogPrintf("icmp_input : short IP header ( %u bytes ) received ");
294912,603987968,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_2,P_INFO,swLogPrintf("icmp_input : short ICMP ( %u bytes ) received ");
294912,603992063,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_3,P_INFO,swLogPrintf("icmp_input : Not echoing to multicast pings ");
294912,603994111,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_4,P_INFO,swLogPrintf("icmp_input : Not echoing to broadcast pings ");
294912,603996159,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_5,P_INFO,swLogPrintf("icmp_input : ping ");
294912,603998207,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_6,P_INFO,swLogPrintf("icmp_input : bad ICMP echo received ");
294912,604000255,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_7,P_WARNING,swLogPrintf("icmp_input : checksum failed for received ICMP echo ");
294912,604002303,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_8,P_WARNING,swLogPrintf("icmp_input : allocating new pbuf failed ");
294912,604004351,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_9,P_ERROR,swLogPrintf("icmp_input : moving r->payload to icmp header failed ");
294912,604006399,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_10,P_WARNING,swLogPrintf("icmp_input : copying to new pbuf failed ");
294912,604008447,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_11,P_ERROR,swLogPrintf("icmp_input : restoring original p->payload failed ");
294912,604010495,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_12,P_WARNING,swLogPrintf("icmp_input : Can ' t move over header in packet ");
294912,604010496,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_13,P_WARNING,swLogPrintf("icmp_input : ip_output_if returned an error : %d ");
294912,604012800,0,0,PLAT_AP,LWIP_CORE_IP,icmp_input_14,P_WARNING,swLogPrintf("icmp_input : ICMP type %u code %u not supported ");
294912,604016639,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_response_1,P_WARNING,swLogPrintf("icmp_time_exceeded : failed to allocate pbuf for ICMP packet. ");
294912,604018687,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_response_2,P_ERROR,swLogPrintf("check that first pbuf can hold icmp message ");
294912,604020735,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_response_3,P_INFO,swLogPrintf("icmp_time_exceeded from ");
294912,604022783,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_responseto_1,P_WARNING,swLogPrintf("icmp_time_exceeded : failed to allocate pbuf for ICMP packet. ");
294912,604024831,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_responseto_2,P_ERROR,swLogPrintf("check that first pbuf can hold icmp message ");
294912,604026879,0,0,PLAT_AP,LWIP_CORE_IP,icmp_send_responseto_3,P_INFO,swLogPrintf("icmp_time_exceeded from ");
294912,604027648,0,0,PLAT_AP,LWIP_CORE_IP,ip4_route_1,P_VALUE,swLogPrintf("ip4_route : No route to %u.%u.%u.%u ");
294912,604029696,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_1,P_VALUE,swLogPrintf("ip4_forwardto : not forwarding LLA %u.%u.%u.%u ");
294912,604031744,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_2,P_VALUE,swLogPrintf("ip4_forwardto : no forwarding route for %u.%u.%u.%u ");
294912,604033792,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_3,P_VALUE,swLogPrintf("ip4_forwardto : forwarding packet to %u.%u.%u.%u ");
294912,604035328,0,0,PLAT_AP,LWIP_CORE_IP,ip4_forwardto_4,P_WARNING,swLogPrintf("ip4_forwardto : netif mtu %u littler than pkg len %u ");
294912,604039167,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_1,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd WAN ");
294912,604039424,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_2,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd WAN name %c%u ");
294912,604043263,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_3,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd LAN ");
294912,604043520,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_4,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd LAN name %c%u ");
294912,604047359,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_5,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd ETH LAN ");
294912,604047616,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_6,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd LAN name %c%u ");
294912,604051455,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_7,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd PPP LAN ");
294912,604051712,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_8,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd LAN name %c%u ");
294912,604055551,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_9,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd WAN ");
294912,604055808,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_10,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd WAN name %c%u ");
294912,604059647,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_11,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd LAN ");
294912,604059904,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_12,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd LAN name %c%u ");
294912,604063743,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_13,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd ETH LAN ");
294912,604064000,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_14,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd ETH LAN name %c%u ");
294912,604067839,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_15,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd PPP LAN ");
294912,604068096,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_16,P_VALUE,swLogPrintf("ip4_input_adpt_process dns pkg fwd PPP LAN name %c%u ");
294912,604071935,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_17,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd LAN and input ");
294912,604072192,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_18,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd ETH LAN and input name %c%u ");
294912,604074240,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_19,P_VALUE,swLogPrintf("ip4_input_adpt_process fwd PPP LAN and input name %c%u ");
294912,604078079,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_adpt_process_20,P_VALUE,swLogPrintf("ip4_input_adpt_process discard ");
294912,604078080,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_1,P_VALUE,swLogPrintf("IP packet dropped due to bad version number %u ");
294912,604080128,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_2,P_WARNING,swLogPrintf("ip4_input : short IP header ( %u bytes ) received , IP packet dropped ");
294912,604082432,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_3,P_WARNING,swLogPrintf("IP header ( len %u ) does not fit in first pbuf ( len %u ) , IP packet dropped ");
294912,604084480,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_4,P_WARNING,swLogPrintf("IP ( len %u ) is longer than pbuf ( len %u ) , IP packet dropped ");
294912,604086272,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_5,P_WARNING,swLogPrintf("Checksum ( 0x%x ) failed , IP packet dropped ");
294912,604089344,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_pre_13,P_VALUE,swLogPrintf("IP packet is a fragment ( id = 0x%x tot_len = %u len = %u MF = %u offset = %u ) , calling ip4_reass ( ) ");
294912,604091392,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_6,P_VALUE,swLogPrintf("ip_input : iphdr->dest 0x%x netif->ip_addr 0x%x ( 0x%x , 0x%x , 0x%x ) ");
294912,604092672,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_7,P_VALUE,swLogPrintf("ip4_input : packet accepted on interface %c%u ");
294912,604094464,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_9,P_VALUE,swLogPrintf("ip4_input : UDP packet to DHCP client port %u ");
294912,604098559,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_10,P_VALUE,swLogPrintf("ip4_input : DHCP packet accepted ");
294912,604100607,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_11,P_WARNING,swLogPrintf("ip4_input : packet source is not valid ");
294912,604102655,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_12,P_VALUE,swLogPrintf("ip4_input : packet not for us ");
294912,604102912,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_16,P_VALUE,swLogPrintf("ip4_input : p->len %u p->tot_len %u ");
294912,604104704,0,0,PLAT_AP,LWIP_CORE_IP,ip4_input_17,P_VALUE,swLogPrintf("Unsupported transport protocol %u ");
294912,604108799,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_2,P_WARNING,swLogPrintf("ip4_output : not enough room for IP header in pbuf ");
294912,604110847,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_3,P_ERROR,swLogPrintf("check that first pbuf can hold struct ip_hdr ");
294912,604111360,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_4,P_VALUE,swLogPrintf("ip4_output_if : %c%u %u ");
294912,604114943,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_5,P_VALUE,swLogPrintf("netif_loop_output ( ) ");
294912,604116991,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_6,P_VALUE,swLogPrintf("ip4_output_if : call netif->output ( ) ");
294912,604117248,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_if_opt_src_7,P_VALUE,swLogPrintf("ip4_output_if : call netif->output ( ) , ticktype %u , systick %u ");
294912,604119808,0,0,PLAT_AP,LWIP_CORE_IP,ip4_output_1,P_WARNING,swLogPrintf("ip4_output : No route to %u.%u.%u.%u ");
294912,604121856,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_1,P_VALUE,swLogPrintf("IP header : |%u|%u|%u|%u| ( v , hl , tos , len ) ");
294912,604124160,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_2,P_VALUE,swLogPrintf("IP header : |%u|%u%u%u|%u| ( id , flags , offset ) ");
294912,604125696,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_3,P_VALUE,swLogPrintf("IP header : |%u|%u|%u| ( ttl , proto , chksum ) ");
294912,604128000,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_4,P_VALUE,swLogPrintf("IP header : |%u|%u|%u|%u| ( src ) ");
294912,604130048,0,0,PLAT_AP,LWIP_CORE_IP,ip4_debug_print_5,P_VALUE,swLogPrintf("IP header : |%u|%u|%u|%u| ( dest ) ");
294912,604131328,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_tmr_1,P_VALUE,swLogPrintf("ip_reass_tmr : timer dec %u ");
294912,604135423,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_tmr_2,P_VALUE,swLogPrintf("ip_reass_tmr : timer timed out ");
294912,604137471,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_1,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram : prev ! = ipr ");
294912,604139519,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_2,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram : prev->next = = ipr ");
294912,604141567,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_3,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram1 : pbufs_freed + clen < = 0xffff ");
294912,604143615,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_4,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram2 : pbufs_freed + clen < = 0xffff ");
294912,604145663,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_free_complete_datagram_5,P_ERROR,swLogPrintf("ip_reass_free_complete_datagram2 : ip_reass_pbufcount > = clen ");
294912,604147711,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_enqueue_new_datagram_1,P_WARNING,swLogPrintf("Failed to alloc reassdata struct ");
294912,604149759,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_dequeue_datagram_1,P_WARNING,swLogPrintf("sanity check linked list ");
294912,604151807,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_1,P_ERROR,swLogPrintf("sizeof ( struct ip_reass_helper ) < = IP_HLEN ");
294912,604153855,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_2,P_ERROR,swLogPrintf("check fragments don ' t overlap ");
294912,604155903,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_3,P_ERROR,swLogPrintf("no previous fragment , this must be the first fragment ");
294912,604157951,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_chain_frag_into_datagram_and_validate_4,P_ERROR,swLogPrintf("sanity check fail or validate_datagram : next_pbuf! = NULL ");
294912,604159999,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_1,P_WARNING,swLogPrintf("ip4_reass : IP options currently not supported! ");
294912,604160512,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_2,P_VALUE,swLogPrintf("ip4_reass : Overflow condition : pbufct = %d , clen = %d , MAX = %d ");
294912,604162048,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_3,P_VALUE,swLogPrintf("ip4_reass : matching previous fragment ID = %x ");
294912,604166143,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_overlapp_check_1,P_VALUE,swLogPrintf("ip4_reass : invalid reass pkg , drop it ");
294912,604166144,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_4,P_VALUE,swLogPrintf("ip4_reass : last fragment seen , total len %u ");
294912,604168192,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_5,P_VALUE,swLogPrintf("ip_reass_pbufcount : %d out ");
294912,604172287,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_6,P_VALUE,swLogPrintf("ip4_reass : nullreturn ");
294912,604174335,0,0,PLAT_AP,LWIP_CORE_IP,ip_frag_free_pbuf_custom_ref_1,P_ERROR,swLogPrintf("ip_frag_free_pbuf_custom_ref : p ! = NULL ");
294912,604176383,0,0,PLAT_AP,LWIP_CORE_IP,ipfrag_free_pbuf_custom_1,P_ERROR,swLogPrintf("ipfrag_free_pbuf_custom : pcr ! = NULL or pcr = = p ");
294912,604178431,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_1,P_ERROR,swLogPrintf("ip4_frag ( ) does not support IP options ");
294912,604180479,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_2,P_ERROR,swLogPrintf("ip_frag ( ) : MF already set ");
294912,604182527,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_4,P_ERROR,swLogPrintf("this needs a pbuf in one piece!2 ");
294912,604183552,0,0,PLAT_AP,LWIP_CORE_IP,ip4_frag_5,P_INFO,swLogPrintf("the new pbuf bexceptdata %u , dataRai %u , ticktype %u , datalifetime %u , imsdataflag %u ");
294912,604186623,0,0,PLAT_AP,LWIP_CORE_IP,ip_reass_timeout_1,P_VALUE,swLogPrintf("ip_reass_timeout : timer timed out ");
294912,604188671,0,0,PLAT_AP,LWIP_CORE_IP,tcpip_ip4_reass_timer_1,P_VALUE,swLogPrintf("tcpip_ip4_reass_timer : timeout ");
294912,604188672,0,0,PLAT_AP,LWIP_CORE_IP,tcpip_ip4_reass_timer_2,P_VALUE,swLogPrintf("tcpip_ip4_reass_timer : enable ip4_rease_timer %u ");
294912,604192767,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_timer_needed_1,P_VALUE,swLogPrintf("ip4_reass_timer_needed ");
294912,604192768,0,0,PLAT_AP,LWIP_CORE_IP,ip4_reass_timer_needed_2,P_VALUE,swLogPrintf("ip4_reass_timer_needed active tcpip_ip4_reass_timer %u ");
294912,604196863,0,0,PLAT_AP,LWIP_CORE_IP,icmp6_send_response_1,P_INFO,swLogPrintf("icmp_time_exceeded : failed to allocate pbuf for ICMPv6 packet ");
294912,604198911,0,0,PLAT_AP,LWIP_CORE_IP,icmp6_send_response_2,P_ERROR,swLogPrintf("check that first pbuf can hold icmp 6message ");
294912,604200959,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_1,P_VALUE,swLogPrintf("ip6_forward : not forwarding link-local address. ");
294912,604202752,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_2,P_VALUE,swLogPrintf("ip6_forward : no route for %x : %x : %x : %x : %x : %x : %x : %x ");
294912,604205055,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_3,P_VALUE,swLogPrintf("ip6_forward : not bouncing packets back on incoming interface. ");
294912,604206848,0,0,PLAT_AP,LWIP_CORE_IP,ip6_forward_4,P_VALUE,swLogPrintf("ip6_forward : forwarding packet to%x : %x : %x : %x : %x : %x : %x : %x ");
294912,604207104,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_1,P_VALUE,swLogPrintf("IPv6 packet dropped due to bad version number %u ");
294912,604209408,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_2,P_WARNING,swLogPrintf("IPv6 header ( len %u ) does not fit in first pbuf ( len %u ) , IP packet dropped. ");
294912,604211456,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_3,P_WARNING,swLogPrintf("IPv6 ( plen %u ) is longer than pbuf ( len %u ) , IP packet dropped. ");
294912,604213504,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_17,P_VALUE,swLogPrintf("ip6_input : p->len %u p->tot_len %u ");
294912,604215552,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_solicited_1,P_SIG,swLogPrintf("ip6_input : solicited packet accepted on interface %c%u ");
294912,604217600,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_4,P_VALUE,swLogPrintf("ip6_input : solicited node packet accepted on interface %c%u ");
294912,604219648,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_5,P_VALUE,swLogPrintf("ip6_input : packet accepted on interface %c%u ");
294912,604223487,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_6,P_VALUE,swLogPrintf("ip6_input : packet with src ANY_ADDRESS dropped ");
294912,604225535,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_7,P_VALUE,swLogPrintf("ip6_input : packet not for us ");
294912,604227583,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_8,P_VALUE,swLogPrintf("ip6_input : packet with Hop-by-Hop options header ");
294912,604227840,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_9,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped1 ");
294912,604231679,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_10,P_VALUE,swLogPrintf("ip6_input : packet with Destination options header ");
294912,604231936,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_11,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped2 ");
294912,604235775,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_12,P_VALUE,swLogPrintf("ip6_input : packet with Routing header ");
294912,604236032,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_13,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped3 ");
294912,604239871,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_14,P_VALUE,swLogPrintf("ip6_input : packet with Fragment header ");
294912,604240128,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_15,P_WARNING,swLogPrintf("IPv6 options header ( hlen %u ) does not fit in first pbuf ( len %u ) , IPv6 packet dropped4 ");
294912,604241920,0,0,PLAT_AP,LWIP_CORE_IP,ip6_input_18,P_WARNING,swLogPrintf("ip6_input : Unsupported transport protocol %u ");
294912,604246015,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_1,P_WARNING,swLogPrintf("ip6_output_if : No suitable source address for packet ");
294912,604248063,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_1,P_WARNING,swLogPrintf("ip6_output_if_src : not enough room for IPv6 header in pbuf ");
294912,604250111,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_2,P_ERROR,swLogPrintf("ip6_output_if_src : check that first pbuf can hold struct ip6_hdr ");
294912,604250624,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_3,P_VALUE,swLogPrintf("ip6_output_if : %c%u %u ");
294912,604254207,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_4,P_VALUE,swLogPrintf("netif_loop_output ( ) ");
294912,604256255,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_5,P_VALUE,swLogPrintf("netif->output_ip6 ( ) ");
294912,604256512,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_if_src_6,P_VALUE,swLogPrintf("netif->output_ip6 ( ) , ticktype %u , systick %u ");
294912,604260096,0,0,PLAT_AP,LWIP_CORE_IP,ip6_output_1,P_VALUE,swLogPrintf("ip6_output : no route for %x : %x : %x : %x : %x : %x : %x : %x ");
294912,604260864,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_1,P_VALUE,swLogPrintf("IPv6 header : |%u|%u|%u| ( ver , class , flow ) ");
294912,604262912,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_2,P_VALUE,swLogPrintf("IPv6 header : |%u|%u|%u| ( plen , nexth , hopl ) ");
294912,604266240,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_3,P_VALUE,swLogPrintf("IPv6 header : src %x : %x : %x : %x : %x : %x : %x : %x ");
294912,604268288,0,0,PLAT_AP,LWIP_CORE_IP,ip6_debug_print_4,P_VALUE,swLogPrintf("IPv6 header : dest %x : %x : %x : %x : %x : %x : %x : %x ");
294912,604270591,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_tmr_1,P_ERROR,swLogPrintf("sizeof ( struct ip6_reass_helper ) < = IP6_FRAG_HLEN , set IPV6_FRAG_COPYHEADER to 1 ");
294912,604272639,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_1,P_ERROR,swLogPrintf("ip6_reass_free : moving p->payload to ip6 header failed ");
294912,604272640,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_old,P_INFO,swLogPrintf("ip6_reass_free old id 0x%x ");
294912,604276735,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_2,P_ERROR,swLogPrintf("pbufs_freed + clen < = 0xffff 1 ");
294912,604278783,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_3,P_ERROR,swLogPrintf("pbufs_freed + clen < = 0xffff 2 ");
294912,604280831,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_free_complete_datagram_4,P_ERROR,swLogPrintf("ip_reass_pbufcount > = clen ");
294912,604282879,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_2,P_ERROR,swLogPrintf("sizeof ( struct ip6_reass_helper ) < = IP6_FRAG_HLEN , set IPV6_FRAG_COPYHEADER to 1 ");
294912,604284927,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_3,P_ERROR,swLogPrintf("check fragments don ' t overlap ");
294912,604286975,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_4,P_ERROR,swLogPrintf("no previous fragment , this must be the first fragment! ");
294912,604289023,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_7,P_ERROR,swLogPrintf("sanity check linked list ");
294912,604291071,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_8,P_ERROR,swLogPrintf("ip6_reass : moving p->payload to ip6 header failed ");
294912,604293119,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_free_pbuf_custom_ref_1,P_ERROR,swLogPrintf("ip6_frag_free_pbuf_custom_ref p ! = NULL ");
294912,604295167,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_free_pbuf_custom_1,P_ERROR,swLogPrintf("ip6_frag_free_pbuf_custom p ! = NULL or pcr = = p ");
294912,604297215,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_2,P_ERROR,swLogPrintf("ip6_frag this needs a pbuf in one piece!2 ");
294912,604298240,0,0,PLAT_AP,LWIP_CORE_IP,ip6_frag_3,P_INFO,swLogPrintf("the new pbuf bexceptdata %u , dataRai %u , ticktype %u , datalifetime %u , imsdataflag %u ");
294912,604301311,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_timer_needed_1,P_VALUE,swLogPrintf("ip6_reass_timer_needed ");
294912,604303359,0,0,PLAT_AP,LWIP_CORE_IP,ip6_reass_timer_needed_2,P_VALUE,swLogPrintf("ip6_reass_timer_needed active tcpip_ip6_reass_timer ");
294912,604305407,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_rs_refresh_1,P_INFO,swLogPrintf("remove nd6 rs refresh timer ");
294912,604305408,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_rs_refresh_2,P_INFO,swLogPrintf("nd6 enable rs refresh timer %u ");
294912,604309503,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_disable_ra_1,P_INFO,swLogPrintf("nd6_send_disable_ra the netif linklocal address is invalid , cancel send disable RA packet ");
294912,604310016,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_disable_ra_2,P_INFO,swLogPrintf("nd6_send_disable_ra , lladdr_opt_len %u , mtu_opt_len %u , prefix_opt_len %u ");
294912,604313599,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_ra_1,P_INFO,swLogPrintf("nd6_send_ra the netif linklocal address is invalid , cancel send RA packet ");
294912,604314368,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_ra_2,P_INFO,swLogPrintf("nd6_send_ra , lladdr_opt_len %u , mtu_opt_len %u , prefix_opt_len %u , rdns_opt_len %u ");
294912,604317695,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_1,P_ERROR,swLogPrintf("invalid parameter ");
294912,604319743,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_2,P_ERROR,swLogPrintf("nd6_enable_ip6_ra_server allocate fail ");
294912,604321791,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_3,P_INFO,swLogPrintf("nd6_enable_ip6_ra_server allocate send un solicitate RA success ");
294912,604323839,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_retrans_timer_check_1,P_INFO,swLogPrintf("nd6_enable_ip6_ra_server close ra server first ");
294912,604325887,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_4,P_ERROR,swLogPrintf("nd6_enable_ip6_ra_server allocate send unsolicitate RA fail ");
294912,604327935,0,0,PLAT_AP,LWIP_CORE_IP,nd6_enable_ip6_ra_server_5,P_INFO,swLogPrintf("nd6_enable_ip6_ra_server allocate disable send un solicitate ");
294912,604329983,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_1,P_ERROR,swLogPrintf("invalid parameter ");
294912,604332031,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_2,P_WARNING,swLogPrintf("can not find IPV6 RA server data ");
294912,604334079,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_3,P_INFO,swLogPrintf("nd6_resend_ip6_ra_server send un solicitate RA success ");
294912,604336127,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_retrans_timer_check_1,P_INFO,swLogPrintf("nd6_resend_ip6_ra_server close ra server first ");
294912,604338175,0,0,PLAT_AP,LWIP_CORE_IP,nd6_resend_ip6_ra_server_4,P_ERROR,swLogPrintf("nd6_resend_ip6_ra_server send unsolicitate RA fail ");
294912,604340223,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_1,P_ERROR,swLogPrintf("invalid parameter ");
294912,604342271,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_2,P_INFO,swLogPrintf("disable ipv6 ra retrans timer ");
294912,604344319,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_3,P_INFO,swLogPrintf("nd6_disable_ip6_ra_server allocate send un solicitate RA success ");
294912,604346367,0,0,PLAT_AP,LWIP_CORE_IP,nd6_disable_ip6_ra_server_4,P_ERROR,swLogPrintf("nd6_disable_ip6_ra_server allocate send unsolicitate RA fail ");
294912,604346368,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_NA_retry_timer,P_INFO,swLogPrintf("nd6_input , receive NS packet , disable NS retry timer 0x%x ");
294912,604350463,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_1,P_INFO,swLogPrintf("nd6_input , receive RS packet ");
294912,604352511,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_2,P_WARNING,swLogPrintf("nd6_input , receive RS packet , but not exist ra server data ");
294912,604354559,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_3,P_INFO,swLogPrintf("nd6_input , receive RS packet , send RA success ");
294912,604356607,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_RS_4,P_ERROR,swLogPrintf("nd6_input , receive RS packet , send RA fail ");
294912,604358655,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_13,P_INFO,swLogPrintf("nd6_input , receive RA packet , process it depend on the linklocal address is valid ");
294912,604360703,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_6,P_INFO,swLogPrintf("remove nd6 rs retry timer ");
294912,604362751,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_14,P_INFO,swLogPrintf("nd6_input , receive RA packet , but netif without linklocal address , drop it ");
294912,604364799,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_1,P_INFO,swLogPrintf("remove nd6 default router entry timer ");
294912,604364800,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_2,P_INFO,swLogPrintf("nd6 default router entry timer %u ");
294912,604368895,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_3,P_INFO,swLogPrintf("remove nd6 prefix entry timer ");
294912,604368896,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_4,P_INFO,swLogPrintf("nd6 prefix entry timer %u ");
294912,604371456,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_8,P_INFO,swLogPrintf("p6_prefix_info add / update active_time %u , life_time %u , cid %u ");
294912,604375039,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_12,P_INFO,swLogPrintf("active nd6 address rs refresh timer has active ");
294912,604377087,0,0,PLAT_AP,LWIP_CORE_IP,nd6_input_invalid_prefix_info,P_ERROR,swLogPrintf("nd6_input receive RA with invalid prefix information ");
294912,604377344,0,0,PLAT_AP,LWIP_CORE_IP,nd6_neighbor_cache_process_1,P_INFO,swLogPrintf("nd6_neighbor_cache_process enable nd6 ns 0x%x retry timer %u ");
294912,604381183,0,0,PLAT_AP,LWIP_CORE_IP,nd6_router_entry_timer_handler_1,P_INFO,swLogPrintf("nd6_router_entry_timer_handler timeout ");
294912,604383231,0,0,PLAT_AP,LWIP_CORE_IP,nd6_router_entry_timer_handler_2,P_ERROR,swLogPrintf("nd6_router_entry_timer_handler invalid argument ");
294912,604385279,0,0,PLAT_AP,LWIP_CORE_IP,nd6_prefix_entry_timer_handler_1,P_INFO,swLogPrintf("nd6_prefix_entry_timer_handler timeout ");
294912,604387327,0,0,PLAT_AP,LWIP_CORE_IP,nd6_prefix_entry_timer_handler_2,P_ERROR,swLogPrintf("nd6_prefix_entry_timer_handler invalid argument ");
294912,604389375,0,0,PLAT_AP,LWIP_CORE_IP,nd6_address_dad_timer_handler_1,P_INFO,swLogPrintf("nd6_address_dad_timer_handler timeout ");
294912,604391423,0,0,PLAT_AP,LWIP_CORE_IP,nd6_address_dad_timer_handler_2,P_ERROR,swLogPrintf("nd6_address_dad_timer_handler invalid argument ");
294912,604391424,0,0,PLAT_AP,LWIP_CORE_IP,nd6_address_dad_timer_handler_3,P_INFO,swLogPrintf("nd6 address dad timer %u ");
294912,604395519,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_retry_timer_handler_1,P_INFO,swLogPrintf("nd6_rs_retry_timer_handler timeout ");
294912,604397567,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_retry_timer_handler_2,P_ERROR,swLogPrintf("nd6_rs_retry_timer_handler invalid argument ");
294912,604397568,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_retry_timer_handler_3,P_INFO,swLogPrintf("nd6 rs retry timer %u ");
294912,604401663,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_refresh_timer_handler_1,P_INFO,swLogPrintf("nd6_rs_refresh_timer_handler timeout ");
294912,604403711,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_refresh_timer_handler_2,P_ERROR,swLogPrintf("nd6_rs_refresh_timer_handler invalid argument ");
294912,604403712,0,0,PLAT_AP,LWIP_CORE_IP,nd6_rs_refresh_timer_handler_3,P_INFO,swLogPrintf("nd6 rs refresh timer %u ");
294912,604407807,0,0,PLAT_AP,LWIP_CORE_IP,nd6_start_rs_process_1,P_ERROR,swLogPrintf("nd6_start_rs_process invalid argument ");
294912,604409855,0,0,PLAT_AP,LWIP_CORE_IP,nd6_start_rs_process_2,P_WARNING,swLogPrintf("nd6 not trigger rs procedure ");
294912,604409856,0,0,PLAT_AP,LWIP_CORE_IP,nd6_start_rs_process_3,P_INFO,swLogPrintf("nd6 rs retry timer %u ");
294912,604413951,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ns_retry_timer_handler_1,P_ERROR,swLogPrintf("nd6_ns_retry_timer_handler invalid argument ");
294912,604413952,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ns_retry_timer_handler_2,P_INFO,swLogPrintf("nd6 ns retry has retry total times %u ");
294912,604416256,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ns_retry_timer_handler_3,P_INFO,swLogPrintf("nd6 ns 0x%x retry timer %u ");
294912,604420095,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_1,P_INFO,swLogPrintf("nd6_ra_retrans_timer_handler timeout ");
294912,604422143,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_2,P_ERROR,swLogPrintf("nd6_ra_retrans_timer_handler invalid argument ");
294912,604424191,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_server_data_check_1,P_ERROR,swLogPrintf("nd6_ra_retrans_timer_handler invalid ra server data ");
294912,604426239,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_3,P_INFO,swLogPrintf("nd6_ra_retrans_timer_handler send unsolicitate RA success ");
294912,604428287,0,0,PLAT_AP,LWIP_CORE_IP,nd6_ra_retrans_timer_handler_4,P_ERROR,swLogPrintf("nd6_ra_retrans_timer_handler send unsolicitat RA fail ");
294912,604430335,0,0,PLAT_AP,LWIP_CORE_IP,nd6_send_rs_1,P_INFO,swLogPrintf("nd6_send_rs the netif linklocal address is invalid , cancel send RS packet ");
294912,604430592,0,0,PLAT_AP,LWIP_CORE_IP,nd6_queue_packet_1,P_INFO,swLogPrintf("ipv6 : queued packet 0x%x on neighbor entry %d ");
294912,604432384,0,0,PLAT_AP,LWIP_CORE_IP,nd6_queue_packet_2,P_INFO,swLogPrintf("ipv6 : could not queue a copy of packet 0x%x ( out of memory ");
294912,604434432,0,0,PLAT_AP,LWIP_CORE_IP,nd6_queue_packet_4,P_INFO,swLogPrintf("ipv6 : 2 could not queue a copy of packet 0x%x ( out of memory ");
294912,604438527,0,0,PLAT_AP,LWIP_CORE_IP,nd6_free_q_1,P_ERROR,swLogPrintf("nd6_free_q : q ! = NULL or q->p ! = NULL ");
294912,604440575,0,0,PLAT_AP,LWIP_CORE_IP,nd6_free_q_2,P_ERROR,swLogPrintf("nd6_free_q : r->p ! = NULL ");
294912,604442623,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_1,P_INFO,swLogPrintf("remove nd6 rs retry timer ");
294912,604444671,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_2,P_INFO,swLogPrintf("remove nd6 rs refresh timer ");
294912,604446719,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_3,P_INFO,swLogPrintf("remove nd6 router entry timer ");
294912,604448767,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_4,P_INFO,swLogPrintf("remove nd6 address dad timer ");
294912,604450815,0,0,PLAT_AP,LWIP_CORE_IP,nd6_cleanup_netif_5,P_INFO,swLogPrintf("remove nd6 prefix entry timer ");
295936,606078976,0,0,PLAT_AP,LWIP_API,NetMgrAdptGetNetInfoCallback_ded_cid,P_INFO,swLogPrintf("can ' t find netif for CID : %d , try dedicated ");
295936,606083071,0,0,PLAT_AP,LWIP_API,netconn_apimsg_1,P_ERROR,swLogPrintf("netconn_apimsg : SYS new sem fail ");
295936,606085119,0,0,PLAT_AP,LWIP_API,netconn_new_with_proto_and_callback_1,P_ERROR,swLogPrintf("netconn_new_with_proto_and_callback : freeing conn without freeing pcb or conn has no recvmbox ");
295936,606087167,0,0,PLAT_AP,LWIP_API,netconn_new_with_proto_and_callback_2,P_ERROR,swLogPrintf("netconn_new_with_proto_and_callback : conn->acceptmbox shouldn ' t exist ");
295936,606089215,0,0,PLAT_AP,LWIP_API,netconn_getaddr_1,P_ERROR,swLogPrintf("netconn_getaddr : argument invalid ");
295936,606091263,0,0,PLAT_AP,LWIP_API,netconn_bind_1,P_ERROR,swLogPrintf("netconn_bind : invalid conn ");
295936,606093311,0,0,PLAT_AP,LWIP_API,netconn_bind_cid_1,P_ERROR,swLogPrintf("netconn_bind_cid : invalid conn ");
295936,606095359,0,0,PLAT_AP,LWIP_API,netconn_alloca_server_port_1,P_ERROR,swLogPrintf("server_port point : invalid parameter ");
295936,606097407,0,0,PLAT_AP,LWIP_API,netconn_connect_1,P_ERROR,swLogPrintf("netconn_connect : invalid conn ");
295936,606099455,0,0,PLAT_AP,LWIP_API,netconn_disconnect_1,P_ERROR,swLogPrintf("netconn_disconnect : invalid conn ");
295936,606101503,0,0,PLAT_AP,LWIP_API,netconn_listen_with_backlog_1,P_ERROR,swLogPrintf("netconn_listen_with_backlog : invalid conn ");
295936,606103551,0,0,PLAT_AP,LWIP_API,netconn_accept_1,P_ERROR,swLogPrintf("netconn_accept : invalid pointer ");
295936,606105599,0,0,PLAT_AP,LWIP_API,netconn_accept_2,P_ERROR,swLogPrintf("netconn_accept : invalid conn ");
295936,606107647,0,0,PLAT_AP,LWIP_API,netconn_recv_data_1,P_ERROR,swLogPrintf("netconn_recv_data : invalid pointer ");
295936,606109695,0,0,PLAT_AP,LWIP_API,netconn_recv_data_2,P_ERROR,swLogPrintf("netconn_recv_data : invalid conn ");
295936,606111743,0,0,PLAT_AP,LWIP_API,netconn_recv_data_3,P_ERROR,swLogPrintf("netconn_recv_data : invalid recvmbox ");
295936,606113791,0,0,PLAT_AP,LWIP_API,netconn_recv_data_6,P_ERROR,swLogPrintf("netconn_recv_data : netif enter OOS state ");
295936,606115839,0,0,PLAT_AP,LWIP_API,netconn_recv_data_9,P_ERROR,swLogPrintf("netconn_recv_data : tcp rcv buff null ");
295936,606117887,0,0,PLAT_AP,LWIP_API,netconn_recv_data_4,P_ERROR,swLogPrintf("netconn_recv_data : buf = = NULL ");
295936,606119935,0,0,PLAT_AP,LWIP_API,netconn_recv_data_8,P_ERROR,swLogPrintf("netconn_recv_data : netif enter OOS state ");
295936,606120192,0,0,PLAT_AP,LWIP_API,netconn_recv_data_5,P_INFO,swLogPrintf("netconn_recv_data : received 0x%x , len = %u ");
295936,606124031,0,0,PLAT_AP,LWIP_API,netconn_recv_tcp_pbuf_1,P_ERROR,swLogPrintf("netconn_recv_tcp_pbuf : invalid conn ");
295936,606126079,0,0,PLAT_AP,LWIP_API,netconn_recv_1,P_ERROR,swLogPrintf("netconn_recv : invalid pointer ");
295936,606128127,0,0,PLAT_AP,LWIP_API,netconn_recv_2,P_ERROR,swLogPrintf("netconn_recv : invalid conn ");
295936,606130175,0,0,PLAT_AP,LWIP_API,netconn_recv_3,P_ERROR,swLogPrintf("netconn_recv : p = = NULL ");
295936,606132223,0,0,PLAT_AP,LWIP_API,netconn_send_1,P_ERROR,swLogPrintf("netconn_send : invalid conn ");
295936,606132224,0,0,PLAT_AP,LWIP_API,netconn_send_2,P_INFO,swLogPrintf("netconn_send : sending %u bytes ");
295936,606136319,0,0,PLAT_AP,LWIP_API,netconn_write_partly_1,P_ERROR,swLogPrintf("netconn_write_partly : invalid conn ");
295936,606138367,0,0,PLAT_AP,LWIP_API,netconn_write_partly_2,P_ERROR,swLogPrintf("netconn_write_partly : invalid conn->type ");
295936,606140415,0,0,PLAT_AP,LWIP_API,netconn_close_shutdown_1,P_ERROR,swLogPrintf("netconn_close_shutdown : invalid conn ");
295936,606142463,0,0,PLAT_AP,LWIP_API,netconn_gethostbyname_addrtype_1,P_ERROR,swLogPrintf("netconn_gethostbyname : invalid name or addr ");
295936,606144511,0,0,PLAT_AP,LWIP_API,netconn_gethostbyname_addrtype_async_1,P_ERROR,swLogPrintf("netconn_gethostbyname_addrtype_async : invalid name ");
295936,606146559,0,0,PLAT_AP,LWIP_API,netconn_get_default_net_info_1,P_WARNING,swLogPrintf("netconn_get_default_net_info : malloc get net info message fail ");
295936,606146560,0,0,PLAT_AP,LWIP_API,netconn_get_default_net_info_2,P_INFO,swLogPrintf("netconn_get_default_net_info %u ");
295936,606150655,0,0,PLAT_AP,LWIP_API,netconn_get_default_net_info_3,P_WARNING,swLogPrintf("netconn_get_default_net_info get net info fail ");
295936,606152703,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_1,P_WARNING,swLogPrintf("netconn_get_sock_info : malloc get sock info message fail ");
295936,606154751,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_2,P_INFO,swLogPrintf("netconn_get_sock_info success ");
295936,606156799,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_3,P_WARNING,swLogPrintf("netconn_get_sock_info get net info fail ");
295936,606158847,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_by_pcb_1,P_WARNING,swLogPrintf("netconn_get_sock_info_by_pcb : malloc get sock info message fail ");
295936,606160895,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("netconn_get_sock_info_by_pcb success ");
295936,606162943,0,0,PLAT_AP,LWIP_API,netconn_get_sock_info_by_pcb_3,P_WARNING,swLogPrintf("netconn_get_sock_info_by_pcb get net info fail ");
295936,606164991,0,0,PLAT_AP,LWIP_API,netconn_get_hib_sock_id_1,P_WARNING,swLogPrintf("netconn_get_hib_sock_id : malloc get sock info message fail ");
295936,606167039,0,0,PLAT_AP,LWIP_API,netconn_get_hib_sock_id_2,P_INFO,swLogPrintf("netconn_get_hib_sock_id success ");
295936,606169087,0,0,PLAT_AP,LWIP_API,netconn_get_hib_sock_id_3,P_WARNING,swLogPrintf("netconn_get_hib_sock_id get hib sockid fail ");
295936,606171135,0,0,PLAT_AP,LWIP_API,netconn_get_tcp_send_buffer_size_1,P_WARNING,swLogPrintf("netconn_get_tcp_send_buffer_size : malloc get tcp send buffer size message fail ");
295936,606173183,0,0,PLAT_AP,LWIP_API,netconn_get_tcp_send_buffer_size_2,P_INFO,swLogPrintf("netconn_get_tcp_send_buffer_size success ");
295936,606175231,0,0,PLAT_AP,LWIP_API,netconn_get_tcp_send_buffer_size_3,P_WARNING,swLogPrintf("netconn_get_tcp_send_buffer_size get tcp send buffer size fail ");
295936,606177279,0,0,PLAT_AP,LWIP_API,netconn_set_rohc_rtp_cfg_1,P_WARNING,swLogPrintf("netconn_set_rohc_rtp_cfg : invalid dst ip ");
295936,606179327,0,0,PLAT_AP,LWIP_API,netconn_set_rohc_rtp_cfg_2,P_WARNING,swLogPrintf("netconn_set_rohc_rtp_cfg : malloc set rohc rtp cfg message fail ");
295936,606181375,0,0,PLAT_AP,LWIP_API,netconn_set_rohc_rtp_cfg_3,P_INFO,swLogPrintf("netconn_set_rohc_rtp_cfg success ");
295936,606183423,0,0,PLAT_AP,LWIP_API,netconn_set_rohc_rtp_cfg_4,P_WARNING,swLogPrintf("netconn_set_rohc_rtp_cfg fail ");
295936,606185471,0,0,PLAT_AP,LWIP_API,netconn_clean_rohc_rtp_cfg_1,P_WARNING,swLogPrintf("netconn_clean_rohc_rtp_cfg : malloc set rohc rtp cfg message fail ");
295936,606187519,0,0,PLAT_AP,LWIP_API,netconn_clean_rohc_rtp_cfg_2,P_INFO,swLogPrintf("netconn_clean_rohc_rtp_cfg success ");
295936,606189567,0,0,PLAT_AP,LWIP_API,netconn_clean_rohc_rtp_cfg_3,P_WARNING,swLogPrintf("netconn_clean_rohc_rtp_cfg fail ");
295936,606191615,0,0,PLAT_AP,LWIP_API,process_oos_tcp_1,P_ERROR,swLogPrintf("process_oos_tcp : conn = = NULL ");
295936,606193663,0,0,PLAT_AP,LWIP_API,recv_udp_1,P_ERROR,swLogPrintf("recv_udp : invalid argument ");
295936,606195711,0,0,PLAT_AP,LWIP_API,recv_udp_2,P_ERROR,swLogPrintf("recv_udp : recv for wrong pcb! ");
295936,606197759,0,0,PLAT_AP,LWIP_API,err_udp_1,P_ERROR,swLogPrintf("err_udp : conn ! = NULL ");
295936,606198016,0,0,PLAT_AP,LWIP_API,err_udp_state_1,P_INFO,swLogPrintf("err_udp : state %u , old state %u ");
295936,606201855,0,0,PLAT_AP,LWIP_API,err_udp_2,P_ERROR,swLogPrintf("err_udp : conn->current_msg ! = NULL ");
295936,606203903,0,0,PLAT_AP,LWIP_API,err_udp_3,P_ERROR,swLogPrintf("err_udp : inavlid op_completed_sem ");
295936,606205951,0,0,PLAT_AP,LWIP_API,err_udp_info,P_INFO,swLogPrintf("err_udp : send signal ");
295936,606207999,0,0,PLAT_AP,LWIP_API,err_udp_4,P_ERROR,swLogPrintf("err_udp : conn->current_msg ! = NULL 2 ");
295936,606210047,0,0,PLAT_AP,LWIP_API,recv_tcp_1,P_ERROR,swLogPrintf("recv_tcp : invalid argument ");
295936,606212095,0,0,PLAT_AP,LWIP_API,recv_tcp_2,P_ERROR,swLogPrintf("recv_tcp : recv for wrong pcb! ");
295936,606214143,0,0,PLAT_AP,LWIP_API,poll_tcp_1,P_ERROR,swLogPrintf("poll_tcp : conn ! = NULL ");
295936,606216191,0,0,PLAT_AP,LWIP_API,sent_tcp_1,P_ERROR,swLogPrintf("sent_tcp : conn ! = NULL ");
295936,606218239,0,0,PLAT_AP,LWIP_API,err_tcp_1,P_ERROR,swLogPrintf("err_tcp : conn ! = NULL ");
295936,606218496,0,0,PLAT_AP,LWIP_API,err_tcp_state_1,P_INFO,swLogPrintf("err_tcp : state %u , old state %u ");
295936,606222335,0,0,PLAT_AP,LWIP_API,err_tcp_2,P_ERROR,swLogPrintf("err_tcp : conn->current_msg ! = NULL ");
295936,606224383,0,0,PLAT_AP,LWIP_API,err_tcp_3,P_ERROR,swLogPrintf("err_tcp : inavlid op_completed_sem ");
295936,606226431,0,0,PLAT_AP,LWIP_API,err_tcp_info,P_INFO,swLogPrintf("err_tcp : send signal ");
295936,606228479,0,0,PLAT_AP,LWIP_API,err_tcp_4,P_ERROR,swLogPrintf("err_tcp : conn->current_msg ! = NULL 2 ");
295936,606230527,0,0,PLAT_AP,LWIP_API,accept_function_1,P_INFO,swLogPrintf("accept_function : acceptmbox already deleted ");
295936,606230528,0,0,PLAT_AP,LWIP_API,accept_function_2,P_INFO,swLogPrintf("accept_function : newpcb->tate : %d ");
295936,606234623,0,0,PLAT_AP,LWIP_API,netconn_get_socket_id_1,P_ERROR,swLogPrintf("netconn_get_socket_id invalid conn ");
295936,606236671,0,0,PLAT_AP,LWIP_API,pcb_new_1,P_ERROR,swLogPrintf("pcb_new : pcb already allocated ");
295936,606238719,0,0,PLAT_AP,LWIP_API,netconn_alloc_1,P_ERROR,swLogPrintf("netconn_alloc : undefined netconn_type ");
295936,606240767,0,0,PLAT_AP,LWIP_API,netconn_free_1,P_ERROR,swLogPrintf("netconn_free : PCB must be deallocated outside this function ");
295936,606242815,0,0,PLAT_AP,LWIP_API,netconn_free_2,P_ERROR,swLogPrintf("netconn_free : acceptmbox must be deallocated before calling this functionn ");
295936,606244863,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_1,P_ERROR,swLogPrintf("lwip_netconn_do_close_internal : conn check fail ");
295936,606244864,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_close_local_abort_time_1,P_INFO,swLogPrintf("lwip_netconn_do_close_internal : block close , need wait max time %u ");
295936,606248959,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_2,P_ERROR,swLogPrintf("lwip_netconn_do_close_internal : Closing a listen pcb may not fail! ");
295936,606251007,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_internal_3,P_ERROR,swLogPrintf("lwip_netconn_do_close_internal : err ! = ERR_OK ");
295936,606253055,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_1,P_ERROR,swLogPrintf("lwip_netconn_do_delconn : netconn state error ");
295936,606255103,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_3,P_ERROR,swLogPrintf("lwip_netconn_do_delconn : blocking connect in progress ");
295936,606257151,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_15,P_INFO,swLogPrintf("lwip_netconn_do_delconn : remove check udp hib pcb ");
295936,606259199,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_16,P_INFO,swLogPrintf("lwip_netconn_do_delconn : remove udp hib pcb ");
295936,606261247,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_17,P_INFO,swLogPrintf("lwip_netconn_do_delconn : reduce udp hib num ");
295936,606263295,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_18,P_INFO,swLogPrintf("lwip_netconn_do_delconn : set the global sequence handler pcb as NULL ");
295936,606265343,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_delconn_4,P_ERROR,swLogPrintf("lwip_netconn_do_delconn : already writing or closing ");
295936,606267391,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_1,P_INFO,swLogPrintf("lwip_netconn_do_bind process hib pcb ");
295936,606269439,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_2,P_INFO,swLogPrintf("lwip_netconn_do_bind udp hib pcb exist ");
295936,606271487,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_3,P_INFO,swLogPrintf("lwip_netconn_do_bind udp hib adapt the udp bind action ");
295936,606271744,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_4,P_WARNING,swLogPrintf("lwip_netconn_do_bind socket id is not adapt , hib pcb %u , this conn %u ");
295936,606275583,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_5,P_INFO,swLogPrintf("lwip_netconn_do_bind hib udp pcb bind success , change hib udp pcb context ");
295936,606277631,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_6,P_ERROR,swLogPrintf("lwip_netconn_do_bind get hib udp pcb fail ");
295936,606277632,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_cid_default,P_INFO,swLogPrintf("can ' t find netif for CID : %d , try to use default netif ");
295936,606279680,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_cid_dedicated,P_INFO,swLogPrintf("can ' t find netif for CID : %d , try dedicated ");
295936,606281728,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_bind_cid_1,P_WARNING,swLogPrintf("lwip_netconn_do_bind_cid can not find adapt netif by cid %u ");
295936,606283776,0,0,PLAT_AP,LWIP_API,lwip_netconn_alloc_server_port_1,P_INFO,swLogPrintf("lwip_netconn_alloc_server_port alloc udp server port %d ");
295936,606285824,0,0,PLAT_AP,LWIP_API,lwip_netconn_alloc_server_port_2,P_INFO,swLogPrintf("lwip_netconn_alloc_server_port alloc tcp server port %d ");
295936,606289919,0,0,PLAT_AP,LWIP_API,lwip_netconn_alloc_server_port_3,P_ERROR,swLogPrintf("lwip_netconn_alloc_server_port invalid type ");
295936,606291967,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_net_info_with_cid_1,P_WARNING,swLogPrintf("lwip_netconn_get_net_info_with_cid invalid argument ");
295936,606294015,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_net_info_with_cid_2,P_WARNING,swLogPrintf("lwip_netconn_get_net_info_with_cid can not find any netif ");
295936,606294272,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_net_info_with_cid_3,P_INFO,swLogPrintf("lwip_netconn_get_net_info_with_cid cid %u , net type %u ");
295936,606298111,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_1,P_WARNING,swLogPrintf("lwip_netconn_get_sock_info invalid argument ");
295936,606300159,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_2,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get tcp adapt hib pcb fail ");
295936,606302207,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_3,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get udp adapt hib pcb fail ");
295936,606304255,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_4,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get udp adapt hib pcb success ");
295936,606306303,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_5,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get tcp adapt hib pcb success ");
295936,606308351,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_1,P_WARNING,swLogPrintf("lwip_netconn_get_sock_info_by_pcb invalid argument ");
295936,606310399,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_2,P_INFO,swLogPrintf("lwip_netconn_get_sock_info get tcp adapt pcb fail ");
295936,606312447,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_3,P_INFO,swLogPrintf("lwip_netconn_get_sock_info_by_pcb get udp adapt pcb fail ");
295936,606312448,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_sock_info_by_pcb_4,P_INFO,swLogPrintf("lwip_netconn_get_sock_info_by_pcb get adpt pcb fail , type %d ");
295936,606316543,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_hib_sock_id_1,P_WARNING,swLogPrintf("lwip_netconn_get_hib_sock_id invalid argument ");
295936,606318591,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_1,P_WARNING,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size invalid argument ");
295936,606320639,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_2,P_WARNING,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size invalid connection ");
295936,606322687,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_3,P_WARNING,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size the connection is not tcp connection ");
295936,606322688,0,0,PLAT_AP,LWIP_API,lwip_netconn_get_tcp_send_buffer_size_4,P_INFO,swLogPrintf("lwip_netconn_get_tcp_send_buffer_size the tcp connection buffer size %u ");
295936,606326783,0,0,PLAT_AP,LWIP_API,lwip_netconn_set_rohc_rtp_cfg_1,P_WARNING,swLogPrintf("lwip_netconn_set_rohc_rtp_cfg invalid argument ");
295936,606328831,0,0,PLAT_AP,LWIP_API,lwip_netconn_set_rohc_rtp_cfg_2,P_WARNING,swLogPrintf("lwip_netconn_set_rohc_rtp_cfg invalid dst ip ");
295936,606330879,0,0,PLAT_AP,LWIP_API,lwip_netconn_set_rohc_rtp_cfg_3,P_WARNING,swLogPrintf("lwip_netconn_set_rohc_rtp_cfg fail ");
295936,606332927,0,0,PLAT_AP,LWIP_API,lwip_netconn_clean_rohc_rtp_cfg_1,P_WARNING,swLogPrintf("lwip_netconn_clean_rohc_rtp_cfg invalid argument ");
295936,606334975,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_1,P_ERROR,swLogPrintf("lwip_netconn_do_connected : conn->state = = NETCONN_CONNECT ");
295936,606337023,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_2,P_ERROR,swLogPrintf("lwip_netconn_do_connected : ( conn->current_msg ! = NULL ) || conn->in_non_blocking_connect ");
295936,606339071,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_3,P_ERROR,swLogPrintf("lwip_netconn_do_connected : blocking connect state error ");
295936,606341119,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connected_4,P_INFO,swLogPrintf("lwip_netconn_do_connected : connected success ");
295936,606343167,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_1,P_INFO,swLogPrintf("lwip_netconn_do_connect : udp pcb active ");
295936,606345215,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_2,P_INFO,swLogPrintf("lwip_netconn_do_connect : udp pcb active and remote ip / port change ");
295936,606347263,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_3,P_INFO,swLogPrintf("lwip_netconn_do_connect : udp pcb active and update udp hib pcb list ");
295936,606349311,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_4,P_INFO,swLogPrintf("lwip_netconn_do_connect : udp hib pcb is not NULL ");
295936,606351359,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_5,P_INFO,swLogPrintf("lwip_netconn_do_connect : reuse udp hib pcb ");
295936,606351616,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_13,P_WARNING,swLogPrintf("lwip_netconn_do_connect : socket id is not adapt , hib pcb id %u , this conn id %u ");
295936,606355455,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_6,P_INFO,swLogPrintf("lwip_netconn_do_connect : the hib udp pcb has include in udp active list ");
295936,606357503,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_7,P_INFO,swLogPrintf("lwip_netconn_do_connect : the udp pcb hib / sleep2 is not enable ");
295936,606359551,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_8,P_SIG,swLogPrintf("lwip_netconn_do_connect : tcp connection find adpt hib / sleep2 tcp context ");
295936,606361599,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_9,P_SIG,swLogPrintf("lwip_netconn_do_connect : the hib tcp pcb has include in tcp active list ");
295936,606363647,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_connect_12,P_ERROR,swLogPrintf("lwip_netconn_do_connect : Invalid netconn type ");
295936,606363648,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_send_1,P_WARNING,swLogPrintf("lwip_netconn_do_send : last err is fatal %d ");
295936,606367743,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_send_4,P_WARNING,swLogPrintf("lwip_netconn_do_send : last err is ERR_IF_OOS ");
295936,606369791,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_writemore_1,P_ERROR,swLogPrintf("lwip_netconn_do_writemore : conn check fail ");
295936,606371839,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_writemore_2,P_ERROR,swLogPrintf("lwip_netconn_do_writemore : invalid length ");
295936,606373887,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_write_4,P_WARNING,swLogPrintf("lwip_netconn_do_write : err is ERR_IF_OOS ");
295936,606375935,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_write_1,P_ERROR,swLogPrintf("lwip_netconn_do_write : already writing or closing ");
295936,606377983,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_getaddr_1,P_ERROR,swLogPrintf("lwip_netconn_do_getaddr : invalid netconn_type ");
295936,606380031,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_close_3,P_ERROR,swLogPrintf("lwip_netconn_do_close : already writing or closing ");
295936,606382079,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_dns_found_async_1,P_ERROR,swLogPrintf("lwip_netconn_do_dns_found_async : src_hdr point is null ");
295936,606384127,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_dns_found_async_by_cmsSockMgr_1,P_ERROR,swLogPrintf("lwip_netconn_do_dns_found_async_by_cmsSockMgr : source point is null ");
295936,606386175,0,0,PLAT_AP,LWIP_API,lwip_netconn_do_dns_found_async_by_cmsSockMgr_2,P_INFO,swLogPrintf("lwip_netconn_do_dns_found_async_by_cmsSockMgr : complete ");
295936,606388223,0,0,PLAT_AP,LWIP_API,netbuf_alloc_1,P_ERROR,swLogPrintf("netbuf_alloc : invalid buf ");
295936,606390271,0,0,PLAT_AP,LWIP_API,netbuf_alloc_2,P_ERROR,swLogPrintf("netbuf_alloc : check that first pbuf can hold size ");
295936,606392319,0,0,PLAT_AP,LWIP_API,netbuf_free_1,P_ERROR,swLogPrintf("netbuf_free : invalid buf ");
295936,606394367,0,0,PLAT_AP,LWIP_API,netbuf_ref_1,P_ERROR,swLogPrintf("netbuf_ref : invalid buf ");
295936,606396415,0,0,PLAT_AP,LWIP_API,netbuf_chain_1,P_ERROR,swLogPrintf("netbuf_chain : invalid head or tail ");
295936,606398463,0,0,PLAT_AP,LWIP_API,netbuf_data_1,P_ERROR,swLogPrintf("netbuf_data : invalid argument ");
295936,606400511,0,0,PLAT_AP,LWIP_API,netbuf_next_1,P_ERROR,swLogPrintf("netbuf_next : invalid buff ");
295936,606402559,0,0,PLAT_AP,LWIP_API,netbuf_first_1,P_ERROR,swLogPrintf("netbuf_first : invalid buff ");
295936,606402560,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_1,P_INFO,swLogPrintf("lwip_gethostbyname failed , err = %d ");
295936,606405376,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_2,P_INFO,swLogPrintf("lwip_gethostbyname hostent.h_name , hostent.h_aliases ( 0x%x ) , hostent.h_addrtype ( %d ) , hostent.h_length ( %d ) , hostent.h_addr_list ( 0x%x ) ");
295936,606406912,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_3,P_INFO,swLogPrintf("lwip_gethostbyname hostent.h_addr_list [ %u ] ( 0x%x ) ");
295936,606408704,0,0,PLAT_AP,LWIP_API,lwip_gethostbyname_r_1,P_INFO,swLogPrintf("lwip_gethostbyname_r failed , err = %d ");
295936,606410752,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_get_addpt_type_1,P_INFO,swLogPrintf("lwip_getaddrinfo get default net info %u ");
295936,606414847,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_1,P_ERROR,swLogPrintf("lwip_getaddrinfo namelen is too long ");
295936,606416895,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_2,P_ERROR,swLogPrintf("lwip_getaddrinfo total_size < = NETDB_ELEM_SIZE : please report this ");
295936,606418943,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_family_1,P_ERROR,swLogPrintf("lwip_getaddrinfo wrong sockaddr family ");
295936,606420991,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_3,P_ERROR,swLogPrintf("lwip_getaddrinfo wrong sockaddr family ");
295936,606423039,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_4,P_ERROR,swLogPrintf("lwip_getaddrinfo fail ");
295936,606423040,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_1,P_INFO,swLogPrintf("lwip_getaddrinfowithcid get cid net info %u ");
295936,606427135,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_2,P_ERROR,swLogPrintf("lwip_getaddrinfo namelen is too long ");
295936,606429183,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_3,P_ERROR,swLogPrintf("lwip_getaddrinfo total_size < = NETDB_ELEM_SIZE : please report this ");
295936,606431231,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_family_1,P_ERROR,swLogPrintf("lwip_getaddrinfo wrong sockaddr family ");
295936,606433279,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_4,P_ERROR,swLogPrintf("lwip_getaddrinfowithcid wrong sockaddr family ");
295936,606435327,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfowithcid_5,P_ERROR,swLogPrintf("lwip_getaddrinfowithcid fail ");
295936,606435584,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_async_1,P_INFO,swLogPrintf("lwip_getaddrinfo_async get cid %u net info %u ");
295936,606437376,0,0,PLAT_AP,LWIP_API,lwip_getaddrinfo_async_by_cmsSockMgr_1,P_INFO,swLogPrintf("lwip_getaddrinfo_async_by_cmsSockMgr get cid net info %u ");
295936,606439424,0,0,PLAT_AP,LWIP_API,get_socket_1,P_WARNING,swLogPrintf("get_socket ( %d ) : invalid ");
295936,606441472,0,0,PLAT_AP,LWIP_API,get_socket_2,P_WARNING,swLogPrintf("get_socket ( %d ) : not active ");
295936,606443776,0,0,PLAT_AP,LWIP_API,alloc_socket_1,P_VALUE,swLogPrintf("alloc_socket get tcp hib sockid %d , udp hib sockid %d success ");
295936,606447615,0,0,PLAT_AP,LWIP_API,alloc_socket_2,P_WARNING,swLogPrintf("alloc_socket get hib sockid fail ");
295936,606447616,0,0,PLAT_AP,LWIP_API,lwip_accept_1,P_VALUE,swLogPrintf("lwip_accept ( %d ) ");
295936,606449664,0,0,PLAT_AP,LWIP_API,lwip_accept_2,P_VALUE,swLogPrintf("lwip_accept ( %d ) returning EWOULDBLOCK ");
295936,606451968,0,0,PLAT_AP,LWIP_API,lwip_accept_3,P_VALUE,swLogPrintf("lwip_accept ( %d ) netconn_acept failed , err = %d ");
295936,606455807,0,0,PLAT_AP,LWIP_API,lwip_accept_4,P_ERROR,swLogPrintf("lwip_accept newconn ! = NULL ");
295936,606457855,0,0,PLAT_AP,LWIP_API,lwip_accept_5,P_ERROR,swLogPrintf("lwip_accept invalid socket index ");
295936,606459903,0,0,PLAT_AP,LWIP_API,lwip_accept_6,P_ERROR,swLogPrintf("lwip_accept newconn->callback = = event_callback ");
295936,606460160,0,0,PLAT_AP,LWIP_API,lwip_accept_7,P_VALUE,swLogPrintf("lwip_accept ( %d ) netconn_peer failed , err = %d ");
295936,606463999,0,0,PLAT_AP,LWIP_API,lwip_accept_8,P_ERROR,swLogPrintf("lwip_accept addr valid but addrlen NULL ");
295936,606464512,0,0,PLAT_AP,LWIP_API,lwip_accept_9,P_VALUE,swLogPrintf("lwip_accept ( %d ) returning new sock = %d port %d ");
295936,606466304,0,0,PLAT_AP,LWIP_API,lwip_accept_10,P_VALUE,swLogPrintf("lwip_accept ( %d ) returning new sock = %d ");
295936,606470143,0,0,PLAT_AP,LWIP_API,lwip_bind_1,P_ERROR,swLogPrintf("lwip_bind : invalid address ");
295936,606470400,0,0,PLAT_AP,LWIP_API,lwip_bind_2,P_VALUE,swLogPrintf("lwip_bind ( %d , port = %u ) ");
295936,606472448,0,0,PLAT_AP,LWIP_API,lwip_bind_3,P_WARNING,swLogPrintf("lwip_bind ( %d ) failed , err = %d ");
295936,606474240,0,0,PLAT_AP,LWIP_API,lwip_bind_4,P_VALUE,swLogPrintf("lwip_bind ( %d ) succeeded ");
295936,606476544,0,0,PLAT_AP,LWIP_API,lwip_bind_cid_2,P_VALUE,swLogPrintf("lwip_bind_cid ( socket %d cid = %u ) ");
295936,606478592,0,0,PLAT_AP,LWIP_API,lwip_bind_cid_3,P_WARNING,swLogPrintf("lwip_bind_cid ( %d ) failed , err = %d ");
295936,606480384,0,0,PLAT_AP,LWIP_API,lwip_bind_cid_4,P_VALUE,swLogPrintf("lwip_bind_cid ( %d ) succeeded ");
295936,606482432,0,0,PLAT_AP,LWIP_API,lwip_alloc_server_port_1,P_VALUE,swLogPrintf("lwip_alloc_server_port type %u ");
295936,606484480,0,0,PLAT_AP,LWIP_API,lwip_alloc_server_port_2,P_WARNING,swLogPrintf("lwip_alloc_server_port invalid type %u ");
295936,606486784,0,0,PLAT_AP,LWIP_API,lwip_alloc_server_port_3,P_WARNING,swLogPrintf("lwip_alloc_server_port type ( %u ) failed , err = %d ");
295936,606488576,0,0,PLAT_AP,LWIP_API,sock_get_errno_1,P_VALUE,swLogPrintf("sock_get_errno ( %d ) ");
295936,606490624,0,0,PLAT_AP,LWIP_API,lwip_close_1,P_VALUE,swLogPrintf("lwip_close ( %d ) ");
295936,606494719,0,0,PLAT_AP,LWIP_API,lwip_close_2,P_ERROR,swLogPrintf("lwip_close sock->lastdata = = NULL ");
295936,606494720,0,0,PLAT_AP,LWIP_API,lwip_close_3,P_VALUE,swLogPrintf("lwip_close result %d ");
295936,606496768,0,0,PLAT_AP,LWIP_API,lwip_connect_1,P_VALUE,swLogPrintf("lwip_connect ( %d , AF_UNSPEC ) ");
295936,606500863,0,0,PLAT_AP,LWIP_API,lwip_connect_2,P_ERROR,swLogPrintf("lwip_connect : invalid address ");
295936,606501120,0,0,PLAT_AP,LWIP_API,lwip_connect_3,P_VALUE,swLogPrintf("lwip_connect ( %d , port = %u ) ");
295936,606503168,0,0,PLAT_AP,LWIP_API,lwip_connect_4,P_VALUE,swLogPrintf("lwip_connect ( %d ) failed , err = %d ");
295936,606504960,0,0,PLAT_AP,LWIP_API,lwip_connect_5,P_VALUE,swLogPrintf("lwip_connect ( %d ) has already connected succeeded ");
295936,606507008,0,0,PLAT_AP,LWIP_API,lwip_connect_6,P_VALUE,swLogPrintf("lwip_connect ( %d ) succeeded ");
295936,606509312,0,0,PLAT_AP,LWIP_API,lwip_listen_1,P_VALUE,swLogPrintf("lwip_listen ( %d , backlog = %d ) ");
295936,606511360,0,0,PLAT_AP,LWIP_API,lwip_listen_2,P_VALUE,swLogPrintf("lwip_listen ( %d ) failed , err = %d ");
295936,606513920,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_1,P_VALUE,swLogPrintf("lwip_recvfrom ( %d , 0x%x , %u , 0x%x , .. ) ");
295936,606515200,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_2,P_VALUE,swLogPrintf("lwip_recvfrom : top while sock->lastdata = 0x%x ");
295936,606517248,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_3,P_VALUE,swLogPrintf("lwip_recvfrom ( %d ) : returning EWOULDBLOCK ");
295936,606519552,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_4,P_VALUE,swLogPrintf("lwip_recvfrom netconn_recv err = %d , netbuf = 0x%x ");
295936,606521600,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_5,P_VALUE,swLogPrintf("lwip_recvfrom ( %d ) : buf = = NULL , error is %d ");
295936,606525439,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_6,P_ERROR,swLogPrintf("lwip_recvfrom buf ! = NULL ");
295936,606526208,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_7,P_VALUE,swLogPrintf("lwip_recvfrom : buflen = %u len = %u off = %d sock->lastoffset = %u ");
295936,606529535,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_8,P_ERROR,swLogPrintf("lwip_recvfrom invalid copylen , len would underflow ");
295936,606529792,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_9,P_VALUE,swLogPrintf("lwip_recvfrom : port = %u len = %d ");
295936,606531584,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_10,P_VALUE,swLogPrintf("lwip_recvfrom : lastdata now netbuf = 0x%x ");
295936,606533632,0,0,PLAT_AP,LWIP_API,lwip_recvfrom_11,P_VALUE,swLogPrintf("lwip_recvfrom : deleting netbuf = 0x%x ");
295936,606536448,0,0,PLAT_AP,LWIP_API,lwip_send_1,P_VALUE,swLogPrintf("lwip_send ( %d , data = 0x%x , size = %u , flags = 0x%x ) ");
295936,606538240,0,0,PLAT_AP,LWIP_API,lwip_send_2,P_VALUE,swLogPrintf("lwip_send ( %d ) err = %d written = %u ) ");
295936,606541823,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_1,P_ERROR,swLogPrintf("lwip_sendmsg : invalid msghdr ");
295936,606543871,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_2,P_ERROR,swLogPrintf("lwip_sendmsg : invalid msghdr iov ");
295936,606545919,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_3,P_ERROR,swLogPrintf("lwip_sendmsg : invalid msghdr name ");
295936,606547967,0,0,PLAT_AP,LWIP_API,lwip_sendmsg_4,P_ERROR,swLogPrintf("lwip_sendmsg : iov_len < u16_t ");
295936,606549248,0,0,PLAT_AP,LWIP_API,ps_send_1,P_VALUE,swLogPrintf("ps_send ( %d , data = 0x%x , size = %u , flags = 0x%x ) , dataRai = %u , exceptdata = %u ");
295936,606550272,0,0,PLAT_AP,LWIP_API,ps_send_2,P_WARNING,swLogPrintf("ps_send invalid dataRai %u or exceptdata %u ");
295936,606552576,0,0,PLAT_AP,LWIP_API,ps_send_3,P_VALUE,swLogPrintf("ps_send ( %d ) err = %d written = %u ) ");
295936,606554368,0,0,PLAT_AP,LWIP_API,ps_sendto_1,P_WARNING,swLogPrintf("ps_sendto invalid dataRai %u or exceptdata %u ");
295936,606557952,0,0,PLAT_AP,LWIP_API,ps_sendto_2,P_VALUE,swLogPrintf("ps_sendto ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u , dataRai = %u , exceptdata = %u ");
295936,606560255,0,0,PLAT_AP,LWIP_API,ps_sendto_3,P_ERROR,swLogPrintf("ps_sendto : size must fit in u16_t ");
295936,606562303,0,0,PLAT_AP,LWIP_API,ps_sendto_4,P_ERROR,swLogPrintf("ps_sendto : invalid address ");
295936,606564351,0,0,PLAT_AP,LWIP_API,ps_sendto_5,P_WARNING,swLogPrintf("ps_sendto low-level netif high water ");
295936,606564352,0,0,PLAT_AP,LWIP_API,ps_sendto_6,P_VALUE,swLogPrintf("ps_sendto low-level netif high water , current UE packet delay %u ");
295936,606568192,0,0,PLAT_AP,LWIP_API,ps_send_with_ticks_1,P_VALUE,swLogPrintf("ps_send ( %d , data = 0x%x , size = %u , flags = 0x%x ) , dataRai = %u , exceptdata = %u , tick type %u , sys tick %u ");
295936,606568704,0,0,PLAT_AP,LWIP_API,ps_send_with_ticks_2,P_WARNING,swLogPrintf("ps_send invalid dataRai %u or exceptdata %u ");
295936,606571008,0,0,PLAT_AP,LWIP_API,ps_send_with_ticks_3,P_VALUE,swLogPrintf("ps_send ( %d ) err = %d written = %u ) ");
295936,606572800,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_1,P_WARNING,swLogPrintf("ps_sendto invalid dataRai %u or exceptdata %u ");
295936,606575872,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_2,P_VALUE,swLogPrintf("ps_sendto ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u ");
295936,606577408,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_printf_2,P_VALUE,swLogPrintf("ps_sendto ( continue... , dataRai = %u , exceptdata = %u , tick type %u , sys tick %u ");
295936,606580735,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_3,P_ERROR,swLogPrintf("ps_sendto : size must fit in u16_t ");
295936,606582783,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_4,P_ERROR,swLogPrintf("ps_sendto : invalid address ");
295936,606583040,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_5,P_VALUE,swLogPrintf("ps_sendto_with_ticks tick type %u , sys tick %u ");
295936,606586879,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_6,P_WARNING,swLogPrintf("ps_sendto low-level netif high water ");
295936,606586880,0,0,PLAT_AP,LWIP_API,ps_sendto_with_ticks_7,P_VALUE,swLogPrintf("ps_sendto low-level netif high water , current UE packet delay %u ");
295936,606589952,0,0,PLAT_AP,LWIP_API,ps_send_with_imsdataflag_flag_check_1,P_WARNING,swLogPrintf("ps_send_with_imsdataflag ( %d , data = 0x%x , size = %u , flags = 0x%x ) , data_flag = %u ");
295936,606592000,0,0,PLAT_AP,LWIP_API,ps_send_with_imsdataflag_1,P_INFO,swLogPrintf("ps_send_with_imsdataflag ( %d , data = 0x%x , size = %u , flags = 0x%x ) , data_flag = %u ");
295936,606593536,0,0,PLAT_AP,LWIP_API,ps_send_with_imsdataflag_2,P_INFO,swLogPrintf("ps_send_with_imsdataflag ( %d ) err = %d written = %u ) ");
295936,606596608,0,0,PLAT_AP,LWIP_API,ps_sendto_with_imsdataflag_flag_check_1,P_WARNING,swLogPrintf("ps_sendto_with_imsdataflag ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u , data_flag = %u ");
295936,606598656,0,0,PLAT_AP,LWIP_API,ps_sendto_with_imsdataflag_1,P_INFO,swLogPrintf("ps_sendto_with_imsdataflag ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u , data_flag = %u ");
295936,606601215,0,0,PLAT_AP,LWIP_API,ps_sendto_with_imsdataflag_2,P_ERROR,swLogPrintf("ps_sendto_with_imsdataflag : size must fit in u16_t ");
295936,606603263,0,0,PLAT_AP,LWIP_API,ps_sendto_with_imsdataflag_3,P_ERROR,swLogPrintf("ps_sendto_with_imsdataflag : invalid address ");
295936,606605311,0,0,PLAT_AP,LWIP_API,ps_sendto_with_imsdataflag_4,P_WARNING,swLogPrintf("ps_sendto_with_imsdataflag low-level netif high water ");
295936,606605312,0,0,PLAT_AP,LWIP_API,ps_sendto_with_imsdataflag_5,P_INFO,swLogPrintf("ps_sendto_with_imsdataflag low-level netif high water , current UE packet delay %u ");
295936,606609407,0,0,PLAT_AP,LWIP_API,lwip_socket_set_rohc_rtp_cfg_1,P_ERROR,swLogPrintf("lwip_socket_set_rohc_rtp_cfg invalid dst ip ");
295936,606611455,0,0,PLAT_AP,LWIP_API,lwip_socket_set_rohc_rtp_cfg_2,P_ERROR,swLogPrintf("lwip_socket_set_rohc_rtp_cfg fail ");
295936,606613503,0,0,PLAT_AP,LWIP_API,lwip_socket_clean_rohc_rtp_cfg_1,P_ERROR,swLogPrintf("lwip_socket_clean_rohc_rtp_cfg fail ");
295936,606613504,0,0,PLAT_AP,LWIP_API,lwip_get_tcp_send_buffer_size_1,P_ERROR,swLogPrintf("lwip_get_tcp_send_buffer_size can not find the socket %d ");
295936,606615808,0,0,PLAT_AP,LWIP_API,lwip_get_tcp_send_buffer_size_2,P_VALUE,swLogPrintf("lwip_get_tcp_send_buffer_size get the socket %d send buffer size %u ");
295936,606617600,0,0,PLAT_AP,LWIP_API,lwip_get_tcp_send_buffer_size_3,P_ERROR,swLogPrintf("lwip_get_tcp_send_buffer_size get the socket %d send buffer size fail ");
295936,606620928,0,0,PLAT_AP,LWIP_API,lwip_sendto_1,P_VALUE,swLogPrintf("lwip_sendto ( %d , data = 0x%x , size = %u , flags = 0x%x , to addr = 0x%x , tolen = %u ");
295936,606623743,0,0,PLAT_AP,LWIP_API,lwip_sendto_2,P_ERROR,swLogPrintf("lwip_sendto : size must fit in u16_t ");
295936,606625791,0,0,PLAT_AP,LWIP_API,lwip_sendto_3,P_ERROR,swLogPrintf("lwip_sendto : invalid address ");
295936,606627839,0,0,PLAT_AP,LWIP_API,lwip_sendto_5,P_WARNING,swLogPrintf("lwip_sendto low-level netif high water ");
295936,606627840,0,0,PLAT_AP,LWIP_API,lwip_sendto_6,P_VALUE,swLogPrintf("lwip_sendto low-level netif high water , current UE packet delay %u ");
295936,606630144,0,0,PLAT_AP,LWIP_API,lwip_socket_1,P_VALUE,swLogPrintf("lwip_socket ( %d , SOCK_RAW , %d ) = ");
295936,606632192,0,0,PLAT_AP,LWIP_API,lwip_socket_2,P_VALUE,swLogPrintf("lwip_socket ( %d , SOCK_DGRAM , %d ) = ");
295936,606634240,0,0,PLAT_AP,LWIP_API,lwip_socket_3,P_VALUE,swLogPrintf("lwip_socket ( %d , SOCK_STREAM , %d ) = ");
295936,606636544,0,0,PLAT_AP,LWIP_API,lwip_socket_4,P_VALUE,swLogPrintf("lwip_socket ( %d , %d / UNKNOWN , %d ) = -1 ");
295936,606640127,0,0,PLAT_AP,LWIP_API,lwip_socket_5,P_WARNING,swLogPrintf("lwip_socket -1 / ENOBUFS ( could not create netconn ) ");
295936,606640128,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_1,P_VALUE,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info fail ");
295936,606642176,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_2,P_VALUE,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info by tcp pcb fail ");
295936,606644224,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_3,P_VALUE,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info udp by pcb fail ");
295936,606646272,0,0,PLAT_AP,LWIP_API,lwip_get_socket_info_by_fd_4,P_VALUE,swLogPrintf("lwip_get_socket_info_by_fd get sock %d info by pcb fail , unsupport type ");
295936,606648320,0,0,PLAT_AP,LWIP_API,lwip_selscan_1,P_VALUE,swLogPrintf("lwip_selscan : fd = %d ready for reading ");
295936,606650368,0,0,PLAT_AP,LWIP_API,lwip_selscan_2,P_VALUE,swLogPrintf("lwip_selscan : fd = %d ready for writing ");
295936,606652416,0,0,PLAT_AP,LWIP_API,lwip_selscan_3,P_VALUE,swLogPrintf("lwip_selscan : fd = %d ready for exception ");
295936,606656511,0,0,PLAT_AP,LWIP_API,lwip_selscan_4,P_ERROR,swLogPrintf("nready > = 0 ");
295936,606657792,0,0,PLAT_AP,LWIP_API,lwip_select_1,P_VALUE,swLogPrintf("lwip_select ( %d , 0x%x , 0x%x , 0x%x , tvsec = %u tvusec = %u ) ");
295936,606660607,0,0,PLAT_AP,LWIP_API,lwip_select_2,P_WARNING,swLogPrintf("lwip_select : no timeout , returning 0 ");
295936,606662655,0,0,PLAT_AP,LWIP_API,lwip_select_9,P_ERROR,swLogPrintf("lwip_select : new sys semphore fail ");
295936,606664703,0,0,PLAT_AP,LWIP_API,lwip_select_3,P_ERROR,swLogPrintf("lwip_select : sock->select_waiting > 0 ");
295936,606666751,0,0,PLAT_AP,LWIP_API,lwip_select_4,P_ERROR,swLogPrintf("lwip_select : sock->select_waiting > 0 2 ");
295936,606668799,0,0,PLAT_AP,LWIP_API,lwip_select_5,P_ERROR,swLogPrintf("lwip_select : select_cb.prev = = NULL ");
295936,606670847,0,0,PLAT_AP,LWIP_API,lwip_select_6,P_ERROR,swLogPrintf("lwip_select : select_cb.prev ! = NULL ");
295936,606672895,0,0,PLAT_AP,LWIP_API,lwip_select_7,P_VALUE,swLogPrintf("lwip_select : timeout expired ");
295936,606672896,0,0,PLAT_AP,LWIP_API,lwip_select_8,P_VALUE,swLogPrintf("lwip_select : nready = %d ");
295936,606676991,0,0,PLAT_AP,LWIP_API,event_callback_9,P_WARNING,swLogPrintf("event_callback unknown event ");
295936,606677248,0,0,PLAT_AP,LWIP_API,lwip_shutdown_1,P_VALUE,swLogPrintf("lwip_shutdown ( %d , how = %d ) ");
295936,606679296,0,0,PLAT_AP,LWIP_API,lwip_getaddrname_1,P_VALUE,swLogPrintf("lwip_getaddrname ( %d , port = %u ) ");
295936,606683135,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_1,P_ERROR,swLogPrintf("lwip_getsockopt : new sys semphore fail ");
295936,606685183,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_callback_1,P_ERROR,swLogPrintf("lwip_getsockopt_callback arg ! = NULL ");
295936,606685440,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_1,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , optname = 0x%x , .. ) ");
295936,606687488,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_2,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , SO_TYPE ) : unrecognized socket type %d ");
295936,606689536,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_3,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , SO_TYPE ) = %d ");
295936,606691584,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_4,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , SO_ERROR ) = %d ");
295936,606693632,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_5,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , SOL_SOCKET , UNIMPL : optname = 0x%x , .. ) ");
295936,606695680,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_6,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IP , IP_TTL ) = %d ");
295936,606697728,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_7,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IP , IP_TOS ) = %d ");
295936,606699776,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_11,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IP , UNIMPL : optname = 0x%x , .. ) ");
295936,606701568,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_12,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_NODELAY ) ");
295936,606703872,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_13,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPALIVE ) = %d ");
295936,606705920,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_14,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPIDLE ) = %d ");
295936,606707968,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_15,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPINTVL ) = %d ");
295936,606710016,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_16,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPCNT ) = %d ");
295936,606712064,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_17,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_TCP , UNIMPL : optname = 0x%x , .. ) ");
295936,606714112,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_18,P_VALUE,swLogPrintf("lwip_getsockopt_impl lwip_getsockopt ( %d , IPPROTO_IPV6 , IPV6_V6ONLY ) = %d ");
295936,606716160,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_19,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_IPV6 , UNIMPL : optname = 0x%x , .. ) ");
295936,606718208,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_23,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_RAW , IPV6_CHECKSUM ) = %d ");
295936,606720256,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_24,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , IPPROTO_RAW , UNIMPL : optname = 0x%x , .. ) ");
295936,606722560,0,0,PLAT_AP,LWIP_API,lwip_getsockopt_impl_25,P_VALUE,swLogPrintf("lwip_getsockopt_impl ( %d , level = 0x%x , UNIMPL : optname = 0x%x , .. ) ");
295936,606726143,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_1,P_ERROR,swLogPrintf("lwip_setsockopt : new sys semphore fail ");
295936,606728191,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_callback_1,P_ERROR,swLogPrintf("lwip_setsockopt_callback arg = = NULL ");
295936,606728448,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_1,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , SOL_SOCKET , optname = 0x%x , .. ) ");
295936,606730240,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_keepalive,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , SOL_SOCKET , KEEPALIVE , .. ) ");
295936,606734335,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_20,P_WARNING,swLogPrintf("tcp hib / sleep2 mode connection number limited ");
295936,606736383,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_info_1,P_VALUE,swLogPrintf("tcp hib / sleep2 mode connection , tcp hib pcb not connectted ");
295936,606738431,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_1,P_WARNING,swLogPrintf("tcp hib / sleep2 mode connection , tcp hib pcb has exist ");
295936,606740479,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_2,P_WARNING,swLogPrintf("tcp hib / sleep2 mode connection , tcp pcb is invalid ");
295936,606742527,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_21,P_VALUE,swLogPrintf("tcp hib / sleep2 mode connection enable ");
295936,606744575,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_22,P_VALUE,swLogPrintf("tcp hib / sleep2 mode connection disable ");
295936,606746623,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_23,P_WARNING,swLogPrintf("udp hib / sleep2 mode connection number limited ");
295936,606748671,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_info_2,P_VALUE,swLogPrintf("udp hib / sleep2 mode connection , udp hib pcb not bind or connect ");
295936,606750719,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_3,P_WARNING,swLogPrintf("udp hib / sleep2 mode connection , udp hib pcb has exist ");
295936,606752767,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_warning_4,P_WARNING,swLogPrintf("udp hib / sleep2 mode connection , udp pcb is invalid ");
295936,606754815,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_24,P_VALUE,swLogPrintf("udp hib / sleep2 mode connection enable ");
295936,606756863,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_25,P_VALUE,swLogPrintf("udp hib / sleep2 mode connection disable ");
295936,606758911,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_26,P_VALUE,swLogPrintf("set the pcb as squence state handler pcb ");
295936,606760959,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_27,P_WARNING,swLogPrintf("the UL sequence handler socket has set , can not set again ");
295936,606763007,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_28,P_WARNING,swLogPrintf("the udp pcb is invalid ");
295936,606765055,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_29,P_VALUE,swLogPrintf("the socket is not UDP socket , can not handle socket sequence state ");
295936,606767103,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_30,P_VALUE,swLogPrintf("set squence state handler pcb as NULL ");
295936,606767104,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_1,P_WARNING,swLogPrintf("tcp_init_retry_time %u fail ");
295936,606771199,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_2,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606773247,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_3,P_ERROR,swLogPrintf("the socket is not TCP socket , can not set tcp init retry time ");
295936,606775295,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_init_retry_time_4,P_ERROR,swLogPrintf("invalid tcp max retry time ");
295936,606775296,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_31,P_WARNING,swLogPrintf("tcp_set_max_retry_times %u fail ");
295936,606779391,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_32,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606781439,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_33,P_ERROR,swLogPrintf("the socket is not TCP socket , can not set tcp max retry times ");
295936,606783487,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_34,P_ERROR,swLogPrintf("invalid tcp max retry times ");
295936,606783488,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_35,P_WARNING,swLogPrintf("tcp_set_max_total_retry_time %u fail ");
295936,606787583,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_36,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606789631,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_37,P_ERROR,swLogPrintf("the socket is not TCP socket , can not set tcp max total retry time ");
295936,606791679,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_38,P_ERROR,swLogPrintf("invalid max total retry time ");
295936,606793727,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_close_local_abort_1,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606795775,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_close_local_abort_2,P_ERROR,swLogPrintf("the socket is not TCP socket , can not enable the option ");
295936,606797823,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_need_report_ul_status_1,P_WARNING,swLogPrintf("the tcp pcb is invalid ");
295936,606799871,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_tcp_need_report_ul_status_2,P_ERROR,swLogPrintf("the socket is not TCP socket , can not enable the option ");
295936,606800128,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_2,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , SOL_SOCKET , UNIMPL : optname = 0x%x , .. ) ");
295936,606802176,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_3,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IP , IP_TTL , .. ) -> %d ");
295936,606804224,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_4,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IP , IP_TOS , .. ) -> %d ");
295936,606806272,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_5,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IP , UNIMPL : optname = 0x%x , .. ) ");
295936,606808064,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_6,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_NODELAY ) ");
295936,606810368,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_7,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPALIVE ) -> %u ");
295936,606812416,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_8,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPIDLE ) -> %u ");
295936,606814464,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_9,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPINTVL ) -> %u ");
295936,606816512,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_10,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , TCP_KEEPCNT ) -> %u ");
295936,606818560,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_11,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_TCP , UNIMPL : optname = 0x%x , .. ) ");
295936,606820608,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_12,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IPV6 , IPV6_V6ONLY , .. ) -> %d ");
295936,606822656,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_13,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_IPV6 , UNIMPL : optname = 0x%x , .. ) ");
295936,606824704,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_17,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_RAW , IPV6_CHECKSUM , .. ) -> %d ");
295936,606826752,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_18,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , IPPROTO_RAW , UNIMPL : optname = 0x%x , .. ) ");
295936,606829056,0,0,PLAT_AP,LWIP_API,lwip_setsockopt_impl_19,P_VALUE,swLogPrintf("lwip_setsockopt_impl ( %d , level = 0x%x , UNIMPL : optname = 0x%x , .. ) ");
295936,606831104,0,0,PLAT_AP,LWIP_API,lwip_ioctl_1,P_VALUE,swLogPrintf("lwip_ioctl ( %d , FIONREAD , 0x%x ) = %u ");
295936,606832896,0,0,PLAT_AP,LWIP_API,lwip_ioctl_2,P_VALUE,swLogPrintf("lwip_ioctl ( %d , FIONBIO , %d ) ");
295936,606834944,0,0,PLAT_AP,LWIP_API,lwip_ioctl_3,P_VALUE,swLogPrintf("lwip_ioctl ( %d , FIOHWODR , %d ) ");
295936,606837248,0,0,PLAT_AP,LWIP_API,lwip_ioctl_4,P_VALUE,swLogPrintf("lwip_ioctl ( %d , UNIMPL : 0x%x , 0x%x ) ");
295936,606839296,0,0,PLAT_AP,LWIP_API,lwip_fcntl_1,P_VALUE,swLogPrintf("lwip_fcntl ( %d , UNIMPL : %d , %d ) ) ");
295936,606842879,0,0,PLAT_AP,LWIP_API,tcpip_thread_1,P_WARNING,swLogPrintf("tcpip_thread : invalid message : NULL ");
295936,606842880,0,0,PLAT_AP,LWIP_API,tcpip_thread_2,P_INFO,swLogPrintf("tcpip_thread : API message 0x%x ");
295936,606844928,0,0,PLAT_AP,LWIP_API,tcpip_thread_3,P_INFO,swLogPrintf("tcpip_thread : API CALL message 0x%x ");
295936,606846976,0,0,PLAT_AP,LWIP_API,tcpip_thread_5,P_INFO,swLogPrintf("tcpip_thread : PS PACKET 0x%x ");
295936,606849024,0,0,PLAT_AP,LWIP_API,tcpip_thread_pending_input,P_INFO,swLogPrintf("tcpip_thread : PS PACKET 0x%x ");
295936,606851072,0,0,PLAT_AP,LWIP_API,tcpip_thread_11,P_INFO,swLogPrintf("tcpip_thread : LAN PACKET 0x%x ");
295936,606853120,0,0,PLAT_AP,LWIP_API,tcpip_thread_6,P_INFO,swLogPrintf("tcpip_thread : TIMEOUT 0x%x ");
295936,606855168,0,0,PLAT_AP,LWIP_API,tcpip_thread_7,P_INFO,swLogPrintf("tcpip_thread : UNTIMEOUT 0x%x ");
295936,606857216,0,0,PLAT_AP,LWIP_API,tcpip_thread_8,P_INFO,swLogPrintf("tcpip_thread : CALLBACK 0x%x ");
295936,606859264,0,0,PLAT_AP,LWIP_API,tcpip_thread_9,P_INFO,swLogPrintf("tcpip_thread : CALLBACK_STATIC 0x%x ");
295936,606861312,0,0,PLAT_AP,LWIP_API,tcpip_thread_10,P_WARNING,swLogPrintf("tcpip_thread : invalid message %d ");
295936,606865407,0,0,PLAT_AP,LWIP_API,tcpip_inpkt_2,P_ERROR,swLogPrintf("tcpip_inpkt : Invalid mbox ");
295936,606865664,0,0,PLAT_AP,LWIP_API,TcpipPsInpkt_2,P_INFO,swLogPrintf("TcpipPsInpkt2 : %u / 0x%x ");
295936,606869503,0,0,PLAT_AP,LWIP_API,TcpipPsInpkt_3,P_ERROR,swLogPrintf("TcpipPsInpkt : Invalid mbox ");
295936,606869504,0,0,PLAT_AP,LWIP_API,TcpipPsPendingInpkt_2,P_INFO,swLogPrintf("TcpipPsPendingInpkt : %u ");
295936,606873599,0,0,PLAT_AP,LWIP_API,TcpipPsPendingInpkt_3,P_ERROR,swLogPrintf("TcpipPsPendingInpkt : Invalid mbox ");
295936,606873856,0,0,PLAT_AP,LWIP_API,TcpipLanInpkt_2,P_INFO,swLogPrintf("TcpipLanInpkt : %u / 0x%x ");
295936,606877695,0,0,PLAT_AP,LWIP_API,TcpipLanInpkt_3,P_ERROR,swLogPrintf("TcpipLanInpkt : Invalid mbox ");
295936,606879743,0,0,PLAT_AP,LWIP_API,tcpip_callback_with_block_1,P_ERROR,swLogPrintf("tcpip_callback_with_block : Invalid mbox ");
295936,606881791,0,0,PLAT_AP,LWIP_API,tcpip_timeout_1,P_ERROR,swLogPrintf("tcpip_timeout : Invalid mbox ");
295936,606883839,0,0,PLAT_AP,LWIP_API,tcpip_untimeout_1,P_ERROR,swLogPrintf("tcpip_untimeout : Invalid mbox ");
295936,606885887,0,0,PLAT_AP,LWIP_API,tcpip_send_msg_wait_sem_1,P_ERROR,swLogPrintf("tcpip_send_msg_wait_sem : Invalid mbox or semaphore not initialized ");
295936,606887935,0,0,PLAT_AP,LWIP_API,tcpip_api_call_1,P_ERROR,swLogPrintf("tcpip_api_call : Invalid mbox ");
295936,606889983,0,0,PLAT_AP,LWIP_API,tcpip_trycallback_1,P_ERROR,swLogPrintf("tcpip_trycallback : Invalid mbox ");
295936,606892031,0,0,PLAT_AP,LWIP_API,tcpip_init_1,P_ERROR,swLogPrintf("tcpip_init : failed to create tcpip_thread mbox ");
296960,608178175,0,0,PLAT_AP,MAC,CatMacUlBeCancelZeroBSR_highwater_1,P_WARNING,swLogPrintf("CAT MAC UL , UL highwater , cancel BSR 0 ");
296960,608180223,0,0,PLAT_AP,LWIP_OTHER,free_etharp_q_1,P_ERROR,swLogPrintf("free_etharp_q point is invalid ");
296960,608182271,0,0,PLAT_AP,LWIP_OTHER,free_etharp_q_2,P_ERROR,swLogPrintf("free_etharp_q point is invalid ");
296960,608182528,0,0,PLAT_AP,LWIP_OTHER,etharp_free_entry_1,P_INFO,swLogPrintf("etharp_free_entry : freeing entry %u , packet queue 0x%x ");
296960,608184320,0,0,PLAT_AP,LWIP_OTHER,etharp_free_entry_disable_retry_timer_1,P_INFO,swLogPrintf("etharp_free_entry : disable retry timer entry %u ");
296960,608186368,0,0,PLAT_AP,LWIP_OTHER,etharp_free_entry_disable_cahce_timer_1,P_INFO,swLogPrintf("etharp_free_entry : disable cache timer entry %u ");
296960,608190463,0,0,PLAT_AP,LWIP_OTHER,etharp_free_table_1,P_ERROR,swLogPrintf("etharp_free_entry : invalid table point ");
296960,608190464,0,0,PLAT_AP,LWIP_OTHER,etharp_free_table_2,P_INFO,swLogPrintf("etharp_free_entry : freeing entr , packet queue 0x%x ");
296960,608194559,0,0,PLAT_AP,LWIP_OTHER,arp_enable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
296960,608196607,0,0,PLAT_AP,LWIP_OTHER,arp_disable_timer_active_mask_1,P_ERROR,swLogPrintf("invalid argument ");
296960,608198655,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_cache_timer_1,P_INFO,swLogPrintf("tcpip_arp_cache_timer timeout ");
296960,608200703,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_cache_timer_2,P_ERROR,swLogPrintf("tcpip_arp_cache_timer arg invliad ");
296960,608202751,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_1,P_INFO,swLogPrintf("tcpip_arp_retry_timer tiemout ");
296960,608204799,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_2,P_ERROR,swLogPrintf("tcpip_arp_retry_timer arg invliad ");
296960,608204800,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_3,P_WARNING,swLogPrintf("tcpip_arp_retry_timer start retry timer %u ");
296960,608206848,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_4,P_WARNING,swLogPrintf("tcpip_arp_retry_timer invliad state %u ");
296960,608210943,0,0,PLAT_AP,LWIP_OTHER,tcpip_arp_retry_timer_5,P_INFO,swLogPrintf("tcpip_arp_retry_timer reach max retry times ");
296960,608210944,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_1,P_INFO,swLogPrintf("etharp_find_entry : found empty entry %u ");
296960,608212992,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_2,P_VALUE,swLogPrintf("state %u ");
296960,608215040,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_3,P_INFO,swLogPrintf("etharp_find_entry : found matching entry %u ");
296960,608219135,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_4,P_INFO,swLogPrintf("etharp_find_entry : no empty entry found and not allowed to recycle ");
296960,608219136,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_5,P_INFO,swLogPrintf("etharp_find_entry : selecting empty entry %u ");
296960,608221184,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_6,P_INFO,swLogPrintf("etharp_find_entry : selecting oldest entry %u ");
296960,608225279,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_7,P_ERROR,swLogPrintf("arp_table [ i ] .q ! = NULL ");
296960,608225280,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_8,P_INFO,swLogPrintf("etharp_find_entry : selecting oldest pending entry %u ");
296960,608227584,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_9,P_INFO,swLogPrintf("etharp_find_entry : selecting oldest pending entry %u , freeing packet queue 0x%x ");
296960,608231423,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_10,P_INFO,swLogPrintf("etharp_find_entry : no empty or recyclable entries found ");
296960,608233471,0,0,PLAT_AP,LWIP_OTHER,etharp_find_entry_11,P_ERROR,swLogPrintf("i > = ARP_TABLE_SIZE ");
296960,608235519,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_1,P_ERROR,swLogPrintf("netif->hwaddr_len = = ETH_HWADDR_LEN ");
296960,608236288,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_2_sub_1,P_INFO,swLogPrintf("etharp_update_arp_entry : ip %u.%u.%u.%u ");
296960,608238848,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_2_sub_2,P_INFO,swLogPrintf("etharp_update_arp_entry : mac %u : %u : %u : %u : %u : %u ");
296960,608241663,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_3,P_ERROR,swLogPrintf("etharp_update_arp_entry : will not add non-unicast IP address to ARP cache ");
296960,608241664,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_entry_4,P_INFO,swLogPrintf("etharp_update_arp_entry : updating stable entry %u ");
296960,608243712,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_disable_retry_timer_1,P_INFO,swLogPrintf("etharp_update_arp_entry : disable retry timer entry %u ");
296960,608245760,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_disable_cahce_timer_1,P_INFO,swLogPrintf("etharp_update_arp_entry : disable old cache timer entry %u ");
296960,608247808,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_enable_cahce_timer_1,P_INFO,swLogPrintf("etharp_update_arp_entry : disable old cache timer entry %u ");
296960,608249856,0,0,PLAT_AP,LWIP_OTHER,etharp_update_arp_disable_retry_timer_static,P_INFO,swLogPrintf("etharp_update_arp_entry : static arp entry %u ");
296960,608252672,0,0,PLAT_AP,LWIP_OTHER,etharp_add_static_entry_11,P_INFO,swLogPrintf("etharp_add_static_entry : %u.%u.%u.%u ");
296960,608255232,0,0,PLAT_AP,LWIP_OTHER,etharp_add_static_entry_12,P_INFO,swLogPrintf("etharp_add_static_entry : %u : %u : %u : %u : %u : %u ");
296960,608256768,0,0,PLAT_AP,LWIP_OTHER,etharp_remove_static_entry_1,P_INFO,swLogPrintf("etharp_remove_static_entry : %u.%u.%u.%u ");
296960,608260095,0,0,PLAT_AP,LWIP_OTHER,etharp_find_addr_1,P_ERROR,swLogPrintf("eth_ret = = NULL || ip_ret = = NULL ");
296960,608262143,0,0,PLAT_AP,LWIP_OTHER,etharp_get_entry_1,P_ERROR,swLogPrintf("ipaddr = = NULL || ipaddr = = NULL || eth_ret = = NUL ");
296960,608264191,0,0,PLAT_AP,LWIP_OTHER,etharp_input_1,P_ERROR,swLogPrintf("netif = = NULL ");
296960,608264704,0,0,PLAT_AP,LWIP_OTHER,etharp_input_2,P_INFO,swLogPrintf("etharp_input : packet dropped , wrong hw type , hwlen , proto , protolen or ethernet type ( %u ^u %u %u ) ");
296960,608268287,0,0,PLAT_AP,LWIP_OTHER,etharp_input_3,P_INFO,swLogPrintf("etharp_input : incoming ARP request ");
296960,608270335,0,0,PLAT_AP,LWIP_OTHER,etharp_input_4,P_INFO,swLogPrintf("etharp_input : we are unconfigured , ARP request ignored ");
296960,608272383,0,0,PLAT_AP,LWIP_OTHER,etharp_input_5,P_INFO,swLogPrintf("etharp_input : ARP request was not for us ");
296960,608274431,0,0,PLAT_AP,LWIP_OTHER,etharp_input_6,P_INFO,swLogPrintf("etharp_input : incoming ARP reply ");
296960,608274432,0,0,PLAT_AP,LWIP_OTHER,etharp_input_7,P_INFO,swLogPrintf("etharp_input : ARP unknown opcode type %u ");
296960,608278527,0,0,PLAT_AP,LWIP_OTHER,etharp_output_to_arp_index_1,P_ERROR,swLogPrintf("arp_table [ arp_idx ] .state < ETHARP_STATE_STABLE ");
296960,608278528,0,0,PLAT_AP,LWIP_OTHER,etharp_output_to_arp_index_enable_retry_timer_1,P_INFO,swLogPrintf("etharp_output_to_arp_index : enable retry timer entry %u ");
296960,608280576,0,0,PLAT_AP,LWIP_OTHER,etharp_output_to_arp_index_enable_retry_timer_2,P_INFO,swLogPrintf("etharp_output_to_arp_index : enable retry timer entry %u ");
296960,608284671,0,0,PLAT_AP,LWIP_OTHER,etharp_output_1,P_ERROR,swLogPrintf("netif = = NULL || q = = NULL || ipaddr = = NULL ");
296960,608286719,0,0,PLAT_AP,LWIP_OTHER,etharp_query_1,P_ERROR,swLogPrintf("etharp_query : will not add non-unicast IP address to ARP cache ");
296960,608288767,0,0,PLAT_AP,LWIP_OTHER,etharp_query_2,P_INFO,swLogPrintf("etharp_query : could not create ARP entry ");
296960,608290815,0,0,PLAT_AP,LWIP_OTHER,etharp_query_3,P_INFO,swLogPrintf("etharp_query : packet dropped ");
296960,608292863,0,0,PLAT_AP,LWIP_OTHER,etharp_query_4,P_ERROR,swLogPrintf("( arp_table [ i ] .state ! = ETHARP_STATE_PENDING ) && ( arp_table [ i ] .state < ETHARP_STATE_STABLE ) L ");
296960,608294911,0,0,PLAT_AP,LWIP_OTHER,etharp_query_5,P_ERROR,swLogPrintf("q = = NULL ");
296960,608296959,0,0,PLAT_AP,LWIP_OTHER,etharp_query_6,P_ERROR,swLogPrintf("no packet queues allowed ");
296960,608297216,0,0,PLAT_AP,LWIP_OTHER,etharp_query_7,P_INFO,swLogPrintf("etharp_query : queued packet 0x%x on ARP entry %u ");
296960,608299008,0,0,PLAT_AP,LWIP_OTHER,etharp_query_8,P_INFO,swLogPrintf("etharp_query : could not queue a copy of PBUF_REF packet 0x%x ( out of memory ) ");
296960,608301312,0,0,PLAT_AP,LWIP_OTHER,etharp_query_10,P_INFO,swLogPrintf("etharp_query : dropped previously queued packe 0x%x for ARP entry %u ");
296960,608305151,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_1,P_ERROR,swLogPrintf("netif = = NULL ");
296960,608307199,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_2,P_ERROR,swLogPrintf("etharp_raw : could not allocate pbuf for ARP request ");
296960,608309247,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_3,P_ERROR,swLogPrintf("check that first pbuf can hold struct etharp_hdr ");
296960,608311295,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_4,P_INFO,swLogPrintf("etharp_raw : sending raw ARP packet ");
296960,608313343,0,0,PLAT_AP,LWIP_OTHER,etharp_raw_5,P_ERROR,swLogPrintf("netif->hwaddr_len must be the same as ETH_HWADDR_LEN for etharp ");
296960,608315391,0,0,PLAT_AP,LWIP_OTHER,etharp_request_1,P_VALUE,swLogPrintf("etharp_request : sending ARP request ");
296960,608316672,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_1_sub_1,P_INFO,swLogPrintf("ethernet_input : dest : %u : %u : %u : %u : %u : %u ");
296960,608318976,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_1_sub_2,P_INFO,swLogPrintf("ethernet_input : src : %u : %u : %u : %u : %u : %u , type %u ");
296960,608319744,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_2,P_INFO,swLogPrintf("ethernet_input : IPv4 packet dropped , too short ( %u %u ) ");
296960,608321792,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_3,P_INFO,swLogPrintf("ethernet_input : ARP response packet dropped , too short ( %u %u ) ");
296960,608323840,0,0,PLAT_AP,LWIP_OTHER,ethernet_input_4,P_INFO,swLogPrintf("ethernet_input : IPv6 packet dropped , too short ( %u %u ) ");
296960,608327679,0,0,PLAT_AP,LWIP_OTHER,ethernet_output_2,P_ERROR,swLogPrintf("netif->hwaddr_len must be 6 for ethernet_output ");
296960,608327680,0,0,PLAT_AP,LWIP_OTHER,ethernet_output_3,P_INFO,swLogPrintf("ethernet_output : sending packet 0x%x ");
296960,608331775,0,0,PLAT_AP,LWIP_OTHER,ethernet_output_4,P_ERROR,swLogPrintf("ethernet_output : could not allocate room for header ");
297984,610273536,0,0,PLAT_AP,RLC,CatRlcAmDecodeDlSnPdu_hw_3,P_WARNING,swLogPrintf("AM DL , L2 DL BM highwater , could only RECV / ACCEPT VRR : %d PDU , discard this SN : %d ");
297984,610275584,0,0,PLAT_AP,RLC,CatRlcAmReEstAssemblePdcpPduFromRlcPdu_1,P_VALUE,swLogPrintf("Re-Est AM DL , Cur SN : %d , segNum : 1 , fi : %d ( FNF ) , this PDCP PDU missing the front half , can ' t assemble it , discard this RLC PDU! ");
297984,610277888,0,0,PLAT_AP,RLC,CatRlcAmReEstAssemblePdcpPduFromRlcPdu_2,P_VALUE,swLogPrintf("Re-Est AM DL , Cur SN : %d , segNum : %d , fi : %d ( FNF ) , the first PDCP seg missing the front half , can ' t assemble it , skip and continue to assemble other seg! ");
297984,610279424,0,0,PLAT_AP,RLC,CatRlcAmAssembleLcDlSdu_1,P_INFO,swLogPrintf("RLC AM LC : %d , don ' t has valid PDCP PDU , maybe only RLC STATUS report , or RLC PDU has been discarded. ");
297984,610281984,0,0,PLAT_AP,RLC,CatRlcAmDlLcReestablishReq_1,P_VALUE,swLogPrintf("Re-Est RLC AM DL , LC : %d , vrr : %d , miss SN : %d , SN is not continuous , discard BackUp PDU! ");
297984,610283776,0,0,PLAT_AP,RLC,CatRlcUmAssemblePdcpPduFromWholeRlcPdu_1,P_VALUE,swLogPrintf("UM DL , Cur SN : %d , segNum : 1 , fi : %d ( FNF ) , this PDCP PDU missing the front half , can ' t assemble it , discard this RLC PDU! ");
297984,610286080,0,0,PLAT_AP,RLC,CatRlcUmAssemblePdcpPduFromWholeRlcPdu_2,P_VALUE,swLogPrintf("UM DL , Cur SN : %d , segNum : %d , fi : %d ( FNF ) , the first PDCP seg missing the front half , can ' t assemble it , skip and continue to assemble other seg! ");
297984,610287616,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_1,P_INFO,swLogPrintf("RLC UM DL , LC : %d , don ' t has valid PDCP PDU , maybe RLC PDU has been discarded. ");
297984,610290432,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_2,P_VALUE,swLogPrintf("RLC UM DL , LC : %d , vrur : %d , fall out of reordering window : [ %d ~ %d ) , update vrur ");
297984,610292224,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_3,P_VALUE,swLogPrintf("RLC UM DL , LC : %d , vrur : %d , miss SN : %d , skip this PDU! ");
297984,610293760,0,0,PLAT_AP,RLC,CatRlcUmAssembleLcDlSdu_4,P_VALUE,swLogPrintf("RLC UM DL , LC : %d , the backup PDU missing the second half , can ' t assemble it , discard the backup PDU! ");
297984,610296320,0,0,PLAT_AP,RLC,CatRlcUmDlLcReestablishReq_1,P_VALUE,swLogPrintf("RLC UM DL , LC : %d , vrur : %d , miss SN : %d , skip this PDU! ");
297984,610297856,0,0,PLAT_AP,RLC,CatRlcUmDlLcReestablishReq_2,P_VALUE,swLogPrintf("RLC UM DL , LC : %d , the backup PDU missing the second half , can ' t assemble it , discard the backup PDU! ");
297984,610300416,0,0,PLAT_AP,RLC,CatRlcUmTReorderingTimerExpiry_2,P_VALUE,swLogPrintf("UM DL , LC : %d , vrur : %d , miss SN : %d , skip this PDU! ");
297984,610301952,0,0,PLAT_AP,RLC,CatRlcUmTReorderingTimerExpiry_3,P_VALUE,swLogPrintf("RLC UM DL , LC : %d , the backup PDU missing the second half , can ' t assemble it , discard the backup PDU! ");
299008,612370944,0,0,PLAT_AP,PDCP,CatPdcpDlDecodeOneStatusReportPdu_fms_1,P_VALUE,swLogPrintf("PDCP DL , LCID : %d , recv status report , fmsCount : 0x%x , nextTxCount : 0x%x ");
299008,612372480,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrProcCeregCnf_1,P_WARNING,swLogPrintf("NM , PS not REG : %d , but not try to search / register to NW ");
299008,612374784,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrProcCeregCnf_2,P_WARNING,swLogPrintf("NM , PS not REG : %d , actCidsBitmap : 0x%x ");
299008,612376576,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrProcCeregInd_1,P_WARNING,swLogPrintf("NM , PS not REG : %d , but not try to search / register to NW ");
299008,612378624,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetNetInfoCallback_1,P_SIG,swLogPrintf("NET MGR , NM get net info , state : %u ");
299008,612380928,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_1,P_SIG,swLogPrintf("Net manager link up : CID %d , bind to another CID %d ");
299008,612382976,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_2,P_WARNING,swLogPrintf("Net manager link up fail , invalid ip type : %d , %d ");
299008,612386815,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_3,P_WARNING,swLogPrintf("NM , Test SIM and IPV6 RS is not enabled for TEST SIM , not EST this IPV6 IF ");
299008,612387840,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_4,P_SIG,swLogPrintf("Net manager , link up , CID : %d , IPV4 : %u.%u.%u.%u ");
299008,612390911,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_5,P_SIG,swLogDump("Net manager , link up , full IPV6 addr : ");
299008,612392959,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_ipv6_id_4,P_WARNING,swLogPrintf("NM , Test SIM and IPV6 RS is not enabled for TEST SIM , ignore this IPV6 IF ");
299008,612392960,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_ipv6GetPrefixelay,P_INFO,swLogPrintf("NM , ipv6 get prefix delay %u ");
299008,612397055,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_6,P_SIG,swLogDump("Net manager , link up , IPV6 ID addr : ");
299008,612397824,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkUp_7,P_SIG,swLogPrintf("Net manager , link up , IPV4 PCO DNS : %u.%u.%u.%u ");
299008,612399360,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrDedLinkUp_1,P_SIG,swLogPrintf("NETMANAGER , dedicated BR link up , cid : %d , pcid : %d ");
299008,612401152,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLinkDown_1,P_SIG,swLogPrintf("NETMANAGER link down : cid %d ");
299008,612403200,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanLinkUp_1,P_SIG,swLogPrintf("NETMANAGER LAN link up : type %u ");
299008,612405248,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanLinkDown_1,P_SIG,swLogPrintf("NETMANAGER LAN link down : type %u ");
299008,612407552,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanLinkLayerStatusChange_1,P_SIG,swLogPrintf("NETMANAGER LAN link layer status change : type %u , new status %u ");
299008,612409344,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanConfig_1,P_SIG,swLogPrintf("NETMANAGER LAN config , ether mode %u ");
299008,612412160,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrLanCtrl_1,P_SIG,swLogPrintf("NETMANAGER LAN control , action %u , type %u , ip4Cid %u , ip6Cid %u ");
299008,612413440,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrQueryLanTcpipDataPathCapability_1,P_INFO,swLogPrintf("NET MGR , lan data path cap type : %u ");
299008,612415488,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetLanTcpipDataPathStatus_1,P_INFO,swLogPrintf("NET MGR , lan data path status type : %u ");
299008,612417536,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetLanTcpipDataPathHostInfo_1,P_INFO,swLogPrintf("NET MGR , lan data path host info type : %u ");
299008,612419584,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetNetInfo_1,P_INFO,swLogPrintf("NET MGR , get ATI netif info , cid : %u ");
299008,612421632,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetNetInfoWithoutPsStatusCheck_1,P_INFO,swLogPrintf("NET MGR , get ATI netif info without PS check , cid : %u ");
299008,612423680,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrGetDnsServerInfo_1,P_INFO,swLogPrintf("NETMANAGER get DNS server info : cid %u ");
299008,612425728,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrClearDnsCacheInfo_1,P_INFO,swLogPrintf("NETMANAGER clear DNS cache info : clear all flag %u ");
299008,612427776,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrSetDnsCache_1,P_INFO,swLogPrintf("NETMANAGER Set DNS cache config %u ");
299008,612430080,0,0,PLAT_AP,TCPIP_NETMGR,NetMgrSendNetInfoInd_1,P_WARNING,swLogPrintf("NM send NmAtiNetInfoInd to idx : %d , AppId : %d , but sigQue is NULL ");
299008,612432640,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_1,P_INFO,swLogPrintf("psdial , NW not config DNS , use default IPv4 DNS ADDR : %u.%u.%u.%u ");
299008,612435967,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_3,P_INFO,swLogPrintf("psdial load ipv4 IMSI DNS ");
299008,612438015,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_4,P_INFO,swLogPrintf("psdial load ipv6 IMSI DNS ");
299008,612438016,0,0,PLAT_AP,TCPIP_NETMGR,psDailSetAdptDnsServerInfo_5,P_WARNING,swLogPrintf("PS DAIL , Get adpt DNS server address failed , bWakeUp %u ");
300032,614467840,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_dest_1,P_WARNING,swLogPrintf("NET DL fast path , one IP DL dest : 0x%lx , not for UE : 0x%lx , discard ");
300032,614469888,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_dest_2,P_WARNING,swLogPrintf("NET DL fast path , one IP DL dest : 0x%lx , not for UE : 0x%lx ");
300032,614471936,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_arpCache_1,P_WARNING,swLogPrintf("NET DL fast path , IPV4 host ARP cache not done , host ARP addr : 0x%lx , host addr : 0x%lx , pkg foward to LWIP ");
300032,614473728,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_frag_1,P_WARNING,swLogPrintf("NET DL fast path , one IP is fragment : 0x%lx , pass to LWIP ");
300032,614476032,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_mtu_1,P_WARNING,swLogPrintf("NET DL fast path , pkg length : %d > LAN MTU : %d , need IP fragment ");
300032,614477824,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_ip_proto_1,P_VALUE,swLogPrintf("NET DL fast path , IP protocol is not UDP / TCP : %d , pass to LWIP ");
300032,614480128,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_udp_len_1,P_ERROR,swLogPrintf("NET DL fast path , pkg length : %d < = ( ipHdrLen : %d + udpHdrLen : 8 ) , discard ");
300032,614482176,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_tcp_len_1,P_ERROR,swLogPrintf("NET DL fast path , pkg length : %d < = ( ipHdrLen : %d + tcpHdrLen : 20 ) , discard ");
300032,614486015,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_tcp_mss_1,P_VALUE,swLogPrintf("NET DL fast path , TCP SYNC pkt , need MSS check ");
300032,614488063,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_dns_relay_1,P_VALUE,swLogPrintf("NET DL fast path , RNDIS private IP soltion , dns need relay ");
300032,614488320,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp4_ue_local_1,P_VALUE,swLogPrintf("NET DL fast path , ue local check proto %u , port %u ");
300032,614490368,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp6Isr_eth_lan_mtu_1,P_WARNING,swLogPrintf("NET DL fast path , pkg length : %d > LAN MTU : %d , need IP segment ");
300032,614492416,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp6Isr_ppp_lan_mtu_1,P_WARNING,swLogPrintf("NET DL fast path , pkg length : %d > LAN MTU : %d , need IP segment ");
300032,614496255,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIp6Isr_fast_fail,P_WARNING,swLogPrintf("NET DL fast path , ipv6 dl fast fail , maybe ndp cache fail ");
300032,614498303,0,0,PLAT_AP,TCPIP_NETADPT,NetFastInsertTcpConnInfo_none_s_1,P_WARNING,swLogPrintf("NET FAST , try add new TCP conn , but list is NULL ");
300032,614499328,0,0,PLAT_AP,TCPIP_NETADPT,NetFastInsertTcpConnInfo_rm_s_1,P_SIG,swLogPrintf("NET FAST , RM oldest tcp conn , ipType : %d , hostPort : %d , rmtPort : %d , curTick : 0x%lx , oldTick : 0x%lx ");
300032,614501120,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_add_ws,P_DEBUG,swLogPrintf("NET FAST PATH , UL TCP SYN , IpType : %d , hostPort : %d , rmtPort : %d , scaleV : %d , try add into list ");
300032,614503168,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_disable_ws,P_VALUE,swLogPrintf("NET FAST PATH , UL IpType : %d , hostPort : %d , rmtPort : %d , scaleV : %d , list full , disable WS option ");
300032,614504960,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_em_ws_1,P_DEBUG,swLogPrintf("NET FAST PATH , UL TCP SYN , IpType : %d , hostPort : %d , rmtPort : %d , no WS option , try to rm from list ");
300032,614507264,0,0,PLAT_AP,TCPIP_NETADPT,NetFastPathTcpWSProcess_1,P_VALUE,swLogPrintf("NET FAST PATH TCP WIN ADPT , hostPort : %d , old win %u , new win %u , scaling value %u ");
300032,614508800,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_ip_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get ipv4 header , or ipver : %d , pkglen : %d , discard ");
300032,614510592,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_wan_ipv4_invalid_1,P_VALUE,swLogPrintf("NET UL fast path , wan ipv4 invalid , ipv4Cid : %d ");
300032,614512640,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_local_1,P_VALUE,swLogPrintf("NET UL fast path , ipv4 dest : 0x%lx , multicast , or to local , local input ");
300032,614516735,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_ip_freg_1,P_WARNING,swLogPrintf("NET UL fast path , ip fregment , need local input ");
300032,614516992,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , IP pkg len : %d > WAN MTU : %d , need segment ");
300032,614519296,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_nat_2,P_WARNING,swLogPrintf("NET UL fast path , SRC ipv4 addr : 0x%lx , not host addr : 0x%lx , not UE addr : 0x%lx , fwd to PS for easy ");
300032,614521344,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_udp_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get UDP header , pkglen : %d , iphdrSize : %d , offset : %d , discard ");
300032,614523392,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_tcp_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get TCP header , pkglen : %d , iphdrSize : %d , offset : %d , discard ");
300032,614525184,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_mss_1,P_VALUE,swLogPrintf("NET UL fast path , TCP SYNC pkt , and LAN MTU : %d > WAN MTU : %d , need MSS check ");
300032,614529023,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_dns_relay_1,P_VALUE,swLogPrintf("NET UL fast path , DNS request pkt , Rndis Private Ip solution , need dns relay ");
300032,614529280,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_ue_local_1,P_VALUE,swLogPrintf("NET UL fast path , ue local check proto %u , port %u ");
300032,614531072,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_port_1,P_WARNING,swLogPrintf("NET UL fast path , SRC port : %d , need mapping ");
300032,614535167,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_major_channel_check_1,P_VALUE,swLogPrintf("NET UL fast path , lan channel is the secondary , need mapping ");
300032,614535680,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_nat_1,P_WARNING,swLogPrintf("NET UL fast path , SRC ipv4 addr : 0x%lx , not host addr : 0x%lx , not UE addr : 0x%lx , fwd to PS for easy ");
300032,614539263,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_TFT_1,P_WARNING,swLogPrintf("NET UL fast path , TFT configed , all pass to LWIP ");
300032,614541311,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp4_ROHC_1,P_WARNING,swLogPrintf("NET UL fast path , ROHC configed , all pass to LWIP ");
300032,614541824,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_ip_1,P_WARNING,swLogPrintf("NET UL fast path , can ' t get ipv6 header , or ipver : %d , pkglen : %d , or ip6cid invalid : %d , discard ");
300032,614543360,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_wan_ipv6_invalid,P_VALUE,swLogPrintf("NET UL fast path , wan ipv6 invalid , ipv6Cid : %d ");
300032,614546176,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_multi_1,P_VALUE,swLogPrintf("NET UL fast path , ipv6 dest : 0x%lx : 0x%lx : 0x%lx : 0x%lx , multicast , local input ");
300032,614548224,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_local_1,P_VALUE,swLogPrintf("NET UL fast path , ipv6 dest : 0x%lx : 0x%lx : 0x%lx : 0x%lx , to local ");
300032,614549760,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , IPv6 pkg len : %d > WAN MTU : %d , need segment ");
300032,614553599,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_TFT_1,P_WARNING,swLogPrintf("NET UL fast path , TFT configed , all pass to LWIP ");
300032,614555647,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathRndisIp6_ROHC_1,P_WARNING,swLogPrintf("NET UL fast path , ROHC configed , all pass to LWIP ");
300032,614556160,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_ip_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get ipv4 header , or ipver : %d , pkglen : %d , or ip4cid invalid : %d , discard ");
300032,614557696,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_ip_wan_ipv4_invalid_1,P_WARNING,swLogPrintf("NET UL fast path , wan ipv4 invalid , ipv4Cid : %d ");
300032,614561791,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_ip_freg_1,P_WARNING,swLogPrintf("NET UL fast path , PPP ip fregment , need local input ");
300032,614562048,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , PPP IP pkg len : %d > WAN MTU : %d , need segment ");
300032,614564096,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_udp_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get UDP header , pkglen : %d , iphdrSize : %d , discard ");
300032,614566144,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_tcp_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get TCP header , pkglen : %d , iphdrSize : %d , discard ");
300032,614569983,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_windows_adpt_1,P_VALUE,swLogPrintf("NET UL fast path , TCP SYNC pkt , need windows adpt ");
300032,614570240,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_mss_1,P_WARNING,swLogPrintf("NET UL fast path , PPP TCP SYNC pkt , and LAN MTU : %d > WAN MTU : %d , need MSS check ");
300032,614572288,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_ue_local_1,P_VALUE,swLogPrintf("NET UL fast path , ue local check proto %u , port %u ");
300032,614574080,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_port_1,P_WARNING,swLogPrintf("NET UL fast path , PPP SRC port : %d , need mapping ");
300032,614578175,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp4_TFT_1,P_WARNING,swLogPrintf("NET UL fast path , TFT configed , all pass to LWIP ");
300032,614578688,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_ip_1,P_WARNING,swLogPrintf("NET UL fast path , PPP can ' t get ipv6 header , or ipver : %d , pkglen : %d , or ip6cid invalid : %d , discard ");
300032,614580224,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_wan_ipv6_invalid_1,P_VALUE,swLogPrintf("NET UL fast path , wan ipv6 invalid , ipv6Cid : %d ");
300032,614583040,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_multi_1,P_VALUE,swLogPrintf("NET UL fast path , PPP ipv6 dest : 0x%lx : 0x%lx : 0x%lx : 0x%lx , multicast , local input ");
300032,614585088,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_local_1,P_VALUE,swLogPrintf("NET UL fast path , PPP ipv6 dest : 0x%lx : 0x%lx : 0x%lx : 0x%lx , to local ");
300032,614586624,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_mtu_1,P_WARNING,swLogPrintf("NET UL fast path , PPP IPv6 pkg len : %d > WAN MTU : %d , need segment ");
300032,614590463,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPathPppIp6_TFT_1,P_WARNING,swLogPrintf("NET UL fast path , TFT configed , all pass to LWIP ");
300032,614590464,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_none_2,P_VALUE,swLogPrintf("NET DL fast path , no fast channel info : %d , all DL PDU need to pass to LWIP ");
300032,614592512,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_eth_rohc_3,P_VALUE,swLogPrintf("NET DL fast path , cid : %d , rohc enable , all DL PDU need to pass to LWIP ");
300032,614594560,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_PPP_rohc_3,P_VALUE,swLogPrintf("NET DL fast path , cid : %d , rohc enable , all DL PDU need to pass to LWIP ");
300032,614596608,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_none_4,P_VALUE,swLogPrintf("NET DL fast path , cid : %d , not bind any lan , pass to LWIP ");
300032,614598656,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlPkgFastPathIsr_ipver_1,P_WARNING,swLogPrintf("NET DL fast path , invalid IpVersion : %d ");
300032,614601216,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_input_w_1,P_WARNING,swLogPrintf("NET UL fast path , invalid input , lanType : %d , pUlHdr : 0x%x , pUlChkInfo : 0x%x , discard UL data ");
300032,614602752,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_RNDIS_w_1,P_WARNING,swLogPrintf("NET UL fast path , ETH input , but LAN is not setup , lanType : %d , discard all UL data ");
300032,614604800,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_ethHdr_1,P_WARNING,swLogPrintf("NET UL fast path , RNDIS , can ' t get ETH header , pkgLen : %d ");
300032,614608895,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_bc_1,P_VALUE,swLogPrintf("NET UL fast path , eth pkt dest is broad cast , local input ");
300032,614610176,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_dest_mac_1,P_WARNING,swLogPrintf("NET UL fast path , eth pkt dest : %u : %u : %u : %u : %u : %u is not UE MAC interface , discard ");
300032,614610944,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_eth_type_1,P_VALUE,swLogPrintf("NET UL fast path , other ETH type : %d , local input ");
300032,614612992,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_PPP_w_1,P_WARNING,swLogPrintf("NET UL fast path , PPP input , but LAN is not setup , lanType : %d , discard all UL data ");
300032,614615040,0,0,PLAT_AP,TCPIP_NETADPT,NetifUlPkgFastPath_ppp_ip_ver_1,P_WARNING,swLogPrintf("NET UL fast path , PPP , invalid IP ver : %d , discard ");
300032,614617856,0,0,PLAT_AP,TCPIP_NETADPT,NetFastDelTcpConnInfo_del_s_1,P_SIG,swLogPrintf("NET FAST , RM tcp conn OK : %d , ipType : %d , hostPort : %d , rmtPort : %d ");
300032,614619392,0,0,PLAT_AP,TCPIP_NETADPT,NetGetBindLanNetifByIp4WanNetifAndLanType_1,P_VALUE,swLogPrintf("wan neif cid %u is not the same as lan netif cid %u ");
300032,614621184,0,0,PLAT_AP,TCPIP_NETADPT,NetGetBindLanNetifByIp6WanNetifAndLanType_1,P_ERROR,swLogPrintf("wan neif cid %u is not the same as lan netif cid ");
300032,614625279,0,0,PLAT_AP,TCPIP_NETADPT,tcpip_ps_ul_pdu,P_VALUE,swLogDumpPolling("");
300032,614627327,0,0,PLAT_AP,TCPIP_NETADPT,tcpip_ps_dl_pdu,P_VALUE,swLogDumpPolling("");
300032,614629375,0,0,PLAT_AP,TCPIP_NETADPT,tcpip_ps_dl_pbuf,P_VALUE,swLogDumpPolling("");
300032,614631423,0,0,PLAT_AP,TCPIP_NETADPT,tcpip_ps_ul_pbuf,P_VALUE,swLogDumpPolling("");
300032,614632192,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_info,P_VALUE,swLogPrintf("netif tcp pkg conn source %u , cid %u , source port %u , dest port %u ");
300032,614634240,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_1,P_VALUE,swLogPrintf("netif udp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614637567,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_checksum_ignore_1,P_VALUE,swLogPrintf("netif udp pkg ignor checksum with checksum 0 ");
300032,614638080,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_info_source_invalid,P_INFO,swLogPrintf("netif udp pkg source port %u , dest port %u , inlavid conn source %u ");
300032,614640384,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_2,P_VALUE,swLogPrintf("netif udp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614643711,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4UdpPkgProcess_checksum_ignore_2,P_VALUE,swLogPrintf("netif udp pkg ignor checksum with checksum 0 ");
300032,614644480,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_info,P_VALUE,swLogPrintf("netif tcp pkg conn source %u , cid %u , source port %u , dest port %u ");
300032,614646528,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_1,P_VALUE,swLogPrintf("netif tcp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614648320,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_info_source_invalid,P_INFO,swLogPrintf("netif udp pkg source port %u , dest port %u , inlavid conn source %u ");
300032,614650624,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpPkgProcess_2,P_VALUE,swLogPrintf("netif tcp pkg dest port transfer from %u , to %u , chksum fron %u to %u ");
300032,614653951,0,0,PLAT_AP,TCPIP_NETADPT,NetifIp4PkgFwdWanFromLanSrcAddrProcess_2,P_WARNING,swLogPrintf("dhcp server data is not valid ");
300032,614655999,0,0,PLAT_AP,TCPIP_NETADPT,NetifIp4PkgFwdLanFromWanDestAddrProcess_2,P_WARNING,swLogPrintf("dhcp server data is not valid ");
300032,614658047,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_1,P_VALUE,swLogPrintf("tcp sync pkt , check MSS ");
300032,614660095,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_2,P_WARNING,swLogPrintf("tcp sync pkt , invalid MSS option ");
300032,614660352,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_3,P_VALUE,swLogPrintf("tcp sync pkt , update MSS from %u to %u ");
300032,614664191,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlIp4TcpMssProcess_4,P_WARNING,swLogPrintf("tcp sync pkt , can not parse MSS option ");
300032,614666239,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlTcpDisableWSOption_2,P_WARNING,swLogPrintf("NET ADPT , tcp sync pkt , invalid windows scale option ");
300032,614666752,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlTcpDisableWSOption_ws_1,P_VALUE,swLogPrintf("NET ADPT , UL syn / syn ack , hostPort : %d , rmtPort : %d , ws : %d , scadisable WS opt ");
300032,614670335,0,0,PLAT_AP,TCPIP_NETADPT,NetifDlTcpDisableWSOption_7,P_VALUE,swLogPrintf("NET ADPT , tcp sync pkt , without windows scale option ");
300032,614672383,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayWanProcess_1,P_VALUE,swLogPrintf("dns server relay , trans ip src address ");
300032,614674431,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayLanProcess_1,P_VALUE,swLogPrintf("dns server relay , fresh wan server info ");
300032,614676479,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayLanProcess_2,P_VALUE,swLogPrintf("dns server relay , trans ip dest address ");
300032,614678527,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayLanProcess_3,P_VALUE,swLogPrintf("dns server relay , can not find adpt wan dns server ");
300032,614680575,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayWanProcess_4,P_VALUE,swLogPrintf("dns server relay , trans ip dest address ");
300032,614682623,0,0,PLAT_AP,TCPIP_NETADPT,NetifDnsRelayWanProcess_5,P_WARNING,swLogPrintf("dns server relay , invalid wan dns server ");
300032,614684671,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_fragment_1,P_VALUE,swLogPrintf("fragment ip , input ");
300032,614684672,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_1,P_VALUE,swLogPrintf("input wan , udp packet dest %u ");
300032,614686720,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_2,P_VALUE,swLogPrintf("input wan , tcp packet dest %u ");
300032,614688768,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_3,P_VALUE,swLogPrintf("input wan , not udp and tcp packet dest %u ");
300032,614692863,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_4,P_VALUE,swLogPrintf("input wan recv loop back or mulicatse pkg , local input ");
300032,614694911,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_IMS_1,P_INFO,swLogPrintf("IMS netif recv pkg , input ");
300032,614696959,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_5,P_VALUE,swLogPrintf("lan recv local pkg , input ");
300032,614696960,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_mode_1,P_INFO,swLogPrintf("can not get lan channel mode , lan type %u ");
300032,614701055,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_fragment_2,P_VALUE,swLogPrintf("fragment ip , input ");
300032,614701056,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_major_1,P_VALUE,swLogPrintf("can not get lan channel major flag , lan type %u ");
300032,614703104,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_6,P_VALUE,swLogPrintf("input lan , udp packet dest %u ");
300032,614705152,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_7,P_VALUE,swLogPrintf("input lan , tcp packet dest %u ");
300032,614707456,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_cid_check_2,P_VALUE,swLogPrintf("input lan type %u , tcp pkg , can not find adpt wan , cid %u ");
300032,614709248,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_8,P_VALUE,swLogPrintf("input lan , not udp and tcp packet dest %u ");
300032,614711296,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp4InputPkg_9,P_VALUE,swLogPrintf("input packet result %u ");
300032,614715391,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp6TcpSyncInputPkg_1,P_VALUE,swLogPrintf("netif recv wan pkg , but not ipv6 type ");
300032,614715392,0,0,PLAT_AP,TCPIP_NETADPT,NetifProcessIp6TcpSyncInputPkg_4,P_VALUE,swLogPrintf("netif recv wan pkg , invalid lan type %u ");
300032,614717440,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_1,P_ERROR,swLogPrintf("netif recv lan pkg , but can not find adpt netif , type %u ");
300032,614720000,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_tft_rohcv4_1,P_ERROR,swLogPrintf("netif recv lan pkg , need rohc , act : %d , but netif : %d / %d is invalid ");
300032,614722048,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_tft_rohcv6_1,P_ERROR,swLogPrintf("netif recv lan pkg , need rohc , act : %d , but netif : %d / %d is invalid ");
300032,614723584,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_2,P_ERROR,swLogPrintf("netif recv lan pkg , but allocate pbuf free , dicard the pkglen : %d ");
300032,614725632,0,0,PLAT_AP,TCPIP_NETADPT,NetifLanTcpipInput_4,P_ERROR,swLogPrintf("NetifLanTcpipInput invalid lan type %u ");
300032,614727680,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_1,P_WARNING,swLogPrintf("lan type %u channel info is invalid ");
300032,614730752,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_lanchannel_info_1,P_VALUE,swLogPrintf("lan channel info type %u , status %u , ip4ActiveCid %u , ip6ActiveCid %u , index %u ");
300032,614731776,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_2,P_VALUE,swLogPrintf("channel lan type %u is invalid ");
300032,614733824,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_nettype_1,P_VALUE,swLogPrintf("channel lan status %u is invalid ");
300032,614735872,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_3,P_WARNING,swLogPrintf("get lan type %u netif fail ");
300032,614739967,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_4,P_WARNING,swLogPrintf("dhcp server data is not valid ");
300032,614739968,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_nettype_2,P_VALUE,swLogPrintf("channel lan status %u is invalid ");
300032,614742016,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_5,P_WARNING,swLogPrintf("get lan type %u netif fail ");
300032,614744064,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_ue_local_info_1,P_INFO,swLogPrintf("update ue local %u to chk info ");
300032,614746368,0,0,PLAT_AP,TCPIP_NETADPT,NetifUpdateFastPathChkInfo_ue_local_info_2,P_INFO,swLogPrintf("update ue local to chk info , num %u , bitmap %u ");
300032,614750207,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanInfo_1,P_WARNING,swLogPrintf("NET ADPT , invalid input , can ' t get WAN netif info ");
300032,614752255,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanInfo_2,P_WARNING,swLogPrintf("NET ADPT , invalid cid , can ' t get WAN netif info ");
300032,614754303,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanInfo_3,P_WARNING,swLogPrintf("NET ADPT , no WAN netif , can ' t get WAN netif info ");
300032,614755072,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_1,P_VALUE,swLogPrintf("NetMgrAdptWanIp6Set find ip6 prefix info , source %d , state %d , lifetime %d , active time %d ");
300032,614758399,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_2,P_SIG,swLogPrintf("NetMgrAdptWanIp6Set has find adpt prefix info from hib ip6 context ");
300032,614760447,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_3,P_SIG,swLogPrintf("NetMgrAdptWanIp6Set the hib ip6 prefix liftime has timeout ");
300032,614760448,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_4,P_VALUE,swLogPrintf("nd6 prefix entry timer %u ");
300032,614762496,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_5,P_VALUE,swLogPrintf("active nd6 address rs refresh timer %u ");
300032,614766591,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_6,P_VALUE,swLogPrintf("active nd6 address rs refresh timer has active ");
300032,614768639,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_7,P_SIG,swLogPrintf("new ip6 prefix entry fail ");
300032,614770687,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_8,P_SIG,swLogPrintf("new ip6 prefix entry fail ");
300032,614772735,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanIp6Set_9,P_WARNING,swLogPrintf("NetMgrAdptWanIp6Set invalid ipv6 configuration ");
300032,614774783,0,0,PLAT_AP,TCPIP_NETADPT,PsNetifLinkUp_1,P_WARNING,swLogPrintf("NetMgrAdptWanLinkUp invalid arg ");
300032,614776831,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanLinkUp_1,P_WARNING,swLogPrintf("NetMgrAdptWanLinkUp invalid network type ");
300032,614778879,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanLinkUp_2,P_WARNING,swLogPrintf("NetMgrAdptWanLinkUp netif enter oos ");
300032,614780927,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptInit_1,P_VALUE,swLogPrintf("net mgr adpt init success ");
300032,614780928,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetFreeLanChannelInfo_1,P_VALUE,swLogPrintf("NET ADPT lan , get the free channel , idx = %d ");
300032,614783232,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanDefaultNetifAutoSet_1,P_VALUE,swLogPrintf("NET ADPT auto set , ipv4Cid : %d , ipv6Cid : %d as default netif ");
300032,614785536,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetAtiNetifInfo_type_1,P_WARNING,swLogPrintf("NET ADPT , ipv4Cid : %d , ipv6Cid : %d , netif not default netif , type : %d ");
300032,614787840,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetAtiNetifInfo_ipv6info_1,P_INFO,swLogPrintf("NET ADPT , ipv6Cid : %d , prefix len %d , prefix valid time %u , prefix left valid time %u ");
300032,614791167,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetAtiNetifInfo_ipv6info_2,P_WARNING,swLogPrintf("NET ADPT , can not get adpt ipv6 prefix entry info ");
300032,614791424,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetAtiNetifInfo_invalid_3,P_WARNING,swLogPrintf("NET ADPT , invalid ipv4Cid : %d , ipv6Cid : %d , can ' t get ATI netif info ");
300032,614793216,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_1,P_VALUE,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4 network has been link up cid %u ");
300032,614795264,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_2,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv6 network has been link up , but ipv4 link with the other cid %u ");
300032,614797312,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_3,P_VALUE,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv6 network has been link up cid %u ");
300032,614799360,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_4,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4 network has been link up , but ipv6 link with the other cid %u ");
300032,614801408,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_5,P_VALUE,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4&ipv6 network has been link up cid %u ");
300032,614803712,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_6,P_VALUE,swLogPrintf("NetMgrAdptWanRegisterCallback the ipv4 network has been link up with cid %u , and ipv6 link up with cid %u ");
300032,614807551,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_7,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback , can not find the bind netif , linkup fail ");
300032,614807552,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanRegisterCallback_8,P_WARNING,swLogPrintf("NetMgrAdptWanRegisterCallback , can not find the bind netif , cid %u ");
300032,614810112,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptDedWanRegisterCallback_in_w_1,P_WARNING,swLogPrintf("NetMgrAdpt , dedicated BR register callback , invalid input , msg : 0x%x , cid : %d , pcid : %d ");
300032,614811904,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptDedWanRegisterCallback_pcid_w_1,P_WARNING,swLogPrintf("NetMgrAdpt , dedicated BR cid : %d register callback , can not find netif via pcid : %d ");
300032,614813696,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanUnregisterCallback_1,P_WARNING,swLogPrintf("NetMgrAdptWanUnregisterCallback invalid cid %u ");
300032,614815744,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanUnregisterCallback_2,P_WARNING,swLogPrintf("NetMgrAdptWanUnregisterCallback can not find the correct netif by cid %u ");
300032,614817792,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetNetInfoCallback_1,P_WARNING,swLogPrintf("NET ADPT , invalid argument , can ' t get ATI netif info for CID : %d ");
300032,614819840,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetNetInfoCallback_2,P_WARNING,swLogPrintf("NET ADPT , can ' t find netif for CID : %d , try to use default netif ");
300032,614821888,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetNetInfoCallback_3,P_WARNING,swLogPrintf("NET ADPT , can not find any netif for cid : %d ");
300032,614824192,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetWanNetInfoCallback_4,P_SIG,swLogPrintf("NET ADPT , reqCid : %d , ATI netif state : %u ");
300032,614825984,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanServiceStateIndCallback_1,P_VALUE,swLogPrintf("NetMgrAdptWanServiceStateIndCallback PSIF Inservice %u ");
300032,614830079,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanServiceStateIndCallback_2,P_VALUE,swLogPrintf("NetMgrAdptWanServiceStateIndCallback exit all psif oos state ");
300032,614832127,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptWanServiceStateIndCallback_3,P_VALUE,swLogPrintf("NetMgrAdptWanServiceStateIndCallback enter all psif oos state ");
300032,614834175,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearDnsCacheCallback_1,P_ERROR,swLogPrintf("NetMgrAdptClearDnsCacheCallback invalid name ");
300032,614836223,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearAllDnsCacheCallback_1,P_VALUE,swLogPrintf("NetMgrAdptClearAllDnsCacheCallback clear all dns cache ");
300032,614838271,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptEnableDnsCacheCallback_1,P_ERROR,swLogPrintf("NetMgrAdptEnableDnsCacheCallback ");
300032,614840319,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptDisaableDnsCacheCallback_1,P_VALUE,swLogPrintf("NetMgrAdptDisaableDnsCacheCallback ");
300032,614842367,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptSetDnsServerCallback_1,P_WARNING,swLogPrintf("PS IF , invalid argument ");
300032,614842368,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptSetDnsServerCallback_2,P_WARNING,swLogPrintf("PS IF , can not find any netif for cid : %d ");
300032,614846463,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetDnsServerCallback_1,P_WARNING,swLogPrintf("PS IF , invalid argument ");
300032,614846464,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetDnsServerCallback_2,P_WARNING,swLogPrintf("PS IF , can ' t find netif for CID : %d , try to use default netif ");
300032,614848512,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetDnsServerCallback_3,P_WARNING,swLogPrintf("PS IF , can not find any netif for cid : %d ");
300032,614850816,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptTftConfigCallback_in_w_1,P_WARNING,swLogPrintf("Netadpt , netif TFT config , invalid input msg : 0x%x , cid : %d ");
300032,614852608,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptTftConfigCallback_cid_w_1,P_WARNING,swLogPrintf("Netadpt , netif TFT config , can ' t find netif via cid : %d ");
300032,614856703,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , invalid argument ");
300032,614858751,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_2,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , wan info inavlid ");
300032,614860799,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_dns_relay_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , callocate nds relay server data fail ");
300032,614862847,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_3,P_ERROR,swLogPrintf("NetMgrAdptLanIp4Linkup , start dhcp server fail ");
300032,614864895,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4Linkup_dns_relay_2,P_WARNING,swLogPrintf("NetMgrAdptLanIp4Linkup , callocate nds relay server data fail ");
300032,614866943,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6Linkup_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp6Linkup , invalid argument ");
300032,614868991,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6Linkup_2,P_WARNING,swLogPrintf("NetMgrAdptLanIp6Linkup , enable ipv6 RA server fail ");
300032,614871039,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6Linkup_3,P_WARNING,swLogPrintf("NetMgrAdptLanIp6Linkup , enable ipv6 RA server fail ");
300032,614873087,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp4LinkDown_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp4LinkDown , invalid argument ");
300032,614875135,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanIp6LinkDown_1,P_WARNING,swLogPrintf("NetMgrAdptLanIp6LinkDown , invalid argument ");
300032,614877183,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_1,P_WARNING,swLogPrintf("LAN IF , invalid argument ");
300032,614879231,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_2,P_WARNING,swLogPrintf("LAN IF , hw address length is invalid ");
300032,614881279,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_3,P_WARNING,swLogPrintf("LAN IF , can not get any WAN info ");
300032,614883327,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanInfo_4,P_WARNING,swLogPrintf("LAN IF , can not get any WAN info ");
300032,614885375,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_1,P_WARNING,swLogPrintf("LAN link up , invalid argument ");
300032,614885376,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_2,P_VALUE,swLogPrintf("LAN link up , lan type %u ");
300032,614889471,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_3,P_WARNING,swLogPrintf("LAN link up , can not find lan cfg ");
300032,614891519,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_4,P_WARNING,swLogPrintf("LAN link up , can not find lan channel info ");
300032,614893567,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_5,P_WARNING,swLogPrintf("LAN link up , can not find adpt active wan for none nat mode ");
300032,614893824,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_IMS_WAN_check_1,P_WARNING,swLogPrintf("LAN link up fail , because can not bind IMS WAN , ipv4cid %u , ipv6cid %u ");
300032,614895616,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_mem_1,P_WARNING,swLogPrintf("LAN link type %u , can ' t alloc mem for netif ");
300032,614897664,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_6,P_VALUE,swLogPrintf("LAN type %u , already link up ");
300032,614901759,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_7,P_ERROR,swLogPrintf("rndis lan IP4 link up false ");
300032,614903807,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_8,P_ERROR,swLogPrintf("rndis lan IP6 link up false ");
300032,614905855,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_9,P_ERROR,swLogPrintf("rndis lan IP4 link up false ");
300032,614907903,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_10,P_ERROR,swLogPrintf("rndis lan IP6 link up false ");
300032,614909951,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_11,P_ERROR,swLogPrintf("rndis lan IP4 link up false ");
300032,614911999,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_12,P_ERROR,swLogPrintf("ppp lan IP4 link up false ");
300032,614914047,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_13,P_ERROR,swLogPrintf("ppp lan IP6 link up false ");
300032,614916095,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_14,P_ERROR,swLogPrintf("ppp lan IP4 link up false ");
300032,614918143,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_15,P_ERROR,swLogPrintf("ppp lan IP6 link up false ");
300032,614920191,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpCallback_16,P_ERROR,swLogPrintf("ppp lan IP4 link up false ");
300032,614922239,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkDownCallback_1,P_WARNING,swLogPrintf("LAN link down , invalid argument ");
300032,614924287,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkDownCallback_3,P_ERROR,swLogPrintf("LAN link down , can not find any LAN netif ");
300032,614926335,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLLStatusChangeCallback_1,P_WARNING,swLogPrintf("LAN link layer status change , invalid argument ");
300032,614928383,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLLStatusChangeCallback_3,P_ERROR,swLogPrintf("LAN link layer status change , can not find any LAN channel info ");
300032,614930431,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLLStatusChangeCallback_4,P_ERROR,swLogPrintf("LAN link layer status change , can not find any LAN netif ");
300032,614932479,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_1,P_WARNING,swLogPrintf("LAN set config , invalid argument ");
300032,614934527,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_2,P_WARNING,swLogPrintf("LAN set config , can not find the global lan config ");
300032,614936575,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_3,P_WARNING,swLogPrintf("LAN set config , can not find free channel ");
300032,614938623,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanConfigSetCallback_4,P_VALUE,swLogPrintf("LAN set config , find rndis channel ");
300032,614940671,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearDnsRelayWanServerInfo_1,P_WARNING,swLogPrintf("NetMgrAdptClearDnsRelayWanServerInfo get dns relay server data fail ");
300032,614940672,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptClearDnsRelayWanServerInfo_2,P_WARNING,swLogPrintf("NetMgrAdptClearDnsRelayWanServerInfo gan not get the netif by lan net type %u ");
300032,614944767,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBindCheck_1,P_WARNING,swLogPrintf("NetMgrAdptLanBindCheck invalid cid ");
300032,614944768,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBindCheck_2,P_ERROR,swLogPrintf("NetMgrAdptLanBindCheck can not find lan channel cfg , lan type %u ");
300032,614947328,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBindCheck_3,P_WARNING,swLogPrintf("NetMgrAdptLanBindCheck ip4Cid %u ip6Cid %u has bind lan type %u , and also passthrough mode ");
300032,614950911,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_1,P_WARNING,swLogPrintf("NetMgrAdptLanBind invalid cid ");
300032,614952959,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_2,P_WARNING,swLogPrintf("NetMgrAdptLanBind can not get lan cfg ");
300032,614955007,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_3,P_WARNING,swLogPrintf("NetMgrAdptLanBind can not find free channel ");
300032,614955008,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip4Cid_check_1,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip4 cid %u wan is not active and non NAT mode ");
300032,614957056,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip6Cid_check_1,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip6 cid %u wan is not active ");
300032,614959360,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_4,P_VALUE,swLogPrintf("NetMgrAdptLanBind , find channel , status = %d , netType = %d ");
300032,614961152,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip4Cid_check_3,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip4 cid %u wan is not active and non NAT mode ");
300032,614963200,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_ip6Cid_check_4,P_WARNING,swLogPrintf("NetMgrAdptLanBind , ip6 cid %u wan is not active ");
300032,614967295,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_5,P_ERROR,swLogPrintf("NetMgrAdptLanBind lan IP4 link up false ");
300032,614967296,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_6,P_VALUE,swLogPrintf("NetMgrAdptLanBind get lan type %d netif fail ");
300032,614971391,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_7,P_VALUE,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614973439,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_8,P_ERROR,swLogPrintf("NetMgrAdptLanBind lan IP6 link up false ");
300032,614973440,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_9,P_VALUE,swLogPrintf("NetMgrAdptLanBind get lan type %d netif fail ");
300032,614977535,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_10,P_VALUE,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614977536,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_11,P_VALUE,swLogPrintf("NetMgrAdptLanBind lan type %d invalid netType for none nat mode ");
300032,614981631,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_12,P_VALUE,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614983679,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_13,P_ERROR,swLogPrintf("NetMgrAdptLanBind lan IP6 link up false ");
300032,614983680,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_14,P_VALUE,swLogPrintf("NetMgrAdptLanBind get lan type %d netif fail ");
300032,614987775,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanBind_15,P_VALUE,swLogPrintf("NetMgrAdptLanBind get wan info fail ");
300032,614989823,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_1,P_WARNING,swLogPrintf("NetMgrAdptLanUnbind invalid cid ");
300032,614991871,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_2,P_WARNING,swLogPrintf("NetMgrAdptLanUnbind can not find lan cfg ");
300032,614993919,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_3,P_VALUE,swLogPrintf("NetMgrAdptLanUnbind find channel ");
300032,614993920,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_4,P_VALUE,swLogPrintf("LAN unbind , can not find %d netif ");
300032,614995968,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_5,P_VALUE,swLogPrintf("LAN unbind , can not find %d netif ");
300032,614998016,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanUnbind_6,P_VALUE,swLogPrintf("LAN unbind , can not find %d netif ");
300032,615002111,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanCtrlCallback_1,P_WARNING,swLogPrintf("LAN ctrl , invalid argument ");
300032,615004159,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanCtrlCallback_2,P_WARNING,swLogPrintf("LAN ctrl check fail ");
300032,615004160,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanCtrlCallback_3,P_WARNING,swLogPrintf("LAN ctrl , invalid action %d ");
300032,615008255,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp4Info_1,P_WARNING,swLogPrintf("NetMgrGetLanDataPathHostIp4Info invalid argument ");
300032,615010303,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp4Info_2,P_VALUE,swLogPrintf("NetMgrGetLanDataPathHostIp4Info pass through mode , can not find channel info , maybe not bind ");
300032,615010304,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp4Info_3,P_VALUE,swLogPrintf("NetMgrGetLanDataPathHostIp4Info pass through mode , can not find wan info , bind ip4 cid %u ");
300032,615014399,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp6Info_1,P_VALUE,swLogPrintf("NetMgrGetLanDataPathHostIp6Info invalid argument ");
300032,615016447,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp6Info_2,P_VALUE,swLogPrintf("NetMgrGetLanDataPathHostIp6Info pass through mode , can not find channel info , maybe not bind ");
300032,615016448,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrGetLanDataPathHostIp6Info_3,P_VALUE,swLogPrintf("NetMgrGetLanDataPathHostIp6Info pass through mode , can not find wan info , bind ip4 cid %u ");
300032,615020543,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_1,P_WARNING,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback invalid argument ");
300032,615022591,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_2,P_WARNING,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback can not get lan cfg ");
300032,615022848,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_3,P_VALUE,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get ip4Cid %u , ip6Cid %u ");
300032,615024640,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_4,P_VALUE,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get ip4Cid %u ");
300032,615026688,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_5,P_VALUE,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get ip6Cid %u ");
300032,615030783,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptGetLanDataPathHostInfoCallback_6,P_WARNING,swLogPrintf("NetMgrAdptGetLanDataPathHostInfoCallback get fail ");
300032,615030784,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_1,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown invalid cid %u ");
300032,615032832,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_2,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown can not find lan netif cid %u ");
300032,615034880,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_3,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown can not find lan netif cid %u ");
300032,615036928,0,0,PLAT_AP,TCPIP_NETADPT,NetMgrAdptLanLinkUpdateByWanLinkDown_4,P_WARNING,swLogPrintf("NetMgrAdptLanLinkUpdateByWanLinkDown can not find lan netif cid %u ");
300032,615041023,0,0,PLAT_AP,TCPIP_NETADPT,PsifGetTcpipHibContext_1,P_ERROR,swLogPrintf("PsifGetTcpipHibContext invalid tcpip hib context header point ");
300032,615042048,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreIp6Info_1,P_INFO,swLogPrintf("PsifTcpipStoreIp6Info ip6 prefix %x : %x , life_time %u，active_time %u , cid %u ");
300032,615045119,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreIp6Info_2,P_INFO,swLogPrintf("PsifTcpipStoreIp6Info ip6 prefix info is not invalid ");
300032,615047167,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreIp6Info_3,P_INFO,swLogPrintf("PsifTcpipStoreIp6Info ip6 prefix not exsit ");
300032,615049215,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreTcpContext_1,P_INFO,swLogPrintf("PsifTcpipStoreTcpContext store one tcp context ");
300032,615049216,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreTcpContext_2,P_INFO,swLogPrintf("PsifTcpipStoreTcpContext the tcp context state is not invalid %u ");
300032,615053311,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreTcpContext_3,P_INFO,swLogPrintf("PsifTcpipStoreTcpContext not exist valid tcp context ");
300032,615055359,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreDnsCache_1,P_INFO,swLogPrintf("PsifTcpipStoreDnsCache store one dns cache ");
300032,615057407,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreDnsCache_2,P_INFO,swLogPrintf("PsifTcpipStoreDnsCache not exist valid dns cache ");
300032,615059455,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUdpContext_1,P_INFO,swLogPrintf("PsifTcpipStoreUdpContext store one udp context ");
300032,615061503,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUdpContext_2,P_INFO,swLogPrintf("PsifTcpipStoreUdpContext the udp context state is not invalid ");
300032,615063551,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUdpContext_3,P_INFO,swLogPrintf("PsifTcpipStoreUdpContext not exist valid udp context ");
300032,615065599,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStorePortMgrContext_1,P_WARNING,swLogPrintf("PsifTcpipStorePortMgrContext malloc fail ");
300032,615066624,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStorePortMgrContext_2,P_INFO,swLogPrintf("PsifTcpipStorePortMgrContext port mgr context connSource %connType %u , lastUsedTime %u , mappingPort %u , originalPort %u ");
300032,615069695,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStorePortMgrContext_3,P_INFO,swLogPrintf("PsifTcpipStorePortMgrContext port mgr context not exsit ");
300032,615071743,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUeLocalDynamicPortContext_1,P_WARNING,swLogPrintf("PsifTcpipStoreUeLocalDynamicPortContext malloc fail ");
300032,615073791,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipStoreUeLocalDynamicPortContext_2,P_INFO,swLogPrintf("PsifTcpipStoreUeLocalDynamicPortContext local dynamic context not exsit ");
300032,615074816,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverIp6Info_1,P_INFO,swLogPrintf("PsifTcpipRecoverIp6Info ip6 prefix %x : %x , life_time %u，active_time %u , cid %u ");
300032,615077887,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverTcpContext_1,P_INFO,swLogPrintf("PsifTcpipRecoverTcpContext tcp context success ");
300032,615079935,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverTcpContext_2,P_INFO,swLogPrintf("PsifTcpipRecoverTcpContext tcp context fail ");
300032,615081983,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverDnsCache_1,P_INFO,swLogPrintf("PsifTcpipRecoverDnsCache dns cache ");
300032,615084031,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverUdpContext_1,P_INFO,swLogPrintf("PsifTcpipRecoverUdpContext udp context success ");
300032,615086079,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverUdpContext_2,P_INFO,swLogPrintf("PsifTcpipRecoverUdpContext udp context fail ");
300032,615087104,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverPortMgrContext_1,P_INFO,swLogPrintf("PsifTcpipRecoverPortMgrContext context connType %u , connSource %originalPort %u , mappingPort %u , lastUsedTime %u ");
300032,615088384,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipRecoverUeDynamicPortContext_1,P_INFO,swLogPrintf("PsifTcpipRecoverUeDynamicPortContext cid %u , num %u ");
300032,615092223,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_1,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover ip6info ");
300032,615094271,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_2,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover tcp context ");
300032,615096319,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_3,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover dns cache ");
300032,615098367,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_4,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover udp context ");
300032,615100415,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_5,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover port mgr context ");
300032,615102463,0,0,PLAT_AP,TCPIP_NETADPT,PsifRecoverContextFromHibCallback_6,P_INFO,swLogPrintf("PsifRecoverContextFromHibCallback recover ue local dynamic context ");
300032,615104511,0,0,PLAT_AP,TCPIP_NETADPT,PsifIsTcpipAllowEnterHIB_1,P_INFO,swLogPrintf("TCPIP EXIST any pending data , not allow enter hib / sleep2 mode ");
300032,615104512,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipEnterHibCallback_1,P_SIG,swLogPrintf("PsifTcpipEnterHibCallback state %u ");
300032,615108607,0,0,PLAT_AP,TCPIP_NETADPT,PisfCheckTcpipHibContextNeedChang_1,P_INFO,swLogPrintf("LWIP hib context changed ");
300032,615110655,0,0,PLAT_AP,TCPIP_NETADPT,PsifRequestRecoverContextFromHib_1,P_SIG,swLogPrintf("PsifRequestRecoverContextFromHib ");
300032,615112703,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipHibModeInit_1,P_INFO,swLogPrintf("TCPIP HIB mode init ");
300032,615112704,0,0,PLAT_AP,TCPIP_NETADPT,EthifLowLevelOutput_if_link_type_check_1,P_WARNING,swLogPrintf("ETH if link type %u is invalid ");
300032,615116799,0,0,PLAT_AP,TCPIP_NETADPT,EthifLowLevelOutput_if_down,P_WARNING,swLogPrintf("ETH if is not link up ");
300032,615117056,0,0,PLAT_AP,TCPIP_NETADPT,EthifLowLevelOutput_1,P_WARNING,swLogPrintf("UL pkg Len : %d > MTU : %d , ignore this pkg ");
300032,615119104,0,0,PLAT_AP,TCPIP_NETADPT,RndisifLowLevelOutput_2,P_VALUE,swLogPrintf("ETH IF type %u , UE -> Host , len : %u ");
300032,615122943,0,0,PLAT_AP,TCPIP_NETADPT,RndisIfRecvUlPkg_1,P_ERROR,swLogPrintf("RndisIfRecvUlPkg fail ");
300032,615122944,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_1,P_VALUE,swLogPrintf("LanifSendNetifInfo invalid lan type %d ");
300032,615125248,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_info_1,P_VALUE,swLogPrintf("LanifSendNetifInfo lan type %d , cause %d ");
300032,615127296,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_2,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d invalid netType %d , maybe nat mode ");
300032,615129088,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_3,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d status deactive ");
300032,615131136,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_4,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d can not find channel info ");
300032,615133184,0,0,PLAT_AP,TCPIP_NETADPT,LanifSendNetifInfo_5,P_VALUE,swLogPrintf("LanifSendNetifInfo lan %d , invalid cause ");
300032,615137279,0,0,PLAT_AP,TCPIP_NETADPT,PppifLowLevelOutput_if_down,P_WARNING,swLogPrintf("PPP if is not link up ");
300032,615137536,0,0,PLAT_AP,TCPIP_NETADPT,PppifUlOutput_1,P_WARNING,swLogPrintf("UL pkg Len : %d > MTU : %d , ignore this pkg ");
300032,615141375,0,0,PLAT_AP,TCPIP_NETADPT,PppIfRecvUlPkg_1,P_ERROR,swLogPrintf("PppIfRecvUlPkg fail ");
300032,615141632,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_4,P_WARNING,swLogPrintf("PS IF %c%u is OOS state ");
300032,615143936,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_1,P_WARNING,swLogPrintf("CID : %d , UL pkg Len : %d > MTU : %d , ignore this pkg ");
300032,615147519,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_2,P_WARNING,swLogPrintf("PS UL highwater , busy ");
300032,615148288,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_ul_buff_1,P_INFO,swLogPrintf("CID : %d , UL len %u , UL buffer 0x%x , offset %u ");
300032,615150592,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_3,P_INFO,swLogPrintf("PS UL PDU , esmRai : %u , bExceptData : %u , imsDataType : %u , ticktype : %u ( 0-NO / 1-DISCARD / 2-START ) , systick : %u ");
300032,615151616,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_bind_ded_cid_1,P_INFO,swLogPrintf("UL bind to Ded CID : %d ");
300032,615153664,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlOutput_bind_ded_cid_2,P_INFO,swLogPrintf("UL bind to Ded CID : %d ");
300032,615155712,0,0,PLAT_AP,TCPIP_NETADPT,PsifDlPkgFastPath_dedicated_check_1,P_VALUE,swLogPrintf("PSIF DL fast path , try check dedicated cid %d bind a lan : fail ");
300032,615157760,0,0,PLAT_AP,TCPIP_NETADPT,PsifDlPkgFastPath_3,P_VALUE,swLogPrintf("PSIF DL fast path , dedicated cid : %d not bind a lan ");
300032,615159808,0,0,PLAT_AP,TCPIP_NETADPT,PsifDlPkgFastPath_4,P_WARNING,swLogPrintf("PSIF DL fast path , invalid IpVersion : %d ");
300032,615162112,0,0,PLAT_AP,TCPIP_NETADPT,PsifDlPkgFastPath_5,P_WARNING,swLogPrintf("PSIF DL fast path , can not find correct netif via cid : %u , pdu 0x%x ");
300032,615165951,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_arg_a,P_WARNING,swLogPrintf("PsifTcpIpRohcDecompOnePkg invalid parameter ");
300032,615166976,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_print_pPBuf_1,P_DEBUG,swLogPrintf("pDlPdu->bOnlyDecomp : %d , tot_len : %d , len : %d , type : %d , ref : %d ");
300032,615170047,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_1,P_WARNING,swLogPrintf("ROHC decompress pkg failed ");
300032,615172095,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_2,P_WARNING,swLogDump("ROHC DL recv comped pkg : ");
300032,615172352,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_3,P_INFO,swLogPrintf("ROHC decomp SUCC , decomp header len : %u , pkg payload len : %u ");
300032,615175168,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_print_pPBuf_2,P_DEBUG,swLogPrintf("pDlPdu->bOnlyDecomp : %d , tot_len : %d , len : %d , type : %d , ref : %d ");
300032,615178239,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_dump_pDlPdu_payload,P_WARNING,swLogDump("pDlPdu_payload : ");
300032,615178240,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_4,P_INFO,swLogPrintf("Test loopback decompressed raw pkg , pkg len : %d ");
300032,615180544,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcDecompOnePkg_5,P_WARNING,swLogPrintf("decode header len : %d is lager than rsvd size %d , discard this packet ");
300032,615182592,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_1,P_VALUE,swLogPrintf("PSIF , CID : %d , DL ROHC feedback packet , len : %d ");
300032,615184640,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_2,P_WARNING,swLogPrintf("PSIF , CID : %d , pRohcComp : 0x%lx , DL ROHC feedback packet , decomp failed ");
300032,615188479,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_print_feedback_data,P_WARNING,swLogDump("rohc dl feedback data : ");
300032,615188736,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_3,P_VALUE,swLogPrintf("PSIF , CID : %d , DL PKG need to ignore ROHC decomp , pkg len : %d ");
300032,615192575,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_dump_pkg,P_WARNING,swLogDump("ROHC recv DL pkg : ");
300032,615194623,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_decomp_fail,P_DEBUG,swLogPrintf("decompressed pkt fail and free the pdu. ");
300032,615196671,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpIpRohcInput_decomp_succ,P_DEBUG,swLogPrintf("decompressed pkt succ and pass to LWIP. ");
300032,615196928,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipDlInput_1,P_WARNING,swLogPrintf("Can not find correct netif , cid %u , pdu 0x%x ");
300032,615198720,0,0,PLAT_AP,TCPIP_NETADPT,PsSuspendIndCallback_1,P_INFO,swLogPrintf("PsGetNetInfoCallback is suspend : %u ");
300032,615202815,0,0,PLAT_AP,TCPIP_NETADPT,PsifRawUlOutput_1,P_WARNING,swLogPrintf("PS UL highwater , busy ");
300032,615203584,0,0,PLAT_AP,TCPIP_NETADPT,PsifRawUlOutput_2,P_INFO,swLogPrintf("PS UL PDU , esmRai : %u , bExceptData : %u , ticktype : %u ( 0-NO / 1-DISCARD / 2-START ) , systick : %u ");
300032,615204864,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_1,P_WARNING,swLogPrintf("CID : %d , configed ROHC , but not ROCH COMP channel ");
300032,615208959,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_2,P_INFO,swLogDump("PSIF ROHC , PKG before comp : ");
300032,615208960,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_4,P_WARNING,swLogPrintf("CID : %d , ROHC compress PKG fail , UL pkg free , and sent fail ");
300032,615212032,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_5,P_VALUE,swLogPrintf("PSIF , CID : %d , ROHC comp PKG , RAW PKG len : %d , comp hdr len : %d , orig hdr len : %d , payload len : %d ");
300032,615215103,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_comp_2,P_INFO,swLogDump("PSIF ROHC , ROHC comp HDR : ");
300032,615215104,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_w_1,P_WARNING,swLogPrintf("PSIF , CID : %d , ROHC comp output is not right , discard this UL pkg ");
300032,615217152,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_w_2,P_WARNING,swLogPrintf("PSIF , CID : %d , ROHC comp hdr need new buf , but can ' t alloc , free UL PDU ");
300032,615219712,0,0,PLAT_AP,TCPIP_NETADPT,PsifUlRohcOutput_8,P_INFO,swLogPrintf("PSIF ROHC no pkg comp succ , cid %u , orig pdu list hdr 0x%x , total len %u ");
300032,615221248,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeUlPkgMem_1,P_INFO,swLogPrintf("PsifFreeUlPkgMem free address 0x%x ");
300032,615223552,0,0,PLAT_AP,TCPIP_NETADPT,PsNetifSyncRohcChannel_1,P_INFO,swLogPrintf("PsNetifSyncRohcChannel sync netif 0x%x with cid %u rohc channel ");
300032,615225344,0,0,PLAT_AP,TCPIP_NETADPT,PsifSuspendInd_1,P_SIG,swLogPrintf("PSIF , suspend ( 1 ) / resume ( 0 ) : %u LWIP ");
300032,615227392,0,0,PLAT_AP,TCPIP_NETADPT,PsifSuspendInd_2,P_WARNING,swLogPrintf("PSIF , suspend ( 1 ) / resume ( 0 ) : %u , LWIP FAIL ");
300032,615230208,0,0,PLAT_AP,TCPIP_NETADPT,PsifNetifTftConfig_cid_w_1,P_ERROR,swLogPrintf("PSIF , netif TFT cfg , pfNum : %d , idx : %x , cid : %d ! = %d ");
300032,615231488,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocDlRamBlockMem_1,P_WARNING,swLogPrintf("ps dl ram alloc high water , %u ");
300032,615233536,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocDlRamBlockMem_2,P_WARNING,swLogPrintf("ps dl ram alloc FAIL , %u ");
300032,615235840,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocDlRamBlockMem_3,P_INFO,swLogPrintf("ps dl ram alloc 0x%x success , data len %u ");
300032,615239679,0,0,PLAT_AP,TCPIP_NETADPT,PsifTcpipDlHighWaterChkInput_1,P_INFO,swLogPrintf("PS DL BUFFER high water ");
300032,615241727,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeDlRamBlockMem_1,P_WARNING,swLogPrintf("ps dl ram free , invalid pbuf ");
300032,615241728,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeDlRamBlockMem_2,P_WARNING,swLogPrintf("ps dl ram free , invalid dl data header point , 0x%x ");
300032,615244288,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocUlRam_1,P_WARNING,swLogPrintf("PS IF UL PKG high water : %u , can ' t alloc this new len : %d , total limited %d ");
300032,615246080,0,0,PLAT_AP,TCPIP_NETADPT,PsifAllocUlPkgMem_2,P_INFO,swLogPrintf("PsifAllocUlRam alloc success , address : 0x%x , total ul data %u ");
300032,615248128,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeUlRam_1,P_INFO,swLogPrintf("PsifFreeUlRam free address 0x%x , ref %u ");
300032,615250176,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeUlRam_2,P_INFO,swLogPrintf("PsifFreeUlRam free address 0x%x success , total Ul data %u ");
300032,615254015,0,0,PLAT_AP,TCPIP_NETADPT,PsifFreeUlRamBlockMem_1,P_WARNING,swLogPrintf("ps ul ram free , invalid pbuf ");
300032,615254272,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_down_1,P_VALUE,swLogPrintf("Netif linkdown , ipv4Cid : %d , ipv6Cid : %d ");
300032,615256320,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv4_down_1,P_VALUE,swLogPrintf("Netif only ipv4 linkdown , ipv4Cid : %d , ipv6Cid : %d ");
300032,615258112,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv4_down_2,P_WARNING,swLogPrintf("Netif only ipv4 linkdown , but no ipv6 exist , iptype : %d ");
300032,615260416,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv6_down_1,P_VALUE,swLogPrintf("Netif only ipv6 linkdown , ipv4Cid : %d , ipv6Cid : %d ");
300032,615262208,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_ipv6_down_2,P_WARNING,swLogPrintf("Netif only ipv6 linkdown , but no ipv4 exist , iptype : %d ");
300032,615264768,0,0,PLAT_AP,TCPIP_NETADPT,PsifSendNetifInfoInd_notify_1,P_SIG,swLogPrintf("Netif change cause : %e<NmNetifStatusChangeCause> , net status : %e<NmNetifStatus> , ipType %e<NmNetIpType> ");
300032,615266304,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrAllocateMappingTable_1,P_INFO,swLogPrintf("PortMgrAllocateMappingTable allocate tcpip port mgr table 0x%x ");
300032,615269376,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrFreeMappingTable_1,P_INFO,swLogPrintf("PortMgrAllocateMappingTable free tcpip port mgr table 0x%x , conn source %u , original port %u , mapping port %u , cid %u ");
300032,615270912,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrInit_1,P_WARNING,swLogPrintf("PortMgrInit local port num > %u or < %u , reset to default %u ");
300032,615272448,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrMappingTableHighWaterProcess_1,P_INFO,swLogPrintf("PortMgrMappingTableHighWaterProcess context num %u ");
300032,615275520,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByOriginalPort_1,P_INFO,swLogPrintf("PortMgrGetMappingTableByOriginalPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615277568,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByOriginalPort_2,P_INFO,swLogPrintf("PortMgrGetMappingTableByOriginalPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615279616,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByMappingPort_1,P_INFO,swLogPrintf("PortMgrGetMappingTableByMappingPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615281664,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrGetMappingTableByMappingPort_2,P_INFO,swLogPrintf("PortMgrGetMappingTableByMappingPort get tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615282688,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUpdateUeLocalDynamicPortInfo_1,P_INFO,swLogPrintf("PortMgrUpdateUeLocalDynamicPortInfo CID %u ");
300032,615284736,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUpdateUeLocalDynamicPortInfo_2,P_INFO,swLogPrintf("PortMgrUpdateUeLocalDynamicPortInfo add tcp port %u ");
300032,615286784,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUpdateUeLocalDynamicPortInfo_3,P_INFO,swLogPrintf("PortMgrUpdateUeLocalDynamicPortInfo add udp port %u ");
300032,615289344,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUpdateUeLocalDynamicPortInfo_4,P_INFO,swLogPrintf("PortMgrUpdateUeLocalDynamicPortInfo update cid %u , num %u , bitmap %u ");
300032,615291904,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUlProcess_1,P_INFO,swLogPrintf("PortMgrUlProcess add new tcpip port mgr table 0x%x , source %u , original port %u , mapping port %u , cid %u ");
300032,615294975,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUlProcess_2,P_INFO,swLogPrintf("PortMgrUlProcess allocate mapping table fail ");
300032,615297023,0,0,PLAT_AP,TCPIP_NETADPT,PortMgrUlProcess_3,P_INFO,swLogPrintf("PortMgrUlProcess get new mapping port fail ");
300032,615297024,0,0,PLAT_AP,TCPIP_NETADPT,dns_enqueue_cid_1,P_WARNING,swLogPrintf("can ' t find netif for CID : %d , try to use default netif ");
300032,615299072,0,0,PLAT_AP,TCPIP_NETADPT,ps_ip_input_2,P_ERROR,swLogPrintf("ps_ip_input invalid ip version %u ");
300032,615303167,0,0,PLAT_AP,TCPIP_NETADPT,nd6_input_ipv6_ra_server_1,P_WARNING,swLogPrintf("enable ipv6 RA server fail ");
300032,615305215,0,0,PLAT_AP,TCPIP_NETADPT,nd6_input_ipv6_ra_server_2,P_WARNING,swLogPrintf("enable ipv6 RA server fail ");
302080,618663935,0,0,PLAT_AP,TCPIP_APP,AppGetAddrInfoAsync_1,P_ERROR,swLogPrintf("get dns fail , invalid arg ");
302080,618665983,0,0,PLAT_AP,TCPIP_APP,AppGetAddrInfoAsync_3,P_ERROR,swLogPrintf("get dns fail ");
303104,620761087,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsScanOptions_1,P_ERROR,swLogPrintf("bad packet , malformed option field ");
303104,620761088,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsAddBinaryOption_1,P_ERROR,swLogPrintf("option 0x%x did not fit into the packet ");
303104,620763136,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsAddSimpleOption_1,P_ERROR,swLogPrintf("can ' t add option 0x%x ");
303104,620767231,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendOffer_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620769279,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendOffer_2,P_INFO,swLogPrintf("sending OFFER ");
303104,620771327,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendNak_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620773375,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendNak_2,P_INFO,swLogPrintf("sending NAK ");
303104,620775423,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendAck_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620777471,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendAck_2,P_INFO,swLogPrintf("sending ACK ");
303104,620779519,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendInform_1,P_ERROR,swLogPrintf("create pbuf fail ");
303104,620781567,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsSendInform_2,P_INFO,swLogPrintf("sending NAK ");
303104,620783615,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_1,P_WARNING,swLogPrintf("DhcpdRecv netif or pbuf point is invalid ");
303104,620785663,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_2,P_ERROR,swLogPrintf("DhcpdRecv netif server data is invalid ");
303104,620787711,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_3,P_WARNING,swLogPrintf("DhcpdRecv pbuf copy fail ");
303104,620789759,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_4,P_WARNING,swLogPrintf("DhcpdRecv pbuf allocate fail ");
303104,620791807,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_5,P_ERROR,swLogPrintf("DhcpdRecv MAC length ! = 6 ignoring packet ");
303104,620793855,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_6,P_WARNING,swLogPrintf("DhcpdRecv not a REQUEST ignoring packet ");
303104,620795903,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_7,P_WARNING,swLogPrintf("DhcpdRecv no or bad message type option ignoring packet ");
303104,620797951,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_8,P_WARNING,swLogPrintf("DhcpdRecv server ID doesn ' t match ignoring packet ");
303104,620799999,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_9,P_INFO,swLogPrintf("DhcpdRecv DISCOVER ");
303104,620802047,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_10,P_INFO,swLogPrintf("DhcpdRecv REQUEST ");
303104,620804095,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_11,P_INFO,swLogPrintf("no requested IP and no ciaddr ignore ");
303104,620806143,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_12,P_INFO,swLogPrintf("DhcpdRecv DECLINE ");
303104,620808191,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_13,P_INFO,swLogPrintf("DhcpdRecv DECLINE the lease ip ");
303104,620810239,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_14,P_INFO,swLogPrintf("DhcpdRecv RELEASE ");
303104,620812287,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_15,P_INFO,swLogPrintf("DhcpdRecv RELEASE the lease ip ");
303104,620814335,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_16,P_INFO,swLogPrintf("DhcpdRecv INFORM ");
303104,620814336,0,0,PLAT_AP,TCPIP_DHCPD,DhcpsRecv_17,P_INFO,swLogPrintf("DhcpdRecv %u ");
303104,620818431,0,0,PLAT_AP,TCPIP_DHCPD,dhcpd_setup_1,P_ERROR,swLogPrintf("allocate dhcp server pcb fail ");
303104,620820479,0,0,PLAT_AP,TCPIP_DHCPD,dhcpd_setup_2,P_WARNING,swLogPrintf("dhcp server pcb has already setup ");
303104,620822527,0,0,PLAT_AP,TCPIP_DHCPD,DhcpStart_1,P_ERROR,swLogPrintf("allocate dhcp server pcb fail ");
303104,620824575,0,0,PLAT_AP,TCPIP_DHCPD,DhcpStart_2,P_INFO,swLogPrintf("dhcpd_start ( ) : mallocing new DHCP server ");
303104,620826623,0,0,PLAT_AP,TCPIP_DHCPD,DhcpStart_3,P_ERROR,swLogPrintf("dhcpd server allocate fail ");
303104,620828671,0,0,PLAT_AP,TCPIP_DHCPD,DhcpdStop_1,P_ERROR,swLogPrintf("DhcpdStop netif point is invalid ");
303104,620828928,0,0,PLAT_AP,TCPIP_DHCPD,DhcpdStop_2,P_INFO,swLogPrintf("dhcp server stop success netif %c%u ");
305152,624955391,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ps_ul,P_ERROR,swLogDump("PS UL : ");
305152,624957439,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ppp_ul,P_VALUE,swLogDump("PPP UL : ");
305152,624959487,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_rndis_ul,P_ERROR,swLogDump("RNDIS UL : ");
305152,624961535,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ps_dl,P_ERROR,swLogDump("PS DL : ");
305152,624963583,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_ppp_dl,P_VALUE,swLogDump("PPP DL : ");
305152,624965631,0,0,PLAT_AP,TCPIP_PKG_DUMP,tcpip_rndis_dl,P_ERROR,swLogDump("RNDIS DL : ");
306176,627052543,0,0,PLAT_AP,ROHC,PsifCreateRohcCallback_dis_w_1,P_WARNING,swLogPrintf("PSIF ROHC , ROHC not enable , can ' t create ROHC channel ");
306176,627054591,0,0,PLAT_AP,ROHC,PsifResetRohcCallback_dis_w_1,P_WARNING,swLogPrintf("PSIF ROHC , ROHC not enable , can ' t reset ROHC channel ");
306176,627056639,0,0,PLAT_AP,ROHC,PsifCompressRohcCallback_dis_w_1,P_WARNING,swLogPrintf("PSIF ROHC , ROHC not enable , can ' t comp ");
306176,627057408,0,0,PLAT_AP,ROHC,RohcCreateRohcChannel_1,P_INFO,swLogPrintf("RohcCreateRohcChannel , cid %u , profile 0x%x , maxcid %u , onlyuplink %u ");
306176,627058688,0,0,PLAT_AP,ROHC,RohcCreateRohcChannel_2,P_WARNING,swLogPrintf("RohcCreateRohcChannel alloc msg buffer fail , cid %u ");
306176,627060736,0,0,PLAT_AP,ROHC,RohcCreateRohcChannel_3,P_WARNING,swLogPrintf("RohcCreateRohcChannel tcpip_callback_with_block fail , cid %u ");
306176,627062784,0,0,PLAT_AP,ROHC,RohcDestroyRohcChannel_1,P_INFO,swLogPrintf("RohcDestroyRohcChannel cid %u ");
306176,627064832,0,0,PLAT_AP,ROHC,RohcDestroyRohcChannel_2,P_WARNING,swLogPrintf("RohcDestroyRohcChannel alloc msg buffer fail , cid %u ");
306176,627066880,0,0,PLAT_AP,ROHC,RohcDestroyRohcChannel_3,P_WARNING,swLogPrintf("RohcDestroyRohcChannel tcpip_callback_with_block fail , cid %u ");
306176,627068928,0,0,PLAT_AP,ROHC,RohcRestRohcChannel_1,P_INFO,swLogPrintf("RohcResetRohcChannel cid %u ");
306176,627070976,0,0,PLAT_AP,ROHC,RohcRestRohcChannel_2,P_WARNING,swLogPrintf("RohcCreateRohcChannel alloc msg buffer fail , cid %u ");
306176,627073024,0,0,PLAT_AP,ROHC,RohcResetRohcChannel_3,P_WARNING,swLogPrintf("PsifResetRohcCallback tcpip_callback_with_block fail , cid %u ");
306176,627075328,0,0,PLAT_AP,ROHC,RohcReCompDataPdu_1,P_INFO,swLogPrintf("RohcReCompDataPdu cid %u , pdu 0x%x ");
306176,627077376,0,0,PLAT_AP,ROHC,RohcReCompDataPdu_2,P_WARNING,swLogPrintf("RohcReCompDataPdu alloc msg buffer fail , cid %u , pdu 0x%x ");
306176,627079168,0,0,PLAT_AP,ROHC,RohcReCompDataPdu_3,P_WARNING,swLogPrintf("RohcReCompDataPdu tcpip_callback_with_block fail , cid %u ");
306176,627081728,0,0,PLAT_AP,ROHC,RohcSetErrRptCfg_1,P_INFO,swLogPrintf("RohcSetErrRptCfg rohcErrRptEnable %d , rohcErrLevl %d , rohcRptBaseCount %d. ");
306176,627085311,0,0,PLAT_AP,ROHC,RohcSetErrRptCfg_2,P_WARNING,swLogPrintf("RohcSetErrRptCfg alloc msg buffer fail ");
306176,627087359,0,0,PLAT_AP,ROHC,RohcSetErrRptCfg_3,P_WARNING,swLogPrintf("RohcSetErrRptCfg tcpip_callback_with_block fail ");
307200,629149695,0,0,PLAT_AP,ROHC_COMP,PsifRohcCompPacket_w_1,P_WARNING,swLogPrintf("PsifRohcCompPacket not enabled , return fail ");
313344,641732607,0,0,PLAT_AP,LFS,lfs_bd_flush_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641734655,0,0,PLAT_AP,LFS,lfs_dir_getread_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641734912,0,0,PLAT_AP,LFS,lfs_dir_fetchmatch_0,P_ERROR,swLogPrintf("Corrupted dir pair at %x %x ");
313344,641738751,0,0,PLAT_AP,LFS,lfs_dir_commitcrc_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641740799,0,0,PLAT_AP,LFS,lfs_dir_compact_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641742847,0,0,PLAT_AP,LFS,lfs_dir_compact_1,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641744895,0,0,PLAT_AP,LFS,lfs_dir_compact_2,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641746943,0,0,PLAT_AP,LFS,lfs_dir_compact_3,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641748991,0,0,PLAT_AP,LFS,lfs_dir_compact_4,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641751039,0,0,PLAT_AP,LFS,lfs_dir_compact_5,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641753087,0,0,PLAT_AP,LFS,lfs_ctz_extend_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641755135,0,0,PLAT_AP,LFS,lfs_ctz_extend_1,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641757183,0,0,PLAT_AP,LFS,lfs_ctz_extend_2,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641759231,0,0,PLAT_AP,LFS,lfs_file_opencfg,P_WARNING,swLogPrintf("Can ' t malloc for name field ");
313344,641761279,0,0,PLAT_AP,LFS,lfs_file_relocate_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641763327,0,0,PLAT_AP,LFS,lfs_file_relocate_1,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641765375,0,0,PLAT_AP,LFS,lfs_file_flush_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641767423,0,0,PLAT_AP,LFS,lfs_file_write_0,P_WARNING,swLogPrintf("LFS corrupt detect! ");
313344,641767680,0,0,PLAT_AP,LFS,LFS_Reply_0,P_INFO,swLogPrintf("LFS reply , ret : %d , threadId : %x ");
313344,641769728,0,0,PLAT_AP,LFS,LFS_daemonTaskEntry,P_INFO,swLogPrintf("LFS Daemon task recv a request , type : %d , threadId : %x ");
313344,641771521,0,0,PLAT_AP,LFS,fs_remove,P_DEBUG,swLogPrintf("LFS remove , path : %s ");
313344,641773827,0,0,PLAT_AP,LFS,fs_rename,P_DEBUG,swLogPrintf("LFS rename , old path : %s , new path : %s ");
313344,641775617,0,0,PLAT_AP,LFS,fs_file_open,P_DEBUG,swLogPrintf("LFS file open , path : %s ");
313344,641777665,0,0,PLAT_AP,LFS,fs_file_close,P_DEBUG,swLogPrintf("LFS file close , file name : %s ");
313344,641779713,0,0,PLAT_AP,LFS,fs_file_read,P_DEBUG,swLogPrintf("LFS file read , file name : %s ");
313344,641781761,0,0,PLAT_AP,LFS,fs_file_write,P_DEBUG,swLogPrintf("LFS file write , file name : %s ");
313344,641783809,0,0,PLAT_AP,LFS,fs_file_seek,P_DEBUG,swLogPrintf("LFS file seek , file name : %s ");
313344,641785857,0,0,PLAT_AP,LFS,fs_file_sync,P_DEBUG,swLogPrintf("LFS file sync , file name : %s ");
313344,641787905,0,0,PLAT_AP,LFS,fs_file_truncate,P_DEBUG,swLogPrintf("LFS file truncate , file name : %s ");
313344,641789953,0,0,PLAT_AP,LFS,fs_file_rewind,P_DEBUG,swLogPrintf("LFS file rewind , file name : %s ");
314368,643829759,0,0,PLAT_AP,CEMM,ProcessServiceReject_1,P_WARNING,swLogPrintf("SERVICE REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643831807,0,0,PLAT_AP,CEMM,ProcessAttachReject_1,P_WARNING,swLogPrintf("ATTACH REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643833855,0,0,PLAT_AP,CEMM,ProcessAttachReject_2,P_WARNING,swLogPrintf("ATTACH REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643835903,0,0,PLAT_AP,CEMM,MtDetachRequest_1,P_WARNING,swLogPrintf("MT DETACH without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643837951,0,0,PLAT_AP,CEMM,MtDetachRequest_2,P_WARNING,swLogPrintf("MT DETACH without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643839999,0,0,PLAT_AP,CEMM,ProcessTauchReject_1,P_WARNING,swLogPrintf("TAU REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643842047,0,0,PLAT_AP,CEMM,ProcessTauchReject_2,P_WARNING,swLogPrintf("TAU REJECT without integrity protection , store the current TAI in the list of ' forbidden tracking areas for roaming ' ! ");
314368,643844095,0,0,PLAT_AP,CEMM,CemmEsmUnitDataRequestMsg_7,P_VALUE,swLogPrintf("ESM DATA TRANSPORT message is blocked by T3440 , pending it. ");
317440,650121215,0,0,PLAT_AP,PLA_MIDWARE,mwAonSockInfoChanged_s_1,P_SIG,swLogPrintf("MW AON , socket AON info changed ");
317440,650123263,0,0,PLAT_AP,PLA_MIDWARE,mwAonPsDialInfoChanged_s_1,P_SIG,swLogPrintf("MW AON , PS DIAL AON info changed ");
317440,650125311,0,0,PLAT_AP,PLA_MIDWARE,mwAonSetDefaultAonDnsCfgAndSave_1,P_ERROR,swLogPrintf("MW AON , can not find adpt dns aon ");
317440,650125312,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgAccessLock_e_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t lock the mutex , retErr : %d ");
317440,650127360,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgAccessUnLock_e_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t unlock the mutex , retErr : %d ");
317440,650129408,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmParseParamValue_id_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t parse paramId : %d ");
317440,650131712,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmParseParamValue_unkown_param_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t parse paramID : %d , type : %d , ignore it ");
317440,650133505,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_w_1,P_WARNING,swLogPrintf("MW NVM CFG , NVM file : %s , can ' t read , using default value ");
317440,650135809,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_s_1,P_SIG,swLogPrintf("MW NVM CFG , NVM file : %s , read OK , bodySize : %d ");
317440,650137600,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_parse_e_1,P_ERROR,swLogPrintf("MW CFG NVM , get next parameter err : %d ");
317440,650139904,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_rm_w_1,P_WARNING,swLogPrintf("MW CFG NVM , can ' t parse paramId : %d , type : %d , remove this param ");
317440,650143743,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_parse_e_2,P_WARNING,swLogPrintf("MW CFG NVM , parse file error , all param reset to default , and delete NVM file ");
317440,650145791,0,0,PLAT_AP,PLA_MIDWARE,mwCfgNvmRead_rm_w_2,P_WARNING,swLogPrintf("MW CFG NVM , some param removed , need write back to flash ");
317440,650146560,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_input_e_1,P_ERROR,swLogPrintf("MW CFG NVM , save param , input error , paramId : %d , cfgTpe : %d , paramLen : %d , pParamValue : 0x%x ");
317440,650148096,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_input_e_2,P_ERROR,swLogPrintf("MW CFG NVM , save param , input error , paramId : %d , cfgTpe : TV , but paramLen : %d > 2 ");
317440,650150144,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_input_e_3,P_ERROR,swLogPrintf("MW CFG NVM , save param , input error , paramId : %d , cfgTpe : TLV , but paramLen : %d < = 2 ");
317440,650151937,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_read_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t read NVM file : %s ");
317440,650154240,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_update_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t update / add paramId : %d into NVM buf , retErr : %d ");
317440,650156288,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveParam_write_w_1,P_WARNING,swLogPrintf("MW NVM CFG , can ' t write paramId : %d into NVM file , retErr : %d ");
317440,650160127,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgInit_e_1,P_ERROR,swLogPrintf("MW NVM CFG , can ' t create mutex ");
317440,650160128,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSaveAtChanConfig_e_1,P_ERROR,swLogPrintf("MW NVM CFG , invalid AT chanId : %d , can ' t update AtChanCfg into NVM ");
317440,650162944,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCsmpConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CSMP param from NVM , FO : %d , VP : %d , PID : %d , DCS : %d ");
317440,650164736,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCpmsConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CPMS param , mem1 : %d , mem2 : %d , mem3 : %d ");
317440,650166784,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCscaConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CSCA param , SC address present : %d , Type : %d , Address Len : %d ");
317440,650169344,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgGetCnmiConfig_1,P_INFO,swLogPrintf("MW NVM CFG , Read CNMI param from NVM , mode : %d , mt : %d , bm : %d , ds : %d , bfr : %d ");
317440,650170368,0,0,PLAT_AP,PLA_MIDWARE,mwNvmCfgSetAndSavePowerOnCfun_e_1,P_ERROR,swLogPrintf("MW NVM CFG , invalid power on CFUN : %d , can ' t set ");
317440,650172417,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoRead_w_1,P_WARNING,swLogPrintf("MW NVM INFO , NVM file : %s , can ' t read , using default value ");
317440,650175489,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoRead_w_2,P_WARNING,swLogPrintf("MW NVM INFO , NVM file : %s , file size not right : %d / %d , or version not right : %d / %d , using default value ");
317440,650178559,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoGetPhyDebugAtCmdInfo_w_1,P_WARNING,swLogPrintf("MW NVM INFO , can ' t get PHY debug AT info , as NVM not read ");
317440,650179072,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoSetPhyDebugAtCmdInfo_w_1,P_WARNING,swLogPrintf("MW NVM INFO , PHY AY debug info size : %d > bufSize : %d , only could write : %d into NVM ");
317440,650182655,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoSetPhyDebugAtCmdInfo_w_2,P_WARNING,swLogPrintf("MW NVM INFO , can ' t set PHY debug AT info , as NVM not read ");
317440,650184703,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoGetSimEdrxValue_1,P_WARNING,swLogPrintf("MW NVM INFO , can ' t get PHY edrx info , as NVM not read ");
317440,650186751,0,0,PLAT_AP,PLA_MIDWARE,mwNvmInfoSetSimEdrxValue_2,P_WARNING,swLogPrintf("MW NVM INFO , can ' t set PHY edrx info , as NVM not read ");
317440,650186753,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsRead_1,P_DEBUG,swLogPrintf("MW NVM SMS , NVM file : %s , can ' t read , using default value ");
317440,650189825,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsRead_2,P_DEBUG,swLogPrintf("MW NVM INFO , NVM file : %s , file size not right : %d / %d , or version not right : %d / %d , using default value ");
317440,650190848,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsGetRecByIndex_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid index : %d , can ' t get SMS record from NVM ");
317440,650194943,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsGetRecByIndex_3,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure! ");
317440,650195200,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsGetRecByIndex_4,P_WARNING,swLogPrintf("MW NVM SMS , index : %d , stored number : %d , there is no SMS message. ");
317440,650196992,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid index : %d , can ' t update SMS record ");
317440,650201087,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_3,P_WARNING,swLogPrintf("MW NVM SMS , read SMS Storage memory fail! ");
317440,650201344,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_4,P_WARNING,swLogPrintf("MW NVM SMS , index : %d , stored number : %d , the specificed stored SMS message record is NULL. ");
317440,650203136,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsUpdateAndSaveRecByIndex_5,P_INFO,swLogPrintf("MW NVM SMS , Updated SMS Record with the index ( %d ) Done and Saved to NVRAM ");
317440,650207231,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_2,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure , try again ! ");
317440,650209279,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_3,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure ! ");
317440,650211327,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_4,P_WARNING,swLogPrintf("MW NVM SMS , SMS Record Box is full , can ' t add SMS record to NVM ");
317440,650213375,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_5,P_WARNING,swLogPrintf("MW NVM SMS , SMS Record Box is full , can ' t add SMS record to NVM ");
317440,650213632,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsAddAndSaveRec_6,P_INFO,swLogPrintf("MW NVM SMS , added SMS success , index : %d , stored Counter : %d ");
317440,650215424,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid index : %d , can ' t delete SMS record from NVM ");
317440,650219519,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_3,P_WARNING,swLogPrintf("MW NVM SMS , read SMS Storage memory failure ! ");
317440,650219520,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_4,P_INFO,swLogPrintf("MW NVM SMS , the specificed index : %d SMS record has been Deleted! ");
317440,650221824,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByIndex_5,P_INFO,swLogPrintf("MW NVM SMS , deleted SMS specified index ( %d ) success , SMS stored number : %d ");
317440,650223616,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelRecByStatus_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid Status : %d , can ' t delete SMS records from NVM ");
317440,650225664,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelRecByStatus_2,P_INFO,swLogPrintf("MW NVM SMS , No need to Deleted : %d , SMS records list is NULL ");
317440,650227968,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelRecByStatus_3,P_INFO,swLogPrintf("MW NVM SMS , Deleted the specified Status SMS done , delete Statu : %d success , remaining SMS number : %d ");
317440,650229760,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByStatus_1,P_WARNING,swLogPrintf("MW NVM SMS , input invalid Status : %d , can ' t delete SMS records from NVM ");
317440,650233855,0,0,PLAT_AP,PLA_MIDWARE,mwNvmSmsDelAndSaveRecByStatus_3,P_WARNING,swLogPrintf("MW NVM SMS , Read SMS Storage memory failure ! ");
317440,650235903,0,0,PLAT_AP,PLA_MIDWARE,npiLoadNvmConfig_1,P_ERROR,swLogPrintf("Can ' t open NVM : ' npiconfig.nvm ' , use the defult value ");
317440,650237951,0,0,PLAT_AP,PLA_MIDWARE,npiLoadNvmConfig_2,P_ERROR,swLogPrintf("NPI NVM : ' npiconfig.nvm ' , can ' t read header , use the defult value ");
317440,650238464,0,0,PLAT_AP,PLA_MIDWARE,npiLoadNvmConfig_3,P_ERROR,swLogPrintf("' npiconfig.nvm ' version : %d file body size not right : ( %u / %u ) , use the defult value ");
317440,650242047,0,0,PLAT_AP,PLA_MIDWARE,npiSaveNvmConfig_1,P_ERROR,swLogPrintf("NPI NVM , can ' t open / create NVM : ' npiconfig.nvm ' , save NVM failed ");
317440,650244095,0,0,PLAT_AP,PLA_MIDWARE,npiSaveNvmConfig_2,P_ERROR,swLogPrintf("NPI NVM : ' npiconfig.nvm ' , write the file header failed ");
317440,650246143,0,0,PLAT_AP,PLA_MIDWARE,npiSaveNvmConfig_3,P_ERROR,swLogPrintf("NPI NVM : ' npiconfig.nvm ' , write the file body failed ");
318464,652216320,0,0,PLAT_AP,PLA_APP,CpStatusTask_0,P_VALUE,swLogPrintf("AP : Test task loop-%d ");
318464,652218368,0,0,PLAT_AP,PLA_APP,funcTestGetPinValue_0,P_VALUE,swLogPrintf("WakeupPinValue = %d ");
318464,652222463,0,0,PLAT_AP,PLA_APP,appInit_0,P_VALUE,swLogPrintf("AP : CP Power Off ");
318464,652224511,0,0,PLAT_AP,PLA_APP,appInit_1,P_VALUE,swLogPrintf("AP : CP Power On ");
318464,652226559,0,0,PLAT_AP,PLA_APP,funcTestAPAonReadTimeTest_1,P_VALUE,swLogPrintf("AP : End aon Read Time Test ");
318464,652226816,0,0,PLAT_AP,PLA_APP,hibTimerGlobalCntGet6P25HZ_0,P_VALUE,swLogPrintf("HibTimer : CurHibCnt = %d , HibCntStore = %d ");
318464,652228864,0,0,PLAT_AP,PLA_APP,hibTimerGlobalCntGet6P25HZ_1,P_VALUE,swLogPrintf("HibTimer : Offset = %d , Global Cnt Value = %d ");
318464,652232703,0,0,PLAT_AP,NAS_PLMN,CePlmnCurPlmnSearchDone_5,P_WARNING,swLogPrintf("PLMN , no valid PLMN found , since PLMN is currently blocked ");
318464,652234751,0,0,PLAT_AP,NAS_PLMN,CePlmnDelPhyCellId_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t delete the PHY cell id ");
318464,652236799,0,0,PLAT_AP,NAS_PLMN,CePlmnDelPhyCellId_2,P_VALUE,swLogPrintf("CE PLMN , delete the PHY cell id ");
318464,652238847,0,0,PLAT_AP,PLA_APP,enter_NMI_handler,P_ERROR,swLogPrintf("WDT timeout!!! Enter NMI Handler!!! ");
318464,652239360,0,0,PLAT_AP,PLA_APP,appSetPinOperationSync_1,P_INFO,swLogPrintf("PIN oper mode %d , pinStrLen %d , newPinStrLen %d ");
318464,652241152,0,0,PLAT_AP,PLA_APP,appSetTxPowerSetting_warn1,P_WARNING,swLogPrintf("The maxPower ( %d ) should not less than minPower ( %d ) ");
318464,652244991,0,0,PLAT_AP,PLA_APP,appSetTxPowerSetting_warn2,P_WARNING,swLogPrintf("appGetUeExtStatusInfoSync return error!!! ");
318464,652247039,0,0,PLAT_AP,PLA_APP,appSetTxPowerSetting_warn3,P_WARNING,swLogPrintf("The Tx Power Setting should be restricted in RRC Connection state ");
323584,662702080,0,0,PLAT_AP,UICC,UiccCtrlHandleCardInserted_0,P_WARNING,swLogPrintf("read abnormal tpLen %d from NVM , use default value and save ");
323584,662704128,0,0,PLAT_AP,UICC,HandleUiccCtrlRecoveryState_abTP,P_WARNING,swLogPrintf("read abnormal tpLen %d from NVM , use default value and save ");
323584,662706176,0,0,PLAT_AP,UICC,ReadPreferLanguage_1,P_VALUE,swLogPrintf("Reset command status : %d as ok. ");
323584,662710271,0,0,PLAT_AP,UICC,UsatCheckLengthField_00,P_VALUE,swLogPrintf("lengthBytes is 0! ");
323584,662712319,0,0,PLAT_AP,UICC,UsatProcSendSmRsp_0,P_WARNING,swLogPrintf("ME problem is absent ");
323584,662712576,0,0,PLAT_AP,UICC,UsatProcSendSmRsp_1,P_WARNING,swLogPrintf("abnormal result smsProblemPresent %d smsProblem 0x%x ");
323584,662714368,0,0,PLAT_AP,UICC,UsatProcTimerExpiration_0,P_VALUE,swLogPrintf("Check if busy statusWords %x ");
323584,662716416,0,0,PLAT_AP,UICC,UiccCtrlHandleTerminalProfileReq_abTP,P_WARNING,swLogPrintf("read abnormal tpLen %d from NVM , use default value and save ");
325632,666896640,0,0,PLAT_AP,FOTA,FOTA_NVM_SET,P_ERROR,swLogPrintf("set : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666898688,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_0,P_WARNING,swLogPrintf("clr : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666900736,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_1,P_WARNING,swLogPrintf("clr : no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,666902528,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_2,P_WARNING,swLogPrintf("clr zone ( %d ) : no fota zone? \n ");
325632,666904832,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_3,P_WARNING,swLogPrintf("clr zone ( %d ) : offset ( %d ) unaligned by 4K! \n ");
325632,666907136,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_4,P_WARNING,swLogPrintf("clr zone ( %d ) : len ( %d ) overflowed! set it with max ( %d ) ! \n ");
325632,666909184,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_5,P_ERROR,swLogPrintf("clr zone ( %d ) : invalid offset ( %d ) ! max ( %d ) \n ");
325632,666910976,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_6,P_ERROR,swLogPrintf("clr zone ( %d ) : currAddr ( %d ) unaligned by 4K err! \n ");
325632,666913280,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_7,P_ERROR,swLogPrintf("clr zone ( %d ) : err! curr / erase Len ( 0x%x / 0x%x ) invalid! \n ");
325632,666915328,0,0,PLAT_AP,FOTA,FOTA_NVM_CLEAR_8,P_ERROR,swLogPrintf("clr zone ( %d ) : err! currAddr ( 0x%x ) , errno ( %d ) \n ");
325632,666917120,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_1,P_WARNING,swLogPrintf("wr : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666919168,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_2,P_WARNING,swLogPrintf("wr : no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,666920960,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_3,P_WARNING,swLogPrintf("wr zone ( %d ) : no fota zone??? \n ");
325632,666923008,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_4,P_WARNING,swLogPrintf("wr zone ( %d ) : zero buf len? \n ");
325632,666925568,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_5,P_WARNING,swLogPrintf("wr zone ( %d ) : len ( %d ) overflowed! set it with max ( %d ) ! \n ");
325632,666927616,0,0,PLAT_AP,FOTA,FOTA_NVM_WRITE_6,P_ERROR,swLogPrintf("wr zone ( %d ) : invalid offset ( %d ) ! max ( %d ) \n ");
325632,666929408,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_1,P_WARNING,swLogPrintf("rd : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666931456,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_2,P_WARNING,swLogPrintf("rd : no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,666933248,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_3,P_WARNING,swLogPrintf("rd zone ( %d ) : no fota zone??? \n ");
325632,666935296,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_4,P_WARNING,swLogPrintf("rd zone ( %d ) : zero buf len? \n ");
325632,666937856,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_5,P_WARNING,swLogPrintf("rd zone ( %d ) : len ( %d ) overflowed! set it with max ( %d ) ! \n ");
325632,666939904,0,0,PLAT_AP,FOTA,FOTA_NVM_READ_6,P_ERROR,swLogPrintf("rd zone ( %d ) : invalid offset ( %d ) ! max ( %d ) \n ");
325632,666943487,0,0,PLAT_AP,FOTA,FOTA_NVM_SET_DFU_0,P_WARNING,swLogPrintf("set DFU : null ptr! \n ");
325632,666945535,0,0,PLAT_AP,FOTA,FOTA_NVM_SET_DFU_1,P_ERROR,swLogPrintf("set DFU : clear bkup zone failure! \n ");
325632,666945793,0,0,PLAT_AP,FOTA,FOTA_NVM_SET_DFU_2,P_WARNING,swLogPrintf("set DFU : ' %s ' , errno ( %d ) ! \n ");
325632,666949631,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_0,P_WARNING,swLogPrintf("get DFU : null ptr! \n ");
325632,666951679,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_1,P_WARNING,swLogPrintf("get DFU : not inited? do it now! \n ");
325632,666953727,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_2,P_ERROR,swLogPrintf("get DFU : read bkup zone failure! \n ");
325632,666955775,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_3,P_INFO,swLogPrintf("get DFU : ' success ' \n ");
325632,666957823,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_4,P_INFO,swLogPrintf("get DFU : ' failure ' \n ");
325632,666959871,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_DFU_5,P_INFO,swLogPrintf("get DFU : ' no result ' \n ");
325632,666960128,0,0,PLAT_AP,FOTA,FOTA_NVM_ADJ_ZONESZ_1,P_ERROR,swLogPrintf("adj zone : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666962176,0,0,PLAT_AP,FOTA,FOTA_NVM_ADJ_ZONESZ_2,P_ERROR,swLogPrintf("adj zone : no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,666964480,0,0,PLAT_AP,FOTA,FOTA_NVM_ADJ_ZONESZ_3,P_INFO,swLogPrintf("adj zone ( %d ) : size %d --> %d \n ");
325632,666966016,0,0,PLAT_AP,FOTA,FOTA_NVM_ADJ_ZONESZ_4,P_INFO,swLogPrintf("adj zone ( %d ) : no need change! \n ");
325632,666968320,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_1,P_SIG,swLogPrintf("delta : not a par! pmagic ( %x%x ) \n ");
325632,666972159,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_2,P_ERROR,swLogPrintf("delta : par-h chksum calc fail! \n ");
325632,666974207,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_3,P_ERROR,swLogPrintf("delta : par-pl chksum calc fail! \n ");
325632,666976255,0,0,PLAT_AP,FOTA,FOTA_CHK_DELTA_4,P_WARNING,swLogPrintf("delta : unmatched chksum! curr / wanted as follows : \n ");
325632,666976256,0,0,PLAT_AP,FOTA,FOTA_IS_IDENTICAL_1,P_ERROR,swLogPrintf("image ( %d ) : fw chksum calc fail! \n ");
325632,666978304,0,0,PLAT_AP,FOTA,FOTA_IS_IDENTICAL_2,P_WARNING,swLogPrintf("image ( %d ) : non-identical! curr / wanted as follows : \n ");
325632,666980352,0,0,PLAT_AP,FOTA,FOTA_IS_IDENTICAL_3,P_INFO,swLogPrintf("image ( %d ) : identical! \n ");
325632,666982656,0,0,PLAT_AP,FOTA,FOTA_CHK_IMAGE_1,P_SIG,swLogPrintf("image : not a * .par! pmagic ( %x%x ) \n ");
325632,666984704,0,0,PLAT_AP,FOTA,FOTA_CHK_IMAGE_2,P_SIG,swLogPrintf("image : * .par len ( %d ) err , maxsize ( %d ) \n ");
325632,666986496,0,0,PLAT_AP,FOTA,FOTA_CHK_IMAGE_3,P_INFO,swLogPrintf("image : * .par pcap ( %d ) \n ");
325632,666990591,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_ZID_1,P_ERROR,swLogPrintf("get zid : null size ptr! \n ");
325632,666990848,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_ZID_2,P_SIG,swLogPrintf("get zid : set default zone ( %d : %d ) ! \n ");
325632,666992640,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_ZID_3,P_WARNING,swLogPrintf("get zid : unknown starting addr ( 0x%x ) ! \n ");
325632,666994944,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_ZID_4,P_WARNING,swLogPrintf("get zid : in_size ( %d ) ! = zone_size ( %d ) ! \n ");
325632,666996992,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_SZ_1,P_WARNING,swLogPrintf("get size : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,666999040,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_SZ_2,P_WARNING,swLogPrintf("get size : no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,667001088,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_HNDL_1,P_WARNING,swLogPrintf("get handle : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,667003136,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_HNDL_2,P_WARNING,swLogPrintf("get handle : no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,667005184,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_XTRAS_1,P_WARNING,swLogPrintf("get xtras : invalid zoneId ( %d ) ! max ( %d ) \n ");
325632,667007232,0,0,PLAT_AP,FOTA,FOTA_NVM_GET_XTRAS_2,P_WARNING,swLogPrintf("get xtras : no fota zone ( %d ) ! bmZoneId ( 0x%x ) \n ");
325632,667009024,0,0,PLAT_AP,FOTA,VERIFY_DELTA_1,P_ERROR,swLogPrintf("validate delta err! errno ( %d ) ");
325632,667013119,0,0,PLAT_AP,FOTA,VERIFY_DELTA_2,P_SIG,swLogPrintf("validate delta ok! ");
325632,667015167,0,0,PLAT_AP,FOTA,VERIFY_DELTA_3,P_WARNING,swLogPrintf("however , base fw is unmatched! ");
325632,667017215,0,0,PLAT_AP,FOTA,HANDLE_SYS_PWOFF_2,P_ERROR,swLogPrintf("create power off timer error! ");
325632,667017216,0,0,PLAT_AP,FOTA,FOTA_INIT_CHKSUM,P_WARNING,swLogPrintf("chksum : undef algo ( %d ) ! \n ");
325632,667019264,0,0,PLAT_AP,FOTA,FOTA_DEINIT_CHKSUM,P_WARNING,swLogPrintf("chksum : undef algo ( %d ) ! \n ");
325632,667021312,0,0,PLAT_AP,FOTA,FOTA_CALC_CHKSUM,P_WARNING,swLogPrintf("chksum : undef algo ( %d ) ! \n ");
325632,667023360,0,0,PLAT_AP,FOTA,FOTA_FREE_1,P_ERROR,swLogPrintf("buf ( 0x%x ) head bound magic chk err! \n ");
325632,667025408,0,0,PLAT_AP,FOTA,FOTA_FREE_2,P_ERROR,swLogPrintf("buf ( 0x%x ) tail bound magic chk err! \n ");
325632,667027456,0,0,PLAT_AP,FOTA,FOTA_CONVTO_ZONEID,P_WARNING,swLogPrintf("undef fwAttr ( %d ) ! \n ");
325632,667029504,0,0,PLAT_AP,FOTA,FOTA_CONVTO_FWATTR,P_WARNING,swLogPrintf("invalid zoneId ( %d ) ! \n ");
325632,667031552,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_1,P_WARNING,swLogPrintf("err! not aligned by %d bytes @non-last data! \n ");
325632,667033600,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_2,P_ERROR,swLogPrintf("sha256sum : alloc buffer ( %d ) failure! \n ");
325632,667035648,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_3,P_WARNING,swLogPrintf("zid ( %d ) flash read failure! \n ");
325632,667037696,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_FLASH_4,P_ERROR,swLogPrintf("zid ( %d ) flash cs-calc fail! \n ");
325632,667039744,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_BUF_1,P_WARNING,swLogPrintf("err! not aligned by %d bytes @non-last data! \n ");
325632,667042048,0,0,PLAT_AP,FOTA,FOTA_CHKSUM_BUF_2,P_ERROR,swLogPrintf("buf ( 0x%x / %d ) chksum fail! \n ");
325632,667043840,0,0,PLAT_AP,FOTA,FOTA_DUMP_OCTETS_1,P_INFO,swLogPrintf("total length ( %d ) : \n ");
325632,667046404,0,0,PLAT_AP,FOTA,FOTA_DUMP_OCTETS_2,P_INFO,swLogPrintf("[ %d / %d ] %s \n ");
325632,667048452,0,0,PLAT_AP,FOTA,FOTA_DUMP_OCTETS_3,P_INFO,swLogPrintf("[ %d / %d ] %s \n ");
332800,681577216,0,0,PLAT_AP,NVRAM,restoreFactoryCprs_0,P_INFO,swLogPrintf("outStream = 0x%x , outStreamLen = %d..inStream = 0x%x , inStreamLen = %d.. ");
332800,681578496,0,0,PLAT_AP,NVRAM,restoreFactoryCprs_1,P_ERROR,swLogPrintf("restoreFactoryCprs len error!! len = %d ");
332800,681580800,0,0,PLAT_AP,NVRAM,restoreFactoryCprs_2,P_ERROR,swLogPrintf("fac nv %d is invalid , bitmap 0x%x!! ");
332800,681583360,0,0,PLAT_AP,NVRAM,nvramSave2CprsFac_0,P_INFO,swLogPrintf("outStream = 0x%x , outStreamLen = %d..inStream = 0x%x , inStreamLen = %d.. ");
332800,681584640,0,0,PLAT_AP,NVRAM,nvramSave2CprsFac_1,P_INFO,swLogPrintf("nvramSave2CprsFac decompDataLen = %d ");
332800,681588735,0,0,PLAT_AP,NVRAM,nvramSave2CprsFac_2,P_ERROR,swLogPrintf("nvramSave2CprsFac decomp error !! ");
334848,685772799,0,0,PLAT_AP,CCM_REG,CcmRegProcCemmrNwServiceStatusIndSig_2,P_SIG,swLogPrintf("CCM REG , UE is OUT OF SERVICE ");
335872,687867904,0,0,PLAT_AP,CCM_DEV,CcmDevSetExtCfgReq_disableNCellMeas,P_WARNING,swLogPrintf("CCM DEV , ' disableNCellMeas ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to : %d ");
336896,689965312,0,0,PLAT_AP,CCM_PS,CcmPsCheckAutoSaveDataCounterTimerWakeUpFromDeepSleep_1,P_INFO,swLogPrintf("CCM PS , currHibSC is %d , ExpiredHibSC is %d , CCM_PS_AUTO_SAVE_DATA_COUNTER_PERIOD_TIMER had expired under deep sleep , need to save into nvm! ");
336896,689967616,0,0,PLAT_AP,CCM_PS,CcmPsCheckAutoSaveDataCounterTimerWakeUpFromDeepSleep_2,P_INFO,swLogPrintf("CCM PS , currHibSC is %d , ExpiredHibSC is %d , Wakeup from deep sleep , Re-Start CCM_PS_AUTO_SAVE_DATA_COUNTER_PERIOD_TIMER with remain seconds : %d ");
394240,807405569,0,0,PLAT_CP,PLA_STRING,StackOverflow,P_ERROR,swLogPrintf("\r \n!!!error!!!..task : %s..stack.over.flow!!! \r \n ");
396288,811600128,0,0,PLAT_CP,PLA_DRIVER,ShareInfoGetCpAdcValue_0,P_ERROR,swLogPrintf("Request Read AuxADC when result is invalid! adcValidBm = 0x%x , type = %d ");
396288,811602176,0,0,PLAT_CP,PLA_DRIVER,CLOCK_clockEnable_1,P_WARNING,swLogPrintf("Clock Enable Failed , id = 0x%x counter = %d ");
396288,811603968,0,0,PLAT_CP,PLA_DRIVER,CLOCK_clockDisable_0,P_WARNING,swLogPrintf("Clock Disable check failed , id = 0x%x ");
396288,811606016,0,0,PLAT_CP,PLA_DRIVER,prvEnterWFIDoze_1,P_VALUE,swLogPrintf("paging CP Exit WFI TOPDOZESTATUS = 0x%x ");
396288,811608320,0,0,PLAT_CP,PLA_DRIVER,cpmuTryCPSleep_3,P_VALUE,swLogPrintf("XIC0 0x%x XIC1 0x%x \r \n ");
396288,811610112,0,0,PLAT_CP,PLA_DRIVER,cpmuTranslatePhyInitState_6,P_WARNING,swLogPrintf("Phy Init State Error : wakeupBm = 0x%x ");
396288,811612928,0,0,PLAT_CP,PLA_DRIVER,CAIpcAlone1Isr_1,P_INFO,swLogPrintf("CP RECV IPC ID : 0x%x , msgLen : %d , bFast : %d , gA2CReadAddr_cp_rw = 0x%X ");
396288,811614208,0,0,PLAT_CP,PLA_DRIVER,C2ASendAonIpcMsg_1,P_WARNING,swLogPrintf("Warning , Last IPC0 Message not pop out , last msg = 0x%x ");
396288,811618303,0,0,PLAT_CP,PLA_DRIVER,C2ASendAonIpcMsg_2,P_WARNING,swLogPrintf("Warning , CP write IPC0 fail ");
396288,811618304,0,0,PLAT_CP,PLA_DRIVER,WaitC2AIpcCnf_0,P_INFO,swLogPrintf("MSG ( id : 0x%X ) send to AP in paging image , wait for response! ");
396288,811622399,0,0,PLAT_CP,PLA_DRIVER,WaitC2AIpcCnf_3,P_INFO,swLogPrintf("AP transfer to full image , skip wait ");
396288,811622400,0,0,PLAT_CP,PLA_DRIVER,WaitC2AIpcCnf_1,P_INFO,swLogPrintf("MSG response ( id : 0x%X ) received from AP in paging image! ");
396288,811624448,0,0,PLAT_CP,PLA_DRIVER,WaitC2AIpcCnf_2,P_INFO,swLogPrintf("wait in while loop! and msg in aon is 0x%X ");
396288,811627011,0,0,PLAT_CP,PLA_DRIVER,assert_func_1,P_ERROR,swLogPrintf("Assert , expr : %s , file : %s , line : %d \r \n ");
397312,813697536,0,0,PLAT_CP,PLA_HAL,CpIdleTimeStatis_0,P_INFO,swLogPrintf("CP in IdleTask Percent : %d idleTaskCnt = %d , isrCnt = %d ");
397312,813699584,0,0,PLAT_CP,PLA_HAL,CpIdleTimeStatis_1,P_SIG,swLogPrintf("CP in IdleTask Percent : %d idleTaskCnt = %d , isrCnt = %d ");
397312,813701632,0,0,PLAT_CP,PLA_HAL,CpIdleTimeStatis_2,P_WARNING,swLogPrintf("CP in IdleTask Percent : %d idleTaskCnt = %d , isrCnt = %d ");
398336,815794432,0,0,PLAT_CP,EXCEP_PRINT,ResetSetSWResetReason_1,P_WARNING,swLogPrintf("Old Reset reason = %e<ResetReason_e> exist , write reason = %e<ResetReason_e> failed ");
398336,815798271,0,0,PLAT_CP,EXCEP_PRINT,check_excep_func_call_1,P_ERROR,swLogExcep("try to parse exception call stack by address compare! ");
398336,815798272,0,0,PLAT_CP,EXCEP_PRINT,check_excep_func_call_2,P_ERROR,swLogExcep("maybe function address @ 0x%x ");
398336,815802367,0,0,PLAT_CP,EXCEP_PRINT,excepSystemReset_0,P_ERROR,swLogExcep("exception system reset ");
398336,815804415,0,0,PLAT_CP,EXCEP_PRINT,excepCheckFaultType_1,P_ERROR,swLogExcep("hardfault : casued by vector fetch error! ");
398336,815806463,0,0,PLAT_CP,EXCEP_PRINT,excepCheckFaultType_2,P_ERROR,swLogExcep("hardfault : casued by debug event! ");
398336,815808511,0,0,PLAT_CP,EXCEP_PRINT,mmfault_1,P_ERROR,swLogExcep("mem fault : instruction access violatio ");
398336,815810559,0,0,PLAT_CP,EXCEP_PRINT,mmfault_2,P_ERROR,swLogExcep("mem fault : data access violation ");
398336,815812607,0,0,PLAT_CP,EXCEP_PRINT,mmfault_3,P_ERROR,swLogExcep("mem fault : unstacking error ");
398336,815814655,0,0,PLAT_CP,EXCEP_PRINT,mmfault_4,P_ERROR,swLogExcep("mem fault : stacking error ");
398336,815814656,0,0,PLAT_CP,EXCEP_PRINT,mmfault_5,P_ERROR,swLogExcep("memory manage fault address @ 0x%x ");
398336,815818751,0,0,PLAT_CP,EXCEP_PRINT,busfault_1,P_ERROR,swLogExcep("bus fault : instrunction acess error ");
398336,815820799,0,0,PLAT_CP,EXCEP_PRINT,busfault_2,P_ERROR,swLogExcep("bus fault : precise data acess error ");
398336,815822847,0,0,PLAT_CP,EXCEP_PRINT,busfault_3,P_ERROR,swLogExcep("bus fault : imprecise data acess error ");
398336,815824895,0,0,PLAT_CP,EXCEP_PRINT,busfault_4,P_ERROR,swLogExcep("bus fault : unstacking error ");
398336,815826943,0,0,PLAT_CP,EXCEP_PRINT,busfault_5,P_ERROR,swLogExcep("bus fault : stacking error ");
398336,815826944,0,0,PLAT_CP,EXCEP_PRINT,busfault_6,P_ERROR,swLogExcep("bus fault address @ 0x%x ");
398336,815831039,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_1,P_ERROR,swLogExcep("usage fault : try to execute undefined instruction ");
398336,815833087,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_2,P_ERROR,swLogExcep("usage fault : try to switch to wrong state ( ARM ) ");
398336,815835135,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_3,P_ERROR,swLogExcep("usage fault : execute EXC_RETURN error ");
398336,815837183,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_4,P_ERROR,swLogExcep("usage fault : try to execute coprocessor instruction ");
398336,815839231,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_5,P_ERROR,swLogExcep("usage fault : unaligned access ");
398336,815841279,0,0,PLAT_CP,EXCEP_PRINT,usgaefault_6,P_ERROR,swLogExcep("usage fault : divide by zero ");
398336,815843327,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_1,P_ERROR,swLogExcep("dump regs start : ");
398336,815843328,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_2,P_ERROR,swLogExcep("dump reg : r0 : 0x%x ! ");
398336,815845376,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_3,P_ERROR,swLogExcep("dump reg : r1 : 0x%x ! ");
398336,815847424,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_4,P_ERROR,swLogExcep("dump reg : r2 : 0x%x ! ");
398336,815849472,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_5,P_ERROR,swLogExcep("dump reg : r3 : 0x%x ! ");
398336,815851520,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_6,P_ERROR,swLogExcep("dump reg : r4 : 0x%x ! ");
398336,815853568,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_7,P_ERROR,swLogExcep("dump reg : r5 : 0x%x ! ");
398336,815855616,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_8,P_ERROR,swLogExcep("dump reg : r6 : 0x%x ! ");
398336,815857664,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_9,P_ERROR,swLogExcep("dump reg : r7 : 0x%x ! ");
398336,815859712,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_10,P_ERROR,swLogExcep("dump reg : r8 : 0x%x ! ");
398336,815861760,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_11,P_ERROR,swLogExcep("dump reg : r9 : 0x%x ! ");
398336,815863808,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_12,P_ERROR,swLogExcep("dump reg : r10 : 0x%x ! ");
398336,815865856,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_13,P_ERROR,swLogExcep("dump reg : r11 : 0x%x ! ");
398336,815867904,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_14,P_ERROR,swLogExcep("dump reg : r12 : 0x%x ! ");
398336,815869952,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_15,P_ERROR,swLogExcep("dump reg : sp : 0x%x ! ");
398336,815872000,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_16,P_ERROR,swLogExcep("dump reg : msp : 0x%x ! ");
398336,815874048,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_17,P_ERROR,swLogExcep("dump reg : psp : 0x%x ! ");
398336,815876096,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_18,P_ERROR,swLogExcep("dump reg : lr : 0x%x ! ");
398336,815878144,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_19,P_ERROR,swLogExcep("dump reg : exception pc : 0x%x ! ");
398336,815880192,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_20,P_ERROR,swLogExcep("dump reg : psr : 0x%x ! ");
398336,815882240,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_21,P_ERROR,swLogExcep("dump reg : exc_return : 0x%x ! ");
398336,815884288,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_22,P_ERROR,swLogExcep("dump reg BASEPRI : 0x%x ! ");
398336,815886336,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_23,P_ERROR,swLogExcep("dump reg PRIMASK : 0x%x ! ");
398336,815888384,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_24,P_ERROR,swLogExcep("dump reg FAULTMASK : 0x%x ! ");
398336,815890432,0,0,PLAT_CP,EXCEP_PRINT,stack_frame_25,P_ERROR,swLogExcep("dump reg CONTROL : 0x%x ! ");
398336,815894527,0,0,PLAT_CP,EXCEP_PRINT,hardfault_enter1,P_ERROR,swLogExcep("CP hard fault triggered!! ");
398336,815894784,0,0,PLAT_CP,EXCEP_PRINT,excepHardFaultHandler_3,P_WARNING,swLogExcep("CP : Min of max free block in histroy : [ %d , %d ) ");
398336,815897088,0,0,PLAT_CP,EXCEP_PRINT,excepHardFaultHandler_4,P_WARNING,swLogExcep("CP : Current max free block size : %d in [ %d , %d ) ");
398336,815898625,0,0,PLAT_CP,EXCEP_PRINT,exception_task,P_ERROR,swLogExcep("hardfault task : %s ");
398336,815900673,0,0,PLAT_CP,EXCEP_PRINT,unilogAssertInfo_1,P_ERROR,swLogExcep("ASSERT , FUNC : %s ");
398336,815902721,0,0,PLAT_CP,EXCEP_PRINT,unilogAssertInfo_2,P_ERROR,swLogExcep("ASSERT , FILE : %s ");
398336,815905536,0,0,PLAT_CP,EXCEP_PRINT,unilogAssertInfo_3,P_ERROR,swLogExcep("ASSERT line : %d , val is 0x%x , 0x%x , 0x%x ");
398336,815907328,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_0,P_ERROR,swLogExcep("CP assert triggered!!SP = 0x%x , PSP = 0x%x , MSP = 0x%x ");
398336,815908865,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_1,P_ERROR,swLogExcep("Assert INFO : %s ");
398336,815911168,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_001,P_WARNING,swLogExcep("CP : Min of max free block in histroy : [ %d , %d ) ");
398336,815913472,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_002,P_WARNING,swLogExcep("CP : Current max free block size : %d in [ %d , %d ) ");
398336,815915009,0,0,PLAT_CP,EXCEP_PRINT,ecAssert_CP_2,P_ERROR,swLogExcep("assert in : %s ");
399360,817892097,0,0,PLAT_CP,OSA,OsaCheckDebugFalse_e_1,P_ERROR,swLogPrintf("Debug Error , file : %s , line : %d , ( 0x%x , 0x%x ) ");
400384,819988992,0,0,PLAT_CP,PMU,cpmuSaveWakeupSrc_4,P_VALUE,swLogPrintf("CPmu : Recover Wakeup_type from Hw = 0x%x , bootFlag = %d , cpmuPowerFlag = %d ");
400384,819992575,0,0,PLAT_CP,PMU,cpmuHasIPCInt_1,P_VALUE,swLogPrintf("CP has IPC1 Int Pending in SmallImg ");
400384,819994623,0,0,PLAT_CP,PMU,cpmuTryCPSleep_1,P_VALUE,swLogPrintf("CP : Go DeepSleep ");
400384,819994880,0,0,PLAT_CP,PMU,cpmuTryCPSleep_2,P_WARNING,swLogPrintf("CP : Sleep Failed , NVIC ISPR 0x%x ICSR 0x%x \r \n ");
400384,819996928,0,0,PLAT_CP,PMU,cpmuInit1,P_INFO,swLogPrintf("cp share : 0x%x , len : 0x%x \r \n ");
400384,819999744,0,0,PLAT_CP,PMU,cpmuPrintBootTimeStamp_1,P_VALUE,swLogPrintf("BootTime = %u , %u , %u , %u , %u ");
400384,820000768,0,0,PLAT_CP,PMU,excepCPEnterLoop_1,P_ERROR,swLogExcep("AP Dump , CP enter exception loop , reason = %e<ACIPC0MSGID> ");
400384,820002816,0,0,PLAT_CP,PMU,testTask_1,P_VALUE,swLogPrintf("CP : Test task loop-%d ");
400384,820004864,0,0,PLAT_CP,PMU,GPR_rmiErrDetectIsr_1,P_WARNING,swLogPrintf("CP Rmi Err Detect Address = 0x%x ");
400384,820006912,0,0,PLAT_CP,PMU,cpflashXIPSize,P_VALUE,swLogPrintf("CP Flash XIP Size = 0x%x ");
400384,820009472,0,0,PLAT_CP,PMU,cp_main_1,P_VALUE,swLogPrintf("CP Wakeup Bitmap ( 0 : sw 1 : rt ; 2 : bc 3-5 : ipc ) = 0x%x , CP Actual Sleep State = %e<CPSleepState> , Pending ipc1 = %d ");
400384,820011520,0,0,PLAT_CP,PMU,cp_main_888,P_VALUE,swLogPrintf("CP WDTInfo 0x%x , 0x%x , 0x%x ");
400384,820013568,0,0,PLAT_CP,PMU,cp_main_2,P_VALUE,swLogPrintf("CP Power On IPC NVIC Status , ipc0 = %d , ipc1 = %d , CurSc = %d ");
400384,820017151,0,0,PLAT_CP,PMU,cp_main_3,P_INFO,swLogPrintf("Cp Sleep in paging Img ");
400384,820017920,0,0,PLAT_CP,PMU,cp_main_4,P_SIG,swLogPrintf("CP : Transfer to FullImage , ipc1 Int = %d , IPCPending = ( %d , %d ) , cp Need FullImage = %d ");
449536,920653823,0,0,PLAT_CP,PLA_APP,enter_NMI_handler,P_ERROR,swLogPrintf("WDT timeout!!! Enter NMI Handler!!! ");
524288,1073745919,0,0,PS1,PS_DUMP,CerrcCheckIfBandSupported_list,P_VALUE,swLogDump("Supported Band List : ");
524288,1073747967,0,0,PS1,PS_DUMP,CerrcUpdateSimInfo_imsi,P_VALUE,swLogDump("IMSI : ");
524288,1073750015,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB2_else,P_VALUE,swLogDump("SIB2 : ");
524288,1073752063,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB3_else,P_VALUE,swLogDump("SIB3 : ");
524288,1073754111,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB4_else,P_VALUE,swLogDump("SIB4 : ");
524288,1073756159,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB5_else,P_VALUE,swLogDump("SIB5 : ");
524288,1073758207,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB14_else,P_VALUE,swLogDump("SIB14 : ");
524288,1073760255,0,0,PS1,PS_DUMP,CerrcPrintBcchDlSchMsg_SIB16_else,P_VALUE,swLogDump("SIB16 : ");
524288,1073762303,0,0,PS1,PS_DUMP,CerrcDeriveKeNB_Kasme,P_VALUE,swLogDump("Kasme ( 256-bit ) : ");
524288,1073764351,0,0,PS1,PS_DUMP,CerrcDeriveKeNB_ulCount,P_VALUE,swLogDump("NAS UL COUNT ( 32-bit ) : ");
524288,1073766399,0,0,PS1,PS_DUMP,CerrcDeriveKeNB_KeNB,P_VALUE,swLogDump("KeNB ( 256-bit ) : ");
524288,1073768447,0,0,PS1,PS_DUMP,CerrcDeriveAsKey_asKey,P_VALUE,swLogDump("AS Key ( 128-bit ) : ");
524288,1073770495,0,0,PS1,PS_DUMP,CerrcSyncNH_KeNBInit,P_VALUE,swLogDump("KeNBInitial ( 256-bit ) : ");
524288,1073772543,0,0,PS1,PS_DUMP,CerrcSyncNH_preNH,P_VALUE,swLogDump("Previous NH ( 256-bit ) : ");
524288,1073774591,0,0,PS1,PS_DUMP,CerrcSyncNH_string,P_VALUE,swLogDump("Input String : ");
524288,1073776639,0,0,PS1,PS_DUMP,CerrcSyncNH_syncNH,P_VALUE,swLogDump("The sync NH ( 256-bit ) : ");
524288,1073778687,0,0,PS1,PS_DUMP,CerrcDeriveNewKeNB_input,P_VALUE,swLogDump("The input Key ( 256-bit ) : ");
524288,1073780735,0,0,PS1,PS_DUMP,CerrcDeriveNewKeNB_string,P_VALUE,swLogDump("The input String : ");
524288,1073782783,0,0,PS1,PS_DUMP,CerrcDeriveNewKeNB_output,P_VALUE,swLogDump("The output KeNB * ( 256-bit ) : ");
524288,1073784831,0,0,PS1,PS_DUMP,CerrcCalcXmacI_data,P_VALUE,swLogDump("The input data : ");
524288,1073786879,0,0,PS1,PS_DUMP,CerrcCalcXmacI_key,P_VALUE,swLogDump("The KRRCint ( 128-bit ) : ");
524288,1073788927,0,0,PS1,PS_DUMP,CerrcCalcXmacI_xMacIArray,P_VALUE,swLogDump("The xMacIArray ( 32-bit ) : ");
524288,1073790975,0,0,PS1,PS_DUMP,CerrcDlPduSoftEeaThenEia_input,P_VALUE,swLogDump("The input data : ");
524288,1073793023,0,0,PS1,PS_DUMP,CerrcDlPduSoftEeaThenEia_output,P_VALUE,swLogDump("The output data : ");
524288,1073795071,0,0,PS1,PS_DUMP,CamSimCmiSimRestrictedAccessReqFunc_0,P_VALUE,swLogDump("CmiSimRestrictedAccessReq : ");
524288,1073797119,0,0,PS1,PS_DUMP,CamSimCmiSimGenLogicalChAccessReqFunc_0,P_VALUE,swLogDump("CmiSimGenLogicalChannelAccessReq : ");
524288,1073799167,0,0,PS1,PS_DUMP,CamSimCmiSimGenLogicalChAccessCnfFunc_2,P_VALUE,swLogDump("CmiSimGenLogicalChannelAccessCnf : ");
524288,1073801215,0,0,PS1,PS_DUMP,RandomizeDownlinkEmmMessage_2,P_VALUE,swLogDumpPolling("Original DL PDU is : ");
524288,1073803263,0,0,PS1,PS_DUMP,RandomizeDownlinkEmmMessage_4,P_INFO,swLogDumpPolling("Random value is : ");
524288,1073805311,0,0,PS1,PS_DUMP,RandomizeDownlinkEmmMessage_5,P_INFO,swLogDumpPolling("Randomized DL PDU is : ");
524288,1073807359,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_8,P_VALUE,swLogDump("decypered data content is : ");
524288,1073809407,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_9,P_VALUE,swLogDump("data content is : ");
524288,1073811455,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_10,P_VALUE,swLogDump("nasEncKey is : ");
524288,1073813503,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_11,P_VALUE,swLogDump("nasIntKey is : ");
524288,1073815551,0,0,PS1,PS_DUMP,NasMessageSecurityCheck_12,P_VALUE,swLogDump("DL NAS COUNT is : ");
524288,1073817599,0,0,PS1,PS_DUMP,CemmIsNeedIngoreDlEmmMsg_4,P_VALUE,swLogDump("Last Dl Emm Msg Hash Value : ");
524288,1073819647,0,0,PS1,PS_DUMP,CemmIsNeedIngoreDlEmmMsg_5,P_VALUE,swLogDump("Current Dl Emm Msg Hash Value : ");
524288,1073821695,0,0,PS1,PS_DUMP,CemmNasMsgInd_5,P_VALUE,swLogDumpPolling("cerrcNasMsgInd PDU is : ");
524288,1073823743,0,0,PS1,PS_DUMP,CemmNasMsgInd_7,P_VALUE,swLogDumpPolling("NAS DL PDU : ");
524288,1073825791,0,0,PS1,PS_DUMP,CemmSimReady_2,P_VALUE,swLogDumpPolling("EFepsloci GUTI is : ");
524288,1073827839,0,0,PS1,PS_DUMP,CesmGetFullIpv6AddrFromNetif_1,P_VALUE,swLogDump("CESM , EPS FULL IPV6 ADDR : ");
524288,1073829887,0,0,PS1,PS_DUMP,UiccCtrlStart3GSession_acl_dump,P_VALUE,swLogDump("CemmsimAppReadyInd pAclRawData : ");
524288,1073831935,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_iccid1,P_VALUE,swLogDump("current UICC iccid : ");
524288,1073833983,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_iccid2,P_VALUE,swLogDump("saved tinyCtx iccid : ");
524288,1073836031,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_imsi1,P_VALUE,swLogDump("current UICC imsi : ");
524288,1073838079,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_imsi2,P_VALUE,swLogDump("saved tinyCtx imsi : ");
524288,1073840127,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_epsloci1,P_VALUE,swLogDump("current UICC Epsloci : ");
524288,1073842175,0,0,PS1,PS_DUMP,HandleUiccCtrlRecoveryState_epsloci2,P_VALUE,swLogDump("saved tinyCtx EpsLoci : ");
524288,1073844223,0,0,PS1,PS_DUMP,UsatEncSmsPpDownload_0,P_VALUE,swLogDump("SMS user data : ");
524288,1073846271,0,0,PS1,PS_DUMP,UiccDecodeATRContent_1,P_VALUE,swLogDump("ATR content : ");
524288,1073848319,0,0,PS1,PS_DUMP,UiccPPSProcedure_1,P_VALUE,swLogDump("PPS response : ");
524288,1073850367,0,0,PS1,PS_DUMP,UiccDllDelProcedureByteInRxBuffer_1,P_VALUE,swLogDump("R-TPDU ( del ) : ");
524288,1073852415,0,0,PS1,PS_DUMP,UiccDllSendHandler_2,P_VALUE,swLogDump("C-TPDU : ");
524288,1073854463,0,0,PS1,PS_DUMP,UiccDllSendHandler_3,P_VALUE,swLogDump("C-TPDU : ");
524288,1073856511,0,0,PS1,PS_DUMP,UiccDllSendHandler_4,P_VALUE,swLogDump("PPS request : ");
524288,1073858559,0,0,PS1,PS_DUMP,UiccDllSendHandler_dump,P_VALUE,swLogDump("C-TPDU : ");
524288,1073860607,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase12_softsim_1,P_VALUE,swLogDump("C-TPDU : ");
524288,1073862655,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase12_1,P_VALUE,swLogDump("R-TPDU : ");
524288,1073864703,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_softsim_1,P_VALUE,swLogDump("C-TPDU : ");
524288,1073866751,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_1,P_VALUE,swLogDump("R-TPDU : ");
524288,1073868799,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_softsim_2,P_VALUE,swLogDump("C-TPDU : ");
524288,1073870847,0,0,PS1,PS_DUMP,UiccTransLayerHandleCmdCase34_4,P_VALUE,swLogDump("R-TPDU : ");
524288,1073872895,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_2,P_INFO,swLogDump("STATUS command response : ");
524288,1073874943,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_3,P_INFO,swLogDump("STATUS command response : ");
524288,1073876991,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_4,P_INFO,swLogDump("Select USIM AID ( termiante ) response : ");
524288,1073879039,0,0,PS1,PS_DUMP,UiccPmuDeepSlpEnterCallBack_5,P_INFO,swLogDump("Select USIM AID ( termiante ) response : ");
524288,1073881087,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_1,P_INFO,swLogDump("cmd apdu : ");
524288,1073883135,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_2,P_INFO,swLogDump("response apdu : ");
524288,1073885183,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_3,P_INFO,swLogDump("cmd apdu : ");
524288,1073887231,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_4,P_INFO,swLogDump("response apdu : ");
524288,1073889279,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_5,P_INFO,swLogDump("cmd apdu : ");
524288,1073891327,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_6,P_INFO,swLogDump("response apdu : ");
524288,1073893375,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_7,P_INFO,swLogDump("cmd apdu : ");
524288,1073895423,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_8,P_INFO,swLogDump("response apdu : ");
524288,1073897471,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_9,P_INFO,swLogDump("cmd apdu : ");
524288,1073899519,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_10,P_INFO,swLogDump("response apdu : ");
524288,1073901567,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_11,P_INFO,swLogDump("cmd apdu : ");
524288,1073903615,0,0,PS1,PS_DUMP,UiccVerifyOtherSimAccessCase_12,P_INFO,swLogDump("response apdu : ");
524288,1073905663,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_1,P_INFO,swLogDump("cmd apdu : ");
524288,1073907711,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_2,P_INFO,swLogDump("response apdu : ");
524288,1073909759,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_3,P_INFO,swLogDump("cmd apdu : ");
524288,1073911807,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_4,P_INFO,swLogDump("response apdu : ");
524288,1073913855,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_5,P_INFO,swLogDump("cmd apdu : ");
524288,1073915903,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_6,P_INFO,swLogDump("response apdu : ");
524288,1073917951,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_7,P_INFO,swLogDump("cmd apdu : ");
524288,1073919999,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_8,P_INFO,swLogDump("response apdu : ");
524288,1073922047,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_9,P_INFO,swLogDump("cmd apdu : ");
524288,1073924095,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_10,P_INFO,swLogDump("response apdu : ");
524288,1073926143,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_11,P_INFO,swLogDump("cmd apdu : ");
524288,1073928191,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_12,P_INFO,swLogDump("response apdu : ");
524288,1073930239,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_13,P_INFO,swLogDump("cmd apdu : ");
524288,1073932287,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_14,P_INFO,swLogDump("response apdu : ");
524288,1073934335,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_15,P_INFO,swLogDump("cmd apdu : ");
524288,1073936383,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_16,P_INFO,swLogDump("response apdu : ");
524288,1073938431,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_17,P_INFO,swLogDump("cmd apdu : ");
524288,1073940479,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_18,P_INFO,swLogDump("response apdu : ");
524288,1073942527,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_19,P_INFO,swLogDump("cmd apdu : ");
524288,1073944575,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_20,P_INFO,swLogDump("response apdu : ");
524288,1073946623,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_21,P_INFO,swLogDump("cmd apdu : ");
524288,1073948671,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_22,P_INFO,swLogDump("response apdu : ");
524288,1073950719,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_23,P_INFO,swLogDump("cmd apdu : ");
524288,1073952767,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_24,P_INFO,swLogDump("response apdu : ");
524288,1073954815,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_25,P_INFO,swLogDump("cmd apdu : ");
524288,1073956863,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_26,P_INFO,swLogDump("response apdu : ");
524288,1073958911,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_27,P_INFO,swLogDump("cmd apdu : ");
524288,1073960959,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_28,P_INFO,swLogDump("response apdu : ");
524288,1073963007,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_29,P_INFO,swLogDump("cmd apdu : ");
524288,1073965055,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_30,P_INFO,swLogDump("response apdu : ");
524288,1073967103,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_31,P_INFO,swLogDump("cmd apdu : ");
524288,1073969151,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_32,P_INFO,swLogDump("response apdu : ");
524288,1073971199,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_33,P_INFO,swLogDump("cmd apdu : ");
524288,1073973247,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_34,P_INFO,swLogDump("response apdu : ");
524288,1073975295,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_35,P_INFO,swLogDump("cmd apdu : ");
524288,1073977343,0,0,PS1,PS_DUMP,UiccVerifyUsimAppInitCase_36,P_INFO,swLogDump("response apdu : ");
524288,1073979391,0,0,PS1,PS_DUMP,CatMacDlProcCephyDlDataIndSig_dump_discard,P_VALUE,swLogDump("DISCARD MAC DL PDU : ");
524288,1073981439,0,0,PS1,PS_DUMP,CatMacDlProcCephyDlDataIndSig_dump_1,P_VALUE,swLogDump("MAC DL PDU : ");
524288,1073983487,0,0,PS1,PS_DUMP,CatMacDlProcCephyDlDataIndSig_dump_2,P_VALUE,swLogDump("DISCARD MAC DL PDU : ");
524288,1073985535,0,0,PS1,PS_DUMP,CatMacUlSegPduCheck_1,P_VALUE,swLogDump("MAC UL PDU : ");
524288,1073987583,0,0,PS1,PS_DUMP,CerrcBootCheckPagingUeIdentity_wrongImsi,P_VALUE,swLogDump("Mismatch UE IMSI : ");
524288,1073989631,0,0,PS1,PS_DUMP,CerrcBootUpDueToPaging_data,P_VALUE,swLogDump("Normal Paging : ");
532480,1090523135,0,0,PS1,LTE_RRC_BCCH_BCH_DUMP,EcommDumpErrcMessage_MIB,P_SIG,swLogDumpPolling("MIB ");
533504,1092620287,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB2,P_SIG,swLogDumpPolling("SIB2 ");
533504,1092622335,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB3,P_SIG,swLogDumpPolling("SIB3 ");
533504,1092624383,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB4,P_SIG,swLogDumpPolling("SIB4 ");
533504,1092626431,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB5,P_SIG,swLogDumpPolling("SIB5 ");
533504,1092628479,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB14,P_SIG,swLogDumpPolling("SIB14 -- EAB parameters ");
533504,1092630527,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB16,P_SIG,swLogDumpPolling("SIB16 -- GPS time and UTC ");
533504,1092632575,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB10,P_SIG,swLogDumpPolling("SIB10 -- ETWS primary notification ");
533504,1092634623,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB11,P_SIG,swLogDumpPolling("SIB11 -- ETWS secondary notification ");
533504,1092636671,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB12,P_SIG,swLogDumpPolling("SIB12 -- CMAS notification ");
533504,1092638719,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB6,P_SIG,swLogDumpPolling("SIB6 -- UTRA cell re-selection information ");
533504,1092640767,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB7,P_SIG,swLogDumpPolling("SIB7 -- GERAN cell re-selection information ");
533504,1092642815,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB8,P_SIG,swLogDumpPolling("SIB8 -- CDMA2000 cell re-selection information ");
533504,1092644863,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB9,P_SIG,swLogDumpPolling("SIB9 -- home eNB name ");
533504,1092646911,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB13,P_SIG,swLogDumpPolling("SIB13 ");
533504,1092648959,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB15,P_SIG,swLogDumpPolling("SIB15 ");
533504,1092651007,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB17,P_SIG,swLogDumpPolling("SIB17 ");
533504,1092653055,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB18,P_SIG,swLogDumpPolling("SIB18 ");
533504,1092655103,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB19,P_SIG,swLogDumpPolling("SIB19 ");
533504,1092657151,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB20,P_SIG,swLogDumpPolling("SIB20 ");
533504,1092659199,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB21,P_SIG,swLogDumpPolling("SIB21 ");
533504,1092661247,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SI,P_SIG,swLogDumpPolling("Unsupported BCCH_Message ");
533504,1092663295,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_SIB1,P_SIG,swLogDumpPolling("SIB1 ");
533504,1092665343,0,0,PS1,LTE_RRC_BCCH_DL_SCH_DUMP,EcommDumpErrcMessage_Bcch,P_SIG,swLogDumpPolling("Invalid BCCH_Message ");
535552,1096814591,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_Reest,P_SIG,swLogDumpPolling("RrcConnectionReestablishment ");
535552,1096816639,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_ReestRej,P_SIG,swLogDumpPolling("RrcConnectionReestablishmentReject ");
535552,1096818687,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_ConnRej,P_SIG,swLogDumpPolling("RrcConnectionReject ");
535552,1096820735,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_Setup,P_SIG,swLogDumpPolling("RrcConnectionSetup ");
535552,1096822783,0,0,PS1,LTE_RRC_DL_CCCH_DUMP,EcommDumpErrcMessage_DlCcch,P_SIG,swLogDumpPolling("Invalid DL_CCCH_Message ");
536576,1098911743,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_DlTrans,P_SIG,swLogDumpPolling("DlInformationTransfer ");
536576,1098913791,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Recfg,P_SIG,swLogDumpPolling("RrcConnectionReconfiguration ");
536576,1098915839,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Rel,P_SIG,swLogDumpPolling("RrcConnectionRelease ");
536576,1098917887,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_SMC,P_SIG,swLogDumpPolling("SecurityModeCommand ");
536576,1098919935,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Cap,P_SIG,swLogDumpPolling("UeCapabilityEnquiry ");
536576,1098921983,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Count,P_SIG,swLogDumpPolling("CounterCheck ");
536576,1098924031,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_Rsm,P_SIG,swLogDumpPolling("RrcConnectionResume ");
536576,1098926079,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_UeInfo,P_SIG,swLogDumpPolling("UeInformationRequest ");
536576,1098928127,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_LogMeas,P_SIG,swLogDumpPolling("LoggedMeasurementConfiguration ");
536576,1098930175,0,0,PS1,LTE_RRC_DL_DCCH_DUMP,EcommDumpErrcMessage_DlDcch,P_SIG,swLogDumpPolling("Unsupported DL_DCCH_Message ");
537600,1101008895,0,0,PS1,LTE_RRC_DL_PCCH_DUMP,EcommDumpErrcMessage_Paging,P_VALUE,swLogDumpPolling("Paging ");
537600,1101010943,0,0,PS1,LTE_RRC_DL_PCCH_DUMP,EcommDumpErrcMessage_PagingSig,P_SIG,swLogDumpPolling("Paging ");
539648,1105203199,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_ReestReq,P_SIG,swLogDumpPolling("RrcConnectionReestablishmentRequest ");
539648,1105205247,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_ConnReq,P_SIG,swLogDumpPolling("RrcConnectionRequest ");
539648,1105207295,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_UlCcch,P_SIG,swLogDumpPolling("Invalid UL_CCCH_Message ");
539648,1105209343,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_RsmReq,P_SIG,swLogDumpPolling("RrcConnectionResumeRequest ");
539648,1105211391,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_UlCcch2,P_SIG,swLogDumpPolling("Invalid UL_CCCH_Message ");
539648,1105213439,0,0,PS1,LTE_RRC_UL_CCCH_DUMP,EcommDumpErrcMessage_UlCcch1,P_SIG,swLogDumpPolling("Invalid UL_CCCH_Message ");
540672,1107300351,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_MR,P_SIG,swLogDumpPolling("MeasurementReport ");
540672,1107302399,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_RecfgComp,P_SIG,swLogDumpPolling("RrcConnectionReconfigurationComplete ");
540672,1107304447,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_ReestComp,P_SIG,swLogDumpPolling("RrcConnectionReestablishmentComplete ");
540672,1107306495,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_SetupComp,P_SIG,swLogDumpPolling("RrcConnectionSetupComplete ");
540672,1107308543,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_SMComp,P_SIG,swLogDumpPolling("SecurityModeComplete ");
540672,1107310591,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_SMF,P_SIG,swLogDumpPolling("SecurityModeFailure ");
540672,1107312639,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_Cap,P_SIG,swLogDumpPolling("UeCapabilityInformation ");
540672,1107314687,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UlTrans,P_SIG,swLogDumpPolling("UlInformationTransfer ");
540672,1107316735,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_CountRsp,P_SIG,swLogDumpPolling("CounterCheckResponse ");
540672,1107318783,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UeInfoRsp,P_SIG,swLogDumpPolling("UeInformationResponse ");
540672,1107320831,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_ProInd,P_SIG,swLogDumpPolling("ProximityIndication ");
540672,1107322879,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_Rstd,P_SIG,swLogDumpPolling("InterFreqRSTDMeasurementIndication ");
540672,1107324927,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UlDcch,P_SIG,swLogDumpPolling("Unsupported UL_DCCH_Message ");
540672,1107326975,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_RsmComp,P_SIG,swLogDumpPolling("RrcConnectionResumeComplete ");
540672,1107329023,0,0,PS1,LTE_RRC_UL_DCCH_DUMP,EcommDumpErrcMessage_UlDcch2,P_SIG,swLogDumpPolling("Unsupported UL_DCCH_Message ");
541696,1109397503,0,0,PS1,LTE_RRC_VAR_MEASCONFIG_DUMP,EcommDumpErrcMessage_VarMeasConfig,P_VALUE,swLogDumpPolling("VarMeasConfig ");
543744,1113591807,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_1,P_SIG,swLogDumpPolling("Sending ATTACH_REQUEST : ");
543744,1113593855,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_2,P_SIG,swLogDumpPolling("Receiving ATTACH_ACCEPT : ");
543744,1113595903,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_3,P_SIG,swLogDumpPolling("Sending ATTACH_COMPLETE : ");
543744,1113597951,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_4,P_SIG,swLogDumpPolling("Receiving ATTACH_REJECT : ");
543744,1113599999,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_5,P_SIG,swLogDumpPolling("Sending DETACH_REQUEST : ");
543744,1113602047,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_6,P_SIG,swLogDumpPolling("Receiving DETACH_REQUEST : ");
543744,1113604095,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_7,P_SIG,swLogDumpPolling("Sending DETACH_ACCEPT : ");
543744,1113606143,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_8,P_SIG,swLogDumpPolling("Receiving DETACH_ACCEPT : ");
543744,1113608191,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_9,P_SIG,swLogDumpPolling("Sending TA_UPDATE_REQUEST : ");
543744,1113610239,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_10,P_SIG,swLogDumpPolling("Receiving TA_UPDATE_ACCEPT : ");
543744,1113612287,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_11,P_SIG,swLogDumpPolling("Sending TA_UPDATE_COMPLETE : ");
543744,1113614335,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_12,P_SIG,swLogDumpPolling("Receiving TA_UPDATE_REJECT : ");
543744,1113616383,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_13,P_SIG,swLogDumpPolling("Sending EXTENDED_SERVICE_REQUEST : ");
543744,1113618431,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_14,P_SIG,swLogDumpPolling("Sending CONTROL_PLANE_SERVICE_REQUEST : ");
543744,1113620479,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_15,P_SIG,swLogDumpPolling("Receiving SERVICE_REJECT : ");
543744,1113622527,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_16,P_SIG,swLogDumpPolling("Receiving SERVICE_ACCEPT : ");
543744,1113624575,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_17,P_SIG,swLogDumpPolling("Receiving GUTI_REALLOC_COMMAND : ");
543744,1113626623,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_18,P_SIG,swLogDumpPolling("Sending GUTI_REALLOC_COMPLETE : ");
543744,1113628671,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_19,P_SIG,swLogDumpPolling("Receiving AUTHENTICATION_REQUEST : ");
543744,1113630719,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_20,P_SIG,swLogDumpPolling("Sending AUTHENTICATION_RESPONSE : ");
543744,1113632767,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_21,P_SIG,swLogDumpPolling("Receiving AUTHENTICATION_REJECT : ");
543744,1113634815,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_22,P_SIG,swLogDumpPolling("Sending AUTHENTICATION_FAILURE : ");
543744,1113636863,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_23,P_SIG,swLogDumpPolling("Receiving IDENTITY_REQUEST : ");
543744,1113638911,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_24,P_SIG,swLogDumpPolling("Sending IDENTITY_RESPONSE : ");
543744,1113640959,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_25,P_SIG,swLogDumpPolling("Receiving SECURITY_MODE_COMMAND : ");
543744,1113643007,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_26,P_SIG,swLogDumpPolling("Sending SECURITY_MODE_COMPLETE : ");
543744,1113645055,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_27,P_SIG,swLogDumpPolling("Sending SECURITY_MODE_REJECT : ");
543744,1113647103,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_28,P_SIG,swLogDumpPolling("Sending EMM_STATUS : ");
543744,1113649151,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_29,P_SIG,swLogDumpPolling("Receiving EMM_STATUS : ");
543744,1113651199,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_30,P_SIG,swLogDumpPolling("Receiving EMM_INFORMATION : ");
543744,1113653247,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEmmMessageType_35,P_SIG,swLogDumpPolling("Sending SERVICE_REQUEST : ");
543744,1113655295,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_1,P_SIG,swLogDumpPolling("Receiving ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST : ");
543744,1113657343,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_2,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_ACCEPT : ");
543744,1113659391,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_3,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REJECT : ");
543744,1113661439,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_4,P_SIG,swLogDumpPolling("Receiving ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REQUEST : ");
543744,1113663487,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_5,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_ACCEPT : ");
543744,1113665535,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_6,P_SIG,swLogDumpPolling("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REJECT : ");
543744,1113667583,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_7,P_SIG,swLogDumpPolling("Receiving MODIFY_EPS_BEARER_CONTEXT_REQUEST : ");
543744,1113669631,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_8,P_SIG,swLogDumpPolling("Sending MODIFY_EPS_BEARER_CONTEXT_ACCEPT : ");
543744,1113671679,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_9,P_SIG,swLogDumpPolling("Sending MODIFY_EPS_BEARER_CONTEXT_REJECT : ");
543744,1113673727,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_10,P_SIG,swLogDumpPolling("Receiving DEACTIVATE_EPS_BEARER_CONTEXT_REQUEST : ");
543744,1113675775,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_11,P_SIG,swLogDumpPolling("Sending DEACTIVATE_EPS_BEARER_CONTEXT_ACCEPT : ");
543744,1113677823,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_12,P_SIG,swLogDumpPolling("Sending PDN_CONNECTIVITY_REQUEST : ");
543744,1113679871,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_13,P_SIG,swLogDumpPolling("Receiving PDN_CONNECTIVITY_REJECT : ");
543744,1113681919,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_14,P_SIG,swLogDumpPolling("Sending PDN_DISCONNECT_REQUEST : ");
543744,1113683967,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_15,P_SIG,swLogDumpPolling("Receiving PDN_DISCONNECT_REJECT : ");
543744,1113686015,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_16,P_SIG,swLogDumpPolling("Sending BEARER_RESOURCE_ALLOCATION_REQUEST : ");
543744,1113688063,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_17,P_SIG,swLogDumpPolling("Receiving BEARER_RESOURCE_ALLOCATION_REJECT : ");
543744,1113690111,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_18,P_SIG,swLogDumpPolling("Sending BEARER_RESOURCE_MODIFICATION_REQUEST : ");
543744,1113692159,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_19,P_SIG,swLogDumpPolling("Receiving BEARER_RESOURCE_MODIFICATION_REJECT : ");
543744,1113694207,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_20,P_SIG,swLogDumpPolling("Receiving ESM_INFORMATION_REQUEST : ");
543744,1113696255,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_21,P_SIG,swLogDumpPolling("Sending ESM_INFORMATION_RESPONSE : ");
543744,1113698303,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_22,P_SIG,swLogDumpPolling("Receiving ESM_NOTIFICATION : ");
543744,1113700351,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_23,P_SIG,swLogDumpPolling("Sending ESM_DUMMY_MESSAGE : ");
543744,1113702399,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_24,P_SIG,swLogDumpPolling("Receiving ESM_DUMMY_MESSAGE : ");
543744,1113704447,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_25,P_SIG,swLogDumpPolling("Sending ESM_STATUS : ");
543744,1113706495,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_26,P_SIG,swLogDumpPolling("Receiving ESM_STATUS : ");
543744,1113708543,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_27,P_SIG,swLogDumpPolling("Sending REMOTE_UE_REPORT : ");
543744,1113710591,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_28,P_SIG,swLogDumpPolling("Receiving REMOTE_UE_REPORT_RESPONSE : ");
543744,1113712639,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_29,P_SIG,swLogDumpPolling("Sending ESM_DATA_TRANSPORT : ");
543744,1113714687,0,0,PS1,EPS_PLAIN_DUMP,EcnbDumpEsmMessageType_30,P_SIG,swLogDumpPolling("Receiving ESM_DATA_TRANSPORT : ");
543744,1113716735,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_2,P_SIG,swLogDumpPolling("Receiving CLOSE_UE_TEST_LOOP ");
543744,1113718783,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_4,P_SIG,swLogDumpPolling("Sending CLOSE_UE_TEST_LOOP_COMPLETE ");
543744,1113720831,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_6,P_SIG,swLogDumpPolling("Receiving OPEN_UE_TEST_LOOP ");
543744,1113722879,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_8,P_SIG,swLogDumpPolling("Sending OPEN_UE_TEST_LOOP_COMPLETE ");
543744,1113724927,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_10,P_SIG,swLogDumpPolling("Receiving ACTIVATE_TEST_MODE ");
543744,1113726975,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_12,P_SIG,swLogDumpPolling("Sending ACTIVATE_TEST_MODE_COMPLETE ");
543744,1113729023,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_14,P_SIG,swLogDumpPolling("Receiving DEACTIVATE_TEST_MODE ");
543744,1113731071,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_16,P_SIG,swLogDumpPolling("Sending DEACTIVATE_TEST_MODE_COMPLETE ");
543744,1113733119,0,0,PS1,EPS_PLAIN_DUMP,EcnbTraceTcMessageType_18,P_SIG,swLogDumpPolling("Receiving RESET_UE_POSITIONING_STORED_INFORMATION ");
555008,1136658944,0,0,PS1,PS,PsNvmRead_1,P_WARNING,swLogPrintf("PS NVM , NVM file : %d , file size ( %d ) ! = input buffer size ( %d ) , can ' t read NVM ");
555008,1136660481,0,0,PS1,PS,PsNvmRead_osa_w_1,P_WARNING,swLogPrintf("PS NVM , NVM file : %s , can ' t read , using default value ");
555008,1136663041,0,0,PS1,PS,PsNvmRead_ver_w_1,P_WARNING,swLogPrintf("PS NVM , read NVM file : %s , version in NVM : %d , but curVersion : %d , reset to default value ");
555008,1136665345,0,0,PS1,PS,PsNvmRead_size_w_1,P_WARNING,swLogPrintf("PS NVM , read NVM file : %s , read pBuf : 0x%x , readSize : %d , wantedSize : %d , reset to default value ");
555008,1136667136,0,0,PS1,PS,PsNvmWrite_1,P_ERROR,swLogPrintf("PS NVM , NVM file ID : %d , file size ( %d ) ! = input buffer size ( %d ) , can ' t write NVM ");
555008,1136668929,0,0,PS1,PS,PsNvmSave_1,P_SIG,swLogPrintf("PS NVM , File : %s , id : %d , need to write back to flash ");
555008,1136670976,0,0,PS1,PS,HmacSha256Sct_key_w_1,P_WARNING,swLogPrintf("PS , SHA256 calc HMAC key failed : %d , inputLen : %d ");
555008,1136673024,0,0,PS1,PS,HmacSha256Sct_calc_w_1,P_WARNING,swLogPrintf("PS , HMAX SHA 256 SCT calc failed : %d , inputLen : %d ");
555008,1136675072,0,0,PS1,PS,HmacSha256Sct_calc_w_2,P_WARNING,swLogPrintf("PS , HMAX SHA 256 SCT final calc failed : %d , inputLen : %d ");
555008,1136678911,0,0,PS1,PS,HmacSha256_sct_w_1,P_WARNING,swLogPrintf("PS , can ' t calc HMAC by SCT , try calc by software ");
555008,1136678912,0,0,PS1,PS,PsTftRouteUlPkg_ipver_w_1,P_WARNING,swLogPrintf("PS , invalid ipVer : %d , when check TFT ");
555008,1136681216,0,0,PS1,PS,PsTftRouteUlPkg_ipv4_w_1,P_WARNING,swLogPrintf("PS , pkg length : %d < ipv4 hdr length : %d , maybe segment ");
555008,1136683264,0,0,PS1,PS,PsTftRouteUlPkg_ipv6_w_1,P_WARNING,swLogPrintf("PS , pkg length : %d < ipv6 hdr length : %d , maybe segment ");
555008,1136685568,0,0,PS1,PS,PsTftRouteUlPkg_ip_udp_w_1,P_WARNING,swLogPrintf("PS , pkg length : %d < ip hdr length : %d + udp hdr length : %d , maybe segment ");
555008,1136687616,0,0,PS1,PS,PsTftRouteUlPkg_ip_tcp_w_1,P_WARNING,swLogPrintf("PS , pkg length : %d < ip hdr length : %d + tcp hdr length : %d , maybe segment ");
555008,1136689664,0,0,PS1,PS,PsTftRouteUlPkg_ip_esp_w_1,P_WARNING,swLogPrintf("PS , pkg length : %d < ip hdr length : %d + esp hdr length : %d , maybe segment ");
555008,1136691456,0,0,PS1,PS,PsTftRouteUlPkg_debug_1,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , dir : %d , not for UL ");
555008,1136693504,0,0,PS1,PS,PsTftRouteUlPkg_debug_2,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote ipv4 , but pkg not IPv4 type : %d ");
555008,1136696320,0,0,PS1,PS,PsTftRouteUlPkg_debug_3,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote i : %d ipv4 : %d , mask : %d , but pkg ipv4 daddr : %d ");
555008,1136697856,0,0,PS1,PS,PsTftRouteUlPkg_debug_4,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote iptype : %d , but current pkg not ipv6 : %d ");
555008,1136700416,0,0,PS1,PS,PsTftRouteUlPkg_debug_5,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote i : %d ipv6 : %d , mask : %d , but pkg ipv6 daddr : %d ");
555008,1136702464,0,0,PS1,PS,PsTftRouteUlPkg_debug_6,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote i : %d ipv6 : %d , prefixmask : %d , but pkg ipv6 daddr : %d ");
555008,1136704000,0,0,PS1,PS,PsTftRouteUlPkg_debug_7,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , protId : %d , pkg protId : %d ");
555008,1136706304,0,0,PS1,PS,PsTftRouteUlPkg_debug_7_1,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , ipv4 tc : 0x%x , mask : 0x%x , pkg tc : 0x%x ");
555008,1136708352,0,0,PS1,PS,PsTftRouteUlPkg_debug_8,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , ipv6 tc : 0x%x , mask : 0x%x , pkg tc : 0x%x ");
555008,1136710144,0,0,PS1,PS,PsTftRouteUlPkg_debug_9,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , ipv6 FL : 0x%lx , pkg FL : 0x%lx ");
555008,1136712448,0,0,PS1,PS,PsTftRouteUlPkg_debug_10,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , localport : 0x%lx , 0x%lx , UDP pkg sport : 0x%lx ");
555008,1136714496,0,0,PS1,PS,PsTftRouteUlPkg_debug_11,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , localport : 0x%lx , 0x%lx , TCP pkg sport : 0x%lx ");
555008,1136716288,0,0,PS1,PS,PsTftRouteUlPkg_debug_12,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , localport : 0x%lx , 0x%lx , but not UDP / TCP ");
555008,1136718592,0,0,PS1,PS,PsTftRouteUlPkg_debug_13,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remoteport : 0x%lx , 0x%lx , UDP pkg dport : 0x%lx ");
555008,1136720640,0,0,PS1,PS,PsTftRouteUlPkg_debug_14,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remoteport : 0x%lx , 0x%lx , TCP pkg dport : 0x%lx ");
555008,1136722432,0,0,PS1,PS,PsTftRouteUlPkg_debug_15,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remoteport : 0x%lx , 0x%lx , but not UDP / TCP ");
555008,1136724480,0,0,PS1,PS,PsTftRouteUlPkg_debug_16,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , ESP SPI : 0x%lx , PKG SPI : 0x%lx ");
555008,1136726016,0,0,PS1,PS,PsTftRouteUlPkg_ip_sec_w_1,P_WARNING,swLogPrintf("PS , TFT IP sec needed , but not support IP Proto : %d ");
555008,1136728064,0,0,PS1,PS,PsTftRouteUlPkg_match_1,P_INFO,swLogPrintf("PS , TFT packet filter matched , UL to CID : %d ");
555008,1136730112,0,0,PS1,PS,PsTftRouteUlPkg_ipv4_def_1,P_INFO,swLogPrintf("PS , no TFT matched , UL to default IPv4 CID : %d ");
555008,1136732160,0,0,PS1,PS,PsTftRouteUlPkg_ipv6_def_1,P_INFO,swLogPrintf("PS , no TFT matched , UL to default IPv6 CID : %d ");
555008,1136736255,0,0,PS1,PS,PsTftRouteUlPkg_discard_1,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , can ' t send this PDU ");
555008,1136736256,0,0,PS1,PS,PsTftRouteUlPkg_ipv6_def_2,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , for safe , UL to default IPv6 CID : %d ");
555008,1136738304,0,0,PS1,PS,PsTftRouteUlPkg_ipv4_def_2,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , for safe , UL to default IPv4 CID : %d ");
555008,1136741120,0,0,PS1,PS,PsUlDataBeOutDate_1,P_WARNING,swLogPrintf("PS , UL PDU out of date , tickType : %d , curtick : 0x%lx , endtick : 0x%lx , bMustDiscard : %d ");
555008,1136744447,0,0,PS1,PS,PsClearUlPendingPduList_1,P_WARNING,swLogPrintf("PS , discard one UL PKG , as out of date ");
555008,1136744960,0,0,PS1,PS,PsClearUlPendingPduList_2,P_WARNING,swLogPrintf("PS , UL only could pending ( %d ) pkg , or ( %d ) bytes , discard one old pkg with len : %d ");
555008,1136746496,0,0,PS1,PS,PsDlPkgAlloc_1,P_WARNING,swLogPrintf("PS DL MEM , want size : %d > MAX ( PS_DL_PKG_MEM_DATA_MAX_SIZE ) , ERROR ! ");
555008,1136748544,0,0,PS1,PS,PsDlPkgAlloc_high_w_1,P_WARNING,swLogPrintf("PS DL MEM , = = = high water : %d = = = ");
555008,1136750848,0,0,PS1,PS,PsDlPkgAlloc_w_2,P_WARNING,swLogPrintf("PS DL MEM , no mem allocated for size : %d , bShort : %d ");
555008,1136752896,0,0,PS1,PS,PsSlp2Malloc_w_1,P_WARNING,swLogPrintf("PS SLP2 HEAP , no memory left , want : %d , left : %d ");
555008,1136754944,0,0,PS1,PS,PsTinyVarAddrInit_lwip_1,P_VALUE,swLogPrintf("TCPIP tiny RAM , used : %d , MAX : %d ");
555008,1136756992,0,0,PS1,PS,PsTinyVarAddrInit_rrc_1,P_VALUE,swLogPrintf("RRC tiny RAM , used : %d , MAX : %d ");
555008,1136759040,0,0,PS1,PS,PsTinyVarAddrInit_ps2_1,P_VALUE,swLogPrintf("PS tiny RAM 2 , used : %d , MAX : %d ");
555008,1136761088,0,0,PS1,PS,PsL1BootVarAddrInit_1,P_VALUE,swLogPrintf("RRC Boot tiny RAM , used : %d , MAX : %d ");
555008,1136763136,0,0,PS1,PS,PsSleep2VarAddrInit_1,P_VALUE,swLogPrintf("RRC Sleep2 RAM , used : %d , MAX : %d ");
555008,1136765184,0,0,PS1,PS,PsL1TinyVarAddrInit_rrc_1,P_VALUE,swLogPrintf("RRCL1 tiny RAM , used : %d , MAX : %d ");
555008,1136766976,0,0,PS1,PS,PsifTftRouteUlPkg_ipver_w_1,P_WARNING,swLogPrintf("PS , invalid ipVer : %d , when check TFT ");
555008,1136769280,0,0,PS1,PS,PsifTftRouteUlPkg_debug_1,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , dir : %d , not for UL ");
555008,1136771328,0,0,PS1,PS,PsifTftRouteUlPkg_debug_2,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote ipv4 , but pkg not IPv4 type : %d ");
555008,1136774144,0,0,PS1,PS,PsifTftRouteUlPkg_debug_3,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote i : %d ipv4 : %d , mask : %d , but pkg ipv4 daddr : %d ");
555008,1136775680,0,0,PS1,PS,PsifTftRouteUlPkg_debug_4,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote iptype : %d , but current pkg not ipv6 : %d ");
555008,1136778240,0,0,PS1,PS,PsifTftRouteUlPkg_debug_5,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote i : %d ipv6 : %d , mask : %d , but pkg ipv6 daddr : %d ");
555008,1136780288,0,0,PS1,PS,PsifTftRouteUlPkg_debug_6,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remote i : %d ipv6 : %d , prefixmask : %d , but pkg ipv6 daddr : %d ");
555008,1136781824,0,0,PS1,PS,PsifTftRouteUlPkg_debug_7,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , protId : %d , pkg protId : %d ");
555008,1136784128,0,0,PS1,PS,PsifTftRouteUlPkg_debug_7_1,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , ipv4 tc : 0x%x , mask : 0x%x , pkg tc : 0x%x ");
555008,1136785920,0,0,PS1,PS,PsifTftRouteUlPkg_debug_9,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , ipv6 FL : 0x%lx , pkg FL : 0x%lx ");
555008,1136788224,0,0,PS1,PS,PsifTftRouteUlPkg_debug_10,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , localport : 0x%lx , 0x%lx , UDP pkg sport : 0x%lx ");
555008,1136790016,0,0,PS1,PS,PsifTftRouteUlPkg_debug_12,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , localport : 0x%lx , 0x%lx , but not UDP / TCP ");
555008,1136792320,0,0,PS1,PS,PsifTftRouteUlPkg_debug_13,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remoteport : 0x%lx , 0x%lx , UDP pkg dport : 0x%lx ");
555008,1136794112,0,0,PS1,PS,PsifTftRouteUlPkg_debug_15,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , remoteport : 0x%lx , 0x%lx , but not UDP / TCP ");
555008,1136796160,0,0,PS1,PS,PsifTftRouteUlPkg_debug_16,P_DEBUG,swLogPrintf("PS , TFT filter evID : %d , ESP SPI : 0x%lx , PKG SPI : 0x%lx ");
555008,1136797696,0,0,PS1,PS,PsifTftRouteUlPkg_ip_sec_w_1,P_WARNING,swLogPrintf("PS , TFT IP sec needed , but not support IP Proto : %d ");
555008,1136799744,0,0,PS1,PS,PsifTftRouteUlPkg_match_1,P_INFO,swLogPrintf("PS , TFT packet filter matched , UL to CID : %d ");
555008,1136801792,0,0,PS1,PS,PsifTftRouteUlPkg_ipv4_def_1,P_INFO,swLogPrintf("PS , no TFT matched , UL to default IPv4 CID : %d ");
555008,1136803840,0,0,PS1,PS,PsifTftRouteUlPkg_ipv6_def_1,P_INFO,swLogPrintf("PS , no TFT matched , UL to default IPv6 CID : %d ");
555008,1136805888,0,0,PS1,PS,PsifTftRouteUlPkg_ipv6_def_2,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , for safe , UL to default IPv6 CID : %d ");
555008,1136807936,0,0,PS1,PS,PsifTftRouteUlPkg_ipv4_def_2,P_WARNING,swLogPrintf("PS , no TFT matched , and default bearer has TFT , for safe , UL to default IPv4 CID : %d ");
555008,1136810241,0,0,PS1,PS,PsCfgReadUeConfig_w_1,P_WARNING,swLogPrintf("PS NVM CFG , NVM file : %s , can ' t read , retId : %d , using default value ");
555008,1136812289,0,0,PS1,PS,PsCfgReadUeConfig_s_1,P_SIG,swLogPrintf("PS NVM CFG , NVM file : %s , read OK , bodySize : %d ");
556032,1138757631,0,0,PS1,PS_SIG_DUMP,DUMP_SIG_HEADER,P_INFO,swLogDumpPolling("Sig = > ");
556032,1138757888,0,0,PS1,PS_SIG_DUMP,PsRamLogSigDump_1,P_INFO,swLogPrintf("Signal : 0x%lx , is not large : %d > 512 , can ' t dump to RAM log ");
556032,1138761727,0,0,PS1,PS_SIG_DUMP,DUMP_FULL_SIGNAL,P_INFO,swLogDumpPolling("Sig = > ");
557056,1140854783,0,0,PS1,PS_INTER_MSG,DUMP_INTERNAL_MSG,P_INFO,swLogDumpPolling("Msg = > ");
558080,1142950144,0,0,PS1,UP,CatUpProcCephyTimerExpiryIndSig_1,P_VALUE,swLogPrintf("Timer expiry , userId : %d , timerId : 0x%x ");
558080,1142953983,0,0,PS1,UP,CatUpProcCcmSetTrafficIdleMonitorReqSig_1,P_INFO,swLogPrintf("Disable traffic idle monitor feature , stop trafficIdleMonitorTimerId. ");
558080,1142955009,0,0,PS1,UP,CatCheck_asset,P_ERROR,swLogPrintf("UP assert , func : %s , line : %d , v1 : 0x%x , v2 : 0x%x , v3 : 0x%x ");
558080,1142958079,0,0,PS1,UP,CeUpTaskEntry_1,P_VALUE,swLogPrintf("UP no RACH , and no LC , could enter HIB state ");
558080,1142960127,0,0,PS1,UP,CeUpTaskEntry_2,P_VALUE,swLogPrintf("UP no RACH , and no LC , could enter SLEEP2 state ");
558080,1142962175,0,0,PS1,UP,CeUpTaskEntry_3,P_VALUE,swLogPrintf("UP cannot enter HIB state ");
558080,1142964223,0,0,PS1,UP,CeUpTaskEntry_4,P_VALUE,swLogPrintf("UP cannot enter SLEEP2 state ");
559104,1145047296,0,0,PS1,MAC,CatMacDelLcFromLcGroup_1,P_ERROR,swLogPrintf("CAT MAC , can ' t del lc : %d from lc group : %d ");
559104,1145049088,0,0,PS1,MAC,CatMacDelLcFromLcGroup_2,P_ERROR,swLogPrintf("CAT MAC , can ' t find this lc group : %d ");
559104,1145051392,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_phr_setup,P_VALUE,swLogPrintf("CAT MAC , PHR or Extend PHR had been setup / modify : %d , %d ");
559104,1145053440,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_phr_release,P_VALUE,swLogPrintf("CAT MAC , PHR and Extend PHR had been release / invalid : %d , %d ");
559104,1145055488,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_1,P_INFO,swLogPrintf("CAT MAC , LC SR Prohibit Timer not changed : %d , %d ");
559104,1145057280,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_2,P_INFO,swLogPrintf("CAT MAC , LC SR Prohibit Timer setup / modify to : %d ");
559104,1145059328,0,0,PS1,MAC,CatMacProcMacMainConfigReqSig_3,P_INFO,swLogPrintf("CAT MAC , LC SR Prohibit Timer release / invalid : %d ");
559104,1145061376,0,0,PS1,MAC,CatMacLcConfigReq_lc_err,P_WARNING,swLogPrintf("LC : %d , logical channel had been configured , pls check! ");
559104,1145063680,0,0,PS1,MAC,CatMacLcConfigReq_priority0,P_SIG,swLogPrintf("LC : %d ; priority is not config , use default value : %d ");
559104,1145065728,0,0,PS1,MAC,CatMacLcConfigReq_priority1,P_SIG,swLogPrintf("LC : %d ; priority is not config , use default value : %d ");
559104,1145068032,0,0,PS1,MAC,CatMacLcConfigReq_1,P_SIG,swLogPrintf("LC : %d ; priority is changed from %d to %d ");
559104,1145070080,0,0,PS1,MAC,CatMacLcConfigReq_bj_warning,P_WARNING,swLogPrintf("LC : %d ; prioritisedBitRate is %d , bucketSizeDuration is %d ");
559104,1145071616,0,0,PS1,MAC,CatMacLcResumeSuspendReq_1,P_ERROR,swLogPrintf("CAT MAC , resume or suspend error lc : %d ");
559104,1145073664,0,0,PS1,MAC,CatMacProcMacResetReqSig_1,P_VALUE,swLogPrintf("CAT MAC RESET , cause : %d ");
559104,1145075968,0,0,PS1,MAC,CatMacProcMacResetCnfSig_1,P_WARNING,swLogPrintf("The lastest mac reset cause : %e<MacResetReason> , now rcv reset cause : %e<CatPhyMacResetReason> , ignore this sig! ");
559104,1145078272,0,0,PS1,MAC,CatMacPhyUlGrantInd_1,P_WARNING,swLogPrintf("CAT MAC , too many UL grant pending , insert index : %d , proc index : %d , just drop grant size : %d ");
559104,1145079808,0,0,PS1,MAC,CatMacDlDecodeMacCeAndSdu_0,P_WARNING,swLogPrintf("LC : %d , is not avaliable ");
559104,1145081856,0,0,PS1,MAC,CatMacDlDecodeMacCeAndSdu_1,P_VALUE,swLogPrintf("RCV TA CMD , TA VALUE : %d ");
559104,1145083904,0,0,PS1,MAC,CatMacDlDecodeMacCeAndSdu_2,P_VALUE,swLogPrintf("RCV DRX CMD , DRX TYPE : %d ");
559104,1145085952,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_crc_error,P_VALUE,swLogPrintf("MAC DL , harqId : %d , crc check error , DISCARD MAC DL PDU! ");
559104,1145088256,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_len_error,P_WARNING,swLogPrintf("MAC DL , harqId : %d , PDU length : %d , check error , discard it!!! ");
559104,1145090048,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_1,P_VALUE,swLogPrintf("DL CCCH PDU , Len : %d ");
559104,1145092352,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_unexpect_ccch_msg,P_WARNING,swLogPrintf("Ra Status is %d , discard this unexpect Dl CCCH Msg with len : %d ");
559104,1145094656,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_2,P_VALUE,swLogPrintf("MAC DL , harqId : %d , one DL RLC PDU , LCID : %d , Len : %d ");
559104,1145096192,0,0,PS1,MAC,CatMacDlProcCephyDlDataIndSig_3,P_WARNING,swLogPrintf("Too many : %d padding MAC PDU ..... ");
559104,1145100287,0,0,PS1,MAC,CatMacRaRandomAccessSucc_1,P_SIG,swLogPrintf("PRACH SUCC ");
559104,1145100288,0,0,PS1,MAC,CatMacRaProcPdcchOrderIndSig_1,P_WARNING,swLogPrintf("Another RACH is ongoing : %d ; ignore this PDCCH ORDER RA ");
559104,1145102336,0,0,PS1,MAC,CatMacRaProcPreambleTransMaxIndSig_1,P_WARNING,swLogPrintf("PRACH MAX Times : %d ");
559104,1145106431,0,0,PS1,MAC,CatMacRaProcRecvRARIndSig_warning,P_ERROR,swLogPrintf("UP BM Mem has not been initialized yet , re-init it and pls check! ");
559104,1145108479,0,0,PS1,MAC,CatMacRaProcRecvRARIndSig_1,P_VALUE,swLogPrintf("RAR received ; RA is not CR based ; RA succ... ");
559104,1145110527,0,0,PS1,MAC,CatMacRaProcRecvRARIndSig_2,P_WARNING,swLogPrintf("non-contention based , and grantSize is 0! ");
559104,1145112575,0,0,PS1,MAC,CatMacRaProcRachCancelIndSig_1,P_WARNING,swLogPrintf("RACH cannceled by PHY ");
559104,1145112576,0,0,PS1,MAC,CatMacRaRachReq_1,P_SIG,swLogPrintf("Trigger PRACH , cause : %d , CCCH ( 0 ) / PDCCH_ORDER ( 1 ) / HAND_OVER ( 2 ) / UL_DATA ( 3 ) ");
559104,1145114624,0,0,PS1,MAC,CatMacRaCRFailRetryRach_error,P_ERROR,swLogPrintf("During mac resetting , no more to retry rach with cause : %d ");
559104,1145116672,0,0,PS1,MAC,CatMacRaCRFailRetryRach_warn,P_WARNING,swLogPrintf("raStatus is %d maybe error , please check! ");
559104,1145118720,0,0,PS1,MAC,CatMacRaCRFailRetryRach_1,P_WARNING,swLogPrintf("RACH CR Failed : %d need to retry RACH ");
559104,1145120768,0,0,PS1,MAC,CatMacUlBeCancelZeroBSR_1,P_VALUE,swLogPrintf("CAT MAC UL , Rai Activation is %d , and zero BSR could be sent ");
559104,1145122816,0,0,PS1,MAC,CatMacUlBuildBSRCe_1,P_ERROR,swLogPrintf("CAT MAC , error bsrLcidType : %d ");
559104,1145126911,0,0,PS1,MAC,CatMacUlSendSchedulingRequestSig_SR_1,P_VALUE,swLogPrintf("MAC UL , scheduling request ");
559104,1145127424,0,0,PS1,MAC,CatMacUlOneLcScheduling_Cut_Bsr,P_VALUE,swLogPrintf("MAC UL , LCID : %d , should Cut Long BSR to Short , grant : %d , BSR grant : %d ");
559104,1145129472,0,0,PS1,MAC,CatMacUlOneLcScheduling_1,P_VALUE,swLogPrintf("MAC UL , LCID : %d , should BSR Cancel , grant : %d , BSR grant : %d ");
559104,1145131520,0,0,PS1,MAC,CatMacUlOneLcScheduling_2,P_VALUE,swLogPrintf("UL LCID : %d , assign grant : %d , total grant : %d ");
559104,1145133056,0,0,PS1,MAC,CatMacUlLcScheduling_1,P_WARNING,swLogPrintf("LC : %d ; is suspened ");
559104,1145135104,0,0,PS1,MAC,CatMacUlLcScheduling_3,P_WARNING,swLogPrintf("LC : %d ; is suspened ");
559104,1145137152,0,0,PS1,MAC,CatMacUlLcScheduling_2,P_WARNING,swLogPrintf("LC : %d ; is suspened ");
559104,1145139456,0,0,PS1,MAC,CatMacUlReConstructCrntiMsg3DataWithDiffGrant_1,P_WARNING,swLogPrintf("Retx msg3 with crnti , grantsize become bigger ( %d -> %d ) , for simplicity , just re-assemble mac hdr! ");
559104,1145141504,0,0,PS1,MAC,CatMacUlReConstructCrntiMsg3DataWithDiffGrant_2,P_WARNING,swLogPrintf("Retx msg3 with crnti , grantsize become smaller ( %d -> %d ) , for simplicity , just re-assemble mac hdr! ");
559104,1145145343,0,0,PS1,MAC,CatMacUlProcCcchDataReqSig_1,P_WARNING,swLogPrintf("Should no old CCCH MSG , pls check! ");
559104,1145145344,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_suspend,P_ERROR,swLogPrintf("LC : %d is suspend , should not send this data to MAC! ");
559104,1145147392,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_1,P_VALUE,swLogPrintf("BSR had been triggered , no need to trigger BSR on LC : %d again ");
559104,1145149440,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_2,P_WARNING,swLogPrintf("TA expiry , LC : %d , UL data trigger RACH... ");
559104,1145151488,0,0,PS1,MAC,CatMacUlLcDataBecomeAvaiable_3,P_WARNING,swLogPrintf("LC : %d , disable SR triggering for logicalChannelSR-Mask is True! ");
559104,1145154048,0,0,PS1,MAC,CatMacUlProcRetxBsrTimerExpiry_1,P_VALUE,swLogPrintf("pendingSr : %d , raStatus : %d , raCause : %d , Another Sr or Rach procedure is ongoing , nothing to do! ");
559104,1145157631,0,0,PS1,MAC,CatMacUlProcPeriodPHRTimerExpiry_1,P_VALUE,swLogPrintf("PeriodicPHR-Timer expires , PHR Trigger! ");
559104,1145159679,0,0,PS1,MAC,CatMacUlProcProhibitPHRTimerExpiry_1,P_SIG,swLogPrintf("PHR Trigger! ");
559104,1145161727,0,0,PS1,MAC,CatUpProcPsUpMemReInitReqIsrSig_1,P_ERROR,swLogPrintf("CAT UP , This signal should not be sent when L2 using ps up mem! ");
559104,1145163775,0,0,PS1,MAC,CatUpProcPsUpMemReInitReqIsrSig_2,P_SIG,swLogPrintf("CAT UP , Init Ps up mem. ");
559104,1145163776,0,0,PS1,MAC,CatUpResumeSuspendAllLcExceptSrb1_1,P_VALUE,swLogPrintf("bSuspend : %d , Resume ( 0 ) or Suspend ( 1 ) All Lc Except Srb1 ");
560128,1147144448,0,0,PS1,RLC,CatRlcAmLcSetupConfig_1,P_SIG,swLogPrintf("RLC AM , LCID : %d , pollPdu too large : 0x%x , cut to : 64 ");
560128,1147146496,0,0,PS1,RLC,CatRlcAmLcSetupConfig_2,P_SIG,swLogPrintf("RLC AM , LCID : %d , pollByte too large : 0x%x , cut to : 100 kB ");
560128,1147148544,0,0,PS1,RLC,CatRlcAmLcSetupConfig_3,P_SIG,swLogPrintf("RLC AM , LCID : %d , tPollRetransmit too long : %d , cut to : 50 ms ");
560128,1147150592,0,0,PS1,RLC,CatRlcAmLcSetupConfig_4,P_SIG,swLogPrintf("RLC AM , LCID : %d , maxRetxThreshold too large : %d , cut to : 16 ");
560128,1147152640,0,0,PS1,RLC,CatRlcAmLcSetupConfig_5,P_SIG,swLogPrintf("RLC AM , LCID : %d , tReordering too large : %d , cut to : 50 ms ");
560128,1147154688,0,0,PS1,RLC,CatRlcAmLcSetupConfig_6,P_SIG,swLogPrintf("RLC AM , LCID : %d , tStatusProhibit too long : %d , cut to : 50 ms ");
560128,1147156480,0,0,PS1,RLC,CatRlcAmLcModifyConfig_1,P_WARNING,swLogPrintf("LC : %d , Some Rlc parameters can ' t be modified , Please Check it! ");
560128,1147159040,0,0,PS1,RLC,CatRlcAmLcModifyConfig_pollPdu,P_WARNING,swLogPrintf("LC : %d , pollPdu has been modified from 0x%x to 0x%x! ");
560128,1147160832,0,0,PS1,RLC,CatRlcAmLcModifyConfig_2,P_SIG,swLogPrintf("RLC AM , LCID : %d , pollPdu too large : 0x%x , cut to : 64 ");
560128,1147163136,0,0,PS1,RLC,CatRlcAmLcModifyConfig_pollByte,P_SIG,swLogPrintf("LC : %d , pollByte has been modified from 0x%x to 0x%x! ");
560128,1147164928,0,0,PS1,RLC,CatRlcAmLcModifyConfig_3,P_SIG,swLogPrintf("RLC AM , LCID : %d , pollByte too large : 0x%x , cut to : 100 kB ");
560128,1147167232,0,0,PS1,RLC,CatRlcAmLcModifyConfig_tPollRetransmit,P_SIG,swLogPrintf("LC : %d , tPollRetransmit has been modified from %d to %d! ");
560128,1147169024,0,0,PS1,RLC,CatRlcAmLcModifyConfig_4,P_SIG,swLogPrintf("RLC AM , LCID : %d , tPollRetransmit too long : %d , cut to : 50 ms ");
560128,1147171328,0,0,PS1,RLC,CatRlcAmLcModifyConfig_maxRetxThreshold,P_SIG,swLogPrintf("LC : %d , maxRetxThreshold has been modified from %d to %d! ");
560128,1147173120,0,0,PS1,RLC,CatRlcAmLcModifyConfig_5,P_SIG,swLogPrintf("RLC AM , LCID : %d , maxRetxThreshold too large : %d , cut to : 16 ");
560128,1147175424,0,0,PS1,RLC,CatRlcAmLcModifyConfig_tReordering,P_SIG,swLogPrintf("LC : %d , tReordering has been modified from %d to %d! ");
560128,1147177216,0,0,PS1,RLC,CatRlcAmLcModifyConfig_6,P_SIG,swLogPrintf("RLC AM , LCID : %d , tReordering too large : %d , cut to : 50 ms ");
560128,1147179520,0,0,PS1,RLC,CatRlcAmLcModifyConfig_tStatusProhibit,P_SIG,swLogPrintf("LC : %d , tStatusProhibit has been modified from %d to %d! ");
560128,1147181312,0,0,PS1,RLC,CatRlcAmLcModifyConfig_7,P_SIG,swLogPrintf("RLC AM , LCID : %d , tStatusProhibit too long : %d , cut to : 50 ms ");
560128,1147183104,0,0,PS1,RLC,CatRlcUmBiDirLcModifyConfig_1,P_WARNING,swLogPrintf("LC : %d , Some Rlc parameters can ' t be modified , Please Check it! ");
560128,1147185664,0,0,PS1,RLC,CatRlcUmBiDirLcModifyConfig_tReordering,P_WARNING,swLogPrintf("LC : %d , tReordering has been modified from %d to %d! ");
560128,1147187200,0,0,PS1,RLC,CatRlcUmUniDirDlLcModifyConfig_1,P_WARNING,swLogPrintf("LC : %d , Some Rlc parameters can ' t be modified , Please Check it! ");
560128,1147189760,0,0,PS1,RLC,CatRlcUmUniDirDlLcModifyConfig_tReordering,P_WARNING,swLogPrintf("LC : %d , tReordering has been modified from %d to %d! ");
560128,1147191552,0,0,PS1,RLC,CatRlcLcConfigReq_0,P_ERROR,swLogPrintf("CAT RLC , rlc mode : %d can ' t config for SRB : %d , pls check! ");
560128,1147193344,0,0,PS1,RLC,CatRlcLcConfigReq_1,P_SIG,swLogPrintf("LC : %d , Nw Modify Rlc Configuration! ");
560128,1147195392,0,0,PS1,RLC,CatRlcLcConfigReq_2,P_WARNING,swLogPrintf("LC : %d , should not modify Rlc mode , Please Check it! ");
560128,1147197696,0,0,PS1,RLC,CatRlcLcConfigReq_3,P_WARNING,swLogPrintf("LC : %d , Rlc Mode : %d , not support modify Rlc parameters , Please Check it! ");
560128,1147201535,0,0,PS1,RLC,CatRlcAllLcReleaseInd_1,P_WARNING,swLogPrintf("ALL LC released ; but CONN_REL_ACKED_TIMER still running ; stop it ");
560128,1147203583,0,0,PS1,RLC,CatRlcAllLcReleaseInd_2,P_WARNING,swLogPrintf("ALL LC released ; but CONN_REL_ACK_SENT_TIMER still running ; stop it ");
560128,1147205631,0,0,PS1,RLC,CatRlcAllLcReleaseInd_3,P_VALUE,swLogPrintf("RLC aLL LC released ");
560128,1147205632,0,0,PS1,RLC,CatRlcProcDlRlcPduInd_1,P_ERROR,swLogPrintf("RLC UM LC : %d , only config ul mode , can ' t receive dl data , discard it!!! ");
560128,1147209727,0,0,PS1,RLC,CatRlcProcGrantInd_1,P_VALUE,swLogPrintf("RLC STATUS RPT for RrcConnectionRelease sent in this grant ");
560128,1147210240,0,0,PS1,RLC,CatRlcProcTimerExpiry_0,P_ERROR,swLogPrintf("AM RLC timer : 0x%x expiry ; LCID : %d ; timer Id : %d ; can ' t find the LC context , maybe released by nw ");
560128,1147212288,0,0,PS1,RLC,CatRlcProcTimerExpiry_1,P_ERROR,swLogPrintf("AM RLC timer : 0x%x expiry ; LCID : %d ; timer Id : %d ; can ' t find the LC context ");
560128,1147214336,0,0,PS1,RLC,CatRlcProcTimerExpiry_2,P_ERROR,swLogPrintf("UM RLC timer : 0x%x expiry ; LCID : %d ; timer Id : %d ; can ' t find the LC context ");
560128,1147215872,0,0,PS1,RLC,CatRlcProcConnectReleaseAckReqSig_1,P_INFO,swLogPrintf("LCID : %d , still has UL STATUS pending , start the release ack timer ");
560128,1147217920,0,0,PS1,RLC,CatRlcProcConnectReleaseAckReqSig_2,P_INFO,swLogPrintf("LCID : %d , CONN REL ACK STATUS PDU sent , waiting for UL HARQ transmit ind ");
560128,1147222015,0,0,PS1,RLC,CatRlcOperaAfterUlGrant_1,P_VALUE,swLogPrintf("RRC RELEASE has been ACKed ");
560128,1147222272,0,0,PS1,RLC,CatRlcProcPdcpStatusReport_e_1,P_ERROR,swLogPrintf("RLC , lcid : %d , is not AM mode : %d , can ' t proc PDCP status report ");
560128,1147224064,0,0,PS1,RLC,CatRlcAmAllocDlPduInfoMem_1,P_ERROR,swLogPrintf("AM UL , no pool mem for RLC DL PDU block , more than : %d , need to abort connection ");
560128,1147226112,0,0,PS1,RLC,CatRlcAmAllocDlSegInfoMem_1,P_ERROR,swLogPrintf("AM UL , no pool mem for RLC DL SEG block , more than : %d , need to abort connection ");
560128,1147228672,0,0,PS1,RLC,CatRlcAmDiscardDlPdu_1,P_WARNING,swLogPrintf("LC : %d , DL AM PDU SN : %d , pBit : %d , need to discard ");
560128,1147232255,0,0,PS1,RLC,CatRlcAmDiscardDlPdu_2,P_WARNING,swLogPrintf("DL AM , discard PDU , and status report need ");
560128,1147232256,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_1,P_WARNING,swLogPrintf("AM DL , status PDU length too short : %d , invalid PDU ");
560128,1147234560,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_ackSn,P_VALUE,swLogPrintf("AM DL , LC : %d , RECV STATUS REPORT , ACK SN : %d ");
560128,1147237120,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_invalid_ackSn,P_ERROR,swLogPrintf("AM , LC : %d , received a invalid ackSn : %d , not in range : VTA : %d ~ VTMS : %d ");
560128,1147238912,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_4,P_WARNING,swLogPrintf("AM DL , LC : %d , E1 : 1 , but total PDU len : %d < required : %d / 8 ");
560128,1147240960,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_5,P_WARNING,swLogPrintf("AM DL , LC : %d , E2 : 1 , but total PDU len : %d < required : %d / 8 ");
560128,1147243520,0,0,PS1,RLC,CatRlcAmDecodeDlStatusPdu_6,P_VALUE,swLogPrintf("AM DL , LC : %d , RECV STATUS REPORT , ACK SN : %d , NACK SN : %d , soStart : %d , soEnd : %d ");
560128,1147244544,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_error_LI_0,P_ERROR,swLogPrintf("CAT RLC , AM DL , The LI value should not be 0 , segIndex : %d ");
560128,1147246848,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_odd_w_1,P_WARNING,swLogPrintf("CAT RLC , AM DL , invalid ODD LI header , leftLen : %d , pduLen : %d ");
560128,1147248640,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_error_LI_1,P_ERROR,swLogPrintf("CAT RLC , AM DL , The LI value should not be 0 , segIndex : %d ");
560128,1147250944,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_even_w_1,P_WARNING,swLogPrintf("CAT RLC , AM DL , invalid EVEN LI header , leftLen : %d , pduLen : %d ");
560128,1147254783,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_even_3,P_INFO,swLogPrintf("CAT RLC , AM DL , EVEN LI headers , no more LI left ");
560128,1147256831,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_odd_4,P_INFO,swLogPrintf("CAT RLC , AM DL , ODD LI headers , no more LI left ");
560128,1147256832,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_error_LI_2,P_ERROR,swLogPrintf("CAT RLC , AM DL , The LI value should not be 0 , segIndex : %d ");
560128,1147259136,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_extli_1,P_WARNING,swLogPrintf("CAT RLC , AM DL , extended LI , leftLen : %d , pduLen : %d ");
560128,1147262975,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_extli_2,P_INFO,swLogPrintf("CAT RLC , AM DL , extended LI , no more LI left ");
560128,1147263232,0,0,PS1,RLC,CatRlcAmDecodeLiHeader_w_1,P_WARNING,swLogPrintf("CAT RLC , AM DL , invalid LI header , left Len : %d , or too much LI headers : %d ");
560128,1147267071,0,0,PS1,RLC,CatRlcAmDecodeDlWholePdu_li_w_1,P_WARNING,swLogPrintf("CAT RLC , AM DL , invalid LI header field ");
560128,1147267840,0,0,PS1,RLC,CatRlcAmMergeContSegPdu_w_1,P_WARNING,swLogPrintf("RLC AM DL , curSeg soStart : %d , soEnd : %d is last , but a nextSeg soStart : %d , soEnd : %d still followed , discard next seg ");
560128,1147271167,0,0,PS1,RLC,CatRlcAmParseUsefulPartFromSegPduData_mem_1,P_WARNING,swLogPrintf("AM DL , no pool mem left , to store : CatRlcAmDlSegList ");
560128,1147271424,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_1,P_WARNING,swLogPrintf("AM DL , this RLC SEG data partly reported to PDCP , and new SEG data all received before , parseSoEnd : %d , oldSoEnd : %d ");
560128,1147275263,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_2,P_WARNING,swLogPrintf("AM DL , NW IS WRONG , the discard SEG is the last SEG ");
560128,1147275520,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_part_w_1,P_WARNING,swLogPrintf("AM DL , decode seg part failed : %d , curPduAddIdx : %d ");
560128,1147278080,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_done_1,P_VALUE,swLogPrintf("AM DL , new RLC SEG PDU : soStart ( %d ) ~ soEnd ( %d ) , all insert before OLD SEG : soStart ( %d ) ~ soEnd ( %d ) ");
560128,1147280128,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_dup_1,P_WARNING,swLogPrintf("AM DL , new RECV SEG , soStart : %d - soEnd : %d , already RECV before , OLD SoStart : %d - soEnd : %d ");
560128,1147283455,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_dup_w_1,P_WARNING,swLogPrintf("AM DL , NW IS WRONG , all SEG RECV before , but not the LSF ");
560128,1147283712,0,0,PS1,RLC,CatRlcAmDecodeSegPduDataPart_part_w_2,P_WARNING,swLogPrintf("AM DL , decode last seg part failed : %d , curPduAddIdx : %d ");
560128,1147285504,0,0,PS1,RLC,CatRlcAmDecodeDlSegPdu_li_1,P_WARNING,swLogPrintf("AM DL , SEG PDU , SN : %d , invalid LI header field ");
560128,1147288320,0,0,PS1,RLC,CatRlcAmDecodeDlSegPdu_data_e_1,P_WARNING,swLogPrintf("AM DL , REG PDU data part decode failed : %d , sn : %d , soStart : %d , soEnd : %d ");
560128,1147290112,0,0,PS1,RLC,CatRlcAmDecodeDlSegPdu_2,P_WARNING,swLogPrintf("AM DL , REG PDU useless , maybe all received before , sn : %d , soStart : %d , soEnd : %d ");
560128,1147291648,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_w_1,P_WARNING,swLogPrintf("AM DL , recv a invalid RLC PDU with size : %d < CAT_RLC_AM_MIN_PDU_LEN ( 3 ) ");
560128,1147293696,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_w_2,P_WARNING,swLogPrintf("AM DL , extSn , recv a invalid RLC PDU with size : %d < CAT_RLC_AM_16_SN_MIN_PDU_LEN ( 4 ) ");
560128,1147296256,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_size_w_1,P_WARNING,swLogPrintf("AM DL , recv a invalid RLC SEG PDU SN : %d , size : %d < CAT_RLC_AM_MIN_SEG_PDU_LEN ( %d ) ");
560128,1147298304,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_w_3,P_WARNING,swLogPrintf("AM DL , recv a SN : %d PDU , fall out of window : [ %d ~ %d ) ");
560128,1147300352,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_buf_w_1,P_WARNING,swLogPrintf("AM DL , SRB , recv a SN : %d PDU , fall out of buf : [ %d ~ %d ) ");
560128,1147302400,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_buf_w_2,P_WARNING,swLogPrintf("AM DL , DRB , recv a SN : %d PDU , fall out of buf : [ %d ~ %d ) ");
560128,1147303936,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_recv_w_1,P_WARNING,swLogPrintf("AM DL , whole SN ( %d ) PDU already recv before , discard current one ");
560128,1147305984,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_recv_w_2,P_WARNING,swLogPrintf("AM DL , part of SN ( %d ) SEG already report to PDCP , while RECV a whole RLC PDU here ");
560128,1147308288,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_whole_1,P_VALUE,swLogPrintf("AM DL , LCID : %d , RECV WHOLE PDU SN : %d ");
560128,1147310336,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_w_1,P_WARNING,swLogPrintf("AM DL , SN ( %d ) PDU decode error , errId : %d , discard it ");
560128,1147312128,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_e_1,P_ERROR,swLogPrintf("AM DL , VRR = SN ( %d ) , but no memory left , need to abort connection ");
560128,1147314688,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_seg_1,P_VALUE,swLogPrintf("AM DL , LCID : %d , RECV SEG PDU SN : %d , SO : %d ");
560128,1147316480,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_seg_w_1,P_WARNING,swLogPrintf("AM DL , SN ( %d ) seg PDU decode error , errId : %d , discard it ");
560128,1147318272,0,0,PS1,RLC,CatRlcAmDecodeDlSnPdu_dec_seg_e_1,P_ERROR,swLogPrintf("AM DL , VRR = SN ( %d ) , seg PDU , but no memory left , need to abort connection ");
560128,1147321088,0,0,PS1,RLC,CatRlcAmDlDiscardAllPdu_w_1,P_WARNING,swLogPrintf("RLC AM DL , LCID : %d , discard DL PDU SN : %d > VRH : %d , VRR : %d ");
560128,1147323392,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_reorder_1,P_WARNING,swLogPrintf("RLC AM DL , LCID : %d , VRH : %d > VRR : %d , set VRX : %d , start T_Reordering : %d ");
560128,1147324928,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_reordering_2,P_WARNING,swLogPrintf("RLC AM DL , LCID : %d , VRH : %d > VRR : %d ");
560128,1147326976,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_reordering_3,P_WARNING,swLogPrintf("AM LC : %d , VRH : %d > VRR : %d , trigger the status report ");
560128,1147329280,0,0,PS1,RLC,CatRlcAmAssembleLcDlSdu_pbit_1,P_VALUE,swLogPrintf("AM LC : %d , P bit set , and CUR SN : %d < VRMS : %d , or > = VRMR : %d , trigger the status report ");
560128,1147331328,0,0,PS1,RLC,CatRlcAmDlLcReestablishReq_w_1,P_WARNING,swLogPrintf("RLC AM DL , LCID : %d , Re-Est DL PDU SN : %d > VRH : %d , VRR : %d ");
560128,1147332608,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_err,P_WARNING,swLogPrintf("AM LC : %d , t-Reordering is not running , ignore it! ");
560128,1147335424,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_1,P_WARNING,swLogPrintf("AM LC : %d , SRB , vrx : %d , fall out of buf : [ %d ~ %d ) , just set vrms to vrx ");
560128,1147337472,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_2,P_WARNING,swLogPrintf("AM LC : %d , DRB , vrx : %d , fall out of buf : [ %d ~ %d ) , just set vrms to vrx ");
560128,1147339776,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_3,P_WARNING,swLogPrintf("AM LC : %d , set VRX : %d , VRH : %d > VRMS : %d , start T_Reording : %d ");
560128,1147341312,0,0,PS1,RLC,CatRlcAmTReorderingTimerExpiry_4,P_WARNING,swLogPrintf("AM LC : %d , t-Reordering expiry , VRH : %d > VRR : %d , trigger the status report ");
560128,1147342848,0,0,PS1,RLC,CatRlcAmAllocUlPduBlockMem_1,P_ERROR,swLogPrintf("AM UL , no pool mem for RLC UL PDU block , more than : %d , need to abort connection ");
560128,1147344896,0,0,PS1,RLC,CatRlcAmCheckSetPBit_1,P_VALUE,swLogPrintf("AM UL , LC : %d , no UL data pending , set ' P ' bit ");
560128,1147347712,0,0,PS1,RLC,CatRlcAmCheckSetPBit_2,P_VALUE,swLogPrintf("AM UL , LC : %d , VTS out of window , vts : %d , vta : %d , vtms : %d , set ' P ' bit ");
560128,1147348992,0,0,PS1,RLC,CatRlcAmCheckSetPBit_3,P_VALUE,swLogPrintf("AM UL , LC : %d , t-PollRetransmit timer expired before , set ' P ' bit ");
560128,1147351552,0,0,PS1,RLC,CatRlcAmCheckSetPBit_4,P_VALUE,swLogPrintf("AM UL , LC : %d , pduWithoutPoll : %d > = pollPdu : %d , set ' P ' bit ");
560128,1147353600,0,0,PS1,RLC,CatRlcAmCheckSetPBit_5,P_VALUE,swLogPrintf("AM UL , LC : %d , byteWithoutPoll : %d > = pollByte : %d , set ' P ' bit ");
560128,1147355392,0,0,PS1,RLC,CatRlcAmCheckSetPBit_6,P_VALUE,swLogPrintf("AM UL , LC : %d , L2B high water , and UL RLC / PDCP only pending : %d , set ' P ' bit ");
560128,1147358208,0,0,PS1,RLC,CatRlcAmMergeNackSo_2,P_WARNING,swLogPrintf("AM PDU SN : %d , insert nack so : [ %d - %d ] before old so : [ %d - %d ] ");
560128,1147360768,0,0,PS1,RLC,CatRlcAmMergeNackSo_3,P_WARNING,swLogPrintf("AM PDU SN : %d , lots if nack sostart / soend ; need to merge from : [ %d - %d ] + [ %d - %d ] -> [ %d - %d ] ");
560128,1147362816,0,0,PS1,RLC,CatRlcAmMergeNackSo_4,P_VALUE,swLogPrintf("AM PDU SN : %d , NACK SO merge from : [ %d - %d ] + [ %d - %d ] -> [ %d - %d ] ");
560128,1147364864,0,0,PS1,RLC,CatRlcAmMergeNackSo_5,P_VALUE,swLogPrintf("AM PDU SN : %d ; NACK SO merge from : [ %d - %d ] + [ %d - %d ] -> [ %d - %d ] ");
560128,1147366912,0,0,PS1,RLC,CatRlcAmMergeNackSo_6,P_VALUE,swLogPrintf("AM PDU SN : %d , NACK SO merge from : [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147368960,0,0,PS1,RLC,CatRlcAmMergeNackSo_7,P_VALUE,swLogPrintf("AM PDU SN : %d , NACK SO merge from : [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147371008,0,0,PS1,RLC,CatRlcAmMergeNackSo_8,P_VALUE,swLogPrintf("AM PDU SN : %d , NACK SO merge from : [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147373056,0,0,PS1,RLC,CatRlcAmMergeNackSo_9,P_VALUE,swLogPrintf("AM PDU SN : %d , NACK SO merge from : [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147375104,0,0,PS1,RLC,CatRlcAmMergeNackSo_10,P_WARNING,swLogPrintf("AM PDU SN : %d , lots if nack sostart / soend , need to merge from : [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147376640,0,0,PS1,RLC,CatRlcAmMergeNackSo_11,P_WARNING,swLogPrintf("AM PDU SN : %d , insert the NACK SO : [ %d , %d ] after old : [ %d , %d ] ");
560128,1147379200,0,0,PS1,RLC,CatRlcAmMergeNackSo_12,P_VALUE,swLogPrintf("AM PDU SN : %d , NACK SO merge from : [ %d , %d ] + [ %d , %d ] -> [ %d , %d ] ");
560128,1147380480,0,0,PS1,RLC,CatRlcAmMergeNackSo_13,P_VALUE,swLogPrintf("AM PDU SN : %d , merge NACK SO : [ %d , %d ] , all datalenght : %d , all PDU need to retx ");
560128,1147382016,0,0,PS1,RLC,CatRlcAmInsertPduIntoRetxList_1,P_WARNING,swLogPrintf("AM UL , LC : %d , SN : %d is exist in retx buffer , can ' t insert again! ");
560128,1147383808,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_1,P_VALUE,swLogPrintf("AM UL , LC : %d , no UL RLC SDU left ");
560128,1147386624,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_2,P_WARNING,swLogPrintf("AM UL , LC : %d , SN window stalling , VTA : %d , VTS : %d , VTMS : %d ");
560128,1147388160,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_3,P_VALUE,swLogPrintf("AM UL , UL ExtSn : %d , left grant size : %d is not enough for a new RLC PDU ");
560128,1147390208,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_4,P_WARNING,swLogPrintf("AM UL , LC : %d , too much RLC PDU ( %d ) construct this time ");
560128,1147392768,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_buf_w_1,P_WARNING,swLogPrintf("AM DL , SRB LCID : %d , new PDU SN : %d , fall out of buf : [ %d ~ %d ) ");
560128,1147394816,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_buf_w_2,P_WARNING,swLogPrintf("AM DL , DRB LCID : %d , new PDU SN : %d , fall out of buf : [ %d ~ %d ) ");
560128,1147396352,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_buf_w_3,P_WARNING,swLogPrintf("AM DL , LCID : %d , No PDU info mem for new PDU SN : %d , not construct ");
560128,1147398912,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_5,P_VALUE,swLogPrintf("AM UL , LC : %d , no more grant , PDU total grant : %d , pduDataLen : %d , preHdrLen : %d ");
560128,1147400704,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_6,P_WARNING,swLogPrintf("AM UL , LC : %d , RLC header too long : %d > memSize : %d ");
560128,1147402496,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_7,P_VALUE,swLogPrintf("AM UL , LC : %d , UL RLC SDU all sent , no more pending , this PDU datalen : %d ");
560128,1147404800,0,0,PS1,RLC,CatRlcAmUlAssembleNewPdu_8,P_VALUE,swLogPrintf("AM UL , LC : %d , New RLC PDU SN : %d , P Bit : %d ");
560128,1147406336,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_tStatusProhibit,P_VALUE,swLogPrintf("AM UL , LC : %d , t-StatusProhibit is running , can ' t send Status Report! ");
560128,1147408640,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_1,P_WARNING,swLogPrintf("RLC AM , LC : %d , not enough grant : %d , to ASSEM status PDU ");
560128,1147410688,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_extSn_1,P_WARNING,swLogPrintf("RLC AM , LC : %d , extSN , not enough grant : %d , to ASSEM status PDU ");
560128,1147413248,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_2,P_WARNING,swLogPrintf("AM UL , not enought grant : %d , for LC : %d Status PDU , NACK_SN : %d , bitOffset : %d ");
560128,1147415296,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_3,P_WARNING,swLogPrintf("AM UL , not enought STATUS PDU buffer size : %d , for LC : %d Status PDU , NACK_SN : %d , bitOffset : %d ");
560128,1147416832,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_4,P_WARNING,swLogPrintf("AM UL , LC : %d , UL STATUS NACK : %d ");
560128,1147419904,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_6,P_WARNING,swLogPrintf("AM UL , not enought grant : %d , for LC : %d Status PDU , NACK_SN : %d , soStart : %d , soEnd : %d , bitOffset : %d ");
560128,1147420672,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_7,P_WARNING,swLogPrintf("AM UL , a soStart / soEnd exist for some NACK_SN : %d , set the pre soEnd to : 0x7FFF / 0xFFFF ");
560128,1147424000,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_8,P_WARNING,swLogPrintf("AM UL , not enought STATUS PDU buffer size : %d , for LC : %d Status PDU , NACK_SN : %d , soStart : %d , soEnd : %d , bitOffset : %d ");
560128,1147424768,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_9,P_WARNING,swLogPrintf("AM UL , a soStart / soEnd exist for some NACK_SN : %d , set the pre soEnd to : 0x7FFF / 0xFFFF ");
560128,1147427584,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_10,P_WARNING,swLogPrintf("AM UL , LC : %d , UL STATUS NACK : %d , soStart : %d , soEnd : %d ");
560128,1147429120,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_16,P_VALUE,swLogPrintf("AM UL , LC : %d , UL STATUS ACK SN : %d ");
560128,1147431168,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_17,P_WARNING,swLogPrintf("AM UL , LC : %d , not enough grant to send STATUS PDU , grant left : %d , need to continue to send STATUS PDU in next grant ");
560128,1147433216,0,0,PS1,RLC,CatRlcAmUlAssembleStatusPdu_18,P_VALUE,swLogPrintf("AM LC : %d , Status reporting has been triggered , start T_StatusProhibit : %d ms ");
560128,1147435776,0,0,PS1,RLC,CatRlcAmUlAssembleOneSegPdu_1,P_VALUE,swLogPrintf("AM UL , LC : %d , no more grant for more SEG SDU , SEG total grant : %d , segDataLen : %d , reqHdrSize : %d ");
560128,1147437312,0,0,PS1,RLC,CatRlcAmUlAssembleOneSegPdu_2,P_WARNING,swLogPrintf("AM UL , LC : %d , SEG PDU RLC header too long : %d ");
560128,1147439360,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_w_1,P_WARNING,swLogPrintf("AM UL , LC : %d , already construct : %d segment PDU in current HARQ , can ' t any more ");
560128,1147441408,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_1,P_WARNING,swLogPrintf("AM UL , LC : %d , already construct : %d MAC SDU , can ' t any more ");
560128,1147443712,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_2,P_WARNING,swLogPrintf("AM UL , LC : %d , RE-SEG , no more grant ( %d ) reserved for MAC LC Header length ( %d ) ");
560128,1147445504,0,0,PS1,RLC,CatRlcAmUlRetxSegRlcPdu_3,P_WARNING,swLogPrintf("AM UL , LC : %d , RE-SEG , no more grant ( %d ) for a new seg PDU ");
560128,1147447296,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_1,P_VALUE,swLogPrintf("AM UL , LC : %d , no RETX RLC PDU ");
560128,1147449600,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_2,P_WARNING,swLogPrintf("AM UL , LC : %d , too much RLC PDU ( %d ) construct this time , can ' t construct any more ");
560128,1147451904,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_3,P_WARNING,swLogPrintf("AM UL , LC : %d , no more grant ( %d ) reserved for MAC LC Header length ( %d ) ");
560128,1147453696,0,0,PS1,RLC,CatRlcAmUlAssembleRetxPdu_4,P_WARNING,swLogPrintf("AM UL , LC : %d , no more grant ( %d ) left for SEG PDU ");
560128,1147455744,0,0,PS1,RLC,CatRlcAmUlEstimateAllRetxPduGrant_1,P_WARNING,swLogPrintf("Estimate the UL grant for LC : %d , SN : %d need to SEG , todo in future ");
560128,1147458304,0,0,PS1,RLC,CatRlcAmUlRecvAckSn_1,P_WARNING,swLogPrintf("AM , LC : %d , received a invalid ackSn : %d , not in range : VTA : %d ~ VTS : %d ");
560128,1147460864,0,0,PS1,RLC,CatRlcAmUlRecvNackList_1,P_WARNING,swLogPrintf("AM , LC : %d , recv a invalid nackSn : %d , SO : [ %d - %d ] , not in range : VTA : %d ~ VTS : %d ");
560128,1147462400,0,0,PS1,RLC,CatRlcAmUlRecvNackList_2,P_WARNING,swLogPrintf("AM , LC : %d , recv a invalid nackSn : %d , not in range : VTA : %d ~ VTS : %d ");
560128,1147464960,0,0,PS1,RLC,CatRlcAmUlRecvNackList_invaid_sn_1,P_WARNING,swLogPrintf("AM , LC : %d , recv a invalid nackSn : %d , SO : [ %d - %d ] , VTA : %d ~ VTS : %d , but UL PDU not available , maybe ACKed before ");
560128,1147466496,0,0,PS1,RLC,CatRlcAmUlRecvNackList_invaid_sn_2,P_WARNING,swLogPrintf("AM , LC : %d , recv a invalid nackSn : %d , VTA : %d ~ VTS : %d , but UL PDU not available , maybe ACKed before ");
560128,1147467776,0,0,PS1,RLC,CeRlcAmEstimateStatusPduLen_1,P_WARNING,swLogPrintf("LC : %d , status report is not need ");
560128,1147469824,0,0,PS1,RLC,CeRlcAmEstimateStatusPduLen_2,P_INFO,swLogPrintf("LC : %d , t-StatusProhibit is running , no need to calc status report len ");
560128,1147471872,0,0,PS1,RLC,CatRlcAmTriggerStatusReport_highwater_1,P_WARNING,swLogPrintf("RLC AM LC : %d , t-StatusProhibit is running , but DL L2B highwater , trigger STATUS report at once ");
560128,1147473920,0,0,PS1,RLC,CatRlcAmTriggerStatusReport_prohibit_1,P_VALUE,swLogPrintf("RLC AM LC : %d , t-StatusProhibit is running , delay STATUS report ");
560128,1147475968,0,0,PS1,RLC,CatRlcAmTriggerStatusReport_1,P_VALUE,swLogPrintf("RLC AM LC : %d , AM trigger STATUS report ");
560128,1147478016,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_1,P_VALUE,swLogPrintf("AM UL , LC : %d , no more new PDU or retx PDU pending ");
560128,1147480832,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_2,P_VALUE,swLogPrintf("AM UL , LC : %d , VTS out of window , vts : %d , vta : %d , vtms : %d ");
560128,1147482880,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_buf_w_1,P_WARNING,swLogPrintf("AM UL , SRB LCID : %d , VTS is %d , fall out of buf : [ %d ~ %d ) ");
560128,1147484928,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_buf_w_2,P_WARNING,swLogPrintf("AM UL , DRB LCID : %d , VTS is %d , fall out of buf : [ %d ~ %d ) ");
560128,1147486208,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_3,P_VALUE,swLogPrintf("AM UL , LC : %d , put last PDU into retx buffer ");
560128,1147488512,0,0,PS1,RLC,CatRlcAmTPollRetxTimerExpiry_4,P_VALUE,swLogPrintf("AM UL , LC : %d , VT (S ) -1 has been acked , put the SN : %d into retx buffer ");
560128,1147491072,0,0,PS1,RLC,CatRlcAmUlCheckPdcpDiscardTimer_1_1,P_WARNING,swLogPrintf("LCID : %d , PDCP PDU count : %d , discard timer expiry , curTick : 0x%x , discardEndTick : 0x%x , need to discard it ");
560128,1147492352,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_e_1,P_ERROR,swLogPrintf("RLC AM , LCID : %d , is for SRB , can ' t proc PDCP status report ");
560128,1147494656,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_p_1,P_SIG,swLogPrintf("RLC AM , proc PDCP status report , FMS : %d , bitmapSize : %d ");
560128,1147496704,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_p_2,P_SIG,swLogPrintf("RLC AM , continue to proc PDCP status report , FMS : %d , bitmapSize : %d ");
560128,1147500543,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_dump_1,P_SIG,swLogDump("RLC AM , proc PDCP status report bitmap : ");
560128,1147502591,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_dump_2,P_SIG,swLogDump("RLC AM , continue to proc PDCP status report bitmap : ");
560128,1147502848,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_discard_1,P_SIG,swLogPrintf("RLC AM , PDCP count : %d < fmsCount : %d , need to discard ");
560128,1147504640,0,0,PS1,RLC,CatRlcAmProcPdcpStatusReport_discard_2,P_SIG,swLogPrintf("RLC AM , PDCP count : %d , status report bitmap value 1 , try to discard from RLC SDU list ");
560128,1147506688,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_error_LI_0,P_ERROR,swLogPrintf("CAT RLC , UM DL , The LI value should not be 0 , segIndex : %d ");
560128,1147508992,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_odd_w_1,P_WARNING,swLogPrintf("CAT RLC , UM DL , invalid ODD LI header , leftLen : %d , pduLen : %d ");
560128,1147510784,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_error_LI_1,P_ERROR,swLogPrintf("CAT RLC , UM DL , The LI value should not be 0 , segIndex : %d ");
560128,1147513088,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_even_w_1,P_WARNING,swLogPrintf("CAT RLC , UM DL , invalid EVEN LI header , leftLen : %d , pduLen : %d ");
560128,1147516927,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_even_3,P_INFO,swLogPrintf("CAT RLC , DL , EVEN LI headers , no more LI left ");
560128,1147518975,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_odd_4,P_INFO,swLogPrintf("CAT RLC , UM DL , ODD LI headers , no more LI left ");
560128,1147519232,0,0,PS1,RLC,CatRlcUmDecodeLiHeader_w_1,P_WARNING,swLogPrintf("CAT RLC , UM DL , invalid LI header , left Len : %d , or too much LI headers : %d ");
560128,1147523071,0,0,PS1,RLC,CatRlcUmDecodeDlWholePdu_li_w_1,P_WARNING,swLogPrintf("CAT RLC , UM DL , invalid LI header field ");
560128,1147523072,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_w_1,P_WARNING,swLogPrintf("UM DL , SN SIZE 5 , recv a invalid RLC PDU with size : %d < CAT_RLC_UM_5_SN_MIN_PDU_LEN ( 2 ) ");
560128,1147525120,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_w_2,P_WARNING,swLogPrintf("UM DL , SN SIZE 10 , recv a invalid RLC PDU with size : %d < CAT_RLC_UM_10_SN_MIN_PDU_LEN ( 3 ) ");
560128,1147527680,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_w_3,P_WARNING,swLogPrintf("UM DL , recv a SN : %d PDU , VR ( UH ) -UM_Window_Size : %d < = SN < VR ( UR ) : %d , diacard it! ");
560128,1147529728,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_buf_w_1,P_WARNING,swLogPrintf("UM DL , DRB ( SN 10 Bits ) , recv a SN : %d PDU , fall out of buf : [ %d ~ %d ) , diacard it! ");
560128,1147531776,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_recv_w_1,P_WARNING,swLogPrintf("UM DL , VR ( UR ) : %d < SN : %d < VR ( UH ) %d , and the whole SN PDU already recv before , discard it! ");
560128,1147533568,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_whole_1,P_VALUE,swLogPrintf("UM DL , LCID : %d , RECV WHOLE PDU SN : %d ");
560128,1147535616,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_dec_w_1,P_WARNING,swLogPrintf("UM DL , SN ( %d ) PDU decode error , errId : %d , discard it! ");
560128,1147537408,0,0,PS1,RLC,CatRlcUmDecodeDlSnPdu_dec_e_1,P_ERROR,swLogPrintf("UM DL , VR ( UR ) = SN ( %d ) , but no memory left , need to abort connection ");
560128,1147539968,0,0,PS1,RLC,CatRlcUmAssembleLcDlSdu_reordering_1,P_WARNING,swLogPrintf("RLC UM DL , LCID : %d , VRUH : %d > VRUR : %d ");
560128,1147542528,0,0,PS1,RLC,CatRlcUmAssembleLcDlSdu_reorder_2,P_WARNING,swLogPrintf("RLC UM DL , LCID : %d , VRUH : %d > VRUR : %d , set VRUX : %d , start T_Reordering : %d ");
560128,1147543552,0,0,PS1,RLC,CatRlcUmTReorderingTimerExpiry_err,P_WARNING,swLogPrintf("UM LC : %d , t-Reordering is not running , ignore it! ");
560128,1147546368,0,0,PS1,RLC,CatRlcUmTReorderingTimerExpiry_1,P_WARNING,swLogPrintf("UM DL , LC : %d , ( SN 10 Bits ) , vrux : %d , fall out of buf : [ %d ~ %d ) , just set vrur to vrux ");
560128,1147548672,0,0,PS1,RLC,CatRlcUmTReorderingTimerExpiry_4,P_WARNING,swLogPrintf("UM DL , LC : %d , set VRUX : %d , VRUH : %d > VRUR : %d , start T_Reording : %d ");
560128,1147549696,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_1,P_VALUE,swLogPrintf("UM UL , LC : %d , no UL RLC SDU left ");
560128,1147552000,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_2,P_VALUE,swLogPrintf("UM UL , UL SN size : %d , left grant size : %d is not enough for a new RLC PDU ");
560128,1147554048,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_3,P_WARNING,swLogPrintf("UM UL , LC : %d , too much RLC PDU ( %d ) construct this time ");
560128,1147556608,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_4,P_VALUE,swLogPrintf("UM UL , LC : %d , no more grant , PDU total grant : %d , pduDataLen : %d , preHdrLen : %d ");
560128,1147558400,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_5,P_WARNING,swLogPrintf("UM UL , LC : %d , RLC header too long : %d > hdrMemSize : %d ");
560128,1147560192,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_6,P_VALUE,swLogPrintf("UM UL , LC : %d , UL RLC SDU all sent , no more pending , this PDU datalen : %d ");
560128,1147562496,0,0,PS1,RLC,CatRlcUmUlAssembleNewPdu_7,P_VALUE,swLogPrintf("UM UL , LC : %d , New RLC PDU SN : %d , harqId : %d ");
560128,1147564800,0,0,PS1,RLC,CatRlcUmUlCheckPdcpDiscardTimer_1_1,P_WARNING,swLogPrintf("LCID : %d , PDCP PDU count : %d , discard timer expiry , curTick : %d , discardEndTick : %d , need to discard it ");
561152,1149241344,0,0,PS1,PDCP,CatPdcpDrbLcSetupConfig_1,P_SIG,swLogPrintf("LCID : %d , is configed ROHC ");
561152,1149243648,0,0,PS1,PDCP,CatPdcpDrbLcSetupConfig_2,P_ERROR,swLogPrintf("LCID : %d , is configed a error pdcp discardTimer : %d ");
561152,1149245696,0,0,PS1,PDCP,CatPdcpDrbLcSetupConfig_3,P_SIG,swLogPrintf("LCID : %d , Extend pdcp discard timer from %d ms to 20000 ms for FT ");
561152,1149249535,0,0,PS1,PDCP,CatPdcpAllLcReleaseInd_1,P_VALUE,swLogPrintf("PDCP , all LC are released ");
561152,1149251583,0,0,PS1,PDCP,CatPdcpDlPduSoftEeaThenEia_2,P_WARNING,swLogPrintf("PDCP DL PDU , SOFT EEA the EIA FAIL , key not configed !!!! ");
561152,1149253376,0,0,PS1,PDCP,CatPdcpDlPduSoftEeaThenEia_3,P_WARNING,swLogPrintf("PDCP DL PDU , soft EEA the EIA FAIL , orig MACI : 0x%x 0x%x 0x%x 0x%x , CALC MACI : 0x%x 0x%x 0x%x 0x%x ");
561152,1149253632,0,0,PS1,PDCP,CatPdcpIsUlHighWater_high_1,P_VALUE,swLogPrintf("CAT PDCP , UL highwater , pendingLen : %d ");
561152,1149257727,0,0,PS1,PDCP,CatPdcpPmuDeepSlpEnterCallBack_s_1,P_SIG,swLogPrintf("CAT PDCP , only TPT statis need write to flash , can ' t enter HIB , change to SLP2 ");
561152,1149259775,0,0,PS1,PDCP,CatPdcpPmuDeepSlpEnterCallBack_s_2,P_SIG,swLogPrintf("CAT PDCP , tiny flash need to write , update TPT statis by the way , and vote to HIB ");
561152,1149259776,0,0,PS1,PDCP,CatPdcpProcCounterCheckReqSig_1,P_ERROR,swLogPrintf("CAT PDCP , nwDrbCountMsbNum : %d , exceeds the max num , pls check it! ");
561152,1149262336,0,0,PS1,PDCP,CatPdcpCiOpenSct_1,P_WARNING,swLogPrintf("SCT exhaust , cfgIdx is %d , doneIdx is %d , procIdx is %d ");
561152,1149264128,0,0,PS1,PDCP,CatPdcpDlIsStoreDlSdu_s_1,P_SIG,swLogPrintf("CAT PDCP , AM LCID : %d , SN : %d , need to store in local ");
561152,1149265920,0,0,PS1,PDCP,CatPdcpDlDeliverStoredSduBeforeCurCount_1,P_WARNING,swLogPrintf("PDCP DL : CurCount ( %d ) just the same as stored one , just discard the stored one ");
561152,1149268480,0,0,PS1,PDCP,CatPdcpDlDeliverStoredSduAfterCurCount_1,P_WARNING,swLogPrintf("PDCP DL : curCount is %d , store PDCP SDU count ( %d ) < = ( preCount ( %d ) + 1 ) , just discard the stored one ");
561152,1149270784,0,0,PS1,PDCP,CatPdcpDlDecodeDrbUmPduHeader_invalid_1,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , SN : %d , PDU should bCont , but pNext : 0x%x , dCont : %d ");
561152,1149272576,0,0,PS1,PDCP,CatPdcpDlDecodeDrbUmPduHeader_invalid_2,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , SN 12bits , PDU should bCont , but pNext : 0x%x , dCont : %d ");
561152,1149274880,0,0,PS1,PDCP,CatPdcpDlDecodeDrbUmPduHeader_invalid_3,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , SN : %d , only header part no data part , pNext : 0x%x , dCont : %d , discard ");
561152,1149276672,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_invalid_1,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , PDCP header not complete , pNext : 0x%x , dCont : %d , discard ");
561152,1149278720,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_invalid_2,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , 18bit SN , PDCP header not complete , pNext : 0x%x , dCont : %d , discard ");
561152,1149281024,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_invalid_3,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , curSN : %d , no data part , pNext : 0x%x , dCont : %d , discard ");
561152,1149282816,0,0,PS1,PDCP,CatPdcpDlDecodeDrbAmPduHeader_1,P_WARNING,swLogPrintf("PDCP LCID : %d , recv PDCP SN : %d , Last_Submitted_PDCP_RX_SN : %d , out of win , need to discard ");
561152,1149284352,0,0,PS1,PDCP,CatPdcpDlDecodeOneSrbPdu_e_1,P_ERROR,swLogPrintf("CAT PDCP , LCID : %d , DL PDCP SEG bContinue , but next seg is NULL ");
561152,1149286656,0,0,PS1,PDCP,CatPdcpDlDecodeOneSrbPdu_e_2,P_ERROR,swLogPrintf("CAT PDCP , SRB LCID : %d , invalid DL PDCP PDU length : %d , discard it ");
561152,1149288448,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_e_1,P_ERROR,swLogPrintf("CAT PDCP , LCID : %d , DL PDCP SEG bContinue , but next seg is NULL ");
561152,1149291520,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_storeMax_1,P_WARNING,swLogPrintf("CAT PDCP , DRB LCID : %d , DL PKG len store too much : %d > = %d , can ' t store more , discard curCount : %d , len : %d ");
561152,1149293312,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_storeMax_2,P_WARNING,swLogPrintf("CAT PDCP , DRB LCID : %d , curCount : %d had beed stored , discard curCount : %d , len : %d ");
561152,1149294848,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_e_2,P_ERROR,swLogPrintf("CAT PDCP , DRB LCID : %d , invalid DL PDCP SDU length : %d , discard it ");
561152,1149296896,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_2,P_WARNING,swLogPrintf("PDCP LCID : %d , store DL PDU , count : %d ");
561152,1149298944,0,0,PS1,PDCP,CatPdcpDlDecodeOneDrbPduData_3,P_WARNING,swLogPrintf("PDCP LCID : %d , store DL PDU , count : %d , but need ROHC decompression ");
561152,1149301504,0,0,PS1,PDCP,CatPdcpDlDecodeOneStatusReportPdu_discard_1,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , recv status report , but is not AM : %d , or isSrb : %d , or isSuspend : %d , discard it ");
561152,1149303296,0,0,PS1,PDCP,CatPdcpDlDecodeOneStatusReportPdu_invalid_1,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , status report , pNext : 0x%x , dCont : %d , discard ");
561152,1149305600,0,0,PS1,PDCP,CatPdcpDlDecodeOneStatusReportPdu_invalid_2,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , snBitNum : %d , status report not complete , pNext : 0x%x , dCont : %d , discard ");
561152,1149307392,0,0,PS1,PDCP,CatPdcpDlDecodeOneRohcFeedbackPdu_discard_1,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , recv rohc Feedback Pdu but is isSrb : %d , or isSuspend : %d , discard it ");
561152,1149309440,0,0,PS1,PDCP,CatPdcpDlDecodeOneRohcFeedbackPdu_invalid_1,P_ERROR,swLogPrintf("PDCP DL , LCID : %d , Rohc Feedback Pdu , pNext : 0x%x , dCont : %d , discard ");
561152,1149310976,0,0,PS1,PDCP,CatPdcpDlDecodeOneRohcFeedbackPdu_1,P_ERROR,swLogPrintf("CAT PDCP , LCID : %d , DL ROHC feedback bContinue , but next seg is NULL ");
561152,1149313280,0,0,PS1,PDCP,CatPdcpDlDecodeOneRohcFeedbackPdu_2,P_ERROR,swLogPrintf("CAT PDCP , DRB LCID : %d , invalid DL ROHC feedback length : %d , discard it ");
561152,1149315072,0,0,PS1,PDCP,CatPdcpDlDecodeOneControlPdu_ctrl_w_1,P_WARNING,swLogPrintf("CAT PDCP , recv unknow PDCP control PDU , type : %d , discard it ");
561152,1149319167,0,0,PS1,PDCP,CatPdcpDlDecodeOneControlPdu_dump,P_WARNING,swLogDump("Unknown PDCP DL PDU : ");
561152,1149319168,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_highwater_1,P_WARNING,swLogPrintf("PDCP LCID : %d , DL PKG memory highwater , discard all PKG during RE-EST ");
561152,1149321216,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_highwater_2,P_WARNING,swLogPrintf("PDCP LCID : %d , DL PKG memory highwater , backup PDCP PDU ");
561152,1149323264,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_highwater_3,P_WARNING,swLogPrintf("PDCP LCID : %d , DL PKG memory highwater , backup left PDCP PDU ");
561152,1149325824,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_reorder_s_1,P_SIG,swLogPrintf("PDCP , AM LCID : %d , curCount : %d , after re-est , update lastSubmittedCount to : %d ");
561152,1149327872,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_reorder_s_2,P_SIG,swLogPrintf("PDCP , AM LCID : %d , curSn : %d , during re-est , reorder , don ' t update lastSubmittedPdcpRxSn : %d ");
561152,1149329408,0,0,PS1,PDCP,CatPdcpDlProcUpPduInd_abnormal_1,P_WARNING,swLogPrintf("PDCP LCID : %d , recv DL PDU , but can ' t need to config SCT ");
561152,1149331456,0,0,PS1,PDCP,CatPdcpDlEiaFailRollbackVars_1,P_WARNING,swLogPrintf("PDCP LCID : %d , DL EIA failed , need to rollback some variables ");
561152,1149333504,0,0,PS1,PDCP,CatPdcpDlReEstProcPduInd_1,P_WARNING,swLogPrintf("SRB LCID : %d , RLC should not pass the DL PDCP PDU to PDCP during re-est procedure ");
561152,1149335552,0,0,PS1,PDCP,CatPdcpDlLcReestablishReq_um_w_1,P_WARNING,swLogPrintf("CAT PDCP , UM LCID : %d , backup DL SDU must discard ");
561152,1149337600,0,0,PS1,PDCP,CatPdcpDlLcReestablishReq_am_w_1,P_WARNING,swLogPrintf("CAT PDCP , AM LCID : %d , backup DL SDU must discard ");
561152,1149341695,0,0,PS1,PDCP,CatPdcpDlProcDlPkgContinueReqSig_e_1,P_ERROR,swLogPrintf("CAT PDCP DL , PS DL PKG continue request , but still high water !!! ");
561152,1149341696,0,0,PS1,PDCP,CatPdcpDlProcDlPkgContinueReqSig_w_1,P_WARNING,swLogPrintf("CAT PDCP DL , DL PKG memory highwater again , can ' t proc LCID : %d DL backup PDU , keep backup ");
561152,1149344000,0,0,PS1,PDCP,CatPdcpUlDrbPendingLenAdd_high_1,P_WARNING,swLogPrintf("CAT PDCP , UL become highwater , pendingLen : %d , new add : %d ");
561152,1149345792,0,0,PS1,PDCP,CatPdcpUlDrbPendingLenSub_high_1,P_WARNING,swLogPrintf("CAT PDCP , UL become not highwater , pendingLen : %d ");
561152,1149348608,0,0,PS1,PDCP,CatPdcpUlSetPdcpPduInfoForUpData_1,P_VALUE,swLogPrintf("PDCP LCID : %u , set this UL PDU discard tick to : %u , as PDCP config discardTick : %u > PKG discardTick : %u ");
561152,1149349888,0,0,PS1,PDCP,CatPdcpUlSRBCpDataReq_1,P_ERROR,swLogPrintf("Can ' t find PDCP context for LCID : %d , can ' t send UL data ");
561152,1149352448,0,0,PS1,PDCP,CatPdcpUlConsAndCfgOnePduForUpData_warn,P_ERROR,swLogPrintf("PDCP LCID : %d , bContinue is True , but pNext is %d , length is %d ");
561152,1149354240,0,0,PS1,PDCP,CatPdcpUlConsAndCfgOnePduForUpData_0,P_VALUE,swLogPrintf("PDCP LCID : %d , UL ROHC feedback PKG , total LEN : %d ");
561152,1149356544,0,0,PS1,PDCP,CatPdcpUlConsAndCfgOnePduForUpData_1,P_WARNING,swLogPrintf("LCID : %d , Can ' t send PDCP SDU with len : %d = = 0 or > %d ");
561152,1149358336,0,0,PS1,PDCP,CatPdcpUlConsAndCfgOnePduForUpData_2,P_WARNING,swLogPrintf("LCID : %d , Can ' t alloc L2B buffer for UL PDCP PDU , len : %d ");
561152,1149362175,0,0,PS1,PDCP,CatPdcpUlSendUpDataReq_2,P_WARNING,swLogPrintf("Can ' t construct / config PDCP PDU for UL UP data ");
561152,1149364223,0,0,PS1,PDCP,CatPdcpUlSendUpDataReq_3,P_WARNING,swLogPrintf("One UL UP PKG construct error , continue to process the previous UL PKG ");
561152,1149364480,0,0,PS1,PDCP,CatPdcpUlConsOneRawPduForUpData_fb_0,P_VALUE,swLogPrintf("PDCP LCID : %d , UL ROHC feedback PKG , total LEN : %d ");
561152,1149366784,0,0,PS1,PDCP,CatPdcpUlConsOneRawPduForUpData_len_1,P_WARNING,swLogPrintf("LCID : %d , Can ' t construct RAW PDCP PDU with len : %d = = 0 or > %d ");
561152,1149368576,0,0,PS1,PDCP,CatPdcpUlConsOneRawPduForUpData_no_bm_2,P_WARNING,swLogPrintf("LCID : %d , Can ' t alloc L2B buffer for UL RAW PDCP PDU , len : %d ");
561152,1149371648,0,0,PS1,PDCP,CatPdcpUlCtrlSendUpData_opt_5,P_VALUE,swLogPrintf("CAT PDCP , RLC CTRL , UL BM high : %d , pending UL PKG , shortPending : %d , normalPending : %d , shortSentLen : %d , shorPdcpLen : %d , normalPdcpLen : %d ");
561152,1149373696,0,0,PS1,PDCP,CatPdcpUlCtrlSendUpData_opt_7,P_DEBUG,swLogPrintf("CAT PDCP , RLC CTRL , UL BM size : %d , pending UL PKG , shortPending : %d , normalPending : %d , shortSentLen : %d , shorPdcpLen : %d , normalPdcpLen : %d ");
561152,1149374464,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_discard_1,P_VALUE,swLogPrintf("CAT PDCP , DRB AM retx , LCID : %d , one PDCP PDU out of date , not need to retx ");
561152,1149376512,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_discard_2,P_VALUE,swLogPrintf("CAT PDCP , DRB AM retx , LCID : %d , control PDU don ' t need to retx ");
561152,1149379072,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_discard_3,P_WARNING,swLogPrintf("CAT PDCP , DRB AM retx , LCID : %d , PDCP PDU length : %d < = PDCP header length : %d , useless , discard ");
561152,1149380608,0,0,PS1,PDCP,CatPdcpUlRetxAmDrbPdu_cancel_1,P_WARNING,swLogPrintf("CAT PDCP , LCID : %d , no valid PDU need re-tx ");
561152,1149383168,0,0,PS1,PDCP,CatPdcpUlProcCpDataReqSig_1,P_VALUE,swLogPrintf("SRB LCID : %d , UL data , total len : %d , contain nas len : %d ");
561152,1149384704,0,0,PS1,PDCP,CatPdcpUlUpDataReq_1,P_WARNING,swLogPrintf("PDCP LCID : %d , can ' t find the PDCP context or it is not DRB ");
561152,1149387008,0,0,PS1,PDCP,CatPdcpUlUpDataReq_3,P_WARNING,swLogPrintf("PDCP LCID : %d is suspended , can ' t send UL PDU , pending LEN : %d ");
561152,1149389056,0,0,PS1,PDCP,CatPdcpUlUpDataReqSort_1,P_WARNING,swLogPrintf("Can ' t find the PDCP context for LCID : %d , or not DRB : %d , can ' t send UL UP Data ");
561152,1149391360,0,0,PS1,PDCP,CatPdcpUlUpDataReqSort_pendig_1,P_WARNING,swLogPrintf("PDCP LCID : %d is suspended , can ' t send UL PDU , pending LEN : %d , shortLen : %d ");
561152,1149393408,0,0,PS1,PDCP,CatPdcpUlTransSuccInd_1,P_VALUE,swLogPrintf("PDCP LCID : %u , RRC PDU ID : %u , UL sent SUCC , cost : %u ");
561152,1149395200,0,0,PS1,PDCP,CatPdcpUlTransSuccInd_2,P_VALUE,swLogPrintf("PDCP LCID : %u , RRC PDU ID : %u , UL sent SUCC ");
561152,1149397248,0,0,PS1,PDCP,CatPdcpUlTransSuccInd_3,P_VALUE,swLogPrintf("PDCP LCID : %u , RRC PDU : %u , UL sent SUCC ");
561152,1149399296,0,0,PS1,PDCP,CatPdcpUlTransFailInd_1,P_VALUE,swLogPrintf("PDCP LCID : %d , UL RRC PDU ID : %d , sent failed ");
561152,1149401088,0,0,PS1,PDCP,CatPdcpUlTransFailInd_e_1,P_ERROR,swLogPrintf("CAT PDCP , LCID : %d , can ' t find the context ");
561152,1149403136,0,0,PS1,PDCP,CatPdcpUlTransFailInd_w_1,P_WARNING,swLogPrintf("CAT PDCP , AM LCID : %d , is configed ROHC , not support re-tx UL PDU ");
561152,1149405184,0,0,PS1,PDCP,CatPdcpUlTransFailInd_3,P_VALUE,swLogPrintf("PDCP_SDU Trans Failed : lcid %d ");
561152,1149407232,0,0,PS1,PDCP,CatPdcpUlLcResumeReq_am_retx_1,P_SIG,swLogPrintf("CAT PDCP , DRB AM , LCID : %d , PDU retx ");
561152,1149409536,0,0,PS1,PDCP,CatPdcpUlLcResumeReq_um_retx_1,P_WARNING,swLogPrintf("CAT PDCP , DRB be UM : %d , LCID : %d , should no retx PDU ");
561152,1149411584,0,0,PS1,PDCP,CatPdcpUlSendStatusReport_buf_1,P_WARNING,swLogPrintf("LCID : %d , Can ' t alloc L2B buffer for UL status report , len : %d ");
561152,1149414400,0,0,PS1,PDCP,CatPdcpUlSendStatusReport_buf_w_1,P_WARNING,swLogPrintf("PDCP UL status report , LCID : %d , buf size not enough , pduMaxBitSize : %d , recvSn : %d , bitmapSn : %d , fms : %d ");
561152,1149417471,0,0,PS1,PDCP,CatPdcpUlSendStatusReport_status_rpt_dump,P_VALUE,swLogDump("PDCP UL , send status report : ");
561152,1149417728,0,0,PS1,PDCP,CatPdcpUlAddPendingPdcpPdu_1,P_WARNING,swLogPrintf("CAT PDCP , no PDCP CTX for LCID : %d , or not DRB : %d , can ' t pending UL PDCP PDU ");
562176,1151338752,0,0,PS1,BM,CatUpCheckFreeBuffBlock_ul_1,P_WARNING,swLogPrintf("CAT UP BM , cancel UL highwater : %d , totalNum : %d ");
562176,1151340800,0,0,PS1,BM,CatUpCheckFreeBuffBlock_dl_1,P_WARNING,swLogPrintf("CAT UP BM , cancel DL highwater : %d , totalNum : %d ");
562176,1151344128,0,0,PS1,BM,CatUpBmFreeAll_1,P_ERROR,swLogPrintf("CAT UP BM , Pls check DL BB , pStart is 0x%x , phyNotUsed is %d , freeLen is %d , alloPhyNum is %d , freePhyNum is %d , allocRlcSegNum is %d , freeRlcSegNum is %d ");
562176,1151345408,0,0,PS1,BM,CatUpBmFreeAll_2,P_ERROR,swLogPrintf("CAT UP BM , Pls check UL BB , pStart is 0x%x , freeLen is %d , alloNum is %d , freeNum is %d ");
562176,1151346688,0,0,PS1,BM,CatUpBmIsL2UlHighWater_w_1,P_VALUE,swLogPrintf("= = = = L2B UL higher water ( used : %d ) = = = = ");
562176,1151349248,0,0,PS1,BM,CatUpBmIsL2UlLimited_e_1,P_VALUE,swLogPrintf("= = = = L2B UL limited ( used : %d , limited : %d , DL lack : %d ) = = = = ");
562176,1151350784,0,0,PS1,BM,CatUpBmIsL2DlHighWater_w_1,P_WARNING,swLogPrintf("= = = = L2B DL higher water ( used : %d ) = = = = ");
562176,1151353088,0,0,PS1,BM,CatUpBmAllocPdcpUlMem_w_1,P_WARNING,swLogPrintf("CAT UP BM , no free BB left , alloDlBBNum : %d , alloUlBBNum : %d ");
562176,1151354880,0,0,PS1,BM,CatUpBmAllocPdcpUlMem_w_2,P_WARNING,swLogPrintf("CAT UP BM , alloUlBBNum : %d , UL high water ");
562176,1151357184,0,0,PS1,BM,CatUpBmFreeMacDlMem_dl_1,P_WARNING,swLogPrintf("CAT UP BM , DL highwater : %d , totalNum : %d ");
562176,1151359232,0,0,PS1,BM,CatUpBmFreeMacDlMem_dl_2,P_WARNING,swLogPrintf("CAT UP BM , NO UP BB left , lackDlBBNum : %d , alloDlBBNum : %d ");
562176,1151361024,0,0,PS1,BM,CatUpBmGetFreeULMemSize_w_1,P_VALUE,swLogPrintf("= = = = L2B UL higher water ( used : %d ) , free mem return 0 = = = = ");
563200,1153437695,0,0,PS1,DR,CesmCheckSendPdnConReqByAclApn_dump_1,P_WARNING,swLogDump("CESM , parse APN : ");
563200,1153437952,0,0,PS1,DR,CedrUlRateCtrlSendPendingData_1,P_VALUE,swLogPrintf("CEDR , epsId : %d , allow to send UL PDU viaCp ( 1 ) / viaUp ( 0 ) : %d ");
563200,1153439744,0,0,PS1,DR,CedrFreeBearer_1,P_VALUE,swLogPrintf("CEDR , EPSID : %d , free bearer context ");
563200,1153442304,0,0,PS1,DR,CedrCheckAndTriggerProcForUlPdu_4,P_VALUE,swLogPrintf("CEDR , EPSID : %d , data VIA DRB , but DRB not setup , DrbId : %d , or drbSuspend : %d , pending ");
563200,1153444608,0,0,PS1,DR,CedrCheckAndTriggerProcForUlPdu_5,P_VALUE,swLogPrintf("CEDR , EPSID : %d , data VIA DRB , bearerSuspend : %d , anyDrbEst : %d , rabEstProc : %d , can ' t send SIG_CEMM_DR_REESTABLISH_REQ ");
563200,1153445888,0,0,PS1,DR,CedrSendUlPendingData_no_1,P_SIG,swLogPrintf("CE DR , epsId : %d , no UL pending PDU ");
563200,1153447936,0,0,PS1,DR,CedrSendUlPendingData_reest_delay_1,P_WARNING,swLogPrintf("CEDR , epsId : %d , send UL pending PDU , but RAB re-est delay timer is running , not allow ");
563200,1153449984,0,0,PS1,DR,CedrSendUlPendingData_2,P_VALUE,swLogPrintf("CEDR , epsId : %d , send UL pending PDU , but BEARER STATE is not OK ");
563200,1153452032,0,0,PS1,DR,CedrSendUlPendingData_3,P_WARNING,swLogPrintf("CEDR , epsId : %d , pending UL pkg need to RE-ROHC ");
563200,1153454080,0,0,PS1,DR,CedrProcUlDataReqSig_1,P_WARNING,swLogPrintf("CID : %d , no bearer context , maybe freed ");
563200,1153456384,0,0,PS1,DR,CedrProcDrPsDataPlaneTransReqSig_1,P_WARNING,swLogPrintf("CEDR , UE support OPT type : %d , NW support OPT type : %d , data can ' t trans to UP ");
563200,1153458432,0,0,PS1,DR,CedrProcDrPsDataPlaneTransReqSig_2,P_WARNING,swLogPrintf("CEDR , transfer to UP , but bearerSuspend : %d , or RAB re-est is ongoing : %d , pending ");
563200,1153462271,0,0,PS1,DR,CedrProcDrPsDataPlaneTransReqSig_3,P_WARNING,swLogPrintf("CEDR , not support UP -> CP now ");
563200,1153462272,0,0,PS1,DR,CedrProcDrPdcpDlNonIpDataIndIsrSig_1,P_ERROR,swLogPrintf("EPS ID : %d , no such bearer info , can ' t FWD NON IP pkg ");
563200,1153464320,0,0,PS1,DR,CedrSetNetifFastChkInfo_ppp_1,P_SIG,swLogPrintf("CEDR , BR : %d , set PPP fast check info ");
563200,1153466368,0,0,PS1,DR,CedrSetNetifFastChkInfo_eth_1,P_SIG,swLogPrintf("CEDR , BR : %d , set ETH fast check info ");
563200,1153468416,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_cid_w_1,P_WARNING,swLogPrintf("CE DR , set eth fast path for v4v6Cid : %d , but can ' t find BR ");
563200,1153470464,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_v4cid_w_1,P_WARNING,swLogPrintf("CE DR , set eth fast path for v4Cid : %d , but can ' t find BR ");
563200,1153472512,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_v6cid_w_1,P_WARNING,swLogPrintf("CE DR , set eth fast path for v6Cid : %d , but can ' t find BR ");
563200,1153474560,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_ppp_cid_w_1,P_WARNING,swLogPrintf("CE DR , set PPP fast path for v4v6Cid : %d , but can ' t find BR ");
563200,1153476608,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_ppp_v4cid_w_1,P_WARNING,swLogPrintf("CE DR , set PPP fast path for v4Cid : %d , but can ' t find BR ");
563200,1153478656,0,0,PS1,DR,CedrProcDrSetNetifInfoReqSig_ppp_v6cid_w_1,P_WARNING,swLogPrintf("CE DR , set PPP fast path for v6Cid : %d , but can ' t find BR ");
563200,1153480704,0,0,PS1,DR,CedrStartRabReestDelayTimer_s_1,P_SIG,swLogPrintf("CE DR , start RabReestDelayTimer with seconds : %d ");
563200,1153482752,0,0,PS1,DR,CedrStartRabReestDelayTimer_w_1,P_WARNING,swLogPrintf("CE DR , RabReestDelayTimer is already started , rabEstProc : %d , not need to restart ");
563200,1153486847,0,0,PS1,DR,CedrProcRabReestDelayTimerExpiry_info_1,P_VALUE,swLogPrintf("CE DR , RabReestDelayTimer expiry ");
563200,1153486848,0,0,PS1,DR,CedrProcRabReestDelayTimerExpiry_w_1,P_WARNING,swLogPrintf("CE DR , RAB re-est proc : %d , not right ");
563200,1153490943,0,0,PS1,DR,CedrProcRabReestDelayTimerExpiry_trans_up_1,P_SIG,swLogPrintf("CE DR , CP->UP , trigger RAB re-est ");
563200,1153491200,0,0,PS1,DR,CedrAllocDlCpDataMem_1,P_VALUE,swLogPrintf("EPS : %d , configed ROHC , alloc DL pkg buf size : %d ");
563200,1153493248,0,0,PS1,DR,CedrDlCtrlPlaneDataInd_3,P_VALUE,swLogPrintf("CID : %d , RECV DL IP PKG , Len : %d ");
563200,1153495040,0,0,PS1,DR,CedrDlCtrlPlaneDataInd_4,P_WARNING,swLogPrintf("CID : %d , TCPIP RECV DL IP PKG ; FAIL ");
563200,1153497344,0,0,PS1,DR,CedrDlCtrlPlaneDataInd_5,P_VALUE,swLogPrintf("CID : %d , RECV DL NON IP PKG , Len : %d ");
563200,1153499136,0,0,PS1,DR,CedrDlUserPlaneDataIndIsr_1,P_ERROR,swLogPrintf("EPS ID : %d , no such bearer info , can ' t FWD this UP DL pkg ");
563200,1153501696,0,0,PS1,DR,CedrDlUserPlaneDataIndIsr_2,P_VALUE,swLogPrintf("CID : %d , RECV DL IP PKG via UP , pkgNum : %d , totalLen : %d ");
563200,1153503232,0,0,PS1,DR,CedrUlPkgListDataReq_1,P_WARNING,swLogPrintf("No EPS bearer found for CID : %d , free all UL pkgs ");
563200,1153505280,0,0,PS1,DR,CedrUlPkgListDataReq_2,P_VALUE,swLogPrintf("EpsId : %d , need to do Rate Ctrl , or TFT , just FWD to CEDR ");
563200,1153507328,0,0,PS1,DR,CedrUlPkgListDataReqSort_no_br_1,P_WARNING,swLogPrintf("No EPS bearer found for CID : %d , free all UL pkgs ");
563200,1153509376,0,0,PS1,DR,CedrUlPkgListDataReqSort_2,P_VALUE,swLogPrintf("EpsId : %d , need to do Rate Ctrl , or TFT , just FWD to CEDR ");
563200,1153511680,0,0,PS1,DR,CedrUlPkgListDataReqFromLwip_1,P_VALUE,swLogPrintf("CID : %d , SEND UL IP PKG list , total Len : %d ");
563200,1153513984,0,0,PS1,DR,CedrUlPkgListDataReqSortFromFast_1,P_VALUE,swLogPrintf("CID : %d , UL fast path SEND UL IP PKG list , shortTotalLen : %d , longTotalLen : %d ");
563200,1153515520,0,0,PS1,DR,CedrOneUlPkgDataReq_1,P_ERROR,swLogPrintf("No EPS bearer found for CID : %d , free this one UL pkg ");
563200,1153517568,0,0,PS1,DR,CedrOneUlPkgDataReq_2,P_ERROR,swLogPrintf("CID : %d , UL data request via CP , but bearer is via UP , failed ");
563200,1153519872,0,0,PS1,DR,CedrOneUlPkgDataReq_3,P_VALUE,swLogPrintf("CID : %d , SEND UL ONE PKG , Len : %d ");
563200,1153523711,0,0,PS1,DR,CedrOneUlPkgDataReq_4,P_ERROR,swLogPrintf("Alloc mem fail , free this one UL pkg ");
563200,1153523712,0,0,PS1,DR,CedrUpdateTftPacketFilterlist_nobr_e_1,P_ERROR,swLogPrintf("CE DR , CID : %d , can ' t find pBr , can ' t update TFT ");
563200,1153526016,0,0,PS1,DR,CedrUpdateTftPacketFilterlist_nobr_e_2,P_ERROR,swLogPrintf("CE DR , dedicated BR : %d , can ' t find linked default BR : %d , can ' t update TFT ");
563200,1153527808,0,0,PS1,DR,CedrProcBearerActivateIndSig_1,P_VALUE,swLogPrintf("EpsId : %d , is NON-IP type ");
563200,1153530112,0,0,PS1,DR,CedrProcBearerActivateIndSig_linked_1,P_ERROR,swLogPrintf("CE DR , EpsId : %d , is dedicated bearer , but linked EPS ID : %d , is not right ");
563200,1153532160,0,0,PS1,DR,CedrProcBearerActivateIndSig_linked_2,P_ERROR,swLogPrintf("CE DR , EpsId : %d , is dedicated bearer , but linked EPS ID : %d , can ' t find the entity ");
563200,1153533952,0,0,PS1,DR,CedrProcBearerActivateIndSig_4,P_VALUE,swLogPrintf("EpsId : %d , configed ROHC ");
563200,1153538047,0,0,PS1,DR,CedrProcBearerModifyIndSig_2,P_WARNING,swLogPrintf("Unsupported rate control feature! ");
563200,1153538048,0,0,PS1,DR,CedrProcBearerDeactivateIndSig_0,P_WARNING,swLogPrintf("No EPS bearer found for epsId : %d , free this one UL pkg ");
563200,1153540352,0,0,PS1,DR,CedrProcBearerDeactivateIndSig_1,P_WARNING,swLogPrintf("EPSID : %d , deactived , but DRB : %d is not released , pending free the bearer ");
563200,1153542400,0,0,PS1,DR,CedrProcBearerResumeIndSig_suspend,P_VALUE,swLogPrintf("CE DR , bearer is not suspended , with rrcRelAndSuspend is %d , anyDrbEst is %d ");
563200,1153546239,0,0,PS1,DR,CedrProcBearerResumeIndSig_s_1,P_SIG,swLogPrintf("CE DR , RAB re-est wait for resume , try check still any UL PDU pending ");
563200,1153548287,0,0,PS1,DR,CedrProcBearerResumeIndSig_w_1,P_WARNING,swLogPrintf("CE DR , BR resume , but RAB need re-est later , retry re-est after delay timer ");
563200,1153550335,0,0,PS1,DR,CedrProcBearerResumeIndSig_conn_est_1,P_SIG,swLogPrintf("CE DR , BR resume , conn est is pending , trigger RAB re-est ");
563200,1153552383,0,0,PS1,DR,CedrProcBearerResumeIndSig_s_up_1,P_SIG,swLogPrintf("CE DR , BR resume , CP->UP is pending , trigger RAB re-est ");
563200,1153552384,0,0,PS1,DR,CedrProcDrReestablishRspSig_w_0,P_WARNING,swLogPrintf("CE DR , RAB re-est succ , but DRB not setup , already try : %d times , no need to start delay retry time ");
563200,1153556479,0,0,PS1,DR,CedrProcDrReestablishRspSig_w_2,P_WARNING,swLogPrintf("CE DR , RAB re-est succ , but DRB not setup , abnormal , start a delay retry timer ");
563200,1153556736,0,0,PS1,DR,CedrProcDrReestablishRspSig_w_1,P_WARNING,swLogPrintf("CE DR , DRB ested : %d , or rabEstProc succ : %d , but CemmDrReestablishRsp not succ , not right ");
563200,1153558784,0,0,PS1,DR,CedrProcDrReestablishRspSig_trans_up_w_1,P_WARNING,swLogPrintf("CE DR , Rab re-est failed , cause : %d , already try : %d times , tansfer to UP failed ");
563200,1153560576,0,0,PS1,DR,CedrProcDrReestablishRspSig_retry_discard_1,P_WARNING,swLogPrintf("CE DR , RAB re-est more times : %d , still failed , free all pending UL data ");
563200,1153562624,0,0,PS1,DR,CedrProcDrReestablishRspSig_retry_discard_2,P_WARNING,swLogPrintf("CE DR , free all EpsId : %d , pending data ");
563200,1153566719,0,0,PS1,DR,CedrProcDrReestablishRspSig_delay_1,P_SIG,swLogPrintf("CE DR , Rab re-est failed , need start a dealy timer ");
563200,1153568767,0,0,PS1,DR,CedrProcDrReestablishRspSig_wait_resume_1,P_SIG,swLogPrintf("CE DR , Rab re-est failed , need wait for resume ");
563200,1153570815,0,0,PS1,DR,CedrProcDrReestablishRspSig_wait_resume_2,P_WARNING,swLogPrintf("CE DR , Rab re-est failed , need wait for resume , but bearer not suspended in DR , here start a a retry timer ");
563200,1153570816,0,0,PS1,DR,CedrProcDrReestablishRspSig_unknown_1,P_WARNING,swLogPrintf("CE DR , Rab re-est failed , with unknown cause : %d , start a dealy timer ");
563200,1153572864,0,0,PS1,DR,CedrDrbSetupReq_S_1,P_SIG,swLogPrintf("CE DR , RAB re-est wait for resume , or retry later : %d , but DRB setup , change to EST SUCC ");
563200,1153575168,0,0,PS1,DR,CedrDrbSetupReq_1,P_VALUE,swLogPrintf("CE DR , EPSID : %d , DRB : %d , configed ROHC ");
563200,1153577728,0,0,PS1,DR,CedrDrbSetupReq_2,P_VALUE,swLogPrintf("CE DR , Modify ROHC ( maxCID , profiles ) from ( %d , %d ) to ( %d , %d ) ");
563200,1153579520,0,0,PS1,DR,CedrDrbConfigReq_1,P_VALUE,swLogPrintf("DR , DRBID : %d , EPSID : %d , LCID : %d , config not changed ");
563200,1153581312,0,0,PS1,DR,CedrDrbReestablishReq_1,P_VALUE,swLogPrintf("CE DR , epsId : %d , DRB : %d , RRC re-establishment , need to reset ROHC ");
565248,1157629952,0,0,PS1,CERRC,CerrcUpdateReleaseVersion_errRel,P_ERROR,swLogPrintf("Unsupport Release Version ( %d ) ! ! ");
565248,1157632256,0,0,PS1,CERRC,CerrcUpdateReleaseVersion_rel,P_WARNING,swLogPrintf("Modify Release Version from %e<AsReleaseType> to %e<AsReleaseType>! ");
565248,1157634048,0,0,PS1,CERRC,CerrcUpdateUeCategory_Cat1,P_ERROR,swLogPrintf("Unsupport Category ( %d ) ! ! ");
565248,1157636608,0,0,PS1,CERRC,CerrcUpdateUeCategory_Cat,P_WARNING,swLogPrintf("Modify UE Category from %e<UeCategoryType> to %e<UeCategoryType> , asRelease is %e<AsReleaseType>! ");
565248,1157638912,0,0,PS1,CERRC,CerrcFillIntraNcellDBIntoStatusCnf_d1,P_INFO,swLogPrintf("QENG Intra phyCellId = %d , rsrp = %d , rsrq = %d , srxlev = %d ");
565248,1157640960,0,0,PS1,CERRC,CerrcFillInterNcellDBIntoStatusCnf_d1,P_INFO,swLogPrintf("QENG InterFreq = %ld , phyCellId = %d , rsrp = %d , rsrq = %d ");
565248,1157642240,0,0,PS1,CERRC,CerrcUpdateMeasCfg_rsrpThreshAdjust,P_WARNING,swLogPrintf("Modify rsrpThreshAdjust to ( %d ) ! ! ");
565248,1157644288,0,0,PS1,CERRC,CerrcUpdateMeasCfg_rsrqThreshAdjust,P_WARNING,swLogPrintf("Modify rsrqThreshAdjust to ( %d ) ! ! ");
565248,1157646336,0,0,PS1,CERRC,CerrcUpdateMeasCfg_rsrpMeasAdjust,P_WARNING,swLogPrintf("Modify rsrpMeasAdjust to ( %d ) ! ! ");
565248,1157648384,0,0,PS1,CERRC,CerrcUpdateMeasCfg_rsrqMeasAdjust,P_WARNING,swLogPrintf("Modify rsrqMeasAdjust to ( %d ) ! ! ");
565248,1157650432,0,0,PS1,CERRC,CerrcUpdateMeasCfg_rsrpRptAdjust,P_WARNING,swLogPrintf("Modify rsrpRptAdjust to ( %d ) ! ! ");
565248,1157652480,0,0,PS1,CERRC,CerrcUpdateMeasCfg_rsrqRptAdjust,P_WARNING,swLogPrintf("Modify rsrqRptAdjust to ( %d ) ! ! ");
565248,1157654528,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_meas,P_WARNING,swLogPrintf("Modify disableNCellMeas to ( %d ) ! ! ");
565248,1157656576,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_abc,P_WARNING,swLogPrintf("Modify enableABCheck to ( %d ) ! ! ");
565248,1157658624,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_weakCell,P_WARNING,swLogPrintf("Modify weakCellOpt to ( %d ) ! ! ");
565248,1157660672,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_qRxLevMin,P_WARNING,swLogPrintf("Modify qRxLevMinWeakCell to ( %d ) ! ! ");
565248,1157662720,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_reselToWeakNcellOpt,P_WARNING,swLogPrintf("Modify reselToWeakNcellOpt to ( %d ) ! ! ");
565248,1157664768,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_DeltaP,P_WARNING,swLogPrintf("The relaxMonitorDeltaP ( %d ) is out of range , set it to MAX value 15! ");
565248,1157666816,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_qualityFirst,P_WARNING,swLogPrintf("Modify QualityFirst to ( %d ) ! ! ");
565248,1157668864,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_staticConfig,P_WARNING,swLogPrintf("Modify StaticConfig to ( %d ) ! ! ");
565248,1157670912,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_disableCDRX,P_WARNING,swLogPrintf("Modify DisableCDRX to ( %d ) ! ! ");
565248,1157672960,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_userDrxCycle,P_WARNING,swLogPrintf("Modify UserDrxCycle to ( %d ) ! ! ");
565248,1157675008,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_rohcProfileBit,P_WARNING,swLogPrintf("Modify rohcProfileBit to ( 0x%x ) ! ! ");
565248,1157677056,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_enableSps,P_WARNING,swLogPrintf("Modify enableSps to ( %d ) ! ! ");
565248,1157679104,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_enableTtiBundling,P_WARNING,swLogPrintf("Modify enableTtiBundling to ( %d ) ! ! ");
565248,1157681152,0,0,PS1,CERRC,CerrcHandleCerrcCcmSetParamReq_cfunClrBarCell,P_WARNING,swLogPrintf("Modify cfunClrBarCell to ( %d ) ! ! ");
565248,1157683200,0,0,PS1,CERRC,CerrcHandleCcmEventStatisReq_1,P_VALUE,swLogPrintf("Unexpected set parameter type : %e<CcmEventStatisReqType> ");
565248,1157687295,0,0,PS1,CERRC,CerrcHandleCcmSetBarCellReq_warn0,P_WARNING,swLogPrintf("ECBARCELL , AT barredCellList is full ( Max 8 ) , add fail !!! ");
565248,1157687808,0,0,PS1,CERRC,CerrcHandleCcmSetBarCellReq_rmv,P_VALUE,swLogPrintf("Unbarred Cell ( %d , %d ) with barCause ( %d ) ");
565248,1157689856,0,0,PS1,CERRC,CerrcHandleCcmSetBarCellReq_warn1,P_WARNING,swLogPrintf("ECBARCELL , Cell ( %d , %d ) has already existed in barredList , barTimeLength ( %d ) , do not update it. ");
565248,1157691648,0,0,PS1,CERRC,CerrcHandleCcmSetBarCellReq_warn2,P_WARNING,swLogPrintf("ECBARCELL , Cell ( %d , %d ) not existed in barredList , remove fail !!! ");
565248,1157693440,0,0,PS1,CERRC,CerrcGetBandIndexFromDlEarfcn_invalid,P_WARNING,swLogPrintf("EARFCN ( %d ) is not belonging to any band !! ");
565248,1157695488,0,0,PS1,CERRC,CerrcGetBandIndexFromBand_invalid,P_WARNING,swLogPrintf("BAND ( %d ) is not supported !! ");
565248,1157697536,0,0,PS1,CERRC,CerrcGetBandFromDlEarfcn_invalid,P_WARNING,swLogPrintf("EARFCN ( %d ) is not belonging to any supported RF band !! ");
565248,1157699584,0,0,PS1,CERRC,CerrcCheckIfBandSupported_false,P_WARNING,swLogPrintf("Band ( %d ) is not supported !! ");
565248,1157701888,0,0,PS1,CERRC,CerrcCheckIfDlEarfcnSupportedByMFBI_true,P_WARNING,swLogPrintf("EARFCN ( %d ) is supported by multi-Bands ( %d ) !! ");
565248,1157705472,0,0,PS1,CERRC,CerrcSetNeighCellMeasInfo_filter,P_VALUE,swLogPrintf("CELL ( %d , %d ) : RSRP ( %d+ ( %d ) / 4 ) , RSRQ ( %d+ ( %d ) / 4 ) , after L3 filter RSRP ( %d ) / RSRQ ( %d ) ");
565248,1157705984,0,0,PS1,CERRC,CerrcAddIntraFreqCellToDB_info2,P_VALUE,swLogPrintf("Add INTRA FREQ CELL ( %d , %d ) into intra neighcell DB. ");
565248,1157708032,0,0,PS1,CERRC,CerrcAddIntraFreqCellToDB_info3,P_VALUE,swLogPrintf("Remove the oldest cell and add INTRA FREQ CELL ( %d , %d ) into intra neighcell DB. ");
565248,1157710080,0,0,PS1,CERRC,CerrcAddInterFreqCellToDB_info2,P_VALUE,swLogPrintf("Add INTER FREQ CELL ( %d , %d ) into inter neighcell DB. ");
565248,1157712128,0,0,PS1,CERRC,CerrcAddInterFreqCellToDB_info3,P_VALUE,swLogPrintf("Remove the oldest cell and add INTER FREQ CELL ( %d , %d ) into inter neighcell DB. ");
565248,1157714176,0,0,PS1,CERRC,CerrcRefreshIntraCellsInDB_del,P_VALUE,swLogPrintf("Cell ( %d , %d ) has NOT been detected , remove it from intra neighcell DB. ");
565248,1157716224,0,0,PS1,CERRC,CerrcRefreshInterCellsInDB_del,P_VALUE,swLogPrintf("Cell ( %d , %d ) has NOT been detected , remove it from inter neighcell DB. ");
565248,1157718272,0,0,PS1,CERRC,CerrcRemoveInvalidSib1Info_del,P_VALUE,swLogPrintf("Cell ( %d , %d ) has expired 24 hours , remove it from history SIB1 info DB ");
565248,1157722111,0,0,PS1,CERRC,CerrcCreateCellReselContext_exist,P_WARNING,swLogPrintf("CerrcCellReselectionContext already exists! ");
565248,1157722368,0,0,PS1,CERRC,CerrcStoreReselSourceCell_add,P_VALUE,swLogPrintf("Add new source cell ( %d , %d ) ");
565248,1157724416,0,0,PS1,CERRC,CerrcStoreReselSourceCell_rmv,P_VALUE,swLogPrintf("Remove Cell ( %d , %d ) in reselection source cell list due to expiry 20 mins ");
565248,1157726720,0,0,PS1,CERRC,CerrcStoreReselSourceCell_update,P_VALUE,swLogPrintf("Cell ( %d , %d ) is in the reselection source cell list , numOfCell ( %d ) ");
565248,1157728768,0,0,PS1,CERRC,CerrcStoreReselSourceCell_add2,P_VALUE,swLogPrintf("Add new source cell ( %d , %d ) , numOfCell ( %d ) ");
565248,1157732351,0,0,PS1,CERRC,CerrcStoreReselSourceCell_full,P_WARNING,swLogPrintf("The reselection source cell array is full! ");
565248,1157732608,0,0,PS1,CERRC,CerrcCheckIfInSourceCellList_rmv,P_VALUE,swLogPrintf("Remove Cell ( %d , %d ) in reselection source cell list due to expiry 20 mins ");
565248,1157734912,0,0,PS1,CERRC,CerrcCheckIfInSourceCellList_true,P_VALUE,swLogPrintf("Cell ( %d , %d ) is in the reselection source cell list , numOfCell ( %d ) ");
565248,1157736704,0,0,PS1,CERRC,CerrcProcessReselEvaluation_exit,P_VALUE,swLogPrintf("Reselection evaluation is NOT avaliable due to measOngoing ( %d ) or cellLockedMode : %e<CellLockMode> ");
565248,1157739008,0,0,PS1,CERRC,CerrcProcessReselEvaluation_worseTargetCell,P_SIG,swLogPrintf("Target Cell ( %d , %d ) RSRP is worse than serving cell ( %d ) dbm , NOT reselect to it. ");
565248,1157741312,0,0,PS1,CERRC,CerrcCalcServCellEvalTime_time,P_VALUE,swLogPrintf("cdrxCycleInMs %d ms , eDrxCycle %d s , nservTimeLength %d ms , escapeTimeLength %d s! ");
565248,1157744639,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_ptwInd,P_WARNING,swLogPrintf("ptwInd sent by L1 is changed under non-eDRX ");
565248,1157744640,0,0,PS1,CERRC,CerrcUpdateCriterionSTime_fail,P_VALUE,swLogPrintf("CriterionS starts to be not fulfilled , criterionSTime ( %d ) ");
565248,1157746688,0,0,PS1,CERRC,CerrcProcessIfSCriterionFail_start,P_VALUE,swLogPrintf("unsuitableStartTime ( %d ) is started!!! ");
565248,1157750783,0,0,PS1,CERRC,CerrcProcessIfSCriterionFail_stop,P_VALUE,swLogPrintf("CriterionS is fulfilled again , stop serving cell unsuitable timer !!! ");
565248,1157751552,0,0,PS1,CERRC,CerrcStoreServCellMeasInd_info,P_VALUE,swLogPrintf("Serving Cell RSRP ( %d ) / RSRQ ( %d ) , after L3 filter RSRP ( %d ) / RSRQ ( %d ) ");
565248,1157754624,0,0,PS1,CERRC,CerrcStoreServCellMeasInd_hrank,P_VALUE,swLogPrintf("Serving CELL ( %d ) : Srxlev ( %d ) , sQual ( %d ) , prio ( %d ) , rank ( %d ) , rsrpThreshAdjust ( %d ) , qRxLevMin ( %d ) , qHyst ( %d ) ");
565248,1157756672,0,0,PS1,CERRC,CerrcStoreServCellMeasInd_rank,P_VALUE,swLogPrintf("Serving CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , prio ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qHyst ( %d ) ");
565248,1157758720,0,0,PS1,CERRC,CerrcStoreServCellMeasInd_quality,P_VALUE,swLogPrintf("Serving CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , EC RANK ( %d ) , RISK ( %d ) , Srxlev ( %d ) , sQual ( %d ) ");
565248,1157760768,0,0,PS1,CERRC,CerrcStoreIdleServCellMeasInd_hrank,P_VALUE,swLogPrintf("Serving CELL ( %d ) : Srxlev ( %d ) , sQual ( %d ) , prio ( %d ) , rank ( %d ) , rsrpThreshAdjust ( %d ) , qRxLevMin ( %d ) , qHyst ( %d ) ");
565248,1157762816,0,0,PS1,CERRC,CerrcStoreIdleServCellMeasInd_rank,P_VALUE,swLogPrintf("Serving CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , prio ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qHyst ( %d ) ");
565248,1157764864,0,0,PS1,CERRC,CerrcStoreIdleServCellMeasInd_quality,P_VALUE,swLogPrintf("Serving CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , EC RANK ( %d ) , RISK ( %d ) , Srxlev ( %d ) , sQual ( %d ) ");
565248,1157766144,0,0,PS1,CERRC,CerrcProcessIntraCellMeasInd_intraSnr,P_SIG,swLogPrintf("INTRA FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) ");
565248,1157767936,0,0,PS1,CERRC,CerrcProcessIntraCellMeasInd_intra,P_SIG,swLogPrintf("INTRA FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1157769216,0,0,PS1,CERRC,CerrcProcessInterCellMeasInd_intra,P_WARNING,swLogPrintf("Received intra frequency ( %d ) in inter meas , skip it ! ");
565248,1157772288,0,0,PS1,CERRC,CerrcProcessInterCellMeasInd_interSnr,P_SIG,swLogPrintf("INTER FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) ");
565248,1157774080,0,0,PS1,CERRC,CerrcProcessInterCellMeasInd_inter,P_SIG,swLogPrintf("INTER FREQ CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1157775360,0,0,PS1,CERRC,CerrcProcessInterCellMeasInd_err,P_WARNING,swLogPrintf("Cannot find Inter frequency ( %d ) in DB , skip it ! ");
565248,1157778688,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_conn,P_SIG,swLogPrintf("CONNECTED : SERV CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) , RISK ( %d ) ");
565248,1157780992,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_idle,P_SIG,swLogPrintf("IDLE : SERV CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) , RISK ( %d ) , unreliable ( %d ) ");
565248,1157783551,0,0,PS1,CERRC,CerrcProcessServCellMeasInd_deact,P_WARNING,swLogPrintf("Received ServCellMeasInd in CERRC_DEACTIVATED! ");
565248,1157785599,0,0,PS1,CERRC,CerrcHandleCephyCellMeasInd_rlf,P_WARNING,swLogPrintf("Serving cell is unreliable , trigger RLF! ");
565248,1157787647,0,0,PS1,CERRC,CerrcHandleCephyCellMeasInd_escape,P_WARNING,swLogPrintf("Serving cell is unreliable , escape current cell! ");
565248,1157787904,0,0,PS1,CERRC,CerrcProcessCellReselSib1_s,P_WARNING,swLogPrintf("Reselect Target Cell is not suitable due to criterionS fail : Srxlev ( %d ) , Squal ( %d ) : ");
565248,1157790464,0,0,PS1,CERRC,CerrcProcessCellReselNcellSysInfoInd_mismatch,P_VALUE,swLogPrintf("Cell mismatch! Target Cell ( %d , %d ) but receive Cell ( %d , %d ) BCH , just ignore it! ");
565248,1157793024,0,0,PS1,CERRC,CerrcProcessCellReselectCnf_TAC,P_WARNING,swLogPrintf("CELL RESELECTION CELL ( %d , %d ) -> CELL ( %d , %d ) , TAC ( 0x%X ) -> TAC ( 0x%X ) ");
565248,1157794816,0,0,PS1,CERRC,CerrcProcessCellReselectCnf_servCell,P_WARNING,swLogPrintf("CELL RESELECTION CELL ( %d , %d ) -> CELL ( %d , %d ) , TAC ( 0x%X ) ");
565248,1157797120,0,0,PS1,CERRC,CerrcProcessCellReselectCnf_meas,P_SIG,swLogPrintf("CELL RESELECTION [ RSRP = %d , RSRQ = %d , SNR = %d ] -> [ RSRP = %d , RSRQ = %d , SNR = %d ] ");
565248,1157799935,0,0,PS1,CERRC,CerrcProcessCellReselectCnf_else,P_WARNING,swLogPrintf("CephyReselectCnf : Should never enter this branch ! ");
565248,1157800192,0,0,PS1,CERRC,CerrcStartCellReselFailureRestore_bar,P_VALUE,swLogPrintf("cell reselection back to source cell , barredByPlmn is %d , barredByTa is %d ");
565248,1157802496,0,0,PS1,CERRC,CerrcStartCellReselFailureRestore_entry,P_VALUE,swLogPrintf("forceReselection : %d , triggerSource : %d , CellReselState : %d ");
565248,1157806079,0,0,PS1,CERRC,CerrcStartCellReselFailureRestore_error,P_ERROR,swLogPrintf("Incorrect trigger source of cell reselection ");
565248,1157806592,0,0,PS1,CERRC,CerrcHandleCephyStartRelectionInd_else,P_WARNING,swLogPrintf("Received CephyStartRelectionInd in wrong RrcState %e<CerrcState> , CsrState %e<CerrcCsrState> , pTargetCellAddr ( 0x%X ) ");
565248,1157808640,0,0,PS1,CERRC,CerrcResetFoundCellList_else,P_WARNING,swLogPrintf("Incorrect CsrState %e<CerrcCsrState> , PlmnSearchContext ( %d ) , CellSearchContext ( %d ) ");
565248,1157812223,0,0,PS1,CERRC,CerrcHandlePendingActReq_1,P_VALUE,swLogPrintf("Handle pending CerrcActReq. ");
565248,1157812224,0,0,PS1,CERRC,CerrcHandleCerrcActReq_invalid,P_WARNING,swLogPrintf("Received CerrcActReq with requestedPLMNValid ( %d ) or no band / freq ! ");
565248,1157814528,0,0,PS1,CERRC,CerrcHandleCerrcActReq_state,P_WARNING,swLogPrintf("Received CerrcActReq in wrong RrcState %e<CerrcState> , or RccState %e<CerrcRccState> ! ");
565248,1157816576,0,0,PS1,CERRC,CerrcHandleCerrcActReq_freqBand,P_WARNING,swLogPrintf("Received CerrcActReq with no valid numOfFreq ( %d ) and numOfBand ( %d ) ! ");
565248,1157818368,0,0,PS1,CERRC,CerrcHandleCerrcActReq_phyCellId,P_WARNING,swLogPrintf("Received CerrcActReq with no numOfFreq but valid phyCellId ( %d ) ! ");
565248,1157822463,0,0,PS1,CERRC,CerrcHandleCerrcActReq_buff1,P_VALUE,swLogPrintf("Receive CerrcActReq while waiting for ecphyDeactCnf , buffer it ");
565248,1157824511,0,0,PS1,CERRC,CerrcHandleCerrcActReq_buff2,P_VALUE,swLogPrintf("Receive CerrcActReq during cell selection or cell reselection , need to deact L1 first ");
565248,1157826559,0,0,PS1,CERRC,CerrcHandleCerrcActReq_err,P_ERROR,swLogPrintf("Receive CerrcActReq during NORMAL FG PLMN , but not waiting for MM response ! ");
565248,1157828607,0,0,PS1,CERRC,CerrcHandleCerrcActReq_buff3,P_VALUE,swLogPrintf("Receive CerrcActReq during FG PLMN , need to deact L1 first ");
565248,1157828864,0,0,PS1,CERRC,CerrcHandleCerrcActReq_freqLock,P_WARNING,swLogPrintf("CerrcActReq : Invalid freq lock info with numOfFreq ( %d ) , numOfBand ( %d ) ");
565248,1157830656,0,0,PS1,CERRC,CerrcFillOosFreqList_lock,P_VALUE,swLogPrintf("Only locked frequency ( %d ) in CerrcActInd ");
565248,1157833472,0,0,PS1,CERRC,CerrcFillOosFreqList_freq,P_VALUE,swLogPrintf("CerrcFillOosFreqList : numOfFreq ( %d ) , freq [ 0 ] = %d , freq [ 1 ] = %d , freq [ 2 ] = %d ");
565248,1157836799,0,0,PS1,CERRC,CerrcFillOosFreqList_else,P_VALUE,swLogPrintf("No oosFreqList in CerrcActInd , due to not performed AS cell search. ");
565248,1157836800,0,0,PS1,CERRC,CerrcSendCerrcActCnf_status,P_VALUE,swLogPrintf("CerrcActCnf : actStatus %e<ActStatus> ");
565248,1157838848,0,0,PS1,CERRC,CerrcSendCerrcActInd_status,P_VALUE,swLogPrintf("CerrcActInd : actStatus = %e<ActStatus> ");
565248,1157842943,0,0,PS1,CERRC,CerrcStoreInterFreqInCellSearchContext_else,P_WARNING,swLogPrintf("CerrcCellSearchContext has not been created !! ");
565248,1157844991,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_no,P_VALUE,swLogPrintf("No valid last camped cell info. ");
565248,1157845760,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_cell,P_VALUE,swLogPrintf("Fail to directly camp after SIB1 due to last CELL ( %d , %d ) , Current CELL ( %d , %d ) ");
565248,1157847296,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_tag,P_VALUE,swLogPrintf("Fail to directly camp after SIB1 due to sysInfoValueTag change from ( %d ) to ( %d ) ");
565248,1157849344,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_numSi,P_VALUE,swLogPrintf("Fail to directly camp after SIB1 due to siSchdNumInfo change from ( %d ) to ( %d ) ");
565248,1157851392,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_SiList,P_VALUE,swLogPrintf("Fail to directly camp after SIB1 due to sysInfoValueTagSIList change from ( 0x%x ) to ( 0x%x ) ");
565248,1157853440,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_bitmap,P_VALUE,swLogPrintf("Fail to directly camp after SIB1 due to last siValidBitmap ( 0x%x ) ! = new requiredBitmap ( 0x%x ) ");
565248,1157855232,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_24h,P_VALUE,swLogPrintf("Fail to directly camp after SIB1 due to exceed 24 hours , siUpdateTime ( %d ) ");
565248,1157859327,0,0,PS1,CERRC,CerrcCheckIfCampDirectlyAfterSib1_true,P_VALUE,swLogPrintf("Camp directly according to last camped cell info , do not request SIB2 and other SIBs ! ");
565248,1157859584,0,0,PS1,CERRC,CerrcStartSuitableCellCamp_servCell,P_WARNING,swLogPrintf("CELL SELECTION to CELL ( %d , %d ) ");
565248,1157863423,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_phy,P_VALUE,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to PHY reset. ");
565248,1157865471,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_bar,P_VALUE,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to cell barred. ");
565248,1157867519,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_si,P_VALUE,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to SI modification. ");
565248,1157869567,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_sib2,P_VALUE,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to SIB2 is not received. ");
565248,1157871615,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_suitable,P_VALUE,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to cell is NOT suitable. ");
565248,1157872128,0,0,PS1,CERRC,CerrcCheckIfCampDirectly_criterionS,P_VALUE,swLogPrintf("Cannot camp directly when leaving CONNECTED , due to criterionS fail , Srxlev ( %d ) , Squal ( %d ) or missing SIB1 / 2 siValidBitmap ( 0x%x ) ");
565248,1157873664,0,0,PS1,CERRC,CerrcSendCephyCellSearchReq_lock,P_WARNING,swLogPrintf("Start locked frequency cell search , mode %e<CellLockMode> ");
565248,1157876992,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_cell,P_SIG,swLogPrintf("CELL FOUND : cellDetected ( %d ) , highLevelDone ( %d ) , CELL ( %d , %d ) , RSRP ( %d ) , RSRQ ( %d ) ");
565248,1157879807,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_ret,P_VALUE,swLogPrintf("Receive CephyCellSearchCnf while waiting for CephyDeactCnf ");
565248,1157879808,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_csr,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong CsrState %e<CerrcCsrState> ");
565248,1157881856,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_rcc,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong RccState %e<CerrcRccState> ");
565248,1157883904,0,0,PS1,CERRC,CerrcHandleCephyCellSearchCnf_rrc,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong RrcState %e<CerrcState> ");
565248,1157885952,0,0,PS1,CERRC,CerrcStartLeaveConnCellSearch_redirect,P_SIG,swLogPrintf("Redirect to EARFCN ( %d ) ");
565248,1157888000,0,0,PS1,CERRC,CerrcProcessCellSearchNoCellFound_ics,P_VALUE,swLogPrintf("No cell found with icsType %e<CerrcCellSearchType> ! ");
565248,1157891328,0,0,PS1,CERRC,CerrcProcessReestSearchNoCellFound_suppBand,P_VALUE,swLogPrintf("Total support numOfBand ( %d ) , band [ 0 ] = %d , band [ 1 ] = %d , band [ 2 ] = %d , band [ 3 ] = %d , band [ 4 ] = %d ");
565248,1157892864,0,0,PS1,CERRC,CerrcProcessReestSearchNoCellFound_band,P_SIG,swLogPrintf("%d th round of band search during RRC re-establishment , numOfBand ( %d ) , band [ 0 ] = %d , band [ 1 ] = %d ");
565248,1157894912,0,0,PS1,CERRC,CerrcUpdateGuti_gummei,P_VALUE,swLogPrintf("gutiElemType is GUTI_GUMMEI , MMEC ( 0x%x ) , MMEGI ( 0x%x ) , MCC ( 0x%x ) , MNC ( 0x%x ) ");
565248,1157896448,0,0,PS1,CERRC,CerrcUpdateGuti_stmsi,P_VALUE,swLogPrintf("gutiElemType is GUTI_STMSI , MMEC ( 0x%x ) , mTMSI ( 0x%x ) ");
565248,1157900287,0,0,PS1,CERRC,CerrcUpdateGuti_invalid,P_VALUE,swLogPrintf("gutiElemType is GUTI_INVALID ");
565248,1157900288,0,0,PS1,CERRC,CerrcUpdateSimInfo_ac,P_SIG,swLogPrintf("UE accessClass is 0x%X , AC15|AC14|AC13...AC2|AC1|AC0 ");
565248,1157904383,0,0,PS1,CERRC,CerrcUpdateSimInfo_len0,P_WARNING,swLogPrintf("simInfoPresent is TRUE , but lengthOfImsi is 0 ! ");
565248,1157904384,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfigNB_invalid,P_ERROR,swLogPrintf("Invalid eDrx cycle : %d ");
565248,1157906688,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfigNB_end,P_VALUE,swLogPrintf("Setup eDRX , eDrxCycle ( %d ) , ptwLength ( %d ) ");
565248,1157908480,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfig_invalid,P_ERROR,swLogPrintf("Invalid eDrx cycle : %d ");
565248,1157910784,0,0,PS1,CERRC,CerrcUpdateNasExtDrxConfig_end,P_VALUE,swLogPrintf("Setup eDRX , eDrxCycle ( %d ) , ptwLength ( %d ) ");
565248,1157914623,0,0,PS1,CERRC,CerrcReleaseExtDrxConfig_end,P_VALUE,swLogPrintf("Release eDRX configuration ! ");
565248,1157915648,0,0,PS1,CERRC,CerrcHandleCerrcNasInfoUpdateReq_plmn,P_VALUE,swLogPrintf("Update requestedPlmn from ( %X-%X ) to ( %X-%X ) , current requestedPlmnValid ( %d ) ");
565248,1157916928,0,0,PS1,CERRC,CerrcHandleCerrcSelectedPlmnInd_update,P_WARNING,swLogPrintf("Update selectedPlmnIdx from ( %d ) to ( %d ) ! ");
565248,1157918976,0,0,PS1,CERRC,CerrcHandleCerrcSelectedPlmnInd_err,P_WARNING,swLogPrintf("NAS selected PLMN ( %X-%X ) is NOT included in CerrcActCnf / CerrcActInd! ");
565248,1157922815,0,0,PS1,CERRC,CerrcCreateSourceCell_exist,P_WARNING,swLogPrintf("SourceCell already exists! ");
565248,1157923072,0,0,PS1,CERRC,CerrcStoreLastCampCellInfo_fail,P_ERROR,swLogPrintf("Fail to store last camp cell info due to CsrState %e<CerrcCsrState> , siValidBitmap ( 0x%x ) ");
565248,1157924864,0,0,PS1,CERRC,CerrcEscapeServingCell_entry,P_VALUE,swLogPrintf("Escape current serving cell , needReselEval ( %d ) ! ");
565248,1157926912,0,0,PS1,CERRC,CerrcCalcExtendDrxCycle_invalid,P_ERROR,swLogPrintf("Invalid eDrx cycle : %d ");
565248,1157928960,0,0,PS1,CERRC,CerrcCheckIfRepeatedCell_else,P_WARNING,swLogPrintf("Received CephyCellSearchCnf in wrong CsrState %e<CerrcCsrState> ");
565248,1157931264,0,0,PS1,CERRC,CerrcCheckIfRepeatedCell_repeated,P_VALUE,swLogPrintf("PHY already reported this cell ( %d , %d ) ");
565248,1157933056,0,0,PS1,CERRC,CerrcAddCellToFoundCellList_else,P_VALUE,swLogPrintf("No need to record this cell in foundCellList , CsrState %e<CerrcCsrState> ");
565248,1157935104,0,0,PS1,CERRC,CerrcAddCellToFoundCellList_num,P_WARNING,swLogPrintf("Already found more than %d cells ! ");
565248,1157937408,0,0,PS1,CERRC,CerrcAddCellToFoundCellList_repeated,P_WARNING,swLogPrintf("Already record this cell ( %d , %d ) ");
565248,1157939200,0,0,PS1,CERRC,CerrcUpdateTSearchDaltaP_default2,P_WARNING,swLogPrintf("Wrong DRX cycle length %d is configured. ");
565248,1157941760,0,0,PS1,CERRC,CerrcUpdateTSearchDaltaP_value,P_VALUE,swLogPrintf("eDrxPresent ( %d ) , eDRXAllowed ( %d ) , tSearchDeltaP %d seconds. ");
565248,1157943808,0,0,PS1,CERRC,CerrcUpdateHibMeasRsrpThreshold_end,P_WARNING,swLogPrintf("Update hibernate wake up rmRsrpThreshold ( %d ) to ( %d ) , nRsrpThreshold ( %d ) . ");
565248,1157946112,0,0,PS1,CERRC,CerrcCheckIfRMCriterionFulfilled_false,P_VALUE,swLogPrintf("s-SearchDeltaP ( %d ) , bRMCriterionFulfilled ( %d ) , bIntraMeasRmEnable ( %d ) , bInterMeasRmEnable ( %d ) ");
565248,1157947904,0,0,PS1,CERRC,CerrcUpdateSrxlevRef_entry,P_VALUE,swLogPrintf("Current Srxlev ( %d ) , previous SrxlevRef ( %d ) , bRMCriterionFulfilled ( %d ) ");
565248,1157949440,0,0,PS1,CERRC,CerrcUpdateSrxlevRef_update,P_VALUE,swLogPrintf("Update SrxlevRef to current Srxlev ( %d ) ");
565248,1157952256,0,0,PS1,CERRC,CerrcUpdateCriterionRMTime_succ,P_VALUE,swLogPrintf("Update relaxed monitoring SUCCESS time : s-SearchDeltaP ( %d ) , Srxlev ( %d ) , SrxlevRef ( %d ) , rMCriterionSuccTime ( %d ) ");
565248,1157954304,0,0,PS1,CERRC,CerrcUpdateCriterionRMTime_fail,P_VALUE,swLogPrintf("Update relaxed monitoring FAIL time : s-SearchDeltaP ( %d ) , Srxlev ( %d ) , SrxlevRef ( %d ) , rMCriterionFailTime ( %d ) ");
565248,1157956096,0,0,PS1,CERRC,CerrcCalcSCriterion_end,P_VALUE,swLogPrintf("Pcompensation ( %d ) , Qoffsetauthorization ( %d ) , Qoffsettemp ( %d ) ");
565248,1157959679,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_sDeltaP,P_VALUE,swLogPrintf("sSearchDeltaP is 0 due to no SIB3! ");
565248,1157959936,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_disNcell,P_WARNING,swLogPrintf("bCellLocked ( %d ) or bDisableNCellMeas ( %d ) , only care about CriterionS ");
565248,1157963008,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_rsrp,P_WARNING,swLogPrintf("IDLE Meas RSRP Threshold : Intra-Threshold ( %d ) , Inter-Threshold ( %d ) , sIntraSearchP ( %d ) , sNonIntraSearchP ( %d ) , nRsrpThreshold ( %d ) , rsrpMeasAdjust ( %d ) ");
565248,1157965056,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_rsrq,P_WARNING,swLogPrintf("IDLE Meas RSRQ Threshold : Intra-Threshold ( %d ) , Inter-Threshold ( %d ) , sIntraSearchQ ( %d ) , sNonIntraSearchQ ( %d ) , nRsrqThreshold ( %d ) , rsrqMeasAdjust ( %d ) ");
565248,1157967871,0,0,PS1,CERRC,CerrcUpdateIntraInterMeasThreshold_qQualMin,P_SIG,swLogPrintf("qQualMin is absent in SIB1 ! Hence , RSRQ is NOT taken into account for any threshold ! ");
565248,1157969919,0,0,PS1,CERRC,CerrcSendCephyCellMeasReq_inter,P_ERROR,swLogPrintf("interFreqMeasBitmap is not set correctly! ");
565248,1157971967,0,0,PS1,CERRC,CerrcSendCephyCellMeasStopReq_inter,P_ERROR,swLogPrintf("interFreqMeasBitmap is not set correctly! ");
565248,1157972480,0,0,PS1,CERRC,CerrcCheckCellReserved4OperatorUse_rsvdAc11_15,P_VALUE,swLogPrintf("PLMN ( %X-%X ) is ' reserved ' for operator use , and UE ' s accessClass ( 0x%x ) , which is assigned to 11 or 15 but NOT in their HPLMN / EHPLMN ");
565248,1157974528,0,0,PS1,CERRC,CerrcCheckCellReserved4OperatorUse_rsvd,P_VALUE,swLogPrintf("PLMN ( %X-%X ) is ' reserved ' for operator use , and UE ' s accessClass ( 0x%x ) , which is NOT assigned to Access Class 11 or 15 ");
565248,1157976832,0,0,PS1,CERRC,CerrcGetPlmnIndex_plmn,P_VALUE,swLogPrintf("PLMN ( %X-%X ) is not EPLMN or HPLMN of the Requested PLMN ( %X-%X ) . ");
565248,1157980159,0,0,PS1,CERRC,CerrcGetPlmnIndex_noPlmn,P_WARNING,swLogPrintf("No valid requestedPLMN ");
565248,1157980672,0,0,PS1,CERRC,CerrcGetTaStatus_forbidden,P_VALUE,swLogPrintf("CerrcGetTaStatus : FORBIDDEN_TA_FOR_ROAMING , PLMN ( %X-%X ) , TAC ( %X ) ");
565248,1157982720,0,0,PS1,CERRC,CerrcGetTaStatus_block,P_VALUE,swLogPrintf("CerrcGetTaStatus : BLOCKED_TA , PLMN ( %X-%X ) , TAC ( %X ) ");
565248,1157985024,0,0,PS1,CERRC,CerrcGetTaStatus_not,P_VALUE,swLogPrintf("CerrcGetTaStatus : NOT_FORBIDDEN_TA! PLMN ( %X-%X ) , TAC ( %X ) , TA type %e<CurrentTaiType> ");
565248,1157986304,0,0,PS1,CERRC,CerrcGetCellAccessInfoFromSib1_index,P_VALUE,swLogPrintf("Get accessInfo from cellAccessRelatedInfoList-r14 [ %d ] ");
565248,1157988352,0,0,PS1,CERRC,CerrcGetCellAccessInfoFromStoredSib1_index,P_VALUE,swLogPrintf("Get accessInfo from cellAccessRelatedInfoList-r14 [ %d ] ");
565248,1157990400,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_fbi,P_VALUE,swLogPrintf("Cell is barred due to freqBandIndicator ( %d ) not supported ! ");
565248,1157994495,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_csg,P_SIG,swLogPrintf("Cell is barred due to it is a CSG cell , but UE does NOT support CSG ! ");
565248,1157996543,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_imsEm,P_SIG,swLogPrintf("Cell is barred due to not support IMS emergency bearer services ! ");
565248,1157998591,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_reserved,P_VALUE,swLogPrintf("Cell is barred due to all PLMN in SIB1 is ' resverd ' for operator and no valid AC11 / AC15! ");
565248,1158000639,0,0,PS1,CERRC,CerrcGetCellBarStatusFromSib1_bar,P_VALUE,swLogPrintf("Cell is barred due to SIB1->cellBarred is TRUE! ");
565248,1158001664,0,0,PS1,CERRC,CerrcGetCellStatusFromSib1_status,P_SIG,swLogPrintf("CELL ( %d , %d ) , cellStatus %e<CerrcCellStatus> , selectedPlmnIdx ( %d ) , band ( %d ) ");
565248,1158002944,0,0,PS1,CERRC,CerrcCheckCampAvailable_s,P_VALUE,swLogPrintf("Cell is not suitable due to criterionS fail : Srxlev ( %d ) , Squal ( %d ) : ");
565248,1158004736,0,0,PS1,CERRC,CerrcCheckIfDetectedCellSatisfiedCriterionS_weakCell,P_VALUE,swLogPrintf("AT+ECCFG = ' QRxLevMin ' ( %d ) ");
565248,1158007040,0,0,PS1,CERRC,CerrcWeakCellCampOpt_delta,P_VALUE,swLogPrintf("deltaRsrp ( %d ) , deltaRsrq ( %d ) ");
565248,1158008832,0,0,PS1,CERRC,CerrcWeakCellCampOpt_weakCell,P_VALUE,swLogPrintf("AT+ECCFG = ' QRxLevMin ' ( %d ) ");
565248,1158011648,0,0,PS1,CERRC,CerrcRemoveTimeoutBarredCell_rmv,P_VALUE,swLogPrintf("Unbarred Cell ( %d , %d ) due to timeout , barCause ( %d ) , barTimeLength ( %d ) in seconds ");
565248,1158013696,0,0,PS1,CERRC,CerrcAddCellToBarredList_notUpdate,P_VALUE,swLogPrintf("Cell ( %d , %d ) has already existed in barredList due to cause %e<CerrcCellBarredCause> , barTimeLength ( %d ) , do not update it. ");
565248,1158015744,0,0,PS1,CERRC,CerrcAddCellToBarredList_entry,P_VALUE,swLogPrintf("Add new barred cell ( %d , %d ) due to cause %e<CerrcCellBarredCause> , barTimeLength ( %d ) in seconds ");
565248,1158019071,0,0,PS1,CERRC,CerrcAddCellToBarredList_full,P_WARNING,swLogPrintf("The barred cell array is full! ");
565248,1158019840,0,0,PS1,CERRC,CerrcAddOverlappedCellToBarredList_entry,P_VALUE,swLogPrintf("Barred the overlapped cell ( %d , %d ) due to cause %e<CerrcCellBarredCause> , barTimeLength ( %d ) in seconds ");
565248,1158022144,0,0,PS1,CERRC,CerrcCheckIfCellBarred_true,P_VALUE,swLogPrintf("Cell ( %d , %d ) is barred due to cause %e<CerrcCellBarredCause> , barStartTime ( %d ) , currentTime ( %d ) ");
565248,1158023168,0,0,PS1,CERRC,CerrcBarCurrentCellWithCause_default,P_WARNING,swLogPrintf("Unexpect barCause %e<CerrcCellBarredCause> ");
565248,1158025472,0,0,PS1,CERRC,CerrcRecordAndRmvLocalBarredCells_full,P_VALUE,swLogPrintf("freqList [ ] is full , numOfFreq ( %d ) > = maxNumOfFreq ( %d ) ");
565248,1158027776,0,0,PS1,CERRC,CerrcRecordAndRmvLocalBarredCells_rmv,P_VALUE,swLogPrintf("Unbarred Cell ( %d , %d ) due to no other cell was found , barCause ( %d ) ");
565248,1158030080,0,0,PS1,CERRC,CerrcUnbarredCellWithCause_rmv,P_VALUE,swLogPrintf("Unbarred Cell ( %d , %d ) with barCause ( %d ) before barTimeLength ( %d ) expired ");
565248,1158032128,0,0,PS1,CERRC,CerrcUnbarredCellWithSpecificCell_rmv,P_VALUE,swLogPrintf("Unbarred Specific Cell ( %d , %d ) with barCause ( %d ) before barTimeLength ( %d ) expired ");
565248,1158034176,0,0,PS1,CERRC,CerrcExistBarredCell_true,P_VALUE,swLogPrintf("Exist RRC barred Cell ( %d , %d ) with barCause ( %d ) , barTimeLength ( %d ) ");
565248,1158036224,0,0,PS1,CERRC,CerrcUnbarredCellWithSpecificCause_rmv,P_VALUE,swLogPrintf("Unbarred Cell ( %d , %d ) with barCause ( %d ) before barTimeLength ( %d ) expired ");
565248,1158038272,0,0,PS1,CERRC,CerrcActivateCellQoffsetTemp_entry,P_VALUE,swLogPrintf("Apply cell ( %d , %d ) QoffsetTemp ( %d ) for %d seconds ");
565248,1158041599,0,0,PS1,CERRC,CerrcActivateCellQoffsetTemp_full,P_WARNING,swLogPrintf("The cell QoffsetTemp array is full! ");
565248,1158042112,0,0,PS1,CERRC,CerrcGetCellQoffsetTemp_ret,P_VALUE,swLogPrintf("CELL ( %d , %d ) : qOffsetTemp ( %d ) ");
565248,1158044672,0,0,PS1,CERRC,CerrcRemoveInvalidRiskPercent_rmv,P_VALUE,swLogPrintf("Remove cell ( %d , %d ) riskPercent ( %d ) due to expiry %d minutes , numberOfRiskCell ( %d ) ");
565248,1158046208,0,0,PS1,CERRC,CerrcRecordCellRiskPercent_exit,P_VALUE,swLogPrintf("Do NOT record cell ( %d , %d ) , invalid riskPercent ( %d ) ");
565248,1158048512,0,0,PS1,CERRC,CerrcRecordCellRiskPercent_update,P_VALUE,swLogPrintf("Update cell ( %d , %d ) riskPercent ( %d ) for %d minutes ");
565248,1158050816,0,0,PS1,CERRC,CerrcRecordCellRiskPercent_add,P_VALUE,swLogPrintf("Add new cell ( %d , %d ) riskPercent ( %d ) for %d minutes , numberOfRiskCell ( %d ) ");
565248,1158053887,0,0,PS1,CERRC,CerrcRecordCellRiskPercent_full,P_WARNING,swLogPrintf("The cell risk array is full! ");
565248,1158054400,0,0,PS1,CERRC,CerrcGetCellRiskPercent_ret,P_INFO,swLogPrintf("CELL ( %d , %d ) : riskPercent ( %d ) ");
565248,1158056192,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_exist,P_VALUE,swLogPrintf("Cell ( %d , %d ) is already in the visited cell list ");
565248,1158058752,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_old,P_VALUE,swLogPrintf("Remove oldest Cell ( %d , %d ) , PLMN ( %X-%X ) in the visited cell list ");
565248,1158060288,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_add,P_VALUE,swLogPrintf("Add Cell ( %d , %d ) in the visited cell list ");
565248,1158064127,0,0,PS1,CERRC,CerrcAddCellToVisitedCellList_full,P_WARNING,swLogPrintf("The visited cell array is full ! ");
565248,1158064384,0,0,PS1,CERRC,CerrcCheckIfCellInVisitedCellList_true,P_VALUE,swLogPrintf("Cell ( %d , %d ) is found in visited cell list ");
565248,1158066176,0,0,PS1,CERRC,CerrcGetInterFreqFromVisitedCellList_nusupport,P_VALUE,swLogPrintf("EARFCN ( %d ) is NOT supported yet ");
565248,1158070271,0,0,PS1,CERRC,CerrcDetectMobilityState_high,P_VALUE,swLogPrintf("Enter High-mobility state! ");
565248,1158072319,0,0,PS1,CERRC,CerrcDetectMobilityState_medium,P_VALUE,swLogPrintf("Enter Medium-mobility state! ");
565248,1158074367,0,0,PS1,CERRC,CerrcDetectMobilityState_normal,P_VALUE,swLogPrintf("Enter Normal-mobility state! ");
565248,1158074368,0,0,PS1,CERRC,CerrcInMobilityState_conn,P_VALUE,swLogPrintf("UE is in mobility state %e<CerrcMobilityState> in RRC_CONNECTED state. ");
565248,1158076416,0,0,PS1,CERRC,CerrcInMobilityState_idle,P_VALUE,swLogPrintf("UE is in mobility state %e<CerrcMobilityState> in RRC_IDLE state. ");
565248,1158080511,0,0,PS1,CERRC,CerrcAddFreqToDeprioritisationList_full,P_WARNING,swLogPrintf("Already received 8 deprioritisationReq for different frequency! ");
565248,1158080768,0,0,PS1,CERRC,CerrcClearEscapeCellFromList_info,P_VALUE,swLogPrintf("Delete carrierFreq ( %d ) , phyCellId ( %d ) from escapeCellList. ");
565248,1158082816,0,0,PS1,CERRC,CerrcRemoveTimeoutEscapeCell_info,P_VALUE,swLogPrintf("Remove carrierFreq ( %d ) , phyCellId ( %d ) from escapeCellList for over time. ");
565248,1158084864,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info1,P_VALUE,swLogPrintf("Move the escape cell ( %d , %d ) into BarredCellList. ");
565248,1158087168,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info2,P_VALUE,swLogPrintf("Update the escape cell ( %d , %d ) startTime and pos ( %d ) . ");
565248,1158089216,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info3,P_VALUE,swLogPrintf("Replace escapeCellList oldest one with the escape cell ( %d , %d ) , pos ( %d ) . ");
565248,1158091264,0,0,PS1,CERRC,CerrcAddCelIntoEscapeCellList_info4,P_VALUE,swLogPrintf("Add the escape cell ( %d , %d ) into EscapeCellList , pos ( %d ) . ");
565248,1158093056,0,0,PS1,CERRC,CerrcHandlePhyEscapeCell_entry,P_VALUE,swLogPrintf("Handle new escape cell ( %d , %d ) ");
565248,1158095104,0,0,PS1,CERRC,CerrcHandlePhyEscapeCell_info1,P_VALUE,swLogPrintf("Add new escape cell ( %d , %d ) into EscapeCellList. ");
565248,1158097152,0,0,PS1,CERRC,CerrcHandlePhyEscapeCell_info2,P_VALUE,swLogPrintf("The escape cell ( %d , %d ) just inserted into EscapeCellList , ingore it. ");
565248,1158098944,0,0,PS1,CERRC,CerrcGetMeasCfg_default,P_ERROR,swLogPrintf("Invalid MEASCFG_ID ( %d ) ");
565248,1158103039,0,0,PS1,CERRC,CerrcCreateDeactProcContext_exist,P_WARNING,swLogPrintf("CerrcDeactProcContext already exists! ");
565248,1158105087,0,0,PS1,CERRC,CerrcHandlePendingDeactReq_1,P_VALUE,swLogPrintf("Handle pending CerrcDeactReq. ");
565248,1158105088,0,0,PS1,CERRC,CerrcResetSleep2ContextToDeact_meas,P_VALUE,swLogPrintf("CERRC Intra / Inter meas is ongoing ! measAction ( 0x%X ) ");
565248,1158107392,0,0,PS1,CERRC,CerrcResetSleep2ContextToDeact_MDT,P_VALUE,swLogPrintf("VarLogMeasConfig ( %d ) or VarLogMeasReport ( %d ) exists ! ");
565248,1158111231,0,0,PS1,CERRC,CerrcStoreInterFreqInDeactContext_else,P_WARNING,swLogPrintf("CerrcDeactProcContext has not been created !! ");
565248,1158111488,0,0,PS1,CERRC,CerrcStopHibTimerWhenEnterPsm_t320,P_WARNING,swLogPrintf("Treat T320 as expired : t320Ms ( %d ) , t3412Ms ( %d ) ");
565248,1158113536,0,0,PS1,CERRC,CerrcStopHibTimerWhenEnterPsm_t325,P_WARNING,swLogPrintf("Treat T325 as expired : t325Ms ( %d ) , t3412Ms ( %d ) ");
565248,1158115584,0,0,PS1,CERRC,CerrcStopHibTimerWhenEnterPsm_t330,P_WARNING,swLogPrintf("Treat T330 as expired : t330Ms ( %d ) , t3412Ms ( %d ) ");
565248,1158117376,0,0,PS1,CERRC,CerrcDeactiveProcess_cause,P_VALUE,swLogPrintf("CerrcDeactiveProcess : cause %e<DeactiveCause> ");
565248,1158119424,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_cause,P_VALUE,swLogPrintf("CerrcDeactReq : cause %e<CerrcDeactReason> ");
565248,1158123519,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_idle,P_VALUE,swLogPrintf("Received CerrcDeactReq in CERRC_IDLE ! ");
565248,1158123520,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_rccState,P_WARNING,swLogPrintf("Received CerrcDeactReq while RccState is %e<CerrcRccState> ! ");
565248,1158127615,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_conn,P_VALUE,swLogPrintf("Received CerrcDeactReq in CERRC_CONNECTED ! ");
565248,1158129663,0,0,PS1,CERRC,CerrcHandleCerrcDeactReq_state,P_ERROR,swLogPrintf("Received CerrcDeactReq in CERRC_INVALID_STATE ! ");
565248,1158130432,0,0,PS1,CERRC,CerrcSendCerrcDeactCnf_end,P_VALUE,swLogPrintf("CerrcDeactCnf : numOfFreq ( %d ) , freq [ 0 ] = %d , freq [ 1 ] = %d , freq [ 2 ] = %d ");
565248,1158131712,0,0,PS1,CERRC,CerrcSendCephyDeactReq_cause,P_VALUE,swLogPrintf("CephyDeactReq : cause %e<DeactiveCause> ");
565248,1158133760,0,0,PS1,CERRC,CerrcHandleCephyDeactCnf_state,P_WARNING,swLogPrintf("Receive CephyDeactCnf in wrong RrcState %e<CerrcState>! ");
565248,1158135808,0,0,PS1,CERRC,CerrcHandleCephyResetInd_idle,P_VALUE,swLogPrintf("Received CephyResetInd in RRC_IDLE , while RccState is %e<CerrcRccState> ! ");
565248,1158139903,0,0,PS1,CERRC,CerrcHandleCephyResetInd_conn,P_VALUE,swLogPrintf("Received CephyResetInd in CERRC_CONNECTED ! ");
565248,1158139904,0,0,PS1,CERRC,CerrcHandleCephyResetInd_macReset,P_WARNING,swLogPrintf("Received CephyResetInd in CERRC_CONNECTED ! RccState %e<CerrcRccState> ");
565248,1158143999,0,0,PS1,CERRC,CerrcHandleCephyResetInd_deact,P_VALUE,swLogPrintf("Received CephyResetInd in CERRC_DEACTIVATED ! ");
565248,1158146047,0,0,PS1,CERRC,CerrcHandleCephyResetInd_state,P_ERROR,swLogPrintf("Received CephyResetInd in CERRC_INVALID_STATE ! ");
565248,1158148095,0,0,PS1,CERRC,CerrcCreateAssistedLocateContext_exist,P_WARNING,swLogPrintf("pAssistedLocContext already exists! ");
565248,1158150143,0,0,PS1,CERRC,CerrcCreateAssistedLocateContext_err1,P_ERROR,swLogPrintf("CerrcCcmBasicCellListInfoReq ( BCINFO ) : reqMaxCellNum is 0 ! ");
565248,1158150144,0,0,PS1,CERRC,CerrcCreateAssistedLocateContext_err2,P_ERROR,swLogPrintf("CerrcCcmBasicCellListInfoReq ( BCINFO ) : reqMaxCellNum is %d ! ");
565248,1158154239,0,0,PS1,CERRC,CerrcFillSCellBasicInfo_sib1,P_ERROR,swLogPrintf("No serving cell ' s SIB1 available !! ");
565248,1158155008,0,0,PS1,CERRC,CerrcStoreNCellInAssistedLocContext_add,P_VALUE,swLogPrintf("Add NCELL ( %d , %d ) in context , RSRP ( %d ) , total numOfNcell ( %d ) ");
565248,1158156800,0,0,PS1,CERRC,CerrcStoreNCellInAssistedLocContext_ignore,P_VALUE,swLogPrintf("Ingore NCELL ( %d , %d ) due to RSRP ( %d ) is too low and the NCELL list is full! ");
565248,1158158848,0,0,PS1,CERRC,CerrcRefreshNCellInAssistedLocContext_remove,P_VALUE,swLogPrintf("Remove inter-freq NCELL ( %d , %d ) in context , new total numOfNcell ( %d ) ");
565248,1158161152,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_lockcell,P_VALUE,swLogPrintf("Cell locked but sCellInfo.earfcn ( %d ) , sCellInfo.cellId ( %d ) is different from locked cell earfcn ( %d ) , cellId ( %d ) ");
565248,1158162688,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_lockfreq,P_VALUE,swLogPrintf("freq locked but sCellInfo.earfcn ( %d ) is different from locked cell earfcn ( %d ) ");
565248,1158164992,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_ncell,P_VALUE,swLogPrintf("CerrcCcmBasicCellListInfoCnf : sCellPresent ( %d ) , pAssistedLocContext->numOfNcell ( %d ) , pBasicCellListInfoCnf->nCellNum ( %d ) ");
565248,1158166784,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_scell1,P_VALUE,swLogPrintf("CerrcCcmBasicCellListInfoCnf : only current SCELL ( %d , %d ) ");
565248,1158168832,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_scell2,P_VALUE,swLogPrintf("CerrcCcmBasicCellListInfoCnf : only source SCELL ( %d , %d ) ");
565248,1158172671,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_scell3,P_ERROR,swLogPrintf("Serving cell should be exist !! ");
565248,1158174719,0,0,PS1,CERRC,CerrcSendCerrcCcmBasicCellListInfoCnf_null,P_VALUE,swLogPrintf("CerrcCcmBasicCellListInfoCnf : Neither SCELL nor NCELL is included !! ");
565248,1158175488,0,0,PS1,CERRC,CerrcHandleCerrcCcmBasicCellListInfoReq_deact,P_WARNING,swLogPrintf("Not under PSM state ( %d ) , or waiting for CephyDeactCnf , or there is no valid freq or band , lastCampCellCarrierFreq = %d , storedBandNum = %d , bSearchBand = %d ! ");
565248,1158177024,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_ncell,P_VALUE,swLogPrintf("CerrcCcmAbortBasicCellListInfoCnf : sCellPresent ( %d ) , nCellNum ( %d ) ");
565248,1158179072,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_scell1,P_VALUE,swLogPrintf("CerrcCcmAbortBasicCellListInfoCnf : only current SCELL ( %d , %d ) ");
565248,1158182911,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_scell2,P_ERROR,swLogPrintf("Serving cell should be exist !! ");
565248,1158184959,0,0,PS1,CERRC,CerrcSendCerrcCcmAbortBasicCellListInfoCnf_null,P_VALUE,swLogPrintf("CerrcCcmAbortBasicCellListInfoCnf : Neither SCELL nor NCELL is included !! ");
565248,1158187007,0,0,PS1,CERRC,CerrcSendCephyBasicCellInfoReq_freq,P_ERROR,swLogPrintf("No last camped cell info when enter PSM ! ");
565248,1158188032,0,0,PS1,CERRC,CerrcSendCephyBasicCellInfoReq_psm,P_VALUE,swLogPrintf("CephyBasicCellInfoReq : numOfFreq ( %d ) , freqList [ 0 ] ( %d ) , numOfBand ( %d ) , bandList [ 0 ] ( %d ) , bandList [ 1 ] ( %d ) ");
565248,1158189312,0,0,PS1,CERRC,CerrcSendCephyBasicCellInfoReq_intra,P_VALUE,swLogPrintf("CephyBasicCellInfoReq : intra-freq ( %d ) , total numOfFreq ( %d ) ");
565248,1158191360,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_interFreq,P_VALUE,swLogPrintf("CephyBasicCellInfoCnf : found interFreq ( %d ) , intraFreq ( %d ) ! ");
565248,1158195199,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_nocell,P_VALUE,swLogPrintf("CephyBasicCellInfoCnf : no cell found ! ");
565248,1158195456,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_stop,P_VALUE,swLogPrintf("CephyBasicCellInfoCnf : cellDetected ( %d ) or reported inter-freq ( %d ) NCELL ! ");
565248,1158197248,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_act,P_ERROR,swLogPrintf("Received CephyBasicCellInfoCnf in wrong ActStatus ( %d ) ! ");
565248,1158201343,0,0,PS1,CERRC,CerrcHandleCephyBasicCellInfoCnf_else,P_ERROR,swLogPrintf("Received unexpected CephyBasicCellInfoCnf in CONNECTED state ! ");
565248,1158203391,0,0,PS1,CERRC,CerrcPmuVote_sourceCell,P_ERROR,swLogPrintf("Source cell should be cleared ! ");
565248,1158205439,0,0,PS1,CERRC,CerrcPmuVote_deactHib,P_VALUE,swLogPrintf("CERRC vote to enter HIB state in CERRC_DEACTIVATED ! ");
565248,1158205696,0,0,PS1,CERRC,CerrcPmuVote_deactSlp2,P_VALUE,swLogPrintf("CERRC vote to enter SLEEP2 state in CERRC_DEACTIVATED ! bConfigPresent ( %d ) , logMeasInfoListLength ( %d ) ");
565248,1158208000,0,0,PS1,CERRC,CerrcPmuVote_idle,P_VALUE,swLogPrintf("CERRC current measAction ( 0x%x ) , bConfigPresent ( %d ) , logMeasInfoListLength ( %d ) ");
565248,1158211583,0,0,PS1,CERRC,CerrcPmuVote_idleHib,P_VALUE,swLogPrintf("CERRC vote to enter HIB state in CERRC_IDLE ! ");
565248,1158213631,0,0,PS1,CERRC,CerrcPmuVote_idleSlp2,P_VALUE,swLogPrintf("CERRC vote to enter SLEEP2 state in CERRC_IDLE ! ");
565248,1158213632,0,0,PS1,CERRC,CerrcPmuDeepSlpEnterCallBack_entry,P_VALUE,swLogPrintf("Cerrc Enter Deep Sleep , the lowPowerState is %d ");
565248,1158217727,0,0,PS1,CERRC,CerrcPmuDeepSlpEnterCallBack_deact,P_VALUE,swLogPrintf("Do nothing if enter Deep Sleep in CERRC_DEACTIVATED state ! ");
565248,1158217728,0,0,PS1,CERRC,CerrcPmuDeepSlpEnterCallBack_else,P_WARNING,swLogPrintf("CERRC deep sleep call back in wrong APSleepState ( %d ) ! ");
565248,1158221823,0,0,PS1,CERRC,CerrcRestoreWhenWakeUp_hib,P_VALUE,swLogPrintf("CERRC wake up from HIBERNATE ! ");
565248,1158223871,0,0,PS1,CERRC,CerrcRestoreWhenWakeUp_sleep2,P_VALUE,swLogPrintf("CERRC wake up from SLEEP2 ! ");
565248,1158224896,0,0,PS1,CERRC,CerrcRestoreWhenWakeUp_state,P_VALUE,swLogPrintf("CerrcRestoreWhenWakeUp : RrcState %e<CerrcState> , CampOnState %e<CerrcCampOnState> , CsrState %e<CerrcCsrState> , ActStatus %e<CerrcActStatus> , RccState %e<CerrcRccState> ");
565248,1158226176,0,0,PS1,CERRC,CerrcRestartHibTimerUponExitPsm_t320,P_WARNING,swLogPrintf("Do not need to restart T320 ! t320LenMs ( %d ) , t320ElapsedMs ( %d ) ");
565248,1158228224,0,0,PS1,CERRC,CerrcRestartHibTimerUponExitPsm_t325,P_WARNING,swLogPrintf("Do not need to restart T325 ! t325LenMs ( %d ) , t325ElapsedMs ( %d ) ");
565248,1158230272,0,0,PS1,CERRC,CerrcRestartHibTimerUponExitPsm_t330,P_WARNING,swLogPrintf("Do not need to restart T330 ! t330LenMs ( %d ) , t330ElapsedMs ( %d ) ");
565248,1158234111,0,0,PS1,CERRC,CerrcInit_entry,P_VALUE,swLogPrintf("Initialize CERRC task global variables when power on ! ");
565248,1158234112,0,0,PS1,CERRC,CerrcMain_sig,P_WARNING,swLogPrintf("Unknown CERRC SIG : 0X%X ");
565248,1158236672,0,0,PS1,CERRC,CerrcCheckIfRplmnInPlmnList_end,P_VALUE,swLogPrintf("RPLMN ( %X-%X ) is not included in the plmnList ( numOfPlmn = %d ) ");
565248,1158238976,0,0,PS1,CERRC,CerrcCheckIfAsn1PlmnInPlmnList_false,P_VALUE,swLogPrintf("The Cell ( PLMN ( %X-%X ) ) is NOT part of the AreaConfiguration : PLMN ( %X-%X ) ");
565248,1158240256,0,0,PS1,CERRC,CerrcFillMdtScellRsrpResult_err,P_ERROR,swLogPrintf("Invalid PCell RSRP ( %d ) ! ");
565248,1158242304,0,0,PS1,CERRC,CerrcFillMdtScellRsrqResult_err,P_ERROR,swLogPrintf("Invalid PCell RSRQ ( %d ) ! ");
565248,1158244864,0,0,PS1,CERRC,CerrcStoreRachInfo_entry,P_INFO,swLogPrintf("CemacRAInd : numberOfPreamblesSent ( %d ) , contentionDetected ( %d ) , maxTxPowerReached ( %d ) ");
565248,1158248447,0,0,PS1,CERRC,CerrcStoreRachInfo_rccEst,P_WARNING,swLogPrintf("RachInfo is NOT stored due to incorrect RccState ( CONN_EST ) ! ");
565248,1158248448,0,0,PS1,CERRC,CerrcEncodeRLF_Report_r9_size,P_ERROR,swLogPrintf("Need to extend memory reserved for RLF-Report to ( %d ) ! ");
565248,1158250496,0,0,PS1,CERRC,CerrcDecodeRLF_Report_r9_dec,P_ERROR,swLogPrintf("RLF_Report decode error : %d ");
565248,1158252544,0,0,PS1,CERRC,CerrcEncodeRLF_Report_v9e0_size,P_ERROR,swLogPrintf("Need to extend memory reserved for RLF-Report-v9e0 to ( %d ) ! ");
565248,1158254592,0,0,PS1,CERRC,CerrcDecodeRLF_Report_v9e0_dec,P_ERROR,swLogPrintf("RLF_Report_v9e0 decode error : %d ");
565248,1158258687,0,0,PS1,CERRC,CerrcFillRlfReportT304Expiry_else,P_ERROR,swLogPrintf("T304 expiry but no stored RLF-Report info ! ");
565248,1158258688,0,0,PS1,CERRC,CerrcFillRlfReportRlf_rlfCause,P_ERROR,swLogPrintf("Invalid rlf-Cause %e<CerrcRlfCause> ! ");
565248,1158262783,0,0,PS1,CERRC,CerrcFillReestCellIdInRlfReport_else,P_VALUE,swLogPrintf("Re-establishment was NOT initiated due to radio link failure or handover failure ");
565248,1158264831,0,0,PS1,CERRC,CerrcGetRlfReportAvailable_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! ");
565248,1158265088,0,0,PS1,CERRC,CerrcGetRlfReportAvailable_else,P_VALUE,swLogPrintf("the RPLMN ( %X-%X ) is NOT included in plmn-IdentityList stored in VarRLF-Report ! ");
565248,1158268927,0,0,PS1,CERRC,CerrcGetRlfReportAvailable_noPlmn,P_WARNING,swLogPrintf("NOT getting any PLMN from EMM ! ");
565248,1158268928,0,0,PS1,CERRC,CerrcEncodeVarLogMeasConfig_r12_size,P_ERROR,swLogPrintf("Need to extend memory reserved for VarLogMeasConfig to ( %d ) ! ");
565248,1158270976,0,0,PS1,CERRC,CerrcDecodeVarLogMeasConfig_r12_dec,P_ERROR,swLogPrintf("VarLogMeasConfig_r12 decode error : %d ");
565248,1158273024,0,0,PS1,CERRC,CerrcEncodeLogMeasList_r10_size,P_WARNING,swLogPrintf("Memory reserved for LogMeasInfoList is full ( %d ) ! Stop T330 and release VarLogMeasConfig ");
565248,1158275072,0,0,PS1,CERRC,CerrcDecodeLogMeasInfoList_r10_dec,P_ERROR,swLogPrintf("LogMeasInfoList_r10 decode error : %d ");
565248,1158277376,0,0,PS1,CERRC,CerrcCellIsPartOfAreaConfig_CGI,P_VALUE,swLogPrintf("The Cell ( cellIdentity = %d ) is NOT part of the AreaConfiguration : cellIdentity ( %d ) ");
565248,1158279424,0,0,PS1,CERRC,CerrcCellIsPartOfAreaConfig_TAC,P_VALUE,swLogPrintf("The Cell ( TAC = %d ) is NOT part of the AreaConfiguration : TAC ( %d ) ");
565248,1158283263,0,0,PS1,CERRC,CerrcPerformMeasurementsLogging_config,P_WARNING,swLogPrintf("VarLogMeasConfig has been released ! ");
565248,1158285311,0,0,PS1,CERRC,CerrcPerformMeasurementsLogging_T330,P_WARNING,swLogPrintf("T330 is NOT running ! ");
565248,1158287359,0,0,PS1,CERRC,CerrcPerformMeasurementsLogging_add,P_SIG,swLogPrintf("Adding a logged measurement entry in VarLogMeasReport ! ");
565248,1158289407,0,0,PS1,CERRC,CerrcGetLogMeasAvailable_unSupport,P_VALUE,swLogPrintf("Not support LoggedMeasurementsIdle ! ");
565248,1158291455,0,0,PS1,CERRC,CerrcGetLogMeasAvailable_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! ");
565248,1158291712,0,0,PS1,CERRC,CerrcGetLogMeasAvailable_else,P_VALUE,swLogPrintf("the RPLMN ( %X-%X ) is NOT included in plmn-IdentityList stored in VarLogMeasReport ! ");
565248,1158293504,0,0,PS1,CERRC,CerrcEncodeConnEstFailReport_r11_size,P_ERROR,swLogPrintf("Need to extend memory reserved for ConnEstFailReport-r11 to ( %d ) ! ");
565248,1158295552,0,0,PS1,CERRC,CerrcDecodeConnEstFailReport_r11_dec,P_ERROR,swLogPrintf("ConnEstFailReport_r11 decode error : %d ");
565248,1158299647,0,0,PS1,CERRC,CerrcGetConnEstFailInfoAvailable_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! ");
565248,1158300416,0,0,PS1,CERRC,CerrcGetConnEstFailInfoAvailable_else,P_VALUE,swLogPrintf("the RPLMN ( %X-%X ) is NOT equal to plmn-Identity ( %X-%X ) stored in VarConnEstFailReport ! ");
565248,1158303743,0,0,PS1,CERRC,CerrcHandleLoggedMeasurementConfiguration_unSupport,P_WARNING,swLogPrintf("Ignore this LoggedMeasurementConfiguration due to not support LoggedMeasurementsIdle ! ");
565248,1158305791,0,0,PS1,CERRC,CerrcHandleLoggedMeasurementConfiguration_noRplmn,P_WARNING,swLogPrintf("NO valid RPLMN ! Ignore this LoggedMeasurementConfiguration ! ");
565248,1158306048,0,0,PS1,CERRC,CerrcHandleLoggedMeasurementConfiguration_plmnList,P_VALUE,swLogPrintf("Set plmn-IdentityList in VarLogMeasReport to include the RPLMN ( %X-%X ) ! ");
565248,1158309887,0,0,PS1,CERRC,CerrcCreateConnMeasContext_exist,P_VALUE,swLogPrintf("CerrcConnMeasContext already exists! \n ");
565248,1158310144,0,0,PS1,CERRC,CerrcAddCellToMeasReportingEntryInVarMeasReportList_info,P_VALUE,swLogPrintf("Add measId ( %d ) phyCellId ( %d ) into varMeasReportList ");
565248,1158311936,0,0,PS1,CERRC,CerrcAddCellToMeasReportingEntryInVarMeasReportList_error,P_ERROR,swLogPrintf("Cell Num of cellsTriggered exceed MAX , Ingore phyCellId ( %d ) ");
565248,1158313984,0,0,PS1,CERRC,CerrcRmvMeasReportingEntryInVarMeasReportList_info1,P_VALUE,swLogPrintf("rmv measReportingEntry measId ( %d ) from VarMeasReport ");
565248,1158316032,0,0,PS1,CERRC,CerrcRmvMeasReportingEntryInVarMeasReportList_info2,P_VALUE,swLogPrintf("rmv measReportingEntry measId ( %d ) from VarMeasReport ");
565248,1158318336,0,0,PS1,CERRC,CerrcRmvCellFromMeasReportingEntryInVarMeasReportList_reportLeave,P_VALUE,swLogPrintf("measId ( %d ) , phyCellId ( %d ) statify A3-reportLeave ");
565248,1158320384,0,0,PS1,CERRC,CerrcJudgeCellExistInVarMeasReportList_info,P_VALUE,swLogPrintf("measId ( %d ) phyCellId ( %d ) already exist in VarMeasReport ");
565248,1158324223,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_measCycleSCell,P_VALUE,swLogPrintf("NW config measCycleSCell! ");
565248,1158326271,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_measDS,P_VALUE,swLogPrintf("NW config measDS! ");
565248,1158328319,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_rmtc,P_VALUE,swLogPrintf("NW config rmtc! ");
565248,1158330367,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_tx_ResourcePool,P_VALUE,swLogPrintf("NW config tx_ResourcePool! ");
565248,1158332415,0,0,PS1,CERRC,CerrcReconfigMeasObjectInVarMeasConfig_not_support_fembms_MixedCarrier,P_VALUE,swLogPrintf("NW config fembms_MixedCarrier! ");
565248,1158334463,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_reportStrongestCSI_RS,P_VALUE,swLogPrintf("NW config reportStrongestCSI_RSs! ");
565248,1158336511,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_reportCRS_Meas,P_VALUE,swLogPrintf("NW config reportCRS_Meas! ");
565248,1158338559,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_triggerQuantityCSI_RS,P_VALUE,swLogPrintf("NW config triggerQuantityCSI_RS! ");
565248,1158340607,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_reportSSTD_Meas,P_VALUE,swLogPrintf("NW config reportSSTD_Meas! ");
565248,1158342655,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_rs_sinr_Config,P_VALUE,swLogPrintf("NW config rs_sinr_Config! ");
565248,1158344703,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_measRSSI_ReportConfig,P_VALUE,swLogPrintf("NW config measRSSI_ReportConfig! ");
565248,1158346751,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_ul_DelayConfig,P_VALUE,swLogPrintf("NW config ul_DelayConfig! ");
565248,1158348799,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_ue_RxTxTimeDiffPeriodicalTDD,P_VALUE,swLogPrintf("NW config ue_RxTxTimeDiffPeriodicalTDD! ");
565248,1158350847,0,0,PS1,CERRC,CerrcPrintNotSupportReportConfig_not_support_purpose_v1430,P_VALUE,swLogPrintf("NW config purpose_v1430! ");
565248,1158351104,0,0,PS1,CERRC,CerrcAddModReportConfigInVarMeasConfig_Tag,P_WARNING,swLogPrintf("Skip Inter-RAT reportConfig : reportConfigId ( %d ) , tag ( %d ) ");
565248,1158353152,0,0,PS1,CERRC,CerrcAddModMeasObjectInVarMeasConfig_Tag,P_WARNING,swLogPrintf("Skip Inter-RAT MeasObject : measObjectId ( %d ) , tag ( %d ) ");
565248,1158355200,0,0,PS1,CERRC,CerrcAddModMeasObjectExtR13InVarMeasConfig_Tag,P_WARNING,swLogPrintf("Skip Inter-RAT MeasObjectExt_r13 : measObjectId_r13 ( %d ) , tag ( %d ) ");
565248,1158359039,0,0,PS1,CERRC,CerrcGetMeasObjectIdAndMeasObjectInfoByCarrierFreq_entry,P_WARNING,swLogPrintf("Invalid carrierFreq = 0 ");
565248,1158359296,0,0,PS1,CERRC,CerrcGetMeasObjectIdAndMeasObjectInfoByCarrierFreq_tag,P_ERROR,swLogPrintf("Unsupported measObject->tag ( %d ) , measObjectId ( %d ) ");
565248,1158361344,0,0,PS1,CERRC,CerrcGetMeasObjectIdAndMeasObjectInfoByCarrierFreq_tag_r13,P_ERROR,swLogPrintf("Unsupported measObjectListExt_r13->tag ( %d ) , measObjectId_r13 ( %d ) ");
565248,1158363136,0,0,PS1,CERRC,CerrcGetMeasObjectIdAndMeasObjectInfoByCarrierFreq_MeasObjectId,P_WARNING,swLogPrintf("Invalid MeasObjectId for carrierFreq ( %d ) ");
565248,1158365184,0,0,PS1,CERRC,CerrcGetMeasObjectIdAndMeasObjectInfoByCarrierFreqd_MeasObjectEutra,P_WARNING,swLogPrintf("Invalid MeasObjectEutra for carrierFreq ( %d ) ");
565248,1158369279,0,0,PS1,CERRC,CerrcGetCarrierFreqAndMeasObjectInfoByMeasObjectId_entry,P_WARNING,swLogPrintf("Invalid MeasObjectId = 0 ");
565248,1158369536,0,0,PS1,CERRC,CerrcGetCarrierFreqAndMeasObjectInfoByMeasObjectId_tag,P_ERROR,swLogPrintf("Unsupported measObject->tag ( %d ) , measObjectId ( %d ) ");
565248,1158371584,0,0,PS1,CERRC,CerrcGetCarrierFreqAndMeasObjectInfoByMeasObjectId_tag_r13,P_ERROR,swLogPrintf("Unsupported measObjectListExt_r13->tag ( %d ) , measObjectId_r13 ( %d ) ");
565248,1158373376,0,0,PS1,CERRC,CerrcGetCarrierFreqAndMeasObjectInfoByMeasObjectId_CarrierFreq,P_WARNING,swLogPrintf("Invalid CarrierFreq for MeasObjectId ( %d ) ");
565248,1158375424,0,0,PS1,CERRC,CerrcGetCarrierFreqAndMeasObjectInfoByMeasObjectId_MeasObjectEutra,P_WARNING,swLogPrintf("Invalid MeasObjectEutra for MeasObjectId ( %d ) ");
565248,1158377472,0,0,PS1,CERRC,CerrcGetMeasObjectIdByMeasId_invalid,P_WARNING,swLogPrintf("Not found valid MeasObjectId for measId ( %d ) ");
565248,1158379520,0,0,PS1,CERRC,CerrcGetReportConfigIdByMeasId_invalid,P_WARNING,swLogPrintf("Not found valid ReportConfigId for measId ( %d ) ");
565248,1158381568,0,0,PS1,CERRC,CerrcGetReportConfigInfoByReportConfigId_error_type,P_ERROR,swLogPrintf("only support EUTRAN! reportConfigId ( %d ) ");
565248,1158383616,0,0,PS1,CERRC,CerrcGetReportConfigInfoByReportConfigId_invalid,P_WARNING,swLogPrintf("Not found valid ReportConfigEUTRA for reportConfigId ( %d ) ");
565248,1158386432,0,0,PS1,CERRC,CerrcUpdateQuantityConfigInVarMeasConfig_not_change,P_VALUE,swLogPrintf("NW configured quantityConfig is the same with quantityConfig saved in varMeasConfig , filterCoefficientRSRPPresent = %d , filterCoefficientRSRP = %d , filterCoefficientRSRQPresent = %d , filterCoefficientRSRQ = %d ");
565248,1158389759,0,0,PS1,CERRC,CerrcProcessQuantityConfig_not_support,P_ERROR,swLogPrintf("NW config non EUTRAN quantityConfig ");
565248,1158390272,0,0,PS1,CERRC,CerrcUpdateMeasIdWithSelfCheck_rmv,P_WARNING,swLogPrintf("Remove MeasId ( %d ) due to its associated measObject ( %d ) or reportConfig ( %d ) is NOT configured. ");
565248,1158392064,0,0,PS1,CERRC,CerrcUpdateVarMeasConfig_sMeas,P_WARNING,swLogPrintf("Start INTRA / INTER meas when serving cell RSRP < ( %d + ( %d ) / 4 ) ");
565248,1158394112,0,0,PS1,CERRC,CerrcHandlePeriodMeasReportTimerExpiry_not_support,P_ERROR,swLogPrintf("preRegistrationInfoHRPDPresent = %d , measScaleFactor_r12Present = %d ");
565248,1158397951,0,0,PS1,CERRC,CerrcHandleMeasConfig_cellLocked,P_WARNING,swLogPrintf("NOT Process MeasConfig due to Enabled Cell Lock Mode. ");
565248,1158399999,0,0,PS1,CERRC,CerrcHandleMeasConfig_info,P_VALUE,swLogPrintf("Start scell s-Measure procedure. ");
565248,1158400256,0,0,PS1,CERRC,CerrcGetCellTimeToTrigger_info,P_VALUE,swLogPrintf("phyCellId ( %d ) , timeToTrigger ( %d ) ");
565248,1158402048,0,0,PS1,CERRC,CerrcFillRsrpInMeasResultPCell_err,P_ERROR,swLogPrintf("Invalid PCell RSRP ( %d ) ! ");
565248,1158404096,0,0,PS1,CERRC,CerrcFillRsrqInMeasResultPCell_err,P_ERROR,swLogPrintf("Invalid PCell RSRQ ( %d ) ! ");
565248,1158406144,0,0,PS1,CERRC,CerrcFillRsrpInMeasResultEutra_err,P_ERROR,swLogPrintf("Invalid neighbor cell RSRP ( %d ) ! ");
565248,1158408192,0,0,PS1,CERRC,CerrcFillRsrqInMeasResultEutra_err,P_ERROR,swLogPrintf("Invalid neighbor cell RSRQ ( %d ) ! ");
565248,1158412287,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_warn,P_INFO,swLogPrintf("No Valid LocationInfo could be used , not fill locationInfo in MeasResult IE. ");
565248,1158412288,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_info,P_INFO,swLogPrintf("Current LocationInfo Type is %e<CerrcLocationType> ");
565248,1158416383,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_fill1,P_INFO,swLogPrintf("Fill LocationInfo into MeasResult IE. ");
565248,1158418431,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_fill2,P_INFO,swLogPrintf("Fill horizontalVelocity_r10 into MeasResult IE. ");
565248,1158420479,0,0,PS1,CERRC,CerrcFillLocationInfoInMeasResult_fill3,P_INFO,swLogPrintf("Fill gnss_TOD_msec_r10 into MeasResult IE. ");
565248,1158422527,0,0,PS1,CERRC,CerrcFillMeasResults_warn,P_WARNING,swLogPrintf("NW expect LocationInfo Report , but UE not support it. ");
565248,1158423296,0,0,PS1,CERRC,CerrcPrintMeasResult_info,P_INFO,swLogPrintf("MeasResult measId = %d , PCellRsrp = %d , PCellRsrq = %d , NCellPresent = %d ");
565248,1158425088,0,0,PS1,CERRC,CerrcPrintMeasResult_ncell_info,P_INFO,swLogPrintf("NCellId = %d , NCellRsrp = %d , NCellRsrq = %d ");
565248,1158426880,0,0,PS1,CERRC,CerrcPostProcOfSendingPeriodMeasReport_rmv,P_VALUE,swLogPrintf("Periodical MeasReport numberOfReportsSent ( %d ) , reportAmount ( %d ) , rmv reportEntry and measId. ");
565248,1158429184,0,0,PS1,CERRC,CerrcIsNeedProcessEventForThisCell_reportNum,P_VALUE,swLogPrintf("MeasId ( %d ) Event A%d MR sent times equal to ReportAmount ( %d ) ");
565248,1158431488,0,0,PS1,CERRC,CerrcAllowTriggerEventA3_cellbarred,P_VALUE,swLogPrintf("CELL ( %d , %d ) not trigger event A%d MR due to barCause ( %d ) ");
565248,1158434304,0,0,PS1,CERRC,CerrcAllowTriggerEventA3_ecrank,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ EC RANK ( %d ) , RISK ( %d ) ] Serving Cell [ EC RANK ( %d ) , RISK ( %d ) , SNR ( %d ) ] ");
565248,1158436352,0,0,PS1,CERRC,CerrcAllowTriggerEventA3A4A5_retF,P_VALUE,swLogPrintf("CELL ( %d , %d ) not trigger event A%d MR : RSRP ( %d ) , RSRQ ( %d ) , EC RANK ( %d ) , RISK ( %d ) ");
565248,1158437376,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrpE,P_VALUE,swLogPrintf("[ A1 ] [ RSRP ] [ ENTER ] : Ms ( %d ) - Hys ( %d ) > ThreshP ( %d ) ");
565248,1158439424,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrpL,P_VALUE,swLogPrintf("[ A1 ] [ RSRP ] [ LEAVE ] : Ms ( %d ) + Hys ( %d ) < ThreshP ( %d ) ");
565248,1158441472,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrpElse,P_VALUE,swLogPrintf("[ A1 ] [ RSRP ] [ ELSE ] : Ms ( %d ) , Hys ( %d ) , ThreshP ( %d ) ");
565248,1158443520,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrqE,P_VALUE,swLogPrintf("[ A1 ] [ RSRQ ] [ ENTER ] : Ms ( %d ) - Hys ( %d ) > ThreshQ ( %d ) ");
565248,1158445568,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrqL,P_VALUE,swLogPrintf("[ A1 ] [ RSRQ ] [ LEAVE ] : Ms ( %d ) + Hys ( %d ) < ThreshQ ( %d ) ");
565248,1158447616,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_rsrqElse,P_VALUE,swLogPrintf("[ A1 ] [ RSRQ ] [ ELSE ] : Ms ( %d ) , Hys ( %d ) , ThreshQ ( %d ) ");
565248,1158449408,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA1_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A1_Threshold_Tag ( %d ) ");
565248,1158451712,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrpE,P_VALUE,swLogPrintf("[ A2 ] [ RSRP ] [ ENTER ] : Ms ( %d ) + Hys ( %d ) < ThreshP ( %d ) ");
565248,1158453760,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrpL,P_VALUE,swLogPrintf("[ A2 ] [ RSRP ] [ LEAVE ] : Ms ( %d ) - Hys ( %d ) > ThreshP ( %d ) ");
565248,1158455808,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrpElse,P_VALUE,swLogPrintf("[ A2 ] [ RSRP ] [ ELSE ] : Ms ( %d ) , Hys ( %d ) , ThreshP ( %d ) ");
565248,1158457856,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrqE,P_VALUE,swLogPrintf("[ A2 ] [ RSRQ ] [ ENTER ] : Ms ( %d ) + Hys ( %d ) < ThreshQ ( %d ) ");
565248,1158459904,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrqL,P_VALUE,swLogPrintf("[ A2 ] [ RSRQ ] [ LEAVE ] : Ms ( %d ) - Hys ( %d ) > ThreshQ ( %d ) ");
565248,1158461952,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_rsrqElse,P_VALUE,swLogPrintf("[ A2 ] [ RSRQ ] [ ELSE ] : Ms ( %d ) , Hys ( %d ) , ThreshQ ( %d ) ");
565248,1158463744,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA2_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A2_Threshold_Tag ( %d ) ");
565248,1158466304,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_cell,P_VALUE,swLogPrintf("Evaluate [ A3 ] CELL ( %d , %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158469376,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrpE,P_VALUE,swLogPrintf("[ A3 ] [ RSRP ] [ ENTER ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) -Hys ( %d ) > Mp ( %d ) +Ofp ( %d ) +Ocp ( %d ) +Off ( %d ) ");
565248,1158471424,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrpL,P_VALUE,swLogPrintf("[ A3 ] [ RSRP ] [ LEAVE ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) +Hys ( %d ) < Mp ( %d ) +Ofp ( %d ) +Ocp ( %d ) +Off ( %d ) ");
565248,1158473472,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrpElse,P_VALUE,swLogPrintf("[ A3 ] [ RSRP ] [ ELSE ] : Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , Mp ( %d ) , Ofp ( %d ) , Ocp ( %d ) , Off ( %d ) ");
565248,1158475520,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrqE,P_VALUE,swLogPrintf("[ A3 ] [ RSRQ ] [ ENTER ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) -Hys ( %d ) > Mp ( %d ) +Ofp ( %d ) +Ocp ( %d ) +Off ( %d ) ");
565248,1158477568,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrqL,P_VALUE,swLogPrintf("[ A3 ] [ RSRQ ] [ LEAVE ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) +Hys ( %d ) < Mp ( %d ) +Ofp ( %d ) +Ocp ( %d ) +Off ( %d ) ");
565248,1158479616,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA3_rsrqElse,P_VALUE,swLogPrintf("[ A3 ] [ RSRQ ] [ ELSE ] : Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , Mp ( %d ) , Ofp ( %d ) , Ocp ( %d ) , Off ( %d ) ");
565248,1158481408,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrpE,P_VALUE,swLogPrintf("[ A4 ] [ RSRP ] [ ENTER ] [ CELL ( %d , %d ) ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) -Hys ( %d ) > ThreshP ( %d ) ");
565248,1158483456,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrpL,P_VALUE,swLogPrintf("[ A4 ] [ RSRP ] [ LEAVE ] [ CELL ( %d , %d ) ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) +Hys ( %d ) < ThreshP ( %d ) ");
565248,1158485504,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrpElse,P_VALUE,swLogPrintf("[ A4 ] [ RSRP ] [ ELSE ] [ CELL ( %d , %d ) ] : Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , ThreshP ( %d ) ");
565248,1158487552,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrqE,P_VALUE,swLogPrintf("[ A4 ] [ RSRQ ] [ ENTER ] [ CELL ( %d , %d ) ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) -Hys ( %d ) > ThreshQ ( %d ) ");
565248,1158489600,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrqL,P_VALUE,swLogPrintf("[ A4 ] [ RSRQ ] [ LEAVE ] [ CELL ( %d , %d ) ] : Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) +Hys ( %d ) < ThreshQ ( %d ) ");
565248,1158491648,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_rsrqElse,P_VALUE,swLogPrintf("[ A4 ] [ RSRQ ] [ ELSE ] [ CELL ( %d , %d ) ] : Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , ThreshQ ( %d ) ");
565248,1158492416,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA4_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A4_Threshold_Tag ( %d ) ");
565248,1158494976,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_cell,P_VALUE,swLogPrintf("Evaluate [ A5 ] CELL ( %d , %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158498048,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrpE,P_VALUE,swLogPrintf("[ A5 ] [ RSRP ] [ ENTER ] : Mp ( %d ) +Hys ( %d ) < ThreshP1 ( %d ) && Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) -Hys ( %d ) > ThreshP2 ( %d ) ");
565248,1158500096,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrpL,P_VALUE,swLogPrintf("[ A5 ] [ RSRP ] [ LEAVE ] : Mp ( %d ) -Hys ( %d ) > ThreshP1 ( %d ) || Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) +Hys ( %d ) < ThreshP2 ( %d ) ");
565248,1158502144,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrpElse,P_VALUE,swLogPrintf("[ A5 ] [ RSRP ] [ ELSE ] : Mp ( %d ) , Hys ( %d ) , ThreshP1 ( %d ) , Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , ThreshP2 ( %d ) ");
565248,1158504192,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrqE,P_VALUE,swLogPrintf("[ A5 ] [ RSRQ ] [ ENTER ] : Mp ( %d ) +Hys ( %d ) < ThreshQ1 ( %d ) && Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) -Hys ( %d ) > ThreshQ2 ( %d ) ");
565248,1158506240,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrqL,P_VALUE,swLogPrintf("[ A5 ] [ RSRQ ] [ LEAVE ] : Mp ( %d ) -Hys ( %d ) > ThreshQ1 ( %d ) || Mn ( %d ) +Ofn ( %d ) +Ocn ( %d ) +Hys ( %d ) < ThreshQ2 ( %d ) ");
565248,1158508288,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_rsrqElse,P_VALUE,swLogPrintf("[ A5 ] [ RSRQ ] [ ELSE ] : Mp ( %d ) , Hys ( %d ) , ThreshQ1 ( %d ) , Mn ( %d ) , Ofn ( %d ) , Ocn ( %d ) , Hys ( %d ) , ThreshQ2 ( %d ) ");
565248,1158509056,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventA5_wrong,P_ERROR,swLogPrintf("TriggerQuantity ( %d ) , A5_Threshold1_Tag ( %d ) , A5_Threshold2_Tag ( %d ) ");
565248,1158511104,0,0,PS1,CERRC,CerrcJudgeIfStatisfyEventTriggerCond_info,P_INFO,swLogPrintf("Event ( A%d ) , Entering ( %d ) , Leaving ( %d ) ");
565248,1158513152,0,0,PS1,CERRC,CerrcAddCellMeasReportLeavingEntry_info2,P_VALUE,swLogPrintf("Add measId ( %d ) phyCellId ( %d ) into MeasReportLeavingEntry , cellTimeToTrigger = %d ");
565248,1158515200,0,0,PS1,CERRC,CerrcProcessCellReportInfoLeavingEntry_rmv,P_VALUE,swLogPrintf("measId = %d , phyCellId = %d has statisfied leavingConditon ( %d ms ) , remove it from varMeasReport. ");
565248,1158517248,0,0,PS1,CERRC,CerrcProcessEventMeasReport_info,P_VALUE,swLogPrintf("measId ( %d ) , reportOnLeaveCellBitmap ( %d ) , measReportFlag ( %d ) ");
565248,1158519296,0,0,PS1,CERRC,CerrcProcessPeriodMeasReport_inter,P_VALUE,swLogPrintf("PeriodMeasReport phyCellId ( %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158521344,0,0,PS1,CERRC,CerrcProcessPeriodMeasReport_inra,P_VALUE,swLogPrintf("PeriodMeasReport phyCellId ( %d ) , rsrp ( %d ) , rsrq ( %d ) ");
565248,1158523904,0,0,PS1,CERRC,CerrcProcessMeasResultForEachMeasId_invalid,P_WARNING,swLogPrintf("Invalid pMeasObjectEutran ( 0x%X ) or pReportConfigEutra ( 0x%X ) ! measId ( %d ) , measObjectId ( %d ) , reportConfigId ( %d ) ");
565248,1158525952,0,0,PS1,CERRC,CerrcProcessMeasResultForEachMeasId_info,P_VALUE,swLogPrintf("CarrierFreq ( %ld ) , measId ( %d ) , measObjId ( %d ) , reportConfigId ( %d ) , triggerType ( %d ) ( 0-Event , 1-Periodical ) ");
565248,1158526976,0,0,PS1,CERRC,CerrcProcessMeasResultForEachMeasId_periodOngoing,P_INFO,swLogPrintf("Periodical Timer ( measId = %d ) is running , delay the process until timer expired. ");
565248,1158529280,0,0,PS1,CERRC,CerrcProcessMeasResultForEachMeasId_wrong_event,P_ERROR,swLogPrintf("NOT Supported TriggerType ( %d ) , EventType ( %d ) ");
565248,1158533119,0,0,PS1,CERRC,CerrcProcessConnectedMeasResult_empty_config,P_WARNING,swLogPrintf("No available VarMeasConfig , ingore this MeasResult. ");
565248,1158533120,0,0,PS1,CERRC,CerrcProcessConnectedMeasResult_ErrObjId,P_WARNING,swLogPrintf("Not found valid MeasObjectId for CarrierFreq ( %d ) ");
565248,1158537215,0,0,PS1,CERRC,CerrcProcessMeasResultInRrcConnectedState_securityNotActivated,P_WARNING,swLogPrintf("NOT Process Connection MeasInd Due to AS Security NOT Activated ! ");
565248,1158537472,0,0,PS1,CERRC,CerrcStartT321Timer_info,P_VALUE,swLogPrintf("T321 timer length = %d , measId = %d. ");
565248,1158541311,0,0,PS1,CERRC,CerrcStartReportCGI_T321_running,P_ERROR,swLogPrintf("T321 is running! ");
565248,1158542592,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_update,P_VALUE,swLogPrintf("Update existed SIB1 info : CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158544640,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_new,P_VALUE,swLogPrintf("Add SIB1 info : CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158546688,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_rmv,P_VALUE,swLogPrintf("Remove the oldest cell : CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158548736,0,0,PS1,CERRC,CerrcRecodeSib1CellInfo_replace,P_VALUE,swLogPrintf("Remove the oldest cell and Add SIB1 info : CELL ( %d , %d ) , PLMN ( %x-%x ) , TAC ( 0x%X ) , total numOfCell ( %d ) ");
565248,1158550272,0,0,PS1,CERRC,CerrcProcessReportCGI_NcellSysInfoInd_info,P_VALUE,swLogPrintf("measId = %d , measObjectId = %d , ReportCGIPresent = %d , phyCellId = %d ");
565248,1158552064,0,0,PS1,CERRC,CerrcProcessReportCGI_NcellSysInfoInd_crc,P_WARNING,swLogPrintf("Ncell ( %d , %d ) SIB1 decode or CRC ( %d ) fail in RRC_CONNECTED state ");
565248,1158554112,0,0,PS1,CERRC,CerrcHandleT321Expiry_invalid,P_WARNING,swLogPrintf("startT321MeasId ( %d ) , measObjectId ( %d ) , pMeasObjectEutran ( 0x%X ) ");
565248,1158555648,0,0,PS1,CERRC,CerrcHandleT321Expiry_wrong_state,P_ERROR,swLogPrintf("rrcState %e<CerrcState> ");
565248,1158558464,0,0,PS1,CERRC,CerrcAddServingCellToIntraFreqDB_addScell,P_INFO,swLogPrintf("INTRA FREQ SCELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) ");
565248,1158561791,0,0,PS1,CERRC,CerrcDeleteCellsInVarMeasReportList_wrong_num,P_ERROR,swLogPrintf("VarMeasReport exceed the max num ");
565248,1158561792,0,0,PS1,CERRC,CerrcDeleteCellsInVarMeasReportList_info,P_VALUE,swLogPrintf("rmv measId ( %d ) from VarMeasReport ");
565248,1158563840,0,0,PS1,CERRC,CerrcUpdateInterFreqCarrierFreqList_wrong_num,P_ERROR,swLogPrintf("no spare place to add carrierFreq ( %d ) to database ");
565248,1158566144,0,0,PS1,CERRC,CerrcProcessRrcConnectedStateIntraInterMeasure_stop,P_VALUE,swLogPrintf("STOP INTRA / INTER meas due to serving cell RSRP > = ( %d + ( %d ) / 4 ) ");
565248,1158568192,0,0,PS1,CERRC,CerrcProcessRrcConnectedStateIntraInterMeasure_start,P_VALUE,swLogPrintf("START INTRA / INTER meas due to serving cell RSRP < ( %d + ( %d ) / 4 ) ");
565248,1158569984,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_wrong_measId,P_WARNING,swLogPrintf("MeasTimer ( %d ) not exists , ingore this time expriy. ");
565248,1158573056,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_invalid,P_WARNING,swLogPrintf("measId ( %d ) , Invalid carrierFreq ( %d ) , measObjectId ( %d ) , pMeasObjectEutran ( 0x%X ) , pReportConfigEutra ( 0x%X ) ");
565248,1158574592,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_unMatched_freqIndex,P_WARNING,swLogPrintf("UnMatched carrierFreq ( %d ) measId ( %d ) measObjectId ( %d ) , UE will send MR only with scell. ");
565248,1158576896,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_info,P_VALUE,swLogPrintf("MeasId ( %d ) Timer expiry , measObjectId = %d , TriggerType = %d , carrierFreq = %d ");
565248,1158578176,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_notTrigger,P_VALUE,swLogPrintf("MeasmentReport ( measId = %d ) just sent , ingore this time expiry. ");
565248,1158580480,0,0,PS1,CERRC,CerrcHandleMeasReportTimerExpiry_wrong_event,P_ERROR,swLogPrintf("CerrcHandlePeriodMeasReportTimerExpiry : measId = %d , triggerType = %d ");
565248,1158582528,0,0,PS1,CERRC,CerrcHandlePeriodMeasReportTimerExpiry_wrong_state,P_ERROR,swLogPrintf("rrcState = %d , measId = %d ");
565248,1158585344,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_invalid,P_WARNING,swLogPrintf("Invalid carrierFreq ( %d ) or pReportConfigEutra ( 0x%X ) ! measId ( %d ) , measObjectId ( %d ) , reportConfigId ( %d ) ");
565248,1158586624,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_notSupport,P_WARNING,swLogPrintf("MeasObjectId ( %d ) DlEarfcn ( %d ) is Not Supported ! ");
565248,1158590463,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info0,P_WARNING,swLogPrintf("Change InterFreqEnableFlag to FALSE for validMeasGapFlag is FALSE. ");
565248,1158590976,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info1,P_VALUE,swLogPrintf("ConnMeas IntraFreqEnableFlag = %d , InterFreqEnableFlag = %d , numOfCurInterFreq = %d ");
565248,1158592768,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info2,P_VALUE,swLogPrintf("ConnMeas curInterFreqCarrier [ %d ] = %d ");
565248,1158594816,0,0,PS1,CERRC,CerrcUpdateIntraInterFreqDataBase_info3,P_VALUE,swLogPrintf("ConnMeas Updated NcellDB interFreq [ %d ] .carrierFreq = %d ");
565248,1158596608,0,0,PS1,CERRC,CerrcFillSubframePatternConfigNeigh_wrong_cell_num,P_ERROR,swLogPrintf("neighbor cell num exceed max num , carrierFreq = %d. ");
565248,1158598656,0,0,PS1,CERRC,CerrcFillCephyMeasConfigReq_wrong_blackcell_num,P_ERROR,swLogPrintf("black cell num exceed max num , carrierFreq = %d. ");
565248,1158600704,0,0,PS1,CERRC,CerrcFillCephyMeasConfigReqByMeasObject_intrafreq,P_ERROR,swLogPrintf("NW does not configure measObject for LTE serving frequency ( %d ) . ");
565248,1158603008,0,0,PS1,CERRC,CerrcHandleActionUponHandoverOrReest_warn,P_WARNING,swLogPrintf("NW does not configure SourceFreq measObjectId ( %d ) or TargetFreq measObjectId ( %d ) . Do not need to swap sourceCell measObject with targetCell measObject. ");
565248,1158605312,0,0,PS1,CERRC,CerrcPrintBcchBchMsg_MIB,P_SIG,swLogPrintf("CELL ( %d , %d ) , MIB , len ( %d ) ");
565248,1158607360,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB2,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB2 , len ( %d ) ");
565248,1158609408,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB3,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB3 , len ( %d ) ");
565248,1158611456,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB4,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB4 , len ( %d ) ");
565248,1158613504,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB5,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB5 , len ( %d ) ");
565248,1158615552,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB14,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB14 , len ( %d ) ");
565248,1158617600,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB16,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB16 , len ( %d ) ");
565248,1158619648,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB10,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB10 , len ( %d ) ");
565248,1158621696,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB11,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB11 , len ( %d ) ");
565248,1158623744,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB12,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB12 , len ( %d ) ");
565248,1158625792,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB6,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB6 , len ( %d ) ");
565248,1158627840,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB7,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB7 , len ( %d ) ");
565248,1158629888,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB8,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB8 , len ( %d ) ");
565248,1158631936,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB9,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB9 , len ( %d ) ");
565248,1158633984,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB13,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB13 , len ( %d ) ");
565248,1158636032,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB15,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB15 , len ( %d ) ");
565248,1158638080,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB17,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB17 , len ( %d ) ");
565248,1158640128,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB18,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB18 , len ( %d ) ");
565248,1158642176,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB19,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB19 , len ( %d ) ");
565248,1158644224,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB20,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB20 , len ( %d ) ");
565248,1158646272,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB21,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB21 , len ( %d ) ");
565248,1158647808,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_errSI,P_ERROR,swLogPrintf("Unsupported BCCH_Message SI type %d! ");
565248,1158650880,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_SIB1,P_SIG,swLogPrintf("CELL ( %ld , %d ) , SIB1 , len ( %d ) , RSRP ( %d ) , RSRQ ( %d ) ");
565248,1158651904,0,0,PS1,CERRC,CerrcPrintBcchDlSchMsg_tag,P_ERROR,swLogPrintf("Invalid BCCH_Message type %d! ");
565248,1158653952,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_Reest,P_INFO,swLogPrintf("RrcConnectionReestablishment , len ( %d ) ");
565248,1158656000,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_ReestRej,P_INFO,swLogPrintf("RrcConnectionReestablishmentReject , len ( %d ) ");
565248,1158658048,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_ConnRej,P_INFO,swLogPrintf("RrcConnectionReject , len ( %d ) ");
565248,1158660096,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_Setup,P_INFO,swLogPrintf("RrcConnectionSetup , len ( %d ) ");
565248,1158662144,0,0,PS1,CERRC,CerrcPrintDlCcchMsg_tag,P_ERROR,swLogPrintf("Invalid DL_CCCH_Message type %d! ");
565248,1158664192,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_DlTrans,P_SIG,swLogPrintf("DlInformationTransfer , len ( %d ) ");
565248,1158666240,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Recfg,P_INFO,swLogPrintf("RrcConnectionReconfiguration , len ( %d ) ");
565248,1158668288,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Rel,P_INFO,swLogPrintf("RrcConnectionRelease , len ( %d ) ");
565248,1158670336,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_SMC,P_INFO,swLogPrintf("SecurityModeCommand , len ( %d ) ");
565248,1158672384,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Cap,P_INFO,swLogPrintf("UeCapabilityEnquiry , len ( %d ) ");
565248,1158674432,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Count,P_INFO,swLogPrintf("CounterCheck , len ( %d ) ");
565248,1158676480,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_Rsm,P_INFO,swLogPrintf("RrcConnectionResume , len ( %d ) ");
565248,1158678528,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_UeInfo,P_INFO,swLogPrintf("UeInformationRequest , len ( %d ) ");
565248,1158680576,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_LogMeas,P_INFO,swLogPrintf("LoggedMeasurementConfiguration , len ( %d ) ");
565248,1158682624,0,0,PS1,CERRC,CerrcPrintDlDcchMsg_tag,P_ERROR,swLogPrintf("Unsupported DL_DCCH_Message type %d! ");
565248,1158684672,0,0,PS1,CERRC,CerrcPrintPcchMsg_Paging,P_VALUE,swLogPrintf("Paging , normal paging , len ( %d ) ");
565248,1158686720,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_Reest,P_INFO,swLogPrintf("RrcConnectionReestablishmentRequest , len ( %d ) ");
565248,1158688768,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_ConnReq,P_INFO,swLogPrintf("RrcConnectionRequest , len ( %d ) ");
565248,1158690816,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_tag1,P_ERROR,swLogPrintf("Invalid UL_CCCH_Message type %d! ");
565248,1158692864,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_RsmReq,P_INFO,swLogPrintf("RrcConnectionResumeRequest , len ( %d ) ");
565248,1158694912,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_tag2,P_ERROR,swLogPrintf("Invalid UL_CCCH_Message type %d! ");
565248,1158699007,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_err,P_ERROR,swLogPrintf("Invalid UL_CCCH_Message type! ");
565248,1158699008,0,0,PS1,CERRC,CerrcPrintUlCcchMsg_msg5,P_INFO,swLogPrintf("Msg5 len = %d ");
565248,1158701056,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_Mr,P_INFO,swLogPrintf("MeasurementReport , len ( %d ) ");
565248,1158703104,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_RecfgComp,P_INFO,swLogPrintf("RrcConnectionReconfigurationComplete , len ( %d ) ");
565248,1158705152,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_ReestComp,P_INFO,swLogPrintf("RrcConnectionReestablishmentComplete , len ( %d ) ");
565248,1158707200,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SetupComp,P_INFO,swLogPrintf("RrcConnectionSetupComplete , len ( %d ) ");
565248,1158709760,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SetupComp1,P_INFO,swLogPrintf("rrcPduBitLength ( %d ) , nasPduBitLength ( %d ) , nasPduBitPosition ( %d ) ");
565248,1158711296,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SMC,P_INFO,swLogPrintf("SecurityModeComplete , len ( %d ) ");
565248,1158713344,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_SMF,P_INFO,swLogPrintf("SecurityModeFailure , len ( %d ) ");
565248,1158715392,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_Cap,P_INFO,swLogPrintf("UeCapabilityInformation , len ( %d ) ");
565248,1158717440,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_UlTrans,P_SIG,swLogPrintf("UlInformationTransfer , len ( %d ) ");
565248,1158720000,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_UlTrans1,P_INFO,swLogPrintf("rrcPduBitLength ( %d ) , nasPduBitLength ( %d ) , nasPduBitPosition ( %d ) ");
565248,1158721536,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_CountRsp,P_INFO,swLogPrintf("CounterCheckResponse , len ( %d ) ");
565248,1158723584,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_UeInfoRsp,P_INFO,swLogPrintf("UeInformationResponse , len ( %d ) ");
565248,1158725632,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_ProInd,P_INFO,swLogPrintf("ProximityIndication , len ( %d ) ");
565248,1158727680,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_Rstd,P_INFO,swLogPrintf("InterFreqRSTDMeasurementIndication , len ( %d ) ");
565248,1158729728,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_tag1,P_ERROR,swLogPrintf("Unsupported UL_DCCH_Message type %d! ");
565248,1158731776,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_RsmComp,P_INFO,swLogPrintf("RrcConnectionResumeComplete , len ( %d ) ");
565248,1158734336,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_RsmComp1,P_INFO,swLogPrintf("rrcPduBitLength ( %d ) , nasPduBitLength ( %d ) , nasPduBitPosition ( %d ) ");
565248,1158735872,0,0,PS1,CERRC,CerrcPrintUlDcchMsg_tag2,P_ERROR,swLogPrintf("Unsupported UL_DCCH_Message type %d! ");
565248,1158737920,0,0,PS1,CERRC,CerrcPrintVarMeasConfig_len,P_SIG,swLogPrintf("VarMeasConfig len ( %d ) ");
565248,1158739968,0,0,PS1,CERRC,CerrcDecodeBcchBchMsg_err,P_ERROR,swLogPrintf("MIB decode error : %d ");
565248,1158742016,0,0,PS1,CERRC,CerrcDecodeBcchDlSchMsg_err,P_ERROR,swLogPrintf("SIB decode error : %d ");
565248,1158744064,0,0,PS1,CERRC,CerrcDecodePCCHMsg_err,P_ERROR,swLogPrintf("PCCH decode error : %d ");
565248,1158746112,0,0,PS1,CERRC,CerrcDecodeDlCcchMsg_err,P_ERROR,swLogPrintf("DL CCCH decode error : %d ");
565248,1158748160,0,0,PS1,CERRC,CerrcDecodeDlDcchMsg_err,P_ERROR,swLogPrintf("DL DCCH decode error : %d ");
565248,1158750208,0,0,PS1,CERRC,CerrcDecodeVarMeasConfig_err,P_ERROR,swLogPrintf("VarMeasConfig decode error : %d \n ");
565248,1158752512,0,0,PS1,CERRC,CerrcSendCerrcPageInfoIndToNAS_end,P_SIG,swLogPrintf("CerrcPageInfoInd : type %e<PageInfoType> , cnDomain %e<CnDomain> ");
565248,1158756351,0,0,PS1,CERRC,CerrcHandlePagingRecordList_cs,P_VALUE,swLogPrintf("This is for CS domain , ignore it ! ");
565248,1158756352,0,0,PS1,CERRC,CerrcHandlePagingRecordList_tag,P_WARNING,swLogPrintf("pPaging->ue_Identity.tag is wrong : %d ");
565248,1158760447,0,0,PS1,CERRC,CerrcHandlePagingRecordList_mismatch,P_VALUE,swLogPrintf("This Paging is not for this UE! PagingRecordList mismatch! ");
565248,1158762495,0,0,PS1,CERRC,CerrcHandlePagingRecordList_noList,P_VALUE,swLogPrintf("There is no PagingRecordList in this Paging message ");
565248,1158764543,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_state,P_WARNING,swLogPrintf("Receive CephyPagingInd in Deactive / HIB / SLEEP2 state! ");
565248,1158766591,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_csrstate,P_WARNING,swLogPrintf("Receive CephyPagingInd in CELL_SELECTION state! ");
565248,1158766592,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_tag,P_WARNING,swLogPrintf("Not supported pPcchMsg->tag ( %d ) in Paging ! ");
565248,1158768640,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_DI,P_ERROR,swLogPrintf("Cat1 does NOT support Direct Indication Information! pagingType ( %d ) ");
565248,1158771456,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_etws_cmas,P_SIG,swLogPrintf("Paging : RrcState ( %e<CerrcState> ) , Paging Type ( %d ) , etwsIndication ( %d ) , cmasIndication ( %d ) ");
565248,1158773248,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_eab,P_SIG,swLogPrintf("Paging : RrcState ( %e<CerrcState> ) , Paging Type ( %d ) , eabParamModification ( %d ) ");
565248,1158775552,0,0,PS1,CERRC,CerrcHandleCephyPagingInd_SIupdate,P_SIG,swLogPrintf("Paging : RrcState ( %e<CerrcState> ) , Paging Type ( %d ) , sysInfoModi ( %d ) , eDrxSysInfoModi ( %d ) ");
565248,1158778879,0,0,PS1,CERRC,CerrcCreatePlmnSearchContext_exist,P_WARNING,swLogPrintf("CerrcPlmnSearchContext already exists! ");
565248,1158780927,0,0,PS1,CERRC,CerrcCreatePlmnSearchContext_err,P_ERROR,swLogPrintf("CerrcPlmnSearchReq ( BCINFO ) : reqMaxCellNum is 0 ! ");
565248,1158782975,0,0,PS1,CERRC,CerrcHandlePendingPlmnSearchReq_1,P_VALUE,swLogPrintf("Handle pending CerrcPlmnSearchReq. ");
565248,1158783232,0,0,PS1,CERRC,CerrcFillInfoToBcInfoList_scell,P_VALUE,swLogPrintf("Set the first found cell ( %d , %d ) as serving cell. ");
565248,1158785280,0,0,PS1,CERRC,CerrcFillServingCellInfoToBcInfoList_plmn,P_WARNING,swLogPrintf("AT+BCINFO = 1 , the requestedPlmn ( %X-%X ) is not belonging to serving cell ' s PLMN ! ");
565248,1158787328,0,0,PS1,CERRC,CerrcFillNeighCellInfoToBcInfoList_exists,P_VALUE,swLogPrintf("Ncell ( %d , %d ) already exists in BcInfoList ! ");
565248,1158789376,0,0,PS1,CERRC,CerrcPickUpBestNcellWithoutSib1_sib1Full,P_VALUE,swLogPrintf("CerrcPickUpBestNcellWithoutSib1 : Already request %d Ncell SIB1 , exceed max SIB1 number ( %d ) , abort SIB1 reception ");
565248,1158791168,0,0,PS1,CERRC,CerrcPickUpBestNcellWithoutSib1_full,P_VALUE,swLogPrintf("CerrcPickUpBestNcellWithoutSib1 : All top %d Ncells already have SIB1 , do not need to perform SIB1 reception ");
565248,1158795263,0,0,PS1,CERRC,CerrcProcessPlmnNoSib1_else,P_ERROR,swLogPrintf("Wrong PLMN search state! ");
565248,1158795520,0,0,PS1,CERRC,CerrcProcessPlmnSib1_S,P_VALUE,swLogPrintf("CerrcProcessPlmnSib1 :S criterion is NOT satisfied , Srvlev ( %d ) , Squal ( %d ) ");
565248,1158797312,0,0,PS1,CERRC,CerrcProcessPlmnNcellSysInfoInd_else,P_ERROR,swLogPrintf("Wrong NCELL BCH type %e<SysInfoIndType> , just ingore! ");
565248,1158801407,0,0,PS1,CERRC,CerrcProcessPlmnSearchNoCellFound_else,P_ERROR,swLogPrintf("Wrong PLMN search state! ");
565248,1158803455,0,0,PS1,CERRC,CerrcHandleCephyDrxCellSearchCnf_bg,P_WARNING,swLogPrintf("Receive CephyDrxCellSearchCnf outside BG PLMN procedure ! ");
565248,1158803456,0,0,PS1,CERRC,CerrcHandleCephyDrxCellSearchCnf_state,P_WARNING,swLogPrintf("Receive CephyDrxCellSearchCnf in wrong RrcState %e<CerrcState>! ");
565248,1158805504,0,0,PS1,CERRC,CerrcSendCephyDrxCellSearchReq_lock,P_WARNING,swLogPrintf("Start locked frequency ( %d ) cell search. ");
565248,1158808832,0,0,PS1,CERRC,CerrcSendCerrcPlmnSearchCnf_plmn,P_VALUE,swLogPrintf("CerrcPlmnSearchCnf : numOfPlmn ( %d ) , the %d PLMN ( %X-%X ) , TAC ( %X ) , isPlmnRequested ( %d ) ");
565248,1158810880,0,0,PS1,CERRC,CerrcSendCerrcPlmnSearchCnf_bcinfo,P_VALUE,swLogPrintf("CerrcPlmnSearchCnf ( BCINFO ) : numOfCell ( %d ) , the %d CELL ( %d , %d ) , RSRP ( %d ) , isServingCell ( %d ) ");
565248,1158812928,0,0,PS1,CERRC,CerrcSendCerrcPlmnSearchInd_plmn,P_VALUE,swLogPrintf("CerrcPlmnSearch ] Ind : numOfPlmn ( %d ) , the %d PLMN ( %X-%X ) , TAC ( %X ) , isPlmnRequested ( %d ) ");
565248,1158813696,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong1,P_WARNING,swLogPrintf("Receive invalid CerrcPlmnSearchReq : requestedPlmn is FALSE , but type %e<CerrcPlmnSearchType> is NOT Manual or BcInfo ! ");
565248,1158816000,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong2,P_WARNING,swLogPrintf("Receive CerrcPlmnSearchReq in wrong state : RrcState %e<CerrcState> , RccState %e<CerrcRccState> ! ");
565248,1158818560,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_only1cell,P_VALUE,swLogPrintf("Receive CerrcPlmnSearchReq ( BCINFO ) : CellLocked ( %d ) , reqMaxBCCellNum ( %d ) , RccState %e<CerrcRccState> , pending ConnReq ( %d ) ");
565248,1158820608,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_noNcellReq,P_VALUE,swLogPrintf("Receive CerrcPlmnSearchReq ( BCINFO ) in state RccState %e<CerrcRccState> , waitSiUpdate ( %d ) , siRcvingBitmap ( 0x%x ) , T321 ( %d ) ! ");
565248,1158822144,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong3,P_WARNING,swLogPrintf("Receive CerrcPlmnSearchReq with no valid numOfFreq ( %d ) and numOfBand ( %d ) ! ");
565248,1158823936,0,0,PS1,CERRC,CerrcPreProcessOfPlmnSearchReq_wrong4,P_WARNING,swLogPrintf("Receive CerrcPlmnSearchReq with no numOfFreq but valid phyCellId ( %d ) ! ");
565248,1158828031,0,0,PS1,CERRC,CerrcIsPlmnSearchReqBuffered_buff1,P_VALUE,swLogPrintf("Receive CerrcPlmnSearchReq while waiting for ecphyDeactCnf , buffer it ");
565248,1158828544,0,0,PS1,CERRC,CerrcIsPlmnSearchReqBuffered_buff2,P_VALUE,swLogPrintf("Receive CerrcPlmnSearchReq in CsrState %e<CerrcCsrState> , siRcvingBitmap ( 0x%x ) , searchType %e<CerrcPlmnSearchType> , buffer it ");
565248,1158832127,0,0,PS1,CERRC,CerrcIsPlmnSearchReqBuffered_buff3,P_VALUE,swLogPrintf("Receive CerrcPlmnSearchReq with NORMAL type , need to deact L1 first ");
565248,1158832384,0,0,PS1,CERRC,CerrcStartPlmnSearch_freqLock,P_WARNING,swLogPrintf("CerrcPlmnSearchReq : Invalid freq lock info with numOfFreq ( %d ) , numOfBand ( %d ) ");
565248,1158835200,0,0,PS1,CERRC,CerrcStartPlmnSearch_entry,P_VALUE,swLogPrintf("CerrcPlmnSearchReq : SearchType %e<CerrcPlmnSearchType> , requestedPlmnValid ( %d ) , PLMN ( %X-%X ) , bCellLock ( %d ) ");
565248,1158838271,0,0,PS1,CERRC,CerrcStartPlmnSearch_state,P_ERROR,swLogPrintf("Cannot handle CerrcPlmnSearchReq due to wrong state! ");
565248,1158840319,0,0,PS1,CERRC,CerrcHandleCerrcNextPlmnSearchReq_else,P_ERROR,swLogPrintf("Received CerrcNextPlmnSearchReq in wrong state! ");
565248,1158841600,0,0,PS1,CERRC,CerrcSendCerrcAbortPlmnSearchCnf_plmn,P_VALUE,swLogPrintf("CerrcAbortPlmnSearchCnf : numOfPlmn ( %d ) , the %d PLMN ( %X-%X ) , TAC ( %X ) , isPlmnRequested ( %d ) ");
565248,1158843648,0,0,PS1,CERRC,CerrcSendCerrcAbortPlmnSearchCnf_bcinfo,P_VALUE,swLogPrintf("CerrcAbortPlmnSearchCnf ( BCINFO ) : numOfCell ( %d ) , the %d CELL ( %d , %d ) , RSRP ( %d ) , isServingCell ( %d ) ");
565248,1158846463,0,0,PS1,CERRC,CerrcAbortPlmnSearchDueToActReq_else,P_ERROR,swLogPrintf("Abort PLMN search due to CerrcActReq in wrong state! ");
565248,1158848511,0,0,PS1,CERRC,CerrcAbortPlmnSearch_else,P_ERROR,swLogPrintf("Abort PLMN search in wrong state! ");
565248,1158850559,0,0,PS1,CERRC,CerrcCreateConnContext_exist,P_WARNING,swLogPrintf("CerrcConnContext already exists! ");
565248,1158850816,0,0,PS1,CERRC,CerrcReleaseConnContext_freeArray,P_VALUE,swLogPrintf("Free OsaIeMemInfo->pBufHdr ( 0x%X ) , numOfIeMemInfoForPhy ( %d ) ");
565248,1158854655,0,0,PS1,CERRC,CerrcUpdateUpRbConfigType_err,P_ERROR,swLogPrintf("Ask to resume a already resumed RB ! ");
565248,1158856703,0,0,PS1,CERRC,CerrcSendCeupConfigReqToUpReleaseAllRBs_err,P_ERROR,swLogPrintf("No valid CerrcConnContext ! ");
565248,1158858751,0,0,PS1,CERRC,CerrcSendCeupConfigReqToUpReleaseSuspendedAllRBs_err,P_ERROR,swLogPrintf("No valid CerrcConnSuspendContext ! ");
565248,1158859264,0,0,PS1,CERRC,CerrcSendResumeCemacMacMainConfigReqToUP_wrongType,P_WARNING,swLogPrintf("logicChProTimerType %e<UpConfigType> , connSuspendContext_logicChProTimerType %e<UpConfigType> , raiActivation = %d ");
565248,1158862847,0,0,PS1,CERRC,CerrcSendResumeCemacMacMainConfigReqToUP_noSuspendContext,P_ERROR,swLogPrintf("No valid CerrcConnSuspendContext ! ");
565248,1158862848,0,0,PS1,CERRC,CerrcSendReleaseCemacMacMainConfigReqToUP_wrongType,P_WARNING,swLogPrintf("connSuspendContext_logicChProTimerType %e<UpConfigType> ");
565248,1158866943,0,0,PS1,CERRC,CerrcSendReleaseCemacMacMainConfigReqToUP_noSuspendContext,P_ERROR,swLogPrintf("No valid CerrcConnSuspendContext ! ");
565248,1158866944,0,0,PS1,CERRC,CerrcSendCemacResetReqToUP_cause,P_SIG,swLogPrintf("MAC RESET , cause %e<MacResetReason> ");
565248,1158869248,0,0,PS1,CERRC,CerrcHandleCemacResetCnf_cause,P_VALUE,swLogPrintf("CemacResetCnf cause is %e<MacResetReason> , CerrcGetRrcState is %e<CerrcState> ");
565248,1158871040,0,0,PS1,CERRC,CerrcHandleCemacResetCnf_state,P_WARNING,swLogPrintf("Receive CemacResetCnf in wrong RccState %e<CerrcRccState>. ");
565248,1158875135,0,0,PS1,CERRC,CerrcHandleCemacResetCnf_idle,P_WARNING,swLogPrintf("Receive CemacResetCnf in wrong IDLE state ");
565248,1158875392,0,0,PS1,CERRC,CerrcHandleRadioLinkFailure_state,P_WARNING,swLogPrintf("Cannot handle RLF in RrcState %e<CerrcState> , RccState %e<CerrcRccState> ! ");
565248,1158879231,0,0,PS1,CERRC,CerrcHandleCemacRandomAccessInd_state,P_WARNING,swLogPrintf("Received CemacRAInd in wrong RrcState ! ");
565248,1158879232,0,0,PS1,CERRC,CerrcHandleCephySyncStatusInd_unsync,P_SIG,swLogPrintf("Received %d times Out-Of-Sync! ");
565248,1158883327,0,0,PS1,CERRC,CerrcHandleCephySyncStatusInd_inSync,P_WARNING,swLogPrintf("In-Sync report should be enabled ! ");
565248,1158883584,0,0,PS1,CERRC,CerrcHandleCephySyncStatusInd_else,P_WARNING,swLogPrintf("Received CephySyncStatusInd in wrong RrcState %e<CerrcState> , RccState %e<CerrcRccState>! ");
565248,1158885632,0,0,PS1,CERRC,CerrcHandleCerrcNasBarCellInd_goIdle,P_VALUE,swLogPrintf("Go IDLE due to NAS barred CELL ( %d , %d ) ");
565248,1158887936,0,0,PS1,CERRC,CerrcHandleCephyConnStatisInfoInd_Meas,P_SIG,swLogPrintf("DL MEAS STATIS INFO : RSRP ( %d / 100 ) , RSRQ ( %d / 100 ) , SNR ( %d / 100 ) ");
565248,1158889728,0,0,PS1,CERRC,CerrcHandleCephyConnStatisInfoInd_DlTpT,P_SIG,swLogPrintf("DL TpT STATIS INFO : MCS Index ( %d / 100 ) , BLER ( %d / 10000 ) ");
565248,1158891776,0,0,PS1,CERRC,CerrcHandleCephyConnStatisInfoInd_UlTpT,P_SIG,swLogPrintf("UL TpT STATIS INFO : MCS Index ( %d / 100 ) , BLER ( %d / 10000 ) ");
565248,1158893568,0,0,PS1,CERRC,CerrcHandleCerrcNasMsgReq_suspend,P_WARNING,swLogPrintf("Received CerrcNasMsgReq in wrong RccState %e<CerrcRccState> after sending NasUlMsgSuspendInd ! ");
565248,1158895616,0,0,PS1,CERRC,CerrcHandleCerrcNasMsgReq_rccState,P_ERROR,swLogPrintf("Received CerrcNasMsgReq in wrong RccState %e<CerrcRccState> , just ignore it ! ");
565248,1158897664,0,0,PS1,CERRC,CerrcHandleCerrcNasMsgReq_state,P_WARNING,swLogPrintf("Received CerrcNasMsgReq in wrong RrcState %e<CerrcState> , just ignore it ! ");
565248,1158899968,0,0,PS1,CERRC,CerrcSetDedicatedInfoNAS_err,P_ERROR,swLogPrintf("nasMessageLength = %d , pNasMessage = 0x%lx ");
565248,1158903807,0,0,PS1,CERRC,CerrcFillPdcpParameters_else,P_WARNING,swLogPrintf("ROHC shoule ALWAYS be supported for eMTC / Cat1! ");
565248,1158905855,0,0,PS1,CERRC,CerrcFillRfAndMeasParameters_err,P_ERROR,swLogPrintf("No valid supported band ! ");
565248,1158907903,0,0,PS1,CERRC,CerrcFillRfParameters_v9e0_err,P_ERROR,swLogPrintf("No valid supported band ! ");
565248,1158909951,0,0,PS1,CERRC,CerrcFillRfParameters_v1320_err,P_ERROR,swLogPrintf("No valid supported band ! ");
565248,1158909952,0,0,PS1,CERRC,CerrcFillUeCapabilityEutraContainer_rel,P_WARNING,swLogPrintf("Unsupported AS release version %e<AsReleaseType> ! ");
565248,1158912000,0,0,PS1,CERRC,CerrcFillUeCapabilityEutraContainer_category,P_WARNING,swLogPrintf("Unsupported ueCategory %e<UeCategoryType> , cast it to Category-Cat1 type. ");
565248,1158914048,0,0,PS1,CERRC,CerrcHandleDlInformationTransfer_else,P_WARNING,swLogPrintf("Unsupported dedicatedInfoType ( %d ) in DlInformationTransfer , CDMA2000_1XRTT ( 1 ) , CDMA2000_HRPD ( 2 ) ! ");
565248,1158916096,0,0,PS1,CERRC,CerrcHandleCecpDataInd_dlInfo,P_ERROR,swLogPrintf("Invalid DlInformationTransfer , RccState %e<CerrcRccState> ");
565248,1158918144,0,0,PS1,CERRC,CerrcHandleCecpDataInd_recfg,P_ERROR,swLogPrintf("Invalid RrcConnectionReconfiguration , RccState %e<CerrcRccState> ");
565248,1158920192,0,0,PS1,CERRC,CerrcHandleCecpDataInd_rel,P_ERROR,swLogPrintf("Invalid RrcConnectionRelease , RccState %e<CerrcRccState> ");
565248,1158922240,0,0,PS1,CERRC,CerrcHandleCecpDataInd_smc,P_ERROR,swLogPrintf("Invalid SecurityModeCommand , RccState %e<CerrcRccState> ");
565248,1158924288,0,0,PS1,CERRC,CerrcHandleCecpDataInd_cap,P_ERROR,swLogPrintf("Invalid UeCapabilityEnquiry , RccState %e<CerrcRccState> ");
565248,1158926336,0,0,PS1,CERRC,CerrcHandleCecpDataInd_count,P_ERROR,swLogPrintf("Invalid CounterCheck , RccState %e<CerrcRccState> ");
565248,1158928384,0,0,PS1,CERRC,CerrcHandleCecpDataInd_rsm,P_ERROR,swLogPrintf("Invalid RrcConnectionResume , RccState %e<CerrcRccState> ");
565248,1158930432,0,0,PS1,CERRC,CerrcHandleCecpDataInd_ueInfo,P_ERROR,swLogPrintf("Invalid UeInformationRequest , RccState %e<CerrcRccState> ");
565248,1158932480,0,0,PS1,CERRC,CerrcHandleCecpDataInd_loggMeas,P_ERROR,swLogPrintf("Invalid LoggedMeasurementConfiguration , RccState %e<CerrcRccState> ");
565248,1158936575,0,0,PS1,CERRC,CerrcHandleCecpDataInd_unSupp,P_ERROR,swLogPrintf("Unsupported DL_DCCH_MessageType_messageClassExtension_str ");
565248,1158938623,0,0,PS1,CERRC,CerrcHandleCecpDataCnf_return,P_VALUE,swLogPrintf("No ulInfoTransBitmap exists in ERRC , ignore this CecpDataCnf ! ");
565248,1158938880,0,0,PS1,CERRC,CerrcHandleCecpDataCnf_entry,P_VALUE,swLogPrintf("CecpDataCnf : failPduNum ( %d ) , succPduNum ( %d ) ");
565248,1158942719,0,0,PS1,CERRC,CerrcCreateConnEstContext_exist,P_WARNING,swLogPrintf("ConnEstContext already exists! ");
565248,1158944767,0,0,PS1,CERRC,CerrcHandlePendingConnOrResumeReq_1,P_VALUE,swLogPrintf("Handle pending CerrcConnReq / CerrcResumeReq. ");
565248,1158945792,0,0,PS1,CERRC,CerrcCountRrcConnEstInfo_info,P_VALUE,swLogPrintf("gEventStatisMode ( %d ) , nvmRrcEstSuccNum ( %d ) , nvmRrcEstFailNum ( %d ) , rrcEstSuccNum ( %d ) , rrcEstFailNum ( %d ) ");
565248,1158946816,0,0,PS1,CERRC,CerrcAccessBarringCheck_t302,P_VALUE,swLogPrintf("Access is barred due to T302 or Tbarring ( %d ) is running ! ");
565248,1158949120,0,0,PS1,CERRC,CerrcAccessBarringCheck_notBar,P_VALUE,swLogPrintf("Access is not barred : valid accessClass11~15 ( 0x%x ) , acBarringForSpecialAC ( 0x%x ) ");
565248,1158952959,0,0,PS1,CERRC,CerrcIsAccessAllowed_eccfg,P_INFO,swLogPrintf("Access is not barred due to AT+ECCFG = ' enableABCheck ' is FALSE ");
565248,1158953472,0,0,PS1,CERRC,CerrcAccessBarringCheck_factor1,P_VALUE,swLogPrintf("Access is not barred due to rand ( %d ) < acBarringFactor ( %d ) ! GCF ( %d ) ");
565248,1158955264,0,0,PS1,CERRC,CerrcAccessBarringCheck_factor2,P_VALUE,swLogPrintf("Access is barred due to rand ( %d ) > = acBarringFactor ( %d ) ! ");
565248,1158959103,0,0,PS1,CERRC,CerrcAccessBarringCheck_else,P_VALUE,swLogPrintf("Access is not barred due to no ' AC barring parameter ' in SIB2 ");
565248,1158961151,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_eccfg,P_INFO,swLogPrintf("EAB access is not barred due to AT+ECCFG = ' enableABCheck ' is FALSE ");
565248,1158961920,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_check,P_VALUE,swLogPrintf("EAB check : plmnType ( %d ) , abCategory ( %d ) , accessClass0~9 ( 0x%x ) , abBarringBitmap ( 0x%x ) ");
565248,1158965247,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_bar,P_VALUE,swLogPrintf("EAB access is barred ");
565248,1158967295,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_else,P_VALUE,swLogPrintf("EAB access is not barred ");
565248,1158969343,0,0,PS1,CERRC,CerrcAccessBarringCheckEAB_sib14,P_VALUE,swLogPrintf("EAB access is not barred due to no EAB parameters ");
565248,1158971391,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_t302,P_VALUE,swLogPrintf("ACDC access is barred due to T302 is running ! ");
565248,1158973439,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_eccfg,P_INFO,swLogPrintf("ACDC access is not barred due to AT+ECCFG = ' enableABCheck ' is FALSE ");
565248,1158973696,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_factor1,P_VALUE,swLogPrintf("ACDC access is not barred due to rand ( %d ) < acBarringFactor ( %d ) ! ");
565248,1158975744,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_factor2,P_VALUE,swLogPrintf("ACDC access is barred due to rand ( %d ) > = acBarringFactor ( %d ) ! ");
565248,1158979583,0,0,PS1,CERRC,CerrcAccessBarringCheckACDC_else,P_VALUE,swLogPrintf("ACDC access is not barred due to no ' ACDC barring parameter ' in SIB2 ");
565248,1158980608,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_AC,P_INFO,swLogPrintf("CerrcAccessBarringCheckNB : PLMN ( %x-%x ) , plmnType ( %d ) , USIM ( AC15~AC0 ) accessClass ( 0x%x ) , abConfigPresent ( %d ) ");
565248,1158982400,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_check,P_INFO,swLogPrintf("Access Barring check : plmnType ( %d ) , abCategory ( %d ) , accessClass0~9 ( 0x%x ) , abBarringBitmap ( 0x%x ) ");
565248,1158985727,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_excp,P_INFO,swLogPrintf("Access is not barred : establishmentCause is mo-ExceptionData and abBarringForExceptionData is FALSE ");
565248,1158985984,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_notBar,P_INFO,swLogPrintf("Access is not barred : valid accessClass11~15 ( 0x%x ) , abBarringForSpecialAC ( 0x%x ) ");
565248,1158988032,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_bar,P_INFO,swLogPrintf("Access is barred : valid accessClass11~15 ( 0x%x ) , abBarringForSpecialAC ( 0x%x ) ");
565248,1158990592,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_cat,P_INFO,swLogPrintf("Access is not barred , plmnType ( %d ) , abCategory ( %d ) , accessClass ( 0x%x ) , abBarringBitmap ( 0x%x ) ");
565248,1158993919,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_abConfig,P_INFO,swLogPrintf("Access is not barred due to abConfig is absent in SIB14-NB ");
565248,1158993920,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_abEnable,P_INFO,swLogPrintf("Access is not barred , abEnabled ( %d ) or SIB14-NB is not scheduled ");
565248,1158998015,0,0,PS1,CERRC,CerrcAccessBarringCheckNB_mt,P_INFO,swLogPrintf("Access is not barred due to MT access ");
565248,1159000063,0,0,PS1,CERRC,CerrcIsAccessAllowed_t302,P_VALUE,swLogPrintf("MT Access is barred due to T302 is running ! ");
565248,1159002111,0,0,PS1,CERRC,CerrcIsAccessAllowed_emger,P_VALUE,swLogPrintf("emergency calls is not barred due to AT+ECCFG = ' enableABCheck ' is FALSE ");
565248,1159002624,0,0,PS1,CERRC,CerrcIsAccessAllowed_emgerCheck,P_VALUE,swLogPrintf("AC check for emergency calls : : valid accessClass11~15 ( 0x%x ) , acBarringForMOData ( %d ) , acBarringForSpecialAC ( 0x%x ) ");
565248,1159004160,0,0,PS1,CERRC,CerrcGetAbortCause_resumeAbort,P_ERROR,swLogPrintf("accessBarReason %e<CerrcAccessBarReason> is wrong ");
565248,1159006208,0,0,PS1,CERRC,CerrcGetAbortCause_establishAbort,P_ERROR,swLogPrintf("accessBarReason %e<CerrcAccessBarReason> is wrong ");
565248,1159010303,0,0,PS1,CERRC,CerrcCheckIfSib14IsNeededBeforeRce_sib14,P_WARNING,swLogPrintf("SIB14 is not scheduled by NW in SIB1. ");
565248,1159010816,0,0,PS1,CERRC,CerrcPreProcessOfConnOrResumeReq_state,P_VALUE,swLogPrintf("CerrcConnReq / CerrcResumeReq : RrcState %e<CerrcState> , ActStatus %e<CerrcActStatus> , RccState %e<CerrcRccState> ");
565248,1159012864,0,0,PS1,CERRC,CerrcPreProcessOfConnOrResumeReq_tai,P_VALUE,swLogPrintf("CerrcConnReq / CerrcResumeReq : PLMN ( %x-%x ) , TAC ( 0x%x ) ");
565248,1159014912,0,0,PS1,CERRC,CerrcSendCerrcConnCnfToNAS_end,P_VALUE,swLogPrintf("Send CerrcConnCnf , estStatus %e<CEstablishStatus> , extendedWaitTimePresent ( %d ) , extendedWaitTime ( %d s ) ");
565248,1159016960,0,0,PS1,CERRC,CerrcSendCerrcResumeCnfToNAS_end,P_VALUE,swLogPrintf("Send CerrcResumeCnf , resumeStatus %e<CResumeStatus> , rrcSuspendIndication ( %d ) , extendedWaitTime ( %d s ) ");
565248,1159019264,0,0,PS1,CERRC,CerrcHandleCerrcConnReq_entry,P_VALUE,swLogPrintf("Receive CerrcConnReq , EstCause %e<CEstablishmentCause> , callType %e<CallType> , plmnType %e<PlmnType> , upCIoT ( %d ) ");
565248,1159021312,0,0,PS1,CERRC,CerrcHandleCerrcResumeReq_entry,P_VALUE,swLogPrintf("Receive CerrcResumeReq , EstCause %e<CEstablishmentCause> , callType %e<CallType> , plmnType %e<PlmnType> , upCIoT ( %d ) ");
565248,1159024639,0,0,PS1,CERRC,CerrcHandleCemacRandomAccessIndInIdle_raErr,P_SIG,swLogPrintf("Received CemacRAInd ( ERROR ) after CemacRAInd ( SUCCESS ) ! ");
565248,1159026687,0,0,PS1,CERRC,CerrcHandleCemacRandomAccessIndInIdle_T300,P_ERROR,swLogPrintf("Received CemacRAInd when T300 is not running ! ");
565248,1159026688,0,0,PS1,CERRC,CerrcCovertEstablishmentCause_rsm,P_ERROR,swLogPrintf("Received unsupported ResumeCause %e<CEstablishmentCause> from EMM ! ");
565248,1159028736,0,0,PS1,CERRC,CerrcCovertEstablishmentCause_est,P_ERROR,swLogPrintf("Received unsupported EstablishmentCause %e<CEstablishmentCause> from EMM ! ");
565248,1159030784,0,0,PS1,CERRC,CerrcHandleRrcConnectionSetup_rceType,P_ERROR,swLogPrintf("Received RrcConnectionSetup in wrong RceType %e<CerrcRceType> ! ");
565248,1159034879,0,0,PS1,CERRC,CerrcHandleRrcConnectionSetup_T300,P_ERROR,swLogPrintf("Received RrcConnectionSetup while T300 is not running ! ");
565248,1159036927,0,0,PS1,CERRC,CerrcHandleRrcConnectionResume_T300,P_ERROR,swLogPrintf("Received RrcConnectionResume while T300 is not running! ");
565248,1159038975,0,0,PS1,CERRC,CerrcHandleRrcConnectionReject_T300,P_ERROR,swLogPrintf("Received RrcConnectionReject while T300 is not running ! ");
565248,1159041023,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_state1,P_WARNING,swLogPrintf("Receive CemacCcchDataInd in Deactive / HIB / SLEEP2 state! ");
565248,1159041024,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_reest1,P_ERROR,swLogPrintf("Invalid RrcConnectionReestablishment , RccState %e<CerrcRccState> ");
565248,1159043072,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_reestRej1,P_ERROR,swLogPrintf("Invalid RrcConnectionReestablishmentReject , RccState %e<CerrcRccState> ");
565248,1159045120,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_connRej1,P_ERROR,swLogPrintf("Invalid RrcConnectionReject , RccState %e<CerrcRccState> ");
565248,1159047168,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_setup1,P_ERROR,swLogPrintf("Invalid RrcConnectionSetup , RccState %e<CerrcRccState> ");
565248,1159049216,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_err1,P_ERROR,swLogPrintf("Unsupported DL_CCCH_MessageType_c1 tag ( %d ) ! ");
565248,1159053311,0,0,PS1,CERRC,CerrcHandleCemacCcchDataInd_unSupp1,P_ERROR,swLogPrintf("Unsupported T_DL_CCCH_MessageType_messageClassExtension ");
565248,1159055359,0,0,PS1,CERRC,CerrcCreateConnReleaseContext_exist,P_VALUE,swLogPrintf("CerrcConnReleaseContext already exists! ");
565248,1159055360,0,0,PS1,CERRC,CerrcSendCerrcReleaseCnfToNAS_cause,P_VALUE,swLogPrintf("CerrcReleaseCnf : cause = %e<CerrcReleaseCause> ");
565248,1159057408,0,0,PS1,CERRC,CerrcSendCerrcReleaseIndToNAS_cause,P_VALUE,swLogPrintf("CerrcReleaseInd : cause = %e<CerrcReleaseCause> ");
565248,1159061503,0,0,PS1,CERRC,CerrcCellSearchAfterMacResetCnfInIdle_siUpdate,P_VALUE,swLogPrintf("Perform cell search due to siUpdatePending ");
565248,1159063551,0,0,PS1,CERRC,CerrcCellSearchAfterMacResetCnfInIdle_sib2,P_VALUE,swLogPrintf("Perform cell search due to SIB2 missing. ");
565248,1159065599,0,0,PS1,CERRC,CerrcHandleCerrcReleaseReq_ingore,P_VALUE,swLogPrintf("Received CerrcReleaseReq while RCC_CONN_REL , ignore it! ");
565248,1159065600,0,0,PS1,CERRC,CerrcHandleDataInactivityTimerExpiry_RccState,P_VALUE,swLogPrintf("Received DataInactivityTimerExpiry in wrong RccState %e<CerrcRccState> , ignore it! ");
565248,1159067648,0,0,PS1,CERRC,CerrcHandleDataInactivityTimerExpiry_idle,P_WARNING,swLogPrintf("Received DataInactivityTimerExpiry in wrong RrcState %e<CerrcState>! ");
565248,1159069696,0,0,PS1,CERRC,CerrcHandleUpAbortInd_RccState,P_VALUE,swLogPrintf("Received CerrcHandleUpAbortInd in wrong RccState %e<CerrcRccState> , ignore it! ");
565248,1159071744,0,0,PS1,CERRC,CerrcHandleUpAbortInd_idle,P_WARNING,swLogPrintf("Received CerrcHandleUpAbortInd in wrong RrcState %e<CerrcState>! ");
565248,1159075839,0,0,PS1,CERRC,CerrcHandleRrcConnectionRelease_csfb,P_WARNING,swLogPrintf("Receive RrcConnectionRelease indicates CSFB but we do NOT support ! ");
565248,1159077887,0,0,PS1,CERRC,CerrcHandleRrcConnectionRelease_suspend,P_WARNING,swLogPrintf("Receive RrcConnectionRelease indicates suspend but not including resumeIdentity ! ");
565248,1159079935,0,0,PS1,CERRC,CerrcCreateConnReEstContext_exist,P_WARNING,swLogPrintf("CerrcConnReEstContext already exists! ");
565248,1159079936,0,0,PS1,CERRC,CerrcUpdateDataInactivityTimerFromNvm_nvm,P_VALUE,swLogPrintf("set the DataInactivityTimer according to NVM ( %d ) ! ");
565248,1159082496,0,0,PS1,CERRC,CerrcCheckDrbToAddModList_check2,P_WARNING,swLogPrintf("New DRB , rlc_ConfigPresent ( %d ) , logicalChannelIdentityPresent ( %d ) and logicalChannelConfigPresent ( %d ) should present ! ");
565248,1159084032,0,0,PS1,CERRC,CerrcCheckSrbToAddModList_check1,P_WARNING,swLogPrintf("Setup a New SRB , srb_Identity ( %d ) , not SRB2 ! ");
565248,1159086592,0,0,PS1,CERRC,CerrcCheckSrbToAddModList_check2,P_WARNING,swLogPrintf("New SRB , srb_Identity ( %d ) , rlc_ConfigPresent ( %d ) , logicalChannelConfigPresent ( %d ) should present ! ");
565248,1159090175,0,0,PS1,CERRC,CerrcSetDedicatedPhysicalConfig_error,P_ERROR,swLogPrintf("No valid decode memory address pBufHdr for CephyDedicatedConfigReq ! ");
565248,1159090432,0,0,PS1,CERRC,CerrcUpdateSrbInfo_initial,P_VALUE,swLogPrintf("Inital set SRB ( %d ) update-type as %e<UpConfigType>. ");
565248,1159092480,0,0,PS1,CERRC,CerrcRevertSrbDrbsConfig_info1,P_VALUE,swLogPrintf("Revert SRB [ %d ] from Backup-Context due Handover Fail , type %e<UpConfigType>. ");
565248,1159094528,0,0,PS1,CERRC,CerrcRevertSrbDrbsConfig_info2,P_VALUE,swLogPrintf("Revert DRB [ %d ] from Backup-Context due Handover Fail , type %e<UpConfigType>. ");
565248,1159096832,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_rec,P_WARNING,swLogPrintf("This decode memory OsaIeMemInfo->pBufHdr ( 0x%X ) is already exists! index ( %d ) , numOfIeMemInfoForPhy ( %d ) ");
565248,1159098624,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_full,P_WARNING,swLogPrintf("numOfIeMemInfoForPhy ( %d ) exceeds MAX limitation ( %d ) , something wrong in PHY ");
565248,1159100928,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_save,P_VALUE,swLogPrintf("Store decode memory OsaIeMemInfo->pBufHdr ( 0x%X ) , numOfIeMemInfoForPhy ( %d ) , index ( %d ) ");
565248,1159102464,0,0,PS1,CERRC,CerrcStoreDecodeMemoryForPhy_err,P_ERROR,swLogPrintf("Should not come here! numOfIeMemInfoForPhy ( %d ) ");
565248,1159105024,0,0,PS1,CERRC,CerrcFindDecMemForPhy_find,P_VALUE,swLogPrintf("OsaIeMemInfo->pBufHdr ( 0x%X ) exists in array! numOfIeMemInfoForPhy ( %d ) , needClear ( %d ) ");
565248,1159108607,0,0,PS1,CERRC,CerrcSendCephyResetInd_send,P_WARNING,swLogPrintf("CERRC triggers CephyResetInd ");
565248,1159110655,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_HO,P_VALUE,swLogPrintf("Received CephyFreeCfgMemInd but cannot free ieMemInfo since this decode memory is using by handover context! ");
565248,1159110912,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_free,P_VALUE,swLogPrintf("Received CephyFreeCfgMemInd and free the OsaIeMemInfo->pBufHdr ( 0x%X ) , numOfIeMemInfoForPhy ( %d ) ");
565248,1159112960,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_ignore,P_WARNING,swLogPrintf("Ignore this CephyFreeCfgMemInd! Cannot find pBufHdr ( 0x%X ) in ERRC stored array , numOfIeMemInfoForPhy ( %d ) ");
565248,1159115008,0,0,PS1,CERRC,CerrcHandleCephyFreeCfgMemInd_state,P_WARNING,swLogPrintf("Ignore this CephyFreeCfgMemInd! CerrcGetConnContext ( 0x%X ) , pBufHdr ( 0x%X ) ");
565248,1159118847,0,0,PS1,CERRC,CerrcCreateHandoverContext_exist,P_WARNING,swLogPrintf("CerrcHandoverContext already exists! ");
565248,1159120895,0,0,PS1,CERRC,CerrcUpdateHandoverContext_warn,P_WARNING,swLogPrintf("MobilityControlInfo include rachSkipr14. ");
565248,1159120896,0,0,PS1,CERRC,CerrcFillCephyRadioResourceConfigForHandover_ase,P_WARNING,swLogPrintf("Need to extend additionalSpectrumEmission ( %d ) ! ");
565248,1159124991,0,0,PS1,CERRC,CerrcHandleSysInfoBlockType1DuringHO_err,P_ERROR,swLogPrintf("HandoverContext not exist! ");
565248,1159127039,0,0,PS1,CERRC,CerrcHandleSecurityActionDuringHO_warn,P_WARNING,swLogPrintf("Not support HO Security interRAT type! ");
565248,1159127808,0,0,PS1,CERRC,CerrcHandleCephyHandoverCnf_HO,P_WARNING,swLogPrintf("HANDOVER CELL ( %d , %d ) -> CELL ( %d , %d ) ");
565248,1159130112,0,0,PS1,CERRC,CerrcHandleCephyHandoverCnf_meas,P_SIG,swLogPrintf("HANDOVER [ RSRP = %d , RSRQ = %d , SNR = %d ] -> [ RSRP = %d , RSRQ = %d ] ");
565248,1159131136,0,0,PS1,CERRC,CerrcHandleCephyHandoverCnf_else,P_WARNING,swLogPrintf("Received CephyHandoverCnf in wrong RccState %e<CerrcRccState> ! ");
565248,1159135231,0,0,PS1,CERRC,CerrcHandleHandoverAfterRandomAccessInd_T304,P_WARNING,swLogPrintf("Received CemacRAInd->ERROR while T304 is NOT running ! ");
565248,1159137279,0,0,PS1,CERRC,CerrcHandleReestablishmentAfterRandomAccessInd_raErr,P_SIG,swLogPrintf("Received CemacRAInd ( ERROR ) after CemacRAInd ( SUCCESS ) ! ");
565248,1159139327,0,0,PS1,CERRC,CerrcHandleReestablishmentAfterRandomAccessInd_T301,P_WARNING,swLogPrintf("Received CemacRAInd->ERROR while T301 is NOT running ! ");
565248,1159139328,0,0,PS1,CERRC,CerrcHandleRrcConnectionReconfigWithMobilityControlInfo_lock,P_WARNING,swLogPrintf("Ingore Handover due to CellLockMode ( %d ) ");
565248,1159143423,0,0,PS1,CERRC,CerrcSendRrcConnectionReconfigurationComplete_notSupport,P_ERROR,swLogPrintf("UE not support CA! ");
565248,1159143424,0,0,PS1,CERRC,CerrcSendRRCConnectionReestablishmentRequest_err,P_ERROR,swLogPrintf("Unsupported reestblishementCause %d ! ");
565248,1159145472,0,0,PS1,CERRC,CerrcDeriveAsKey_algId,P_VALUE,swLogPrintf("KeyType %e<CerrcDerivedAsKeyType> ");
565248,1159148032,0,0,PS1,CERRC,CerrcSyncNH_HCC,P_VALUE,swLogPrintf("currentHopChainingCount ( %d ) , nextHopChainingCount ( %d ) , bInitialNH ( %d ) ");
565248,1159149568,0,0,PS1,CERRC,CerrcCheckSMCIntegrityProtection_count,P_VALUE,swLogPrintf("The correct NAS UL COUNT is 0x%x ");
565248,1159152128,0,0,PS1,CERRC,CerrcCalcXmacI_input,P_VALUE,swLogPrintf("EIA %e<IntegrityAlgorithm> , dlCount ( %d ) , bearer ( %d ) ");
565248,1159153664,0,0,PS1,CERRC,CerrcCalcXmacI_xmacI,P_VALUE,swLogPrintf("xMacI ( 0x%x ) ");
565248,1159155968,0,0,PS1,CERRC,CerrcCheckIfIntegrityProtectionPassed_fail,P_VALUE,swLogPrintf("xMacI ( %x ) , macI ( %x ) ");
565248,1159157760,0,0,PS1,CERRC,CerrcStoreSib2SiRawData_store,P_VALUE,swLogPrintf("Store the SIB2 SI data since it contains other SIBx , sibTypeMapBitmap ( 0x%x ) ");
565248,1159160064,0,0,PS1,CERRC,CerrcReleaseSib2SiRawData_free,P_VALUE,swLogPrintf("Clear the stored SIB2 SI data of Cell ( %d , %d ) ");
565248,1159163903,0,0,PS1,CERRC,CerrcProcessSibxInSameSiWithSib2_dec,P_VALUE,swLogPrintf("Decode and apply the stored SIB2 SI ");
565248,1159164672,0,0,PS1,CERRC,CerrcProcessSibxInSameSiWithSib2_cell,P_ERROR,swLogPrintf("Discard the stored SIB2 SI of Cell ( %d , %d ) , since current Cell ( %d , %d ) ");
565248,1159166208,0,0,PS1,CERRC,CerrcProcessSibxInSameSiWithSib2_else,P_VALUE,swLogPrintf("No SIBx in the SIB2 SI need to be processed , siMissingBitmap ( 0x%x ) , siRequiredBitmap ( 0x%x ) ");
565248,1159170047,0,0,PS1,CERRC,CerrcSendCephyInterFreqConfigReq_freq,P_WARNING,swLogPrintf("There is no supported inter-freq in SIB5 ! ");
565248,1159170304,0,0,PS1,CERRC,CerrcSendCephyInterFreqConfigReq_info,P_VALUE,swLogPrintf("InterFreqConfigReq [ %d ] = %d ");
565248,1159172096,0,0,PS1,CERRC,CerrcCopySib2Data_ase,P_WARNING,swLogPrintf("Need to extend additionalSpectrumEmission ( %d ) ! ");
565248,1159176191,0,0,PS1,CERRC,CerrcCopySib3Data_sDeltaP,P_VALUE,swLogPrintf("s_SearchDeltaP_r14 is present in SIB3! ");
565248,1159178239,0,0,PS1,CERRC,CerrcCopySib3Data_sDeltaPNvm,P_VALUE,swLogPrintf("sSearchDeltaP is set according to NVM! ");
565248,1159180287,0,0,PS1,CERRC,CerrcCopySib3Data_sDeltaPZero,P_VALUE,swLogPrintf("sSearchDeltaP is set to 0! ");
565248,1159180544,0,0,PS1,CERRC,CerrcCopySib5Data_newEarfcn,P_VALUE,swLogPrintf("convert to EARFCN ( %d ) according to selectedBand ( %d ) !! ");
565248,1159182336,0,0,PS1,CERRC,CerrcCopySib5Data_intra,P_WARNING,swLogPrintf("Skip the intra-freq EARFCN ( %d ) in SIB5 !! ");
565248,1159184384,0,0,PS1,CERRC,CerrcCopySib5Data_prio,P_SIG,swLogPrintf("Skip EARFCN ( %d ) in SIB5 due to priority is absent !! ");
565248,1159186688,0,0,PS1,CERRC,CerrcCopySib5Data_mFBI,P_WARNING,swLogPrintf("Skip EARFCN ( %d ) in SIB5 due to not able to convert to selectedBand ( %d ) ");
565248,1159190527,0,0,PS1,CERRC,CerrcCopySib5Data_ext,P_ERROR,swLogPrintf("We need to extend MAX inter-Freq number ! ");
565248,1159190784,0,0,PS1,CERRC,CerrcCopySib5Data_newEarfcnExt,P_VALUE,swLogPrintf("convert to EARFCN ( %d ) according to selectedBand ( %d ) !! ");
565248,1159192576,0,0,PS1,CERRC,CerrcCopySib5Data_intraExt,P_WARNING,swLogPrintf("Skip the intra-freq EARFCN ( %d ) in SIB5 !! ");
565248,1159194624,0,0,PS1,CERRC,CerrcCopySib5Data_prior12,P_SIG,swLogPrintf("Skip EARFCN ( %d ) in SIB5 due to priority is absent !! ");
565248,1159196928,0,0,PS1,CERRC,CerrcCopySib5Data_mFBIr12,P_WARNING,swLogPrintf("Skip EARFCN ( %d ) in SIB5 due to not able to convert to selectedBand ( %d ) ");
565248,1159200767,0,0,PS1,CERRC,CerrcSib1Decode_else,P_WARNING,swLogPrintf("Received SIB1 in unexpected state! ");
565248,1159200768,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_est,P_VALUE,swLogPrintf("SI 3H timer expired in RccState %e<CerrcRccState> , pending until return IDLE! ");
565248,1159204863,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_bg,P_VALUE,swLogPrintf("SI 3H timer expired during BG PLMN , abort PLMN first! ");
565248,1159206911,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_resel,P_VALUE,swLogPrintf("SI 3H timer expired during reselection , pending until reselection finished! ");
565248,1159208959,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_conn,P_VALUE,swLogPrintf("SI 3H timer expired in CERRC connected state , pending until return IDLE! ");
565248,1159211007,0,0,PS1,CERRC,CerrcHandleSiStoredTimerExpiry_deact,P_WARNING,swLogPrintf("SI 3H timer expired in CERRC deactive state! ");
565248,1159211008,0,0,PS1,CERRC,CerrcCheckIfStoredSiOutDated_expriy,P_SIG,swLogPrintf("SI 3H timer expired , last updating time is %d ");
565248,1159215103,0,0,PS1,CERRC,CerrcHandleCephyWaitBoundaryInd_err,P_ERROR,swLogPrintf("ERRC is not waiting for BCCH boundary !! ");
565248,1159217151,0,0,PS1,CERRC,CerrcHandleCephyWaitBoundaryInd_else,P_ERROR,swLogPrintf("Received CephyWaitBoundaryInd with timeLen 0 ms !! ");
565248,1159217152,0,0,PS1,CERRC,CerrcProcessSiUpdtMib_crc,P_VALUE,swLogPrintf("MIB fail during SI update , MIB crcResult is %d ! ");
565248,1159219456,0,0,PS1,CERRC,CerrcRequestSibsProc_noSib,P_VALUE,swLogPrintf("No SIB is requested : siRequiredBitmap ( 0x%X ) , siValidBitmap ( 0x%X ) ");
565248,1159221504,0,0,PS1,CERRC,CerrcRequestCertainSibsProc_noSib,P_VALUE,swLogPrintf("No SIB is requested : siRequiredBitmap ( 0x%X ) , siValidBitmap ( 0x%X ) ");
565248,1159225343,0,0,PS1,CERRC,CerrcProcessMibInIdle_else,P_ERROR,swLogPrintf("Received MIB in wrong PLMN search state! ");
565248,1159225344,0,0,PS1,CERRC,CerrcProcessMibInConn_state,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong RccState %e<CerrcRccState>! ");
565248,1159227392,0,0,PS1,CERRC,CerrcProcessSibsInConn_csrState,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong CsrState %e<CerrcCsrState>! ");
565248,1159229440,0,0,PS1,CERRC,CerrcProcessSibsInConn_state,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong RccState %e<CerrcRccState>! ");
565248,1159232256,0,0,PS1,CERRC,CerrcHandleCephySysInfoInd_entry,P_VALUE,swLogPrintf("Cell ( %d , %d ) , crcResult ( %d ) , type %e<SysInfoIndType> ");
565248,1159235583,0,0,PS1,CERRC,CerrcHandleCephySysInfoInd_ret,P_VALUE,swLogPrintf("Receive CephySysInfoInd while waiting for CephyDeactCnf ");
565248,1159235584,0,0,PS1,CERRC,CerrcHandleCephySysInfoInd_state,P_WARNING,swLogPrintf("Receive CephySysInfoInd in wrong RrcState %e<CerrcState>! ");
565248,1159238400,0,0,PS1,CERRC,CerrcHandleCephyNcellSysInfoInd_entry,P_VALUE,swLogPrintf("Cell ( %d , %d ) , crcResult ( %d ) , type %e<SysInfoIndType> ");
565248,1159239936,0,0,PS1,CERRC,CerrcHandleCephyNcellSysInfoInd_state,P_WARNING,swLogPrintf("Receive CephyNcellSysInfoInd in wrong RrcState %e<CerrcState> or RccState %e<CerrcRccState>! ");
565248,1159241728,0,0,PS1,CERRC,CerrcHandleT300Expiry_rccState,P_WARNING,swLogPrintf("T300 Expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159243776,0,0,PS1,CERRC,CerrcHandleT301Expiry_rccState,P_WARNING,swLogPrintf("T301 expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159245824,0,0,PS1,CERRC,CerrcHandleT311Expiry_rccState,P_WARNING,swLogPrintf("T311 expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159247872,0,0,PS1,CERRC,CerrcHandleT304Expiry_rccState,P_WARNING,swLogPrintf("T304 expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159251967,0,0,PS1,CERRC,CerrcHandleBcchModExpiry_err,P_ERROR,swLogPrintf("ERRC is not waiting for BCCH boundary !! ");
565248,1159251968,0,0,PS1,CERRC,CerrcHandleCellSearchGuardTimerExpiry_csrState,P_WARNING,swLogPrintf("CellSearchGuardTimerExpiry in wrong CsrState %e<CerrcCsrState> ! ");
565248,1159254016,0,0,PS1,CERRC,CerrcHandleCellSearchGuardTimerExpiry_rccState,P_WARNING,swLogPrintf("CellSearchGuardTimerExpiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159256064,0,0,PS1,CERRC,CerrcHandleCellSearchGuardTimerExpiry_rrcState,P_WARNING,swLogPrintf("CellSearchGuardTimerExpiry in wrong RrcState %e<CerrcState> ! ");
565248,1159258112,0,0,PS1,CERRC,CerrcHandleCampingGuardTimerExpiry_csrState,P_WARNING,swLogPrintf("CampingGuardTimerExpiry in wrong CsrState %e<CerrcCsrState> ! ");
565248,1159260416,0,0,PS1,CERRC,CerrcHandleCampingGuardTimerExpiry_rccState,P_WARNING,swLogPrintf("CampingGuardTimerExpiry in wrong RrcState %e<CerrcState> , RccState %e<CerrcRccState> ! ");
565248,1159262208,0,0,PS1,CERRC,CerrcHandleReceivingSib14GuardTimerExpiry_rccState,P_WARNING,swLogPrintf("SIB14 guard timer expiry in wrong RccState %e<CerrcRccState> ! ");
565248,1159266303,0,0,PS1,CERRC,CerrcHandleMibUpdateGuardTimerExpiry_entry,P_WARNING,swLogPrintf("MIB guard timer expiry !! ");
565248,1159268351,0,0,PS1,CERRC,CerrcHandleMibUpdateGuardTimerExpiry_else,P_WARNING,swLogPrintf("MIB guard timer expiry unexpected !! ");
565248,1159268864,0,0,PS1,CERRC,CerrcDebugForTimer_timer,P_ERROR,swLogPrintf("GosTimerIsRunning ( 0x%x ) = %d ! IS_IRQ_MODE ( %d ) ");
565248,1159270656,0,0,PS1,CERRC,CerrcDebugForTimer_timerNull,P_ERROR,swLogPrintf("Cannot find timer %e<CerrcTimerId> in ERRC timer list ! pTimerList ( %x ) ");
565248,1159272704,0,0,PS1,CERRC,CerrcIsTimerRunning_T300,P_ERROR,swLogPrintf("ERRC T300 running status ( %d ) , Gos T300 running status ( %d ) ");
565248,1159276543,0,0,PS1,CERRC,CerrcStartTimer_t300,P_INFO,swLogPrintf("Start T300 ");
565248,1159276800,0,0,PS1,CERRC,CerrcStartTimer_Id,P_VALUE,swLogPrintf("CerrcStartTimer : timerId %e<CerrcTimerId> , timerPeriod = %d ms ");
565248,1159278592,0,0,PS1,CERRC,CerrcStartTimer_timerId,P_VALUE,swLogPrintf("Add timerId allocated by OS : osTimerId_t = 0x%x ");
565248,1159280640,0,0,PS1,CERRC,CerrcStartTimer_fail,P_ERROR,swLogPrintf("Start timer fail : osStatus_t ( %d ) ");
565248,1159282944,0,0,PS1,CERRC,CerrcStopTimerIfRunning_stop,P_VALUE,swLogPrintf("CerrcStopTimer : timerId %e<CerrcTimerId> , osTimerId_t = 0x%x ");
565248,1159284736,0,0,PS1,CERRC,CerrcHandleTimerExpiry_start,P_WARNING,swLogPrintf("timerId %e<CerrcTimerId> has not started : ");
565248,1159287296,0,0,PS1,CERRC,CerrcHandleTimerExpiry_Id,P_VALUE,swLogPrintf("CerrcHandleTimerExpiry : timerId %e<CerrcTimerId> , osTimerId_t = 0x%x , timerPeriod = %d ms ");
565248,1159290879,0,0,PS1,CERRC,CerrcHandleTimerExpiry_deact_cnf,P_ERROR,swLogPrintf("CERRC_T_DEACT_CNF_GUARD Timer expiry , please foward it to PHY. ");
565248,1159292927,0,0,PS1,CERRC,CerrcHandleTimerExpiry_mac_reset_cnf,P_ERROR,swLogPrintf("CERRC_T_MAC_RESET_CNF_GUARD Timer expiry , please foward it to PHY. ");
565248,1159292928,0,0,PS1,CERRC,CerrcHandleTimerExpiry_errCat1,P_ERROR,swLogPrintf("timerId is invalid : %d ");
565248,1159295232,0,0,PS1,CERRC,CerrcStartHibTimer_Id,P_VALUE,swLogPrintf("CerrcStartHibTimer : hibTimerId %e<OsaHibTimerId> , timerPeriod = %d ms ");
565248,1159297024,0,0,PS1,CERRC,CerrcStopHibTimerIfRunning_stop,P_VALUE,swLogPrintf("CerrcHibStopTimer : hibTimerId %e<OsaHibTimerId> ");
565248,1159299072,0,0,PS1,CERRC,CerrcHandleHibTimerExpiry_err,P_ERROR,swLogPrintf("Unexpected hibTimerId : %d ");
565248,1159301120,0,0,PS1,CERRC,CerrcRsrpMapping_err,P_ERROR,swLogPrintf("Invalid rsrp ( %d ) ! ");
565248,1159303168,0,0,PS1,CERRC,CerrcRsrqMapping_err,P_ERROR,swLogPrintf("Invalid rsrq ( %d ) ! ");
565248,1159305216,0,0,PS1,CERRC,CerrcNRsrpMapping_err,P_ERROR,swLogPrintf("Invalid rsrp ( %d ) ! ");
565248,1159307520,0,0,PS1,CERRC,CerrcNRsrqMapping_err,P_ERROR,swLogPrintf("Invalid rsrq ( %d ) , rsrqMapping ( %d ) ! ");
565248,1159309312,0,0,PS1,CERRC,CerrcGetRfBandHalfDuplex_err,P_ERROR,swLogPrintf("Cannot find Band ( %d ) in UE support RfBandList ! ");
565248,1159311872,0,0,PS1,CERRC,CerrcGetServCellMeas_no,P_VALUE,swLogPrintf("No serving cell : ActStatus %e<CerrcActStatus> , rsrp ( %d ) , snrPresent ( %d ) ");
565248,1159315455,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_csDomain,P_WARNING,swLogPrintf("This PagingRecord is for CS domain , ignore it! ");
565248,1159315712,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_wrongStmsi,P_VALUE,swLogPrintf("Mismatch s-TMSI , UE MMEC ( 0x%x ) , mTMSI ( 0x%x ) ");
565248,1159319551,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_stmsi,P_VALUE,swLogPrintf("Paging for s-TMSI but sTMSIPresent is FALSE ");
565248,1159321599,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_imsi,P_VALUE,swLogPrintf("Paging for IMSI but bIMSIPresent is FALSE ");
565248,1159321600,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_tag,P_WARNING,swLogPrintf("Invalid pPagingRecord->tag ( %d ) ! ");
565248,1159325695,0,0,PS1,CERRC,CerrcBootCheckPagingUeIdentity_mismatch,P_VALUE,swLogPrintf("This PagingRecord is not for this UE! PagingRecord mismatch! ");
565248,1159327743,0,0,PS1,CERRC,CerrcBootDecodeSkipUnsupportedExtension_else,P_WARNING,swLogPrintf("Invalid lengh of extension ! ");
565248,1159329024,0,0,PS1,CERRC,CerrcBootUpDueToPaging_wakeup,P_SIG,swLogPrintf("Wake up due to Paging ! UeId ( %d ) , SI ( %d ) , SI_eDRX ( %d ) , ETWS ( %d ) , CMAS ( %d ) , EAB ( %d ) ");
565248,1159331839,0,0,PS1,CERRC,CerrcBootUpDueToPaging_decInvalid,P_VALUE,swLogPrintf("This Paging has nothing to do with us ! ");
565248,1159333887,0,0,PS1,CERRC,CerrcBootUpDueToPaging_decErr,P_WARNING,swLogPrintf("The paging info cannot be decoded correctly ! ");
565248,1159333888,0,0,PS1,CERRC,CerrcBootUpDueToPaging_pagingType,P_WARNING,swLogPrintf("Unsupported pagingType ( %d ) ");
565248,1159336704,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_slp2,P_SIG,swLogPrintf("SLEEP2 : SERV CELL : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) , RISK ( %d ) ");
565248,1159338752,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_hib,P_SIG,swLogPrintf("HIBERNATE : SERV CELL : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) , RISK ( %d ) ");
565248,1159340800,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_rmTrue,P_SIG,swLogPrintf("CERRC HIB : Wake up due to RSRP ( %d ) < = rmRsrpThreshold ( %d ) || RSRQ ( %d ) < = nRsrqThreshold ( %d ) ");
565248,1159342336,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_update,P_SIG,swLogPrintf("CERRC HIB : Wake up due to need to update rmRsrpThreshold to ( %d ) , sSearchDeltaP ( %d ) ");
565248,1159344896,0,0,PS1,CERRC,CerrcBootUpDueToLowMeas_true,P_SIG,swLogPrintf("CERRC HIB : Wake up due to RSRP ( %d ) < = nRsrpThreshold ( %d ) || RSRQ ( %d ) < = nRsrqThreshold ( %d ) ");
565248,1159348223,0,0,PS1,CERRC,CerrcLeaveSleep2DueToReselection_HIB,P_VALUE,swLogPrintf("CERRC vote to enter HIB , but enter SLEEP2 instead! ");
565248,1159349760,0,0,PS1,CERRC,CerrcLeaveSleep2DueToReselection_serv,P_SIG,swLogPrintf("SLEEP2 : SERV CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , SNR ( %d ) , RISK ( %d ) , unreliable ( %d ) ");
565248,1159352319,0,0,PS1,CERRC,CerrcLeaveSleep2DueToReselection_reselect,P_SIG,swLogPrintf("CERRC SLEEP2 : Wake up due to CELL RESELECTION ! ");
565248,1159354367,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_criS,P_SIG,swLogPrintf("CERRC SLEEP2 : Wake up due to CriterionS is not fulfilled ! ");
565248,1159355392,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_entry,P_VALUE,swLogPrintf("CERRC SLEEP2 : s-SearchDeltaP ( %d ) , Srxlev ( %d ) , SrxlevRef ( %d ) , bRMCriterionFulfilled ( %d ) , higherPriorityBitmap ( 0x%X ) ");
565248,1159358463,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_stopIntra,P_SIG,swLogPrintf("CERRC SLEEP2 : Wake up due to STOP intra-meas ! ");
565248,1159360511,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_startIntra,P_SIG,swLogPrintf("CERRC SLEEP2 : Wake up due to START intra-meas ! ");
565248,1159362559,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_startInter,P_SIG,swLogPrintf("CERRC SLEEP2 : Wake up due to START inter-meas ! ");
565248,1159362816,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_lowerInter,P_SIG,swLogPrintf("CERRC SLEEP2 : Wake up due to MODIFY lower priority inter-meas ! bLowerPriorityNeeded ( %d ) , bLowerPriorityOngoing ( %d ) ");
565248,1159366655,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_stopInter,P_SIG,swLogPrintf("CERRC SLEEP2 : Wake up due to STOP inter-meas ! ");
565248,1159368703,0,0,PS1,CERRC,CerrcLeaveSleep2DueToServMeas_stay,P_VALUE,swLogPrintf("Stay in SLEEP2 state ! ");
565248,1159370751,0,0,PS1,CERRC,CerrcIsWaitForSiUpdate_SiWating,P_VALUE,swLogPrintf("Don ' t start reselect evaluate while SI update is ongoing. ");
565248,1159372544,0,0,PS1,CERRC,CerrcCalcIntraCellRank_rank,P_VALUE,swLogPrintf("Intra CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , prio ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qOffset ( %d ) ");
565248,1159374592,0,0,PS1,CERRC,CerrcCalcIntraCellRank_quality,P_VALUE,swLogPrintf("Intra CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , EC RANK ( %d ) , RISK ( %d ) , Srxlev ( %d ) , sQual ( %d ) ");
565248,1159376640,0,0,PS1,CERRC,CerrcCalcInterCellRank_rank,P_VALUE,swLogPrintf("Inter CELL ( %d , %d ) : Srxlev ( %d ) , sQual ( %d ) , prio ( %d ) , rank ( %d ) , qRxLevMin ( %d ) , qOffset ( %d ) ");
565248,1159378688,0,0,PS1,CERRC,CerrcCalcInterCellRank_quality,P_VALUE,swLogPrintf("Inter CELL ( %d , %d ) : RSRP ( %d ) , RSRQ ( %d ) , EC RANK ( %d ) , RISK ( %d ) , Srxlev ( %d ) , sQual ( %d ) ");
565248,1159379456,0,0,PS1,CERRC,CerrcSkipReselFreq_intra,P_VALUE,swLogPrintf("Skip intra-freq due to : numOfCell ( %d ) , top cell rankValid ( %d ) , barredByBestRank ( %d ) ");
565248,1159382016,0,0,PS1,CERRC,CerrcSkipReselFreq_inter,P_VALUE,swLogPrintf("Skip inter-freq ( %d ) due to : numOfCell ( %d ) , top cell rankValid ( %d ) , barredByBestRank ( %d ) , freqLock ( %d ) ");
565248,1159384576,0,0,PS1,CERRC,CerrcEvalReselCriterionHigherPriority_rsrqT,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ->prio ( %d ) ] [ TRUE ] : Squal ( %d ) > threshXHighQ ( %d+ ( %d ) / 4 ) ");
565248,1159386624,0,0,PS1,CERRC,CerrcEvalReselCriterionHigherPriority_rsrq,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ->prio ( %d ) ] [ FALSE ] : not fulfill Squal ( %d ) > threshXHighQ ( %d+ ( %d ) / 4 ) ");
565248,1159388672,0,0,PS1,CERRC,CerrcEvalReselCriterionHigherPriority_rsrpT,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ->prio ( %d ) ] [ TRUE ] : Srxlev ( %d ) > threshXHigh ( %d+ ( %d ) / 4 ) ");
565248,1159390720,0,0,PS1,CERRC,CerrcEvalReselCriterionHigherPriority_rsrp,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ->prio ( %d ) ] [ FALSE ] : not fulfill Srxlev ( %d ) > threshXHigh ( %d+ ( %d ) / 4 ) ");
565248,1159393024,0,0,PS1,CERRC,CerrcEvalReselCriterionLowerPriority_rsrqT,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ] [ TRUE ] : S-Squal ( %d ) < threshServingLowQ ( %d ) && N-Squal ( %d ) > threshXLowQ ( %d+ ( %d ) / 4 ) ");
565248,1159395072,0,0,PS1,CERRC,CerrcEvalReselCriterionLowerPriority_rsrq,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ] [ FALSE ] : not fulfill S-Squal ( %d ) < threshServingLowQ ( %d ) && N-Squal ( %d ) > threshXLowQ ( %d+ ( %d ) / 4 ) ");
565248,1159397120,0,0,PS1,CERRC,CerrcEvalReselCriterionLowerPriority_rsrpT,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ] [ TRUE ] : S-Srxlev ( %d ) < threshServingLow ( %d ) && N-Srxlev ( %d ) > threshXLow ( %d+ ( %d ) / 4 ) ");
565248,1159399168,0,0,PS1,CERRC,CerrcEvalReselCriterionLowerPriority_rsrp,P_VALUE,swLogPrintf("CELL ( %d , %d ) [ prio ( %d ) ] [ FALSE ] : not fulfill S-Srxlev ( %d ) < threshServingLow ( %d ) && N-Srxlev ( %d ) > threshXLow ( %d+ ( %d ) / 4 ) ");
565248,1159399680,0,0,PS1,CERRC,CerrcEvalReselCriterion_invalidPrio,P_VALUE,swLogPrintf("Skip CELL ( %d , %d ) due to invalid frequency priority ");
565248,1159401728,0,0,PS1,CERRC,CerrcEvalReselCriterion_startT0,P_VALUE,swLogPrintf("CELL ( %d , %d ) -- Treselection ( 0 ) ");
565248,1159404032,0,0,PS1,CERRC,CerrcEvalReselCriterion_reselectTime,P_VALUE,swLogPrintf("CELL ( %d , %d ) -- Treselection ( %d ) expriy ");
565248,1159406080,0,0,PS1,CERRC,CerrcEvalReselCriterion_reselectTongoing,P_VALUE,swLogPrintf("CELL ( %d , %d ) -- Treselection ( %d ) is running ");
565248,1159408128,0,0,PS1,CERRC,CerrcEvalReselCriterion_startT,P_VALUE,swLogPrintf("CELL ( %d , %d ) -- start Treselection ( %d ) ");
565248,1159410176,0,0,PS1,CERRC,CerrcGetHighestRankedCell_end,P_VALUE,swLogPrintf("Highest ranked CELL ( %d , %d ) , rank ( %d ) ");
565248,1159413759,0,0,PS1,CERRC,CerrcRemoveInvalidBestRankBar_intra,P_VALUE,swLogPrintf("Intra-freq barredByBestRank flag is set as FALSE ! ");
565248,1159413760,0,0,PS1,CERRC,CerrcRemoveInvalidBestRankBar_inter,P_VALUE,swLogPrintf("Inter-freq ( %d ) barredByBestRank flag is set as FALSE ! ");
565248,1159416320,0,0,PS1,CERRC,CerrcUpdateFreqBarredByBestRank_intra,P_VALUE,swLogPrintf("Intra-freq barredByBestRank flag set as TRUE due to highest ranked intra-CELL ( %d ) : barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159418624,0,0,PS1,CERRC,CerrcUpdateFreqBarredByBestRank_inter,P_VALUE,swLogPrintf("Inter-freq ( %d ) barredByBestRank flag set as TRUE due to highest ranked inter-CELL ( %d ) : barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159419904,0,0,PS1,CERRC,CerrcUpdateFreqBarredByBestRank_else,P_VALUE,swLogPrintf("CampOnState %e<CerrcCampOnState> ");
565248,1159422464,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_intra,P_VALUE,swLogPrintf("CampOnState %e<CerrcCampOnState> , barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159424000,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_prio,P_VALUE,swLogPrintf("Skip inter-freq ( %d ) due to invalid frequency priority ");
565248,1159426560,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_inter,P_VALUE,swLogPrintf("CampOnState %e<CerrcCampOnState> , barredByPlmn ( %d ) , barredByTa ( %d ) ");
565248,1159430143,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_else,P_VALUE,swLogPrintf("Reselect is not needed due to camping less than 1 second. ");
565248,1159430400,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_pingpong,P_SIG,swLogPrintf("Cell ( %d , %d ) will trigger pingpong reselection , NOT reselect to it. ");
565248,1159434239,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_snr,P_SIG,swLogPrintf("Pending cell reslection due to serving cell is good enough ");
565248,1159434496,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_nsnr,P_SIG,swLogPrintf("Pending cell reslection due to serving cell SNR ( %d ) > = target cell SNR ( %d ) ");
565248,1159436544,0,0,PS1,CERRC,CerrcCheckIfReselectNeeded_need,P_VALUE,swLogPrintf("Start to reselect to Cell ( %d , %d ) . ");
565248,1159438848,0,0,PS1,CERRC,CerrcSleep2ReselEvaluation_worseTargetCell,P_SIG,swLogPrintf("Target Cell ( %d , %d ) RSRP is worse than serving cell ( %d ) dbm , NOT reselect to it. ");
575488,1178601731,0,0,PS1,NAS,CemmProcGetRplmnNameReq_1,P_VALUE,swLogPrintf("Full name from NITZ : %s , Short Name : %s ");
575488,1178603520,0,0,PS1,NAS,CemmTrrigerRrcReleaseReq_1,P_INFO,swLogPrintf("If there is emmSpecificProcedure : %d ");
575488,1178605568,0,0,PS1,NAS,CeNasBePendingSignal_1,P_WARNING,swLogPrintf("CE NAS , can ' t process signal : 0x%x , as CE NAS not woken up from deep sleep , pending it ");
575488,1178607872,0,0,PS1,NAS,CeNasStartTimer_1,P_VALUE,swLogPrintf("CENAS , Start NAS timerId : %e<CeNasTimerIdEnum> , period is %d MS ");
575488,1178609664,0,0,PS1,NAS,CeNasStartTimer_2,P_WARNING,swLogPrintf("CENAS , TimerId : %e<CeNasTimerIdEnum> is already started! ");
575488,1178611712,0,0,PS1,NAS,CeNasStopTimer_1,P_VALUE,swLogPrintf("EMM timer %e<CeNasTimerIdEnum> stop ");
575488,1178613760,0,0,PS1,NAS,CeNasStopTimer_2,P_VALUE,swLogPrintf("SMS timer %e<CeNasTimerIdEnum> stop ");
575488,1178615808,0,0,PS1,NAS,CeNasStopTimer_3,P_VALUE,swLogPrintf("PLMN timer %e<CeNasTimerIdEnum> stop ");
575488,1178617856,0,0,PS1,NAS,CeNasStopTimer_w_1,P_WARNING,swLogPrintf("NAS , timerId : %e<CeNasTimerIdEnum> , not runing , but not NULL ");
575488,1178619904,0,0,PS1,NAS,CeNasStopHibTimer_1,P_VALUE,swLogPrintf("NAS Hibernate timer %e<OsaHibTimerId> stop ");
575488,1178621952,0,0,PS1,NAS,CeNasTimerExpiry_1,P_VALUE,swLogPrintf("Unexpected timerEnum : %d ");
575488,1178624000,0,0,PS1,NAS,CeNasHibTimerExpiry_1,P_VALUE,swLogPrintf("Unexpected hibTimerId : %d ");
575488,1178628095,0,0,PS1,NAS,CeNasTaskEntry_2,P_VALUE,swLogPrintf("CENAS vote to enter HIB state ");
575488,1178630143,0,0,PS1,NAS,CeNasTaskEntry_3,P_VALUE,swLogPrintf("CENAS vote to enter SLEEP2 state ");
575488,1178632191,0,0,PS1,NAS,CeNasTaskEntry_not_hib_1,P_VALUE,swLogPrintf("CENAS cannot enter HIB state ");
575488,1178634239,0,0,PS1,NAS,CeNasTaskEntry_slp2_1,P_VALUE,swLogPrintf("CENAS vote to enter SLEEP2 state ");
575488,1178636287,0,0,PS1,NAS,CeNasTaskEntry_4,P_VALUE,swLogPrintf("CENAS cannot enter HIB state ");
575488,1178638335,0,0,PS1,NAS,CeNasTaskEntry_5,P_VALUE,swLogPrintf("CENAS cannot enter SLEEP2 state ");
575488,1178638592,0,0,PS1,NAS,DecodeAttachAccept_1,P_WARNING,swLogPrintf("esmPduLen 0x%x is equal or greater than inDataLen 0x%x! ");
576512,1180700671,0,0,PS1,CEMM,CemmRegRequest_1,P_VALUE,swLogPrintf("Receiving registration while in connected state ");
576512,1180702719,0,0,PS1,CEMM,CemmEmergencyCampRequest_1,P_VALUE,swLogPrintf("Receiving emergency camp request while in connected state , buffer it. ");
576512,1180704767,0,0,PS1,CEMM,CemmSetCpsmsParm_1,P_VALUE,swLogPrintf("set AT+CPSMS under PSM state , service status is No service! ");
576512,1180706815,0,0,PS1,CEMM,CemmSetCpsmsParm_2,P_VALUE,swLogPrintf("set AT+CPSMS under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No service! ");
576512,1180707328,0,0,PS1,CEMM,CemmSetCpsmsParm_3,P_VALUE,swLogPrintf("emmState is %d , bUlMsgSuspend is %d , bWaitCampInd is %d , can ' t define tau pending it! ");
576512,1180710911,0,0,PS1,CEMM,CemmSetCpsmsParm_4,P_VALUE,swLogPrintf("set AT+CPSMS while PLMN searching! ");
576512,1180710912,0,0,PS1,CEMM,CemmSetCpsmsParm_5,P_VALUE,swLogPrintf("set AT+CPSMS while specific procedure %d is ongoing! ");
576512,1180715007,0,0,PS1,CEMM,CemmSetCemodeParm_1,P_VALUE,swLogPrintf("set AT+CEMODE under PSM state , service status is No service! ");
576512,1180717055,0,0,PS1,CEMM,CemmSetCemodeParm_2,P_VALUE,swLogPrintf("set AT+CEMODE under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No service! ");
576512,1180717568,0,0,PS1,CEMM,CemmSetCemodeParm_3,P_VALUE,swLogPrintf("emmState is %d , bUlMsgSuspend is %d , bWaitCampInd is %d , can ' t define tau pending it! ");
576512,1180721151,0,0,PS1,CEMM,CemmSetCemodeParm_4,P_VALUE,swLogPrintf("set AT+CEMODE while PLMN searching! ");
576512,1180721152,0,0,PS1,CEMM,CemmSetCemodeParm_5,P_VALUE,swLogPrintf("set AT+CEMODE while specific procedure %d is ongoing! ");
576512,1180723200,0,0,PS1,CEMM,CemmSetParmReq_nasT_1,P_WARNING,swLogPrintf("CE NAS , CAM set NAS timer , not invalid tId : %d ");
576512,1180725248,0,0,PS1,CEMM,CemmSetParmReq_1,P_WARNING,swLogPrintf("CE NAS , Unexpected set parameter type : %d ");
576512,1180727296,0,0,PS1,CEMM,CemmGetParmReq_w_1,P_WARNING,swLogPrintf("CE NAS , unknown parmType : %d , can ' t get related CAM param info ");
576512,1180731391,0,0,PS1,CEMM,CemmPowerRecoverRequest_1,P_VALUE,swLogPrintf("NW not configured T3324 , use AT+ECCFG configured T3324MaxValueS! ");
576512,1180731648,0,0,PS1,CEMM,CemmProcTriggerTauReq_1,P_VALUE,swLogPrintf("emmSpecificProcedure is %d ; emmState is %d ");
576512,1180733952,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_1,P_VALUE,swLogPrintf("This forbidden tai ( 0x%x , 0x%x , 0x%x ) is already in tiny ctx ");
576512,1180736256,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_2,P_VALUE,swLogPrintf("forbiddenTaiNum is %d , mcc is 0x%X , mnc is 0x%x , tac is 0x%X ");
576512,1180738048,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_3,P_VALUE,swLogPrintf("This forbidden tai ( 0x%x , 0x%x , 0x%x ) is already in tiny ctx ");
576512,1180740352,0,0,PS1,CEMM,SaveForbiddenTaiToTinyContext_4,P_VALUE,swLogPrintf("forbiddenTaiNum is %d , mcc is 0x%X , mnc is 0x%x , tac is 0x%X ");
576512,1180743679,0,0,PS1,CEMM,SaveTaiListToTinyContext_1,P_VALUE,swLogPrintf("Number of allocated TAI exceed CE_NAS_TINY_CTX_TAI_NUM! ");
576512,1180745727,0,0,PS1,CEMM,SaveTaiListToTinyContext_2,P_VALUE,swLogPrintf("Number of allocated TAI exceed CE_NAS_TINY_CTX_TAI_NUM! ");
576512,1180747775,0,0,PS1,CEMM,SaveTaiListToTinyContext_3,P_VALUE,swLogPrintf("Number of allocated TAI exceed CE_NAS_TINY_CTX_TAI_NUM! ");
576512,1180749823,0,0,PS1,CEMM,PendingEsmDataOutOfDate_1,P_VALUE,swLogPrintf("Pending data is out of date , and need to discard it. ");
576512,1180751871,0,0,PS1,CEMM,PendingEsmDataOutOfDate_2,P_VALUE,swLogPrintf("Pending data is out of date , and not need to discard , there ' s no pending data in DR / ESM , still retry ");
576512,1180753919,0,0,PS1,CEMM,PendingEsmDataOutOfDate_3,P_VALUE,swLogPrintf("Pending data is out of date , and not need to discard , but there ' s new pending data in DR / ESM , discard current data. ");
576512,1180755967,0,0,PS1,CEMM,CemmStartT3324Check_1,P_SIG,swLogPrintf("Start T3324 ");
576512,1180758015,0,0,PS1,CEMM,CemmStartT3324Check_2,P_SIG,swLogPrintf("T3324 assigned by NW is zero ");
576512,1180760063,0,0,PS1,CEMM,CemmStartT3412Check_1,P_SIG,swLogPrintf("Start T3412 ");
576512,1180762111,0,0,PS1,CEMM,EpsAttachStateChange_1,P_WARNING,swLogPrintf("updateEpsnscToNvm ");
576512,1180764159,0,0,PS1,CEMM,EpsAttachStateChange_2,P_WARNING,swLogPrintf("updateEpslociToNvm ");
576512,1180766207,0,0,PS1,CEMM,EpsConnectionStateChange_4,P_WARNING,swLogPrintf("updateEpsnscToNvm ");
576512,1180768255,0,0,PS1,CEMM,EpsConnectionStateChange_5,P_WARNING,swLogPrintf("updateEpslociToNvm ");
576512,1180770303,0,0,PS1,CEMM,EmmSelectProtocolState_1,P_WARNING,swLogPrintf("State changing wrong! ");
576512,1180770304,0,0,PS1,CEMM,EmmChangeProtocolState_1,P_VALUE,swLogPrintf("EMM state change to %e<EmmSubState> ");
576512,1180774399,0,0,PS1,CEMM,GetAttachProcedure_1,P_INFO,swLogPrintf("No Attach Procedure! ");
576512,1180775424,0,0,PS1,CEMM,GetTauProcedure_1,P_VALUE,swLogPrintf("epsUpdateStatus is %d ; tauRequired is %d ; pendingTau is %d , tauForSmsOnly is %d , updateCs is %d ");
576512,1180778495,0,0,PS1,CEMM,GetTauProcedure_2,P_VALUE,swLogPrintf("Normal TAU is triggered ");
576512,1180780543,0,0,PS1,CEMM,GetTauProcedure_3,P_VALUE,swLogPrintf("Normal TAU is triggered ");
576512,1180782591,0,0,PS1,CEMM,GetTauProcedure_4,P_VALUE,swLogPrintf("Periodic TAU is triggered ");
576512,1180784639,0,0,PS1,CEMM,GetTauProcedure_5,P_VALUE,swLogPrintf("No TAU is triggered ");
576512,1180786687,0,0,PS1,CEMM,GetTauProcedure_6,P_VALUE,swLogPrintf("Combined TA updating with IMSI ATTACH is triggered ");
576512,1180788735,0,0,PS1,CEMM,GetTauProcedure_7,P_VALUE,swLogPrintf("Combined TAU is triggered ");
576512,1180790783,0,0,PS1,CEMM,GetTauProcedure_8,P_VALUE,swLogPrintf("Combined TAU is triggered ");
576512,1180792831,0,0,PS1,CEMM,GetTauProcedure_9,P_VALUE,swLogPrintf("Periodic TAU is triggered ");
576512,1180794879,0,0,PS1,CEMM,GetTauProcedure_10,P_VALUE,swLogPrintf("No TAU is triggered ");
576512,1180794880,0,0,PS1,CEMM,GetTauProcedure_11,P_VALUE,swLogPrintf("Current service is %d , No Tau Procedure is triggered! ");
576512,1180796928,0,0,PS1,CEMM,EmmAttachAbnormal_1,P_VALUE,swLogPrintf("Attach attempt counter is %d ");
576512,1180801023,0,0,PS1,CEMM,EmmAttachAbnormal_2,P_INFO,swLogPrintf("Delete GUTI! ");
576512,1180801024,0,0,PS1,CEMM,EmmCombinedAttachOnlyEpsSucceed_1,P_VALUE,swLogPrintf("Combined ATTACH successful for EPS only , TAU attempt counter is %d ");
576512,1180803072,0,0,PS1,CEMM,EmmTauAbnormal_1,P_VALUE,swLogPrintf("TAU attempt counter is %d ");
576512,1180805376,0,0,PS1,CEMM,IsAttachWithImsi_1,P_VALUE,swLogPrintf("attachWithImsiCtrl is %d , power on attach end is %d ");
576512,1180807168,0,0,PS1,CEMM,IsAlwaysAttachWithImsi_1,P_VALUE,swLogPrintf("attachWithImsiCtrl is %d ");
576512,1180809472,0,0,PS1,CEMM,IsAttachWithoutIntegrityProtected_1,P_VALUE,swLogPrintf("power on without integrity protected is %d , power on attach end is %d ");
576512,1180811776,0,0,PS1,CEMM,GetTaiType_1,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for regional provision of service ' ! ");
576512,1180813824,0,0,PS1,CEMM,GetTaiType_2,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for regional provision of service ' ! ");
576512,1180815872,0,0,PS1,CEMM,GetTaiType_3,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for roaming ' ! ");
576512,1180817920,0,0,PS1,CEMM,GetTaiType_4,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) , TAC ( 0x%x ) is in the list of ' forbidden tracking areas for roaming ' ! ");
576512,1180819456,0,0,PS1,CEMM,GetCurrentAttachService_1,P_VALUE,swLogPrintf("Current service type is %d ");
576512,1180823551,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_1,P_VALUE,swLogPrintf("Can ' t perform ATTACH while T3402 is running! ");
576512,1180825599,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_2,P_VALUE,swLogPrintf("Still can perform ATTACH while T3346 is running! ");
576512,1180827647,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_3,P_VALUE,swLogPrintf("Can ' t perform ATTACH while T3346 is running! ");
576512,1180829695,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_4,P_VALUE,swLogPrintf("Can ' t perform ATTACH while Ul Msg is Suspend by Rrc! ");
576512,1180831743,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_5,P_VALUE,swLogPrintf("Can ' t perform TAU while T3402 is running! ");
576512,1180833791,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_6,P_VALUE,swLogPrintf("Still Can perform TAU while T3346 is running! ");
576512,1180835839,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_7,P_VALUE,swLogPrintf("Can ' t perform TAU while T3346 is running! ");
576512,1180837887,0,0,PS1,CEMM,CemmCheckAttachOrTauTriggered_8,P_VALUE,swLogPrintf("Can ' t perform TAU while Ul Msg is Suspend by Rrc! ");
576512,1180837888,0,0,PS1,CEMM,CemmCheckAnySpecificProcedure_1,P_VALUE,swLogPrintf("Current EMM state is %e<EmmSubState> ");
576512,1180841983,0,0,PS1,CEMM,CemmInitialise_1,P_VALUE,swLogPrintf("EMM submodule initialise! ");
576512,1180844031,0,0,PS1,CEMM,CemmInitialise_2,P_WARNING,swLogPrintf("Read IMEI failed , use default IMEI ");
576512,1180844032,0,0,PS1,CEMM,CemmPmuDeepSlpEnterCallBack_1,P_VALUE,swLogPrintf("Cemm Enter Deep Sleep , the lowPowerState is %d ");
576512,1180848127,0,0,PS1,CEMM,CemmClearRetransmissionInfo_1,P_VALUE,swLogPrintf("Clear retransmit failed messages! ");
576512,1180850175,0,0,PS1,CEMM,CemmCheckEnterHibernate_1,P_VALUE,swLogPrintf("Not allow enter hib ");
576512,1180852223,0,0,PS1,CEMM,CemmCheckAnyPsm_1,P_SIG,swLogPrintf("T3324 assigned by NW is zero ");
576512,1180854271,0,0,PS1,CEMM,CemmCheckAnyPsm_2,P_SIG,swLogPrintf("EmmStartTimer : timerId is T3324 ");
576512,1180854272,0,0,PS1,CEMM,RandomizeDownlinkEmmMessage_1,P_VALUE,swLogPrintf("data length is %d ");
576512,1180858367,0,0,PS1,CEMM,RandomizeDownlinkEmmMessage_3,P_VALUE,swLogPrintf("Only PD and message type ");
576512,1180860415,0,0,PS1,CEMM,CemmAddFakeCellRecord_1,P_VALUE,swLogPrintf("Add new cell to fakeCellRec ");
576512,1180860928,0,0,PS1,CEMM,CemmAddFakeCellRecord_4,P_VALUE,swLogPrintf("fakeCellRec [ %d ] tac : 0x%x , startTime : %d ");
576512,1180864511,0,0,PS1,CEMM,ProcessGutiReallocCommand_1,P_WARNING,swLogPrintf("Ignore GUTI reallocation during MO detach! ");
576512,1180866559,0,0,PS1,CEMM,ProcessGutiReallocCommand_2,P_WARNING,swLogPrintf("Ignore GUTI reallocation during TAU! ");
576512,1180868607,0,0,PS1,CEMM,ProcessAuthenticationRequest_1,P_WARNING,swLogPrintf("Ignore authentication request while USIM is absent! ");
576512,1180870655,0,0,PS1,CEMM,ProcessAuthenticationRequest_2,P_WARNING,swLogPrintf("Ignore authentication request during power off! ");
576512,1180872703,0,0,PS1,CEMM,ProcessAuthenticationRequest_3,P_VALUE,swLogPrintf("RAND is same as previous one ");
576512,1180874751,0,0,PS1,CEMM,ProcessAuthenticationRequest_4,P_WARNING,swLogPrintf("Separation bit checking failed! ");
576512,1180876799,0,0,PS1,CEMM,ProcessIdentityRequest_1,P_WARNING,swLogPrintf("Ignore Identity Request during power off detach! ");
576512,1180876800,0,0,PS1,CEMM,ProcessServiceReject_cause,P_VALUE,swLogPrintf("SERVICE REJECT cause is %e<EmmCause> ");
576512,1180880895,0,0,PS1,CEMM,ProcessSecurityModeCommand_1,P_WARNING,swLogPrintf("EIA0 is not supported! ");
576512,1180882943,0,0,PS1,CEMM,ProcessSecurityModeCommand_2,P_WARNING,swLogPrintf("Replayed security capability mismatch! ");
576512,1180884991,0,0,PS1,CEMM,ProcessSecurityModeCommand_3,P_WARNING,swLogPrintf("eKSI mismatch! ");
576512,1180887039,0,0,PS1,CEMM,ProcessAttachAccept_ignoreCause,P_WARNING,swLogPrintf("Combined ATTACH eps only succeed , user set ignore EMM cause! ");
576512,1180889087,0,0,PS1,CEMM,ProcessAttachAccept_1,P_VALUE,swLogPrintf("Received ATTACH ACCEPT with same GUTI as last one! ");
576512,1180891135,0,0,PS1,CEMM,ProcessAttachAccept_2,P_VALUE,swLogPrintf("NW configured T3324 > = AT+ECCFG configured T3324MaxValueS , use AT configured T3324MaxValueS! ");
576512,1180893183,0,0,PS1,CEMM,ProcessAttachAccept_3,P_VALUE,swLogPrintf("NW not configured T3324 , use AT+ECCFG configured T3324MaxValueS! ");
576512,1180895231,0,0,PS1,CEMM,ProcessAttachAccept_4,P_VALUE,swLogPrintf("Attach successful for EPS services and not accepted for SMS services! ");
576512,1180897279,0,0,PS1,CEMM,ProcessAttachAccept_5,P_VALUE,swLogPrintf("tauForSmsCount exceed the max limit , no longer try to register sms in this plmn! ");
576512,1180897280,0,0,PS1,CEMM,ProcessAttachReject_cause,P_VALUE,swLogPrintf("ATTACH REJECT cause is %e<EmmCause> ");
576512,1180901375,0,0,PS1,CEMM,ProcessDetachAccept_1,P_WARNING,swLogPrintf("ProcessDetachAccept : ignore DETACH ACCEPT during poweroff detach! ");
576512,1180903423,0,0,PS1,CEMM,ProcessTauAccept_ignoreCause,P_WARNING,swLogPrintf("Combined TAU eps only succeed , user set ignore EMM cause! ");
576512,1180905471,0,0,PS1,CEMM,ProcessTauAccept_1,P_VALUE,swLogPrintf("NW configured T3324 > = AT+ECCFG configured T3324MaxValueS , use AT configured T3324MaxValueS! ");
576512,1180907519,0,0,PS1,CEMM,ProcessTauAccept_2,P_VALUE,swLogPrintf("NW not configured T3324 , use AT+ECCFG configured T3324MaxValueS! ");
576512,1180909567,0,0,PS1,CEMM,ProcessTauAccept_3,P_VALUE,swLogPrintf("Tau successful for EPS services and not accepted for SMS services! ");
576512,1180911615,0,0,PS1,CEMM,ProcessTauAccept_4,P_VALUE,swLogPrintf("tauForSmsCount exceed the max limit , no longer try to register sms in this plmn! ");
576512,1180913663,0,0,PS1,CEMM,ProcessTauAccept_5,P_VALUE,swLogPrintf("Waiting the indication of TAU COMPLETE transmission succeed. ");
576512,1180913664,0,0,PS1,CEMM,ProcessTauReject_cause,P_VALUE,swLogPrintf("TAU REJECT cause is %e<EmmCause> ");
576512,1180917759,0,0,PS1,CEMM,CemmDrReestablishRequest_1,P_WARNING,swLogPrintf("Now can ' t initiate service request ");
576512,1180919807,0,0,PS1,CEMM,CemmDrReestablishRequest_2,P_VALUE,swLogPrintf("TauRequired is TRUE , perform a TAU firstly ");
576512,1180919808,0,0,PS1,CEMM,CemmDrReestablishRequest_3,P_VALUE,swLogPrintf("Current EMM state is %e<EmmSubState> ");
576512,1180923903,0,0,PS1,CEMM,CemmDrReestablishRequest_4,P_VALUE,swLogPrintf("Waiting cell camp indication , pending DR reestablish request! ");
576512,1180925951,0,0,PS1,CEMM,CemmDrReestablishRequest_5,P_VALUE,swLogPrintf("Already pended another request! ");
576512,1180927999,0,0,PS1,CEMM,CemmDrReestablishRequest_6,P_VALUE,swLogPrintf("Waiting for RRC Act Cnf , Pending the DrReestablishRequest ");
576512,1180930047,0,0,PS1,CEMM,CemmDrReestablishRequest_7,P_VALUE,swLogPrintf("Dr re-establish is received under EMM_REGISTERED_NO_CELL_AVAILABLE! ");
576512,1180932095,0,0,PS1,CEMM,EcnbTraceEmmMessageType_1,P_INFO,swLogPrintf("Sending ATTACH_REQUEST ");
576512,1180934143,0,0,PS1,CEMM,EcnbTraceEmmMessageType_2,P_INFO,swLogPrintf("Receiving ATTACH_ACCEPT ");
576512,1180936191,0,0,PS1,CEMM,EcnbTraceEmmMessageType_3,P_INFO,swLogPrintf("Sending ATTACH_COMPLETE ");
576512,1180938239,0,0,PS1,CEMM,EcnbTraceEmmMessageType_4,P_INFO,swLogPrintf("Receiving ATTACH_REJECT ");
576512,1180940287,0,0,PS1,CEMM,EcnbTraceEmmMessageType_5,P_INFO,swLogPrintf("Sending DETACH_REQUEST ");
576512,1180942335,0,0,PS1,CEMM,EcnbTraceEmmMessageType_6,P_INFO,swLogPrintf("Receiving DETACH_REQUEST ");
576512,1180944383,0,0,PS1,CEMM,EcnbTraceEmmMessageType_7,P_INFO,swLogPrintf("Sending DETACH_ACCEPT ");
576512,1180946431,0,0,PS1,CEMM,EcnbTraceEmmMessageType_8,P_INFO,swLogPrintf("Receiving DETACH_ACCEPT ");
576512,1180948479,0,0,PS1,CEMM,EcnbTraceEmmMessageType_9,P_INFO,swLogPrintf("Sending TA_UPDATE_REQUEST ");
576512,1180950527,0,0,PS1,CEMM,EcnbTraceEmmMessageType_10,P_INFO,swLogPrintf("Receiving TA_UPDATE_ACCEPT ");
576512,1180952575,0,0,PS1,CEMM,EcnbTraceEmmMessageType_11,P_INFO,swLogPrintf("Sending TA_UPDATE_COMPLETE ");
576512,1180954623,0,0,PS1,CEMM,EcnbTraceEmmMessageType_12,P_INFO,swLogPrintf("Receiving TA_UPDATE_REJECT ");
576512,1180956671,0,0,PS1,CEMM,EcnbTraceEmmMessageType_13,P_INFO,swLogPrintf("Sending EXTENDED_SERVICE_REQUEST ");
576512,1180958719,0,0,PS1,CEMM,EcnbTraceEmmMessageType_14,P_INFO,swLogPrintf("Sending CONTROL_PLANE_SERVICE_REQUEST ");
576512,1180960767,0,0,PS1,CEMM,EcnbTraceEmmMessageType_15,P_INFO,swLogPrintf("Receiving SERVICE_REJECT ");
576512,1180962815,0,0,PS1,CEMM,EcnbTraceEmmMessageType_16,P_INFO,swLogPrintf("Receiving SERVICE_ACCEPT ");
576512,1180964863,0,0,PS1,CEMM,EcnbTraceEmmMessageType_17,P_INFO,swLogPrintf("Receiving GUTI_REALLOC_COMMAND ");
576512,1180966911,0,0,PS1,CEMM,EcnbTraceEmmMessageType_18,P_INFO,swLogPrintf("Sending GUTI_REALLOC_COMPLETE ");
576512,1180968959,0,0,PS1,CEMM,EcnbTraceEmmMessageType_19,P_INFO,swLogPrintf("Receiving AUTHENTICATION_REQUEST ");
576512,1180971007,0,0,PS1,CEMM,EcnbTraceEmmMessageType_20,P_INFO,swLogPrintf("Sending AUTHENTICATION_RESPONSE ");
576512,1180973055,0,0,PS1,CEMM,EcnbTraceEmmMessageType_21,P_INFO,swLogPrintf("Receiving AUTHENTICATION_REJECT ");
576512,1180975103,0,0,PS1,CEMM,EcnbTraceEmmMessageType_22,P_INFO,swLogPrintf("Sending AUTHENTICATION_FAILURE ");
576512,1180977151,0,0,PS1,CEMM,EcnbTraceEmmMessageType_23,P_INFO,swLogPrintf("Receiving IDENTITY_REQUEST ");
576512,1180979199,0,0,PS1,CEMM,EcnbTraceEmmMessageType_24,P_INFO,swLogPrintf("Sending IDENTITY_RESPONSE ");
576512,1180981247,0,0,PS1,CEMM,EcnbTraceEmmMessageType_25,P_INFO,swLogPrintf("Receiving SECURITY_MODE_COMMAND ");
576512,1180983295,0,0,PS1,CEMM,EcnbTraceEmmMessageType_26,P_INFO,swLogPrintf("Sending SECURITY_MODE_COMPLETE ");
576512,1180985343,0,0,PS1,CEMM,EcnbTraceEmmMessageType_27,P_INFO,swLogPrintf("Sending SECURITY_MODE_REJECT ");
576512,1180987391,0,0,PS1,CEMM,EcnbTraceEmmMessageType_28,P_INFO,swLogPrintf("Sending EMM_STATUS ");
576512,1180989439,0,0,PS1,CEMM,EcnbTraceEmmMessageType_29,P_INFO,swLogPrintf("Receiving EMM_STATUS ");
576512,1180991487,0,0,PS1,CEMM,EcnbTraceEmmMessageType_30,P_INFO,swLogPrintf("Receiving EMM_INFORMATION ");
576512,1180993535,0,0,PS1,CEMM,EcnbTraceEmmMessageType_35,P_INFO,swLogPrintf("Sending SERVICE_REQUEST ");
576512,1180993536,0,0,PS1,CEMM,EcnbTraceEmmMessageType_36,P_VALUE,swLogPrintf("Unknown message type %d! ");
576512,1180995584,0,0,PS1,CEMM,EcnbTraceEsmMessageType_32,P_VALUE,swLogPrintf("ESM_DATA_TRANSPORT ul data tempLen : %d ");
576512,1180999679,0,0,PS1,CEMM,EcnbTraceEsmMessageType_1,P_INFO,swLogPrintf("Receiving ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181001727,0,0,PS1,CEMM,EcnbTraceEsmMessageType_2,P_INFO,swLogPrintf("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181003775,0,0,PS1,CEMM,EcnbTraceEsmMessageType_3,P_INFO,swLogPrintf("Sending ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REJECT ");
576512,1181005823,0,0,PS1,CEMM,EcnbTraceEsmMessageType_4,P_INFO,swLogPrintf("Receiving ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181007871,0,0,PS1,CEMM,EcnbTraceEsmMessageType_5,P_INFO,swLogPrintf("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181009919,0,0,PS1,CEMM,EcnbTraceEsmMessageType_6,P_INFO,swLogPrintf("Sending ACTIVATE_DEDICATED_EPS_BEARER_CONTEXT_REJECT ");
576512,1181011967,0,0,PS1,CEMM,EcnbTraceEsmMessageType_7,P_INFO,swLogPrintf("Receiving MODIFY_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181014015,0,0,PS1,CEMM,EcnbTraceEsmMessageType_8,P_INFO,swLogPrintf("Sending MODIFY_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181016063,0,0,PS1,CEMM,EcnbTraceEsmMessageType_9,P_INFO,swLogPrintf("Sending MODIFY_EPS_BEARER_CONTEXT_REJECT ");
576512,1181018111,0,0,PS1,CEMM,EcnbTraceEsmMessageType_10,P_INFO,swLogPrintf("Receiving DEACTIVATE_EPS_BEARER_CONTEXT_REQUEST ");
576512,1181020159,0,0,PS1,CEMM,EcnbTraceEsmMessageType_11,P_INFO,swLogPrintf("Sending DEACTIVATE_EPS_BEARER_CONTEXT_ACCEPT ");
576512,1181022207,0,0,PS1,CEMM,EcnbTraceEsmMessageType_12,P_INFO,swLogPrintf("Sending PDN_CONNECTIVITY_REQUEST ");
576512,1181024255,0,0,PS1,CEMM,EcnbTraceEsmMessageType_13,P_INFO,swLogPrintf("Receiving PDN_CONNECTIVITY_REJECT ");
576512,1181026303,0,0,PS1,CEMM,EcnbTraceEsmMessageType_14,P_INFO,swLogPrintf("Sending PDN_DISCONNECT_REQUEST ");
576512,1181028351,0,0,PS1,CEMM,EcnbTraceEsmMessageType_15,P_INFO,swLogPrintf("Receiving PDN_DISCONNECT_REJECT ");
576512,1181030399,0,0,PS1,CEMM,EcnbTraceEsmMessageType_16,P_INFO,swLogPrintf("Sending BEARER_RESOURCE_ALLOCATION_REQUEST ");
576512,1181032447,0,0,PS1,CEMM,EcnbTraceEsmMessageType_17,P_INFO,swLogPrintf("Receiving BEARER_RESOURCE_ALLOCATION_REJECT ");
576512,1181034495,0,0,PS1,CEMM,EcnbTraceEsmMessageType_18,P_INFO,swLogPrintf("Sending BEARER_RESOURCE_MODIFICATION_REQUEST ");
576512,1181036543,0,0,PS1,CEMM,EcnbTraceEsmMessageType_19,P_INFO,swLogPrintf("Receiving BEARER_RESOURCE_MODIFICATION_REJECT ");
576512,1181038591,0,0,PS1,CEMM,EcnbTraceEsmMessageType_20,P_INFO,swLogPrintf("Receiving ESM_INFORMATION_REQUEST ");
576512,1181040639,0,0,PS1,CEMM,EcnbTraceEsmMessageType_21,P_INFO,swLogPrintf("Sending ESM_INFORMATION_RESPONSE ");
576512,1181042687,0,0,PS1,CEMM,EcnbTraceEsmMessageType_22,P_INFO,swLogPrintf("Receiving ESM_NOTIFICATION ");
576512,1181044735,0,0,PS1,CEMM,EcnbTraceEsmMessageType_23,P_INFO,swLogPrintf("Sending ESM_DUMMY_MESSAGE ");
576512,1181046783,0,0,PS1,CEMM,EcnbTraceEsmMessageType_24,P_INFO,swLogPrintf("Receiving ESM_DUMMY_MESSAGE ");
576512,1181048831,0,0,PS1,CEMM,EcnbTraceEsmMessageType_25,P_INFO,swLogPrintf("Sending ESM_STATUS ");
576512,1181050879,0,0,PS1,CEMM,EcnbTraceEsmMessageType_26,P_INFO,swLogPrintf("Receiving ESM_STATUS ");
576512,1181052927,0,0,PS1,CEMM,EcnbTraceEsmMessageType_27,P_INFO,swLogPrintf("Sending REMOTE_UE_REPORT ");
576512,1181054975,0,0,PS1,CEMM,EcnbTraceEsmMessageType_28,P_INFO,swLogPrintf("Receiving REMOTE_UE_REPORT_RESPONSE ");
576512,1181057023,0,0,PS1,CEMM,EcnbTraceEsmMessageType_29,P_INFO,swLogPrintf("Sending ESM_DATA_TRANSPORT ");
576512,1181059071,0,0,PS1,CEMM,EcnbTraceEsmMessageType_30,P_INFO,swLogPrintf("Receiving ESM_DATA_TRANSPORT ");
576512,1181059072,0,0,PS1,CEMM,EcnbTraceEsmMessageType_31,P_VALUE,swLogPrintf("Unknown message type %d! ");
576512,1181061120,0,0,PS1,CEMM,CemmNasSecurityKey_1,P_VALUE,swLogPrintf("CemmNasSecurityKey : UL NAS COUNT is %d ");
576512,1181063168,0,0,PS1,CEMM,CemmNasSecurityKey_2,P_VALUE,swLogPrintf("CemmNasSecurityKey : UL NAS COUNT is %d ");
576512,1181065472,0,0,PS1,CEMM,CemmNasMacForReEst_1,P_VALUE,swLogPrintf("CemmNasMacForReEst : NAS-MAC is %d , UL NAS COUNT is %d ");
576512,1181069311,0,0,PS1,CEMM,CemmCpReestablishInfo_1,P_WARNING,swLogPrintf("NAS security is not activated! ");
576512,1181071359,0,0,PS1,CEMM,CemmCpReestablishInfo_2,P_WARNING,swLogPrintf("Uplink NAS count overflow! ");
576512,1181073407,0,0,PS1,CEMM,CemmSendCerrcConnReq_1,P_WARNING,swLogPrintf("gCemm.srInfo.srReason is wrong! ");
576512,1181075455,0,0,PS1,CEMM,CemmSendCerrcConnReq_2,P_WARNING,swLogPrintf("gCemm.srInfo.srReason is wrong! ");
576512,1181075456,0,0,PS1,CEMM,CemmSendCerrcConnReq_4,P_VALUE,swLogPrintf("Uplink Nas Count is %d ");
576512,1181077504,0,0,PS1,CEMM,CemmSendCerrcNasMsgReq_1,P_VALUE,swLogPrintf("Uplink Nas Count is %d ");
576512,1181081599,0,0,PS1,CEMM,CemmSendCerrcResumeReq_1,P_WARNING,swLogPrintf("gCemm.srInfo.srReason is wrong! ");
576512,1181083647,0,0,PS1,CEMM,EcnbTraceTcMessageType_1,P_SIG,swLogPrintf("Receiving CLOSE_UE_TEST_LOOP ");
576512,1181085695,0,0,PS1,CEMM,EcnbTraceTcMessageType_3,P_SIG,swLogPrintf("Sending CLOSE_UE_TEST_LOOP_COMPLETE ");
576512,1181087743,0,0,PS1,CEMM,EcnbTraceTcMessageType_5,P_SIG,swLogPrintf("Receiving OPEN_UE_TEST_LOOP ");
576512,1181089791,0,0,PS1,CEMM,EcnbTraceTcMessageType_7,P_SIG,swLogPrintf("Sending OPEN_UE_TEST_LOOP_COMPLETE ");
576512,1181091839,0,0,PS1,CEMM,EcnbTraceTcMessageType_9,P_SIG,swLogPrintf("Receiving ACTIVATE_TEST_MODE ");
576512,1181093887,0,0,PS1,CEMM,EcnbTraceTcMessageType_11,P_SIG,swLogPrintf("Sending ACTIVATE_TEST_MODE_COMPLETE ");
576512,1181095935,0,0,PS1,CEMM,EcnbTraceTcMessageType_13,P_SIG,swLogPrintf("Receiving DEACTIVATE_TEST_MODE ");
576512,1181097983,0,0,PS1,CEMM,EcnbTraceTcMessageType_15,P_SIG,swLogPrintf("Sending DEACTIVATE_TEST_MODE_COMPLETE ");
576512,1181100031,0,0,PS1,CEMM,EcnbTraceTcMessageType_17,P_SIG,swLogPrintf("Receiving RESET_UE_POSITIONING_STORED_INFORMATION ");
576512,1181100032,0,0,PS1,CEMM,EcnbTraceTcMessageType_19,P_SIG,swLogPrintf("Unknown message type %d! ");
576512,1181104127,0,0,PS1,CEMM,CemmSendCerrcMessage_1,P_WARNING,swLogPrintf("Already sent out a SIG_CERRC_CONN_REQ , should not send another one! ");
576512,1181104640,0,0,PS1,CEMM,CemmCalcEmergencyOosTimerInterval_1,P_VALUE,swLogPrintf("Base on power level ( %d ) , emergency OOS timer start times ( %d ) , calculate the emergency oos timer value is %d ( s ) ");
576512,1181106688,0,0,PS1,CEMM,CemmCellCampCnf_1,P_VALUE,swLogPrintf("CemmCellCampCnf : Plmn is ( 0x%x , 0x%x ) , TAC is 0x%x ");
576512,1181108224,0,0,PS1,CEMM,CemmCellCampCnf_2,P_VALUE,swLogPrintf("CemmCellCampCnf : actStatus is %d ");
576512,1181112319,0,0,PS1,CEMM,CemmCellCampCnf_3,P_VALUE,swLogPrintf("As Cell cellIdentity has changed , stop T3411. ");
576512,1181114367,0,0,PS1,CEMM,CemmCellCampCnf_4,P_VALUE,swLogPrintf("when moving to a non EPLMN and configure attachWithIMSI , shall need perform attach. ");
576512,1181116415,0,0,PS1,CEMM,CemmCellCampCnf_5,P_VALUE,swLogPrintf("Keep ESM DATA TRANSPORT msg , waiting PLMN search result. ");
576512,1181116416,0,0,PS1,CEMM,CemmCellCampCnf_6,P_VALUE,swLogPrintf("gCemm.flags.cellStatus is %d. ");
576512,1181120511,0,0,PS1,CEMM,CemmCellCampCnf_7,P_WARNING,swLogPrintf("Discard this ESM Data! ");
576512,1181122559,0,0,PS1,CEMM,CemmPagingRequest_1,P_WARNING,swLogPrintf("During enter PSM procedure , ignore paging. ");
576512,1181124607,0,0,PS1,CEMM,CemmPagingRequest_2,P_WARNING,swLogPrintf("Receive Paging while UE in EMM-CONNECTED state , and need release RRC connection ");
576512,1181126655,0,0,PS1,CEMM,CemmPagingRequest_3,P_WARNING,swLogPrintf("Receive Paging while UE in EMM-CONNECTED state , and not need release RRC connection , ignore it! ");
576512,1181126656,0,0,PS1,CEMM,CemmPagingRequest_4,P_VALUE,swLogPrintf("Ignore S-TMSI paging under emmState %d ");
576512,1181128704,0,0,PS1,CEMM,CemmPagingRequest_5,P_VALUE,swLogPrintf("Ignore IMSI paging under emmState %d ");
576512,1181132799,0,0,PS1,CEMM,CemmReTransmitMessage_1,P_VALUE,swLogPrintf("There is already a new msg before process the retrans msg , process the new msg firstly ");
576512,1181133568,0,0,PS1,CEMM,CemmReTransmitMessage_2,P_VALUE,swLogPrintf("Current re-transmit msg ( msg index is %d in cache queue ( %d ) , msg type is %d ) already define Emm proceduce ( %d ) , pause process others reTransMsgType ");
576512,1181135616,0,0,PS1,CEMM,CemmReTransmitMessage_3,P_VALUE,swLogPrintf("Current re-transmit msg ( msg index is %d in cache queue ( %d ) , msg type is %d ) is pause by Emm proceduce ( %d ) , re-transmit it later! ");
576512,1181138943,0,0,PS1,CEMM,CemmCellCampInd_1,P_WARNING,swLogPrintf("CemmCellCampInd : unexpected SIG_CERRC_ACT_IND during SIG_CERRC_ACT_REQ procedure! ");
576512,1181139456,0,0,PS1,CEMM,CemmCellCampInd_2,P_VALUE,swLogPrintf("CemmCellCampInd : Plmn is ( 0x%x , 0x%x ) ; TAC is 0x%x ");
576512,1181140992,0,0,PS1,CEMM,CemmCellCampInd_3,P_VALUE,swLogPrintf("CemmCellCampInd : actStatus is %d ");
576512,1181145087,0,0,PS1,CEMM,CemmCellCampInd_4,P_VALUE,swLogPrintf("As Cell cellIdentity has changed , stop T3411. ");
576512,1181147135,0,0,PS1,CEMM,CemmCellCampInd_5,P_VALUE,swLogPrintf("Check any retransmit message ");
576512,1181149183,0,0,PS1,CEMM,CemmCellCampInd_6,P_VALUE,swLogPrintf("need retransmit message ");
576512,1181151231,0,0,PS1,CEMM,CemmCellCampInd_7,P_VALUE,swLogPrintf("Initiate TAU ");
576512,1181153279,0,0,PS1,CEMM,CemmCellCampInd_8,P_VALUE,swLogPrintf("Keep ESM DATA TRANSPORT msg , waiting PLMN search result. ");
576512,1181153280,0,0,PS1,CEMM,CemmCellCampInd_9,P_VALUE,swLogPrintf("gCemm.flags.cellStatus is %d. ");
576512,1181155328,0,0,PS1,CEMM,CemmConnCnf_1,P_VALUE,swLogPrintf("establishStatus is %d ");
576512,1181157376,0,0,PS1,CEMM,CemmConnCnf_2,P_VALUE,swLogPrintf("CESTABLISH_FAIL_T300_EXPIRY , sigRetransmitCounter is %d ");
576512,1181161471,0,0,PS1,CEMM,CemmConnCnf_3,P_VALUE,swLogPrintf("ESM data still valid , could retry SR ");
576512,1181161728,0,0,PS1,CEMM,CemmConnRelInd_1,P_VALUE,swLogPrintf("release cause is %d , bNwRel is %d ");
576512,1181165567,0,0,PS1,CEMM,CemmConnRelInd_2,P_WARNING,swLogPrintf("Expected to receive SIG_CERRC_CONN_NAS_UL_MSG_RESUME_IND before release! ");
576512,1181167615,0,0,PS1,CEMM,CemmConnRelInd_3,P_VALUE,swLogPrintf("UE is using CP optimization only , and has DL data expected , need initiate TAU to recover connection ");
576512,1181169663,0,0,PS1,CEMM,CemmConnRelInd_4,P_VALUE,swLogPrintf("UE is using CP optimization only , but has no DL data expected , don ' t trigger TAU ");
576512,1181171711,0,0,PS1,CEMM,CemmConnRelInd_5,P_VALUE,swLogPrintf("Will retry SR later ");
576512,1181173759,0,0,PS1,CEMM,CemmConnRelInd_6,P_VALUE,swLogPrintf("Treat the release of RRCconnection as SR succeed. ");
576512,1181173760,0,0,PS1,CEMM,CemmConnRelInd_7,P_VALUE,swLogPrintf("Received SIG_CERRC_RELEASE_IND under EMM state %e<EmmSubState> ");
576512,1181177855,0,0,PS1,CEMM,CemmConnRelCnf_1,P_WARNING,swLogPrintf("Expected to receive SIG_CERRC_CONN_NAS_UL_MSG_RESUME_IND before release! ");
576512,1181179903,0,0,PS1,CEMM,CemmTransmissionFailure_1,P_VALUE,swLogPrintf("During power off detach , ignore transmit failure indication! ");
576512,1181180416,0,0,PS1,CEMM,CemmTransmissionFailure_2,P_VALUE,swLogPrintf("failMsgIndex is 0x%x ; msgIndexOfSignaling is %d ; EmmMessageType is 0x%x ");
576512,1181182464,0,0,PS1,CEMM,CemmTransmissionFailure_3,P_VALUE,swLogPrintf("failMsgIndex is 0x%x ; msgIndexOfData is %d ; EmmMessageType is 0x%x ");
576512,1181186047,0,0,PS1,CEMM,CemmTransmissionFailure_4,P_WARNING,swLogPrintf("More than MAX_NUM_OF_TRANS_FAILURE_MESSAGE message transmit failed!! ");
576512,1181188095,0,0,PS1,CEMM,CemmTransmissionFailure_5,P_VALUE,swLogPrintf("Discard the TaiList received in attach accept! ");
576512,1181188608,0,0,PS1,CEMM,CemmTransmissionSucc_1,P_VALUE,swLogPrintf("SuccMsgIndex is 0x%x ; msgIndexOfSignaling is %d EmmMessageType is 0x%x ");
576512,1181190656,0,0,PS1,CEMM,CemmTransmissionSucc_2,P_VALUE,swLogPrintf("SuccMsgIndex is 0x%x ; msgIndexOfData is %d ; EmmMessageType is 0x%x ");
576512,1181194239,0,0,PS1,CEMM,CemmTransmissionSucc_3,P_VALUE,swLogPrintf("TAU COMPLETE transmission succeed , T3440 is running. ");
576512,1181194240,0,0,PS1,CEMM,CemmResumeCnf_1,P_VALUE,swLogPrintf("Unexpeted resumeMsgType : 0x%x ");
576512,1181198335,0,0,PS1,CEMM,CemmResumeCnf_2,P_VALUE,swLogPrintf("EmmStartTimer : timerId is T3412 ");
576512,1181198592,0,0,PS1,CEMM,NasMessageSecurityCheck_1,P_VALUE,swLogPrintf("Received mac is 0x%lx ; xmac is 0x%lx ");
576512,1181200384,0,0,PS1,CEMM,NasMessageSecurityCheck_2,P_VALUE,swLogPrintf("Sequence Number is %d ");
576512,1181202432,0,0,PS1,CEMM,NasMessageSecurityCheck_3,P_VALUE,swLogPrintf("Integrity Algorithm is %d ");
576512,1181204736,0,0,PS1,CEMM,NasMessageSecurityCheck_4,P_VALUE,swLogPrintf("The correct DL NAS OVERFLOW COUNT is 0x%x , current tryIndex is %d ");
576512,1181206784,0,0,PS1,CEMM,NasMessageSecurityCheck_5,P_VALUE,swLogPrintf("The correct DL NAS OVERFLOW COUNT is 0x%x , current tryIndex is %d ");
576512,1181208832,0,0,PS1,CEMM,NasMessageSecurityCheck_6,P_VALUE,swLogPrintf("MAC mismatch.Received mac is 0x%lx ; xmac is 0x%lx ");
576512,1181210624,0,0,PS1,CEMM,NasMessageSecurityCheck_7,P_VALUE,swLogPrintf("dataLength is : %d ");
576512,1181212672,0,0,PS1,CEMM,ProcessMessageError_1,P_VALUE,swLogPrintf("Message decode error!Error code is %d ");
576512,1181214720,0,0,PS1,CEMM,CemmIsNeedIngoreDlEmmMsg_1,P_VALUE,swLogPrintf("Emm rcv repeated dl msg ( msg type is %d ) , but corresponding ul msg is still transmitting , discard it! ");
576512,1181216768,0,0,PS1,CEMM,CemmIsNeedIngoreDlEmmMsg_2,P_VALUE,swLogPrintf("Emm rcv repeated dl msg ( msg type is %d ) , and corresponding ul msg is transmitted succ , continue to process it! ");
576512,1181218816,0,0,PS1,CEMM,CemmIsNeedIngoreDlEmmMsg_3,P_VALUE,swLogPrintf("Emm rcv repeated dlmsg type ( msg type is %d ) , but msg content is differnet , continue to process it! ");
576512,1181222911,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_1,P_VALUE,swLogPrintf("Discard ATTACH REJECT cause #25 without integrity protected! ");
576512,1181224959,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_2,P_VALUE,swLogPrintf("Discard TA UPDATE REJECT cause #25 without integrity protected! ");
576512,1181227007,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_3,P_VALUE,swLogPrintf("Discard SERVICE REJECT cause #25 without integrity protected! ");
576512,1181229055,0,0,PS1,CEMM,ProcessDownlinkEmmMessage_4,P_VALUE,swLogPrintf("Rceive EMM STATUS! ");
576512,1181229056,0,0,PS1,CEMM,CemmNasMsgInd_Warning,P_WARNING,swLogPrintf("Emm ConnState is %d , not connected , ignore this msg ");
576512,1181231104,0,0,PS1,CEMM,CemmNasMsgInd_w,P_WARNING,swLogPrintf("Recived security protected NAS message with unexpected length %d , discard it! ");
576512,1181235199,0,0,PS1,CEMM,CemmNasMsgInd_1,P_WARNING,swLogPrintf("Ignore security mode command during power off ");
576512,1181237247,0,0,PS1,CEMM,CemmNasMsgInd_2,P_WARNING,swLogPrintf("Security Mode Command integrity checking failed! ");
576512,1181237248,0,0,PS1,CEMM,CemmNasMsgInd_3,P_VALUE,swLogPrintf("Unexpected message , PD is 0x%x! ");
576512,1181241343,0,0,PS1,CEMM,CemmNasMsgInd_4,P_WARNING,swLogPrintf("Integrity checking of NAS message fail! ");
576512,1181243391,0,0,PS1,CEMM,CemmNasMsgInd_6,P_VALUE,swLogPrintf("Destroy any allocated memory in abnormal case! ");
576512,1181243392,0,0,PS1,CEMM,CemmNasMsgInd_8,P_VALUE,swLogPrintf("Downlink Nas Count is %d ");
576512,1181247487,0,0,PS1,CEMM,EmmAsDeactCnf_1,P_VALUE,swLogPrintf("Enter Psm Mode Succeed! ");
576512,1181247744,0,0,PS1,CEMM,CemmSendEsmFeatureSupportInd_1,P_VALUE,swLogPrintf("CemmSendEsmFeatureSupportInd : uePreferOpt in nvm is %d , but the select uePreferOpt is %d ");
576512,1181251583,0,0,PS1,CEMM,CemmEsmMsgContainerRspMsg_1,P_WARNING,swLogPrintf("Receive unexpected ESM Message container , argvPtr is 0xX% ");
576512,1181253631,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_1,P_VALUE,swLogPrintf("Waiting cell camp indication , pending ESM establish request! ");
576512,1181255679,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_2,P_VALUE,swLogPrintf("Already pended another request! ");
576512,1181257727,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_3,P_VALUE,swLogPrintf("T3346 is running! ");
576512,1181259775,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_4,P_VALUE,swLogPrintf("Already in Service Request procedure , will reply later ");
576512,1181261823,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_5,P_VALUE,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181263871,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_6,P_VALUE,swLogPrintf("Waiting for RRC Act Cnf , Pending the ESM Establish req ");
576512,1181265919,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_7,P_VALUE,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE! ");
576512,1181265920,0,0,PS1,CEMM,CemmEsmEstablishReqMsg_8,P_VALUE,swLogPrintf("Current EMM state is %e<EmmSubState> ");
576512,1181267968,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_1,P_VALUE,swLogPrintf("Current EMM state is %e<EmmSubState> ");
576512,1181272063,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_2,P_WARNING,swLogPrintf("PendingUlEsmMsg is not empty ignore the new CemmEsmUnitDataRequestMsg! ");
576512,1181274111,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_w,P_WARNING,swLogPrintf("Receiving CemmEsmUnitDataReq in IDLE state , but now not support to init cpsr ");
576512,1181276159,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_8,P_VALUE,swLogPrintf("During Attach / Tau Complete transmission , pending it. ");
576512,1181276160,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_9,P_VALUE,swLogPrintf("Wrong msgType : %d ");
576512,1181278208,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_10,P_VALUE,swLogPrintf("Can ' t process CemmEsmUnitDataReq while under emmConnState : %d ");
576512,1181280256,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_11,P_VALUE,swLogPrintf("Wrong msgType : %d ");
576512,1181284351,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_12,P_VALUE,swLogPrintf("No PS signalling exists ignore ESM request! ");
576512,1181286399,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_13,P_VALUE,swLogPrintf("Not exceptional event ignore ESM request! ");
576512,1181288447,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_14,P_VALUE,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181290495,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_15,P_VALUE,swLogPrintf("Waiting for RRC Act Cnf , Pending the ESM Data req ");
576512,1181292543,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_16,P_VALUE,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE! ");
576512,1181294591,0,0,PS1,CEMM,CemmEsmUnitDataRequestMsg_17,P_VALUE,swLogPrintf("Already in Service Request procedure , will reply later ");
576512,1181296639,0,0,PS1,CEMM,CemmEsmLocalDetachReAttachIndMsg_1,P_VALUE,swLogPrintf("Indication from ESM to perform local detach and re-attach! ");
576512,1181296640,0,0,PS1,CEMM,CemmIsAllowEsmSendExceptionDataInSuspendState_1,P_VALUE,swLogPrintf("bRslt is %d ");
576512,1181298688,0,0,PS1,CEMM,CemmIsAllowSendNormalPriSignallingInSuspendState_1,P_VALUE,swLogPrintf("Current EMM state is %e<EmmSubState> ");
576512,1181302783,0,0,PS1,CEMM,CemmPlmnSelectRequest_1,P_VALUE,swLogPrintf("Sending CemmPlmnSelectRequest while Ue is not in idle state ");
576512,1181304831,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_1,P_VALUE,swLogPrintf("Already registered on this PLMN! ");
576512,1181306879,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_2,P_VALUE,swLogPrintf("Currently trying to register on this PLMN! ");
576512,1181308927,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_3,P_VALUE,swLogPrintf("Already sent out SIG_CERRC_ACT_REQ , just wait SIG_CERRC_ACT_CNF. ");
576512,1181310975,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_4,P_VALUE,swLogPrintf("Currently trying to register on this PLMN! ");
576512,1181313023,0,0,PS1,CEMM,CemmProcPlmnSelectCnfMsg_5,P_VALUE,swLogPrintf("Can ' t perform registration while in connected state! ");
576512,1181315071,0,0,PS1,CEMM,CemmProcPlmnSelectInd_1,P_VALUE,swLogPrintf("Already registered on this PLMN! ");
576512,1181317119,0,0,PS1,CEMM,CemmProcPlmnSelectInd_2,P_VALUE,swLogPrintf("Can ' t perform registration while in connected state! ");
576512,1181319167,0,0,PS1,CEMM,CemmProcNoPlmnSelectIndMsg_1,P_VALUE,swLogPrintf("Before rcv plmn srch cnf , Detach Req has already sent , Ue should still kept in EMM_DEREGISTERED_INITIATED ");
576512,1181321215,0,0,PS1,CEMM,CemmProcNoPlmnSelectIndMsg_2,P_VALUE,swLogPrintf("Receiving emergency camp request while in connected state , buffer it. ");
576512,1181323263,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_1,P_VALUE,swLogPrintf("EMM specific procedure is ongoing.Waiting UE to complete specific procedure ");
576512,1181325311,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_2,P_VALUE,swLogPrintf("No EMM specific procedure ongoing.Waiting UE go idle ");
576512,1181327359,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_3,P_VALUE,swLogPrintf("EMM specific procedure ongoing.Abort current procedure ");
576512,1181329407,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_4,P_VALUE,swLogPrintf("No EMM specific procedure ongoing.Release RRC connection ");
576512,1181331455,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_5,P_VALUE,swLogPrintf("EMM specific procedure is ongoing.Waiting UE to complete specific procedure ");
576512,1181333503,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_6,P_VALUE,swLogPrintf("No EMM specific procedure ongoing. Release RRC connection ");
576512,1181335551,0,0,PS1,CEMM,CemmProcIdleStateReqMsg_7,P_VALUE,swLogPrintf("Unexpected CemmPlmnIdleReqCause! ");
576512,1181335552,0,0,PS1,CEMM,ULNasCounterRollback_1,P_VALUE,swLogPrintf("Uplink Nas Count is %d ");
576512,1181337856,0,0,PS1,CEMM,ULNasCounterRollback_2,P_VALUE,swLogPrintf("Uplink Nas Count overflow is %d , %d ");
576512,1181341695,0,0,PS1,CEMM,ULNasCounterUpdate_1,P_WARNING,swLogPrintf("NAS UL COUNT wrap around , delete eKsi , Re-attach ");
576512,1181343743,0,0,PS1,CEMM,DLNasCounterUpdate_1,P_WARNING,swLogPrintf("NAS DL COUNT wrap around , delete eKsi , Re-attach ");
576512,1181343744,0,0,PS1,CEMM,PrintNasConfig_1,P_VALUE,swLogPrintf("NAS signalling priority value is %d : NAS signalling low priority ");
576512,1181345792,0,0,PS1,CEMM,PrintNasConfig_2,P_VALUE,swLogPrintf("NAS signalling priority value is %d : Reserved ");
576512,1181347840,0,0,PS1,CEMM,PrintNasConfig_3,P_VALUE,swLogPrintf("Minimum Periodic Search Timer value is %d minutes ");
576512,1181351935,0,0,PS1,CEMM,PrintNasConfig_4,P_VALUE,swLogPrintf("Extended access barring value indicates that the extended access barring is applied for the UE ");
576512,1181353983,0,0,PS1,CEMM,PrintNasConfig_5,P_VALUE,swLogPrintf("Extended access barring value indicates that the extended access barring is not applied for the UE ");
576512,1181356031,0,0,PS1,CEMM,PrintNasConfig_6,P_VALUE,swLogPrintf("Timer T3245 Behaviour value indicates that the timer T3245 is used ");
576512,1181358079,0,0,PS1,CEMM,PrintNasConfig_7,P_VALUE,swLogPrintf("Timer T3245 Behaviour value indicates that the timer T3245 is not used ");
576512,1181360127,0,0,PS1,CEMM,PrintNasConfig_8,P_VALUE,swLogPrintf("Override NAS signalling low priority value indicates that the UE can override the NAS signalling low priority indicator ");
576512,1181362175,0,0,PS1,CEMM,PrintNasConfig_9,P_VALUE,swLogPrintf("Override NAS signalling low priority value indicates that the UE cannot override the NAS signalling low priority indicator ");
576512,1181364223,0,0,PS1,CEMM,PrintNasConfig_10,P_VALUE,swLogPrintf("Override Extended access barring value indicates that the UE can override extended access barring ");
576512,1181366271,0,0,PS1,CEMM,PrintNasConfig_11,P_VALUE,swLogPrintf("Override Extended access barring value indicates that the UE cannot override extended access barring ");
576512,1181368319,0,0,PS1,CEMM,PrintNasConfig_12,P_VALUE,swLogPrintf("Fast First Higher Priority PLMN value indicates that the Fast First Higher Priority PLMN Search is enabled ");
576512,1181370367,0,0,PS1,CEMM,PrintNasConfig_13,P_VALUE,swLogPrintf("Fast First Higher Priority PLMN value indicates that the Fast First Higher Priority PLMN Search is disabled ");
576512,1181370368,0,0,PS1,CEMM,PrintNasConfig_14,P_VALUE,swLogPrintf("SM_RetryWaitTime value is %d minutes ");
576512,1181372416,0,0,PS1,CEMM,PrintNasConfig_15,P_VALUE,swLogPrintf("Default_DCN_ID value is %d ");
576512,1181376511,0,0,PS1,CEMM,PrintNasConfig_16,P_VALUE,swLogPrintf("Exception Data Reporting Allowed value indicates that the UE is allowed to use the RRC establishment cause mo-ExceptionData ");
576512,1181378559,0,0,PS1,CEMM,PrintNasConfig_17,P_VALUE,swLogPrintf("Exception Data Reporting Allowed value indicates that the UE is not allowed to use the RRC establishment cause mo-ExceptionData ");
576512,1181380607,0,0,PS1,CEMM,PrintNasConfig_18,P_VALUE,swLogPrintf("AttachWithIMSI value indicates that attach with IMSI is performed when moving to a non-equivalent PLMN ");
576512,1181382655,0,0,PS1,CEMM,PrintNasConfig_19,P_VALUE,swLogPrintf("AttachWithIMSI value indicates that normal behaviour is applied ");
576512,1181384703,0,0,PS1,CEMM,CemmSimReady_1,P_VALUE,swLogPrintf("Last visited registered TAI is invalid in EFepsloci. ");
576512,1181385216,0,0,PS1,CEMM,CemmSimReady_3,P_VALUE,swLogPrintf("EFepsloci Last visited registered TAI is : Plmn ( 0x%x , 0x%x ) , TAC 0x%x ");
576512,1181386752,0,0,PS1,CEMM,CemmSimReady_4,P_VALUE,swLogPrintf("EFepsloci EPS update status is : %d ");
576512,1181389568,0,0,PS1,CEMM,CemmSimReady_5,P_WARNING,swLogPrintf("PLMN ID ( 0x%x , 0x%x ) in GUTI is not same as PLMN ID ( 0x%x , 0x%x ) in TAI! ");
576512,1181392895,0,0,PS1,CEMM,CemmSimReady_6,P_VALUE,swLogPrintf("LAI is invalid in EFloci. ");
576512,1181394943,0,0,PS1,CEMM,CemmSimReady_7,P_VALUE,swLogPrintf("USIM EFepsloci invalid.Use NVM value ");
576512,1181396991,0,0,PS1,CEMM,CemmSimReady_8,P_VALUE,swLogPrintf("USIM EFepsnsc invalid.Use NVM value ");
576512,1181396992,0,0,PS1,CEMM,CemmSimReady_9,P_WARNING,swLogPrintf("eKSI or integrity algorithm is wrong stored in NVM!eKSI is %d ");
576512,1181401087,0,0,PS1,CEMM,CemmSimReady_10,P_VALUE,swLogPrintf("USIM EFepsloci invalid.NVM IMSI mismatch with USIM IMSI.Set to default value ");
576512,1181403135,0,0,PS1,CEMM,CemmSimReady_11,P_VALUE,swLogPrintf("USIM EFepsnsc invalid.NVM IMSI mismatch with USIM IMSI.Set to default value ");
576512,1181405183,0,0,PS1,CEMM,CemmSimReady_12,P_VALUE,swLogPrintf("USIM EFloci is invalid , set to default value ");
576512,1181407231,0,0,PS1,CEMM,CemmSimReady_13,P_WARNING,swLogPrintf("UE is set to power on attach without Integrity Protected , delete key ");
576512,1181409279,0,0,PS1,CEMM,CemmSimReady_14,P_WARNING,swLogPrintf("UE is set to power on attach with IMSI , delete GUTI and last register TAI / LAI ");
576512,1181411327,0,0,PS1,CEMM,CemmSimWriteData_1,P_WARNING,swLogPrintf("EFepsloci is not present , can ' t write to SIM , store into NVM! ");
576512,1181413375,0,0,PS1,CEMM,CemmSimWriteData_2,P_WARNING,swLogPrintf("pending updateEpslociToNvm! ");
576512,1181415423,0,0,PS1,CEMM,CemmSimWriteData_3,P_WARNING,swLogPrintf("updateEpslociToNvm! ");
576512,1181417471,0,0,PS1,CEMM,CemmSimWriteData_4,P_WARNING,swLogPrintf("EFepsnsc is not present , can ' t write to SIM , store into NVM! ");
576512,1181419519,0,0,PS1,CEMM,CemmSimWriteData_5,P_WARNING,swLogPrintf("pending updateEpsnscToNvm! ");
576512,1181421567,0,0,PS1,CEMM,CemmSimWriteData_6,P_WARNING,swLogPrintf("updateEpsnscToNvm! ");
576512,1181423615,0,0,PS1,CEMM,CemmSimWriteData_7,P_WARNING,swLogPrintf("EFloci is not present , can ' t write to SIM! ");
576512,1181425663,0,0,PS1,CEMM,CemmSimWriteData_8,P_WARNING,swLogPrintf("No USIM file to update! ");
576512,1181426432,0,0,PS1,CEMM,CemmSimWriteData_9,P_WARNING,swLogPrintf("Can ' t write USIM file! SimPresent is %d , WriteSimFlag is %d , SimRefresh is %d , SimRemove is %d ");
576512,1181429759,0,0,PS1,CEMM,CemmSimWriteCnf_1,P_VALUE,swLogPrintf("Writing USIM file failed! ");
576512,1181431807,0,0,PS1,CEMM,CemmSimWriteCnf_111,P_WARNING,swLogPrintf("pending updateEpslociToNvm! ");
576512,1181433855,0,0,PS1,CEMM,CemmSimWriteCnf_112,P_WARNING,swLogPrintf("updateEpslociToNvm! ");
576512,1181435903,0,0,PS1,CEMM,CemmSimWriteCnf_113,P_WARNING,swLogPrintf("pending updateEpsnscToNvm! ");
576512,1181437951,0,0,PS1,CEMM,CemmSimWriteCnf_114,P_WARNING,swLogPrintf("updateEpsnscToNvm! ");
576512,1181439999,0,0,PS1,CEMM,NetworkFailingAuthentication_1,P_VALUE,swLogPrintf("UE deems that the network has failed the authentication check! ");
576512,1181442047,0,0,PS1,CEMM,CemmSimAuthenticationCnf_1,P_WARNING,swLogPrintf("The RAND value from SIM is different with the current one , ignore this SIM authentication result! ");
576512,1181442048,0,0,PS1,CEMM,CemmSimUsatImeiSvReq_1,P_VALUE,swLogPrintf("Error idType ( %d ) ");
576512,1181444096,0,0,PS1,CEMM,CemmSimRefreshInd_1,P_WARNING,swLogPrintf("Unexpected sim refresh item %d! ");
576512,1181446144,0,0,PS1,CEMM,EmmStartTimer_1,P_VALUE,swLogPrintf("EMM timer %e<CeNasTimerIdEnum> start ");
576512,1181448192,0,0,PS1,CEMM,EmmStartHibTimer_1,P_VALUE,swLogPrintf("EMM Hibernate timer %e<OsaHibTimerId> start ");
576512,1181450240,0,0,PS1,CEMM,EmmStartHibTimer_2,P_VALUE,swLogPrintf("Timer period is %d MS ");
576512,1181452288,0,0,PS1,CEMM,EmmT3245Expiry_1,P_VALUE,swLogPrintf("EmmT3245Expiry : EMM state is %e<EmmSubState> ");
576512,1181454336,0,0,PS1,CEMM,EmmT3247Expiry_1,P_VALUE,swLogPrintf("EmmT3247Expiry : EMM state is %e<EmmSubState> ");
576512,1181456896,0,0,PS1,CEMM,EmmT3324Expiry_1,P_VALUE,swLogPrintf("EmmT3324Expiry : emmConnState is %d , emmState is %e<EmmSubState> , pendingRequest is %d ");
576512,1181460479,0,0,PS1,CEMM,EmmT3324Expiry_2,P_WARNING,swLogPrintf("EmmT3324Expiry : Already during enter PSM procedure. ");
576512,1181462527,0,0,PS1,CEMM,EmmT3324Expiry_3,P_VALUE,swLogPrintf("Due to allow enter hib while t3346 or sigRetransmitTimer is running , so still allow to enter psm! ");
576512,1181464575,0,0,PS1,CEMM,EmmT3324Expiry_4,P_WARNING,swLogPrintf("Has pending ESM data , can ' t enter psm! ");
576512,1181464576,0,0,PS1,CEMM,EmmT3324Expiry_5,P_WARNING,swLogPrintf("Has reTransMsg ( msg type is %d ) , can ' t enter psm! ");
576512,1181468671,0,0,PS1,CEMM,EmmT3324Expiry_6,P_VALUE,swLogPrintf("ESM data is out of date! ");
576512,1181470719,0,0,PS1,CEMM,EmmT3346Expiry_1,P_VALUE,swLogPrintf("No pending data , maybe enter hib before , no need to retransmit! ");
576512,1181472767,0,0,PS1,CEMM,EmmT3346Expiry_2,P_VALUE,swLogPrintf("T3346 expire under EMM_REGISTERED_NO_CELL_AVAILABLE , cell service status is No_Service! ");
576512,1181472768,0,0,PS1,CEMM,EmmT3412Expiry_1,P_VALUE,swLogPrintf("EmmT3412Expiry : EMM state is %e<EmmSubState> ");
576512,1181476863,0,0,PS1,CEMM,EmmT3412Expiry_2,P_SIG,swLogPrintf("Continue to Start T3412 ");
576512,1181476864,0,0,PS1,CEMM,EmmT3440Expiry_other_1,P_WARNING,swLogPrintf("T3440 expiry , but current emmState is %e<EmmSubState> ");
576512,1181478912,0,0,PS1,CEMM,EmmT3448Expiry_1,P_VALUE,swLogPrintf("EmmT3448Expiry : EMM state is %e<EmmSubState> ");
576512,1181483007,0,0,PS1,CEMM,EmmT3448Expiry_2,P_VALUE,swLogPrintf("No pending data , maybe enter hib before , no need to retransmit! ");
576512,1181485055,0,0,PS1,CEMM,EmmT3448Expiry_3,P_VALUE,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181487103,0,0,PS1,CEMM,EmmT3448Expiry_4,P_VALUE,swLogPrintf("Under OOS , will retransmit after plmn search succeed. ");
576512,1181487104,0,0,PS1,CEMM,EmmT3448Expiry_other_1,P_WARNING,swLogPrintf("T3448 expiry , but current emmState is %e<EmmSubState> ");
576512,1181491199,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_1,P_WARNING,swLogPrintf("No pending Data need to retransmit! ");
576512,1181493247,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_2,P_VALUE,swLogPrintf("ESM request is received under EMM_REGISTERED_NO_CELL_AVAILABLE , service status is No_Service! ");
576512,1181495295,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_3,P_VALUE,swLogPrintf("Under OOS , will retransmit after plmn search succeed. ");
576512,1181497343,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_4,P_VALUE,swLogPrintf("TAU is ongoing , will retransmit after TAU succeed. ");
576512,1181499391,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_5,P_VALUE,swLogPrintf("Plmn Searching , will retransmit after plmn search succeed. ");
576512,1181499392,0,0,PS1,CEMM,EmmSigRetransmitTimerExpiry_6,P_VALUE,swLogPrintf("Can ' t retransmit under EMM state %e<EmmSubState> ");
576512,1181501440,0,0,PS1,CEMM,EmmTimerExpiry_1,P_VALUE,swLogPrintf("EMM timer %e<CeNasTimerIdEnum> expire ");
576512,1181503488,0,0,PS1,CEMM,EmmHibTimerExpiry_1,P_VALUE,swLogPrintf("EMM Hibernate timer %e<OsaHibTimerId> expire ");
576512,1181505536,0,0,PS1,CEMM,ConstructAttachRequest_1,P_WARNING,swLogPrintf("Unexpected ATTACH procedure : %d ");
576512,1181507584,0,0,PS1,CEMM,ConstructDetachRequest_1,P_WARNING,swLogPrintf("Unexpected DETACH procedure : %d ");
576512,1181511679,0,0,PS1,CEMM,ConstructTauRequest_1,P_WARNING,swLogPrintf("EMM specific procedure wrong! ");
576512,1181513727,0,0,PS1,CEMM,ConstructTauRequest_2,P_WARNING,swLogPrintf("GUTI is invalid! ");
577536,1182795776,0,0,PS1,CESM,CesmSendEsmUnitDataReqMsg_v_1,P_VALUE,swLogPrintf("CESM , CemmEsmUnitDataReq , msgType : 0x%x ");
577536,1182797824,0,0,PS1,CESM,CesmSendPdnDisconnectReq_pti_1,P_VALUE,swLogPrintf("CESM , retx PDN_DISCONNECT_REQUEST , re-use old pti : %d ");
577536,1182799872,0,0,PS1,CESM,CesmSendEsmDataTransport_para_print_1,P_ERROR,swLogPrintf("CESM , check para fail , pHead = PNULL , pTail : %x ");
577536,1182803967,0,0,PS1,CESM,CesmSendEsmDataTransport_para_print_2,P_WARNING,swLogPrintf("CESM , check para fail , bContinue should not be TRUE , set to false ");
577536,1182804224,0,0,PS1,CESM,CesmSendEsmDataTransport_len_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , invalid UL ESM_DATA_TRANSPORT data length : %d , discard current PKG ");
577536,1182806016,0,0,PS1,CESM,CesmSendEsmDataTransport_len_w_2,P_WARNING,swLogPrintf("CESM , ebi : %d , no valid UL ESM_DATA_TRANSPORT left , not need Tx ");
577536,1182808064,0,0,PS1,CESM,CesmSendEsmDataTransport_rai_w_1,P_WARNING,swLogPrintf("CESM , RAI : %d ( 1-NO_UL_DL / 2-ONLY_DL ) , but still UL PKG pending , RAI change to 0 - NO_INFO ");
577536,1182810368,0,0,PS1,CESM,CesmSendEsmDataTransport_rai_s_1,P_SIG,swLogPrintf("CESM , EBI : %d , RAI flag : %d , RAI_NO_INFO ( 0 ) / NO_UL_DL ( 1 ) / ONLY_DL ( 2 ) / REVD ( 3 ) ");
577536,1182814207,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_v4_w_1,P_WARNING,swLogDump("CESM , IPv4 DNS list is full , can ' t add a new IPV4 DNS : ");
577536,1182816255,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_v6_w_1,P_WARNING,swLogDump("CESM , IPv6 DNS list is full , can ' t add a new IPV6 DNS : ");
577536,1182816512,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_type_w_1,P_WARNING,swLogPrintf("CESM , index : %d , invalid DNS iptype : %d , or all zero addr ");
577536,1182820351,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_pcscfv4_w_1,P_WARNING,swLogDump("CESM , pCscfAddr is full , can ' t add a new IPV4 pCscf : ");
577536,1182822399,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_pcscfv6_w_1,P_WARNING,swLogDump("CESM , pCscfAddr is full , can ' t add a new IPV6 pCscf : ");
577536,1182822656,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_pcscfType_w_1,P_WARNING,swLogPrintf("CESM , index : %d , invalid pCscf iptype : %d , or all zero addr ");
577536,1182824448,0,0,PS1,CESM,CesmUpdateDlPcoInfoFromDlMsg_mtu_w_1,P_WARNING,swLogPrintf("CESM , invalid / not support ipv4 MTU in DL PCO : %d ");
577536,1182826496,0,0,PS1,CESM,CesmUpdateDefBrBasicFromActDefEpsBrCtxReq_cp_1,P_WARNING,swLogPrintf("CESM , EBI : %d , CP only set in ActivateDefEpsBearerCtxRequest , not right , ignore ");
577536,1182828800,0,0,PS1,CESM,CesmUpdateDefBrBasicFromActDefEpsBrCtxReq_w_1,P_WARNING,swLogPrintf("CESM , EBI : %d , invalid APN in ActivateDefEpsBearerCtxRequest , len : %d ");
577536,1182831104,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_in_1,P_VALUE,swLogPrintf("CESM , ebi : %d , try add / replace TFT pfId : %d , pfEpId : %d ");
577536,1182833920,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_ded_same_1,P_VALUE,swLogPrintf("CESM , ded ebi : %d , tft1Present : %d , pfId : %d / %d , pfEpId : %d / %d replace ");
577536,1182835968,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_ded_same_2,P_VALUE,swLogPrintf("CESM , ded ebi : %d , tft2Present : %d , pfId : %d / %d , pfEpId : %d / %d replace ");
577536,1182838016,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_def_same_1,P_VALUE,swLogPrintf("CESM , def ebi : %d , tftPresent : %d , pfId : %d / %d , pfEpId : %d / %d replace ");
577536,1182839808,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_same_2,P_VALUE,swLogPrintf("CESM , ebi : %d , pfId : %d / %d , pfEpId : %d / %d found , replace ");
577536,1182841088,0,0,PS1,CESM,CesmBrBasicAddTftPacketFilter_mem_w_1,P_WARNING,swLogPrintf("CESM , no slp2 mem left to add new TFT PF , ebi : %d , pfId : %d ");
577536,1182843392,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_para_print_1,P_WARNING,swLogPrintf("CESM , tft1Present : %d , tft2Present : %d , ebi : %d ");
577536,1182845440,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , cid : %d , act dedicated BR , but TFT opCode : %d , not right , reject case : 41 ");
577536,1182847744,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_num_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , cid : %d , act dedicated BR , but packet filer number : %d / 0x%x , not right , reject case : 42 ");
577536,1182849536,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_pfId_dup_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , recv act ded BR reqest , tft opcode : %d , pfId : %d , duplicated in request , reject ");
577536,1182851584,0,0,PS1,CESM,CesmUpdateTftFromActDedEpsBrCtxReq_pfEpId_dup_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , recv act ded BR reqest , tft opcode : %d , pfEpId : %d , duplicated in request , reject ");
577536,1182853120,0,0,PS1,CESM,CesmUpdateDedBrBasicFromActDedEpsBrCtxReq_eps_w_2,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi : %d , no EPS basic CTX avaiable ");
577536,1182855680,0,0,PS1,CESM,CesmUpdateDedBrBasicFromActDedEpsBrCtxReq_tft_1,P_WARNING,swLogPrintf("CESM , act ded BR , ebi : %d , cid : %d , check TFT not right , esmCause : %d ");
577536,1182857216,0,0,PS1,CESM,CesmBrMoActEstablishCnf_para_print_1,P_WARNING,swLogPrintf("CESM , para print , esm3482Timer present and T3482Ms = 0 , manual set to : %d : ");
577536,1182859520,0,0,PS1,CESM,CesmBrMoActEstablishCnf_def_s_2,P_SIG,swLogPrintf("CESM , CID : %d , request act default bearer , but EMM establish failed , start T3482 : %d ms and retry later ");
577536,1182861568,0,0,PS1,CESM,CesmBrMoActEstablishCnf_def_s_3,P_SIG,swLogPrintf("CESM , CID : %d , start timer T3482 , MS : %d , and send PDN CONNECTIVITY REQUEST ");
577536,1182863360,0,0,PS1,CESM,CesmBrMoDeactEstablishCnf_para_print_1,P_WARNING,swLogPrintf("CESM , para print , esm3492Timer present and value = 0 , manual set value to : %d ");
577536,1182865920,0,0,PS1,CESM,CesmBrMoDeactEstablishCnf_def_s_1,P_SIG,swLogPrintf("CESM , CID : %d , ebi : %d , request act default bearer , but EMM establish failed , start T3492 : %dms and retry later ");
577536,1182867456,0,0,PS1,CESM,CesmMoReactDeactOldEpsBrReq_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , re-act BR , new BR activated , but old BR not found ");
577536,1182869760,0,0,PS1,CESM,CesmMoReactDeactOldEpsBrReq_brState_1,P_VALUE,swLogPrintf("CESM , cid : %d , deact old BR , brState : %e<CesmBearerContextState> ");
577536,1182871808,0,0,PS1,CESM,CesmMoReactDeactOldEpsBrReq_brState_w_4,P_WARNING,swLogPrintf("CESM , cid : %d , deact old BR , while brState : %d , local deact firstly ");
577536,1182873600,0,0,PS1,CESM,CesmMoReactDeactOldEpsBrReq_suspend_s_1,P_SIG,swLogPrintf("CESM , CID : %d , deact old BR , but ESM is suspended , pending ");
577536,1182875648,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_pti_w_1,P_WARNING,swLogPrintf("CESM , invalid PTI : %d in ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST ");
577536,1182877696,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_ebi_w_1,P_WARNING,swLogPrintf("CESM , invalid EBI : %d in ACTIVATE_DEFAULT_EPS_BEARER_CONTEXT_REQUEST ");
577536,1182880512,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_ebi_w_2,P_WARNING,swLogPrintf("CESM , EPS bearer ebi : %d , already exist , DL duplicated , msgPti : %d , brPti : %d , brState : %d ");
577536,1182882304,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_para_print_1,P_WARNING,swLogPrintf("CESM , para print , pti : %d , brState : %d , ebi : %d ");
577536,1182883840,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_ebi_w_3,P_WARNING,swLogPrintf("CESM , EPS bearer ebi : %d , already exist , local deact ");
577536,1182886144,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_pti_w_2,P_WARNING,swLogPrintf("CESM , no EPS bearer found for PTI : %d , EBI : %d ");
577536,1182888704,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_pti_ebi_1,P_WARNING,swLogPrintf("CESM , found EPS bearer via PTI : %d , brEbi : %d , brState : %d already set , msgEbi : %d , reject cur req ");
577536,1182890240,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_pcscf_1,P_WARNING,swLogPrintf("CESM , pCscfAddr resource insufficient , new : %d , total size : %d , reject cur req ");
577536,1182892032,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_basic_w_1,P_WARNING,swLogPrintf("CESM , no memory left for ESM basic bearer info , ebi : %d , reject cur req ");
577536,1182894336,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_basic_i_2,P_VALUE,swLogPrintf("CESM , cid : %d , ebi : %d , ESM basic bearer info has been alloc in advance for emergency attach ");
577536,1182896640,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_para_print_2,P_ERROR,swLogPrintf("CESM , wrong case , basicCtxTinyIdx : %d , pti : %d , brState : %d ");
577536,1182898432,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_para_print_3,P_WARNING,swLogPrintf("CESM , para print : BR must not be dedicated BR , and no srPending. bDedicated : %d , srPending : %d ");
577536,1182900736,0,0,PS1,CESM,CesmProcActDefEpsBrCtxReq_state_w_1,P_WARNING,swLogPrintf("CESM , EBI : %d , CID : %d , invalid brState : %d , when proc ActivateDefEpsBearerCtxRequest ");
577536,1182902272,0,0,PS1,CESM,CesmProcEsmInfoReq_pti_w_1,P_WARNING,swLogPrintf("CESM , no EPS BR found via PTI : %d , carried in ESMInformationRequest ");
577536,1182904576,0,0,PS1,CESM,CesmProcEsmInfoReq_pti_w_2,P_WARNING,swLogPrintf("CESM , dedicated EPS BR CID : %d , found via PTI : %d , not right ");
577536,1182906624,0,0,PS1,CESM,CesmProcEsmInfoReq_brState_w_1,P_WARNING,swLogPrintf("CESM , BR CID : %d , brState : %d not right when proc ESMInformationRequest ");
577536,1182908417,0,0,PS1,CESM,CesmProcEsmInfoReq_att_w_1,P_WARNING,swLogPrintf("CESM , attach request APN changed to : %s into tiny ");
577536,1182912511,0,0,PS1,CESM,CesmProcEsmInfoReq_att_w_2,P_WARNING,swLogPrintf("CESM , attach req APN changed to NULL , save into tiny ");
577536,1182913024,0,0,PS1,CESM,CesmProcDeactEpsBrCtxReq_pti_br_w_1,P_WARNING,swLogPrintf("CESM , PTI : %d , CID : %d , brState : %d not right when proc DeactivateEPSBearerCtxRequest ");
577536,1182914560,0,0,PS1,CESM,CesmProcDeactEpsBrCtxReq_pti_w_2,P_WARNING,swLogPrintf("CESM , PTI : %d in DeactivateEPSBearerCtxRequest , but no bearer found ");
577536,1182918655,0,0,PS1,CESM,CesmProcDeactEpsBrCtxReq_reatt_1,P_WARNING,swLogPrintf("CESM , last default BR deact , need re-attach ");
577536,1182918912,0,0,PS1,CESM,CesmProcPdnConnectivityRej_pti_w_1,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject with pti : %d , cause : %d. but no BR found via pti , or is dedicated bearer ");
577536,1182921216,0,0,PS1,CESM,CesmProcPdnConnectivityRej_brState_w_1,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject , cid : %d , ebi : %d , brState : %d , but BR activated , abnormal ");
577536,1182922753,0,0,PS1,CESM,CesmProcPdnConnectivityRej_brState_w_2,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject , but ebi : %s is set , abnormal ");
577536,1182925312,0,0,PS1,CESM,CesmProcPdnConnectivityRej_brState_w_3,P_WARNING,swLogPrintf("CESM , recv PDNConnectivityReject , cid : %d , ebi : %d , brState : %d , abnormal , local deact ");
577536,1182927616,0,0,PS1,CESM,CesmProcPdnConnectivityRej_auth_1,P_WARNING,swLogPrintf("CESM , cid : %d , state : %d , authtype : %d , attachPdnAuthRetry : %d ");
577536,1182930943,0,0,PS1,CESM,CesmProcPdnConnectivityRej_auth_fail,P_WARNING,swLogPrintf("CESM , recv PDN connect reject again as CHAP / PAP auth , should local deactivated ");
577536,1182930944,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_cid_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi : %d , no valid CID could allocated ");
577536,1182933504,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_cid_v_1,P_VALUE,swLogPrintf("CESM , dedicated ebi : %d , but cid : %d is used , try to use cid : %d ");
577536,1182935296,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_cid_undefine_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , find a default bearer , cid : %d , brState : %d , undefined it ");
577536,1182937088,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_eps_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi : %d , no EPS CTX avaiable ");
577536,1182939392,0,0,PS1,CESM,CesmProcMtActDedEpsBrCtxReq_eps_w_2,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi : %d , update ctx fail esmCause : %d ");
577536,1182941184,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_ebi_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , ebi : %d , not valid / supported ");
577536,1182943744,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_linkedebi_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi : %d , can ' t find linked ebi : %d , or linked BR not act : %d ");
577536,1182945536,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_ebi_dup_w_1,P_WARNING,swLogPrintf("CESM , ActivateDedEpsBearerCtxRequest , dedicated ebi : %d , BR already exist , brState : %d ");
577536,1182948096,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_dup_ebi_w_2,P_WARNING,swLogPrintf("CESM , dedicated bearer ebi : %d , already exist , DL duplicated , msgPti : %d , brPti : %d , brState : %d ");
577536,1182949888,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_para_print_1,P_WARNING,swLogPrintf("CESM , para print : pti : %d , brState : %d , ebi : %d , ");
577536,1182951424,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_dup_ebi_w_3,P_WARNING,swLogPrintf("CESM , EPS bearer ebi : %d , already exist , local deact ");
577536,1182953472,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_pti_w_1,P_WARNING,swLogPrintf("CESM , pti : %d in ActivateDedEpsBearerCtxRequest , can ' t find EPS bearer , reject ");
577536,1182955776,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_mo_act_w_1,P_WARNING,swLogPrintf("CESM , pti : %d , UE request a default bearer cid : %d , but a dedicated bearer accept ");
577536,1182958336,0,0,PS1,CESM,CesmProcActDedEpsBrCtxReq_brState_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , pti : %d , brState : %e<CesmBearerContextState> , but a dedicated bearer ebi : %d accept ");
577536,1182960640,0,0,PS1,CESM,CesmProcPdnDisconnectRej_state_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , pti : %d , PDNDisconnectReject with cause : %d , brState : %d not right , or not default BR : %d ");
577536,1182962432,0,0,PS1,CESM,CesmProcPdnDisconnectRej_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , brState : %d , pti : %d , PDNDisconnectReject with casue : %d , last PDN not allow to deact ");
577536,1182964224,0,0,PS1,CESM,CesmProcPdnDisconnectRej_pti_w_1,P_WARNING,swLogPrintf("CESM , PDNDisconnectReject with casue : %d , pti : %d , ebi : %d , can ' t find BR via PTI ");
577536,1182966016,0,0,PS1,CESM,CesmProcPdnDisconnectRej_ebi_w_1,P_WARNING,swLogPrintf("CESM , PDNDisconnectReject with casue : %d , ebi : %d , accord 3GPP should be 0 , not right ");
577536,1182969855,0,0,PS1,CESM,CesmProcEsmDummy_1,P_WARNING,swLogPrintf("CESM , pEsmMsg = = PNULL when process Esm Dummy message ");
577536,1182969856,0,0,PS1,CESM,CesmProcEsmDataTransport_v_1,P_VALUE,swLogPrintf("CESM , Not support CP-OPT , so not report MT CP data , length : %d. Need enable PS_ENABLE_CP_OPT_FEATURE macro ");
577536,1182972416,0,0,PS1,CESM,CesmProcESMStatus_s_1,P_SIG,swLogPrintf("CESM , recv ESMStatus , ebi : %d , pti : %d , esmCause : %d ");
577536,1182973952,0,0,PS1,CESM,CesmProcESMStatus_ebi_w_1,P_WARNING,swLogPrintf("CESM , recv ESMStatus , ebi : %d , esmCause : Invalid EPS BR ID , but no BR found ");
577536,1182976512,0,0,PS1,CESM,CesmProcESMStatus_97_w_1,P_WARNING,swLogPrintf("CESM , recv ESMStatus , ebi : %d , pti : %d , esmCause : %d , BR state : CESM_BR_CTX_ATTACH_ACT_PENDING , let EMM retry ");
577536,1182978816,0,0,PS1,CESM,CesmProcESMStatus_97_w_2,P_WARNING,swLogPrintf("CESM , recv ESMStatus , pti : %d , ebi : %d , esmCause : %d , BR state : %d , not right ");
577536,1182980608,0,0,PS1,CESM,CesmProcESMStatus_other_w_1,P_WARNING,swLogPrintf("CESM , recv ESMStatus , pti : %d , ebi : %d , esmCause : %d , not need to proc ");
577536,1182984191,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_clear_1,P_INFO,swLogPrintf("CESM , all UL data Tx / clear ");
577536,1182986239,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_timer_1,P_WARNING,swLogPrintf("CESM , UL data retry timer is running , pending ESM DATA TRANSPORT till timer expiry ");
577536,1182988287,0,0,PS1,CESM,CesmProcUlDataTransReqSig_busy_1,P_SIG,swLogPrintf("CESM , UL data busy , pending current data request ");
577536,1182990335,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_suspend_1,P_SIG,swLogPrintf("CESM , ESM suspended , but except data allowed ");
577536,1182990336,0,0,PS1,CESM,CesmCheckSendEsmDataTransport_suspend_2,P_SIG,swLogPrintf("CESM , ESM suspended , can ' t Tx UL data , ebi : %d ");
577536,1182994431,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_para_print_1,P_ERROR,swLogPrintf("CESM , para print , Called during attach procedure , ESM must be suspended ");
577536,1182994432,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_msg_w_1,P_WARNING,swLogPrintf("CESM , ESM signalling in ATTACH REQUEST : 0x%x , change to PDN_CONNECTIVITY_REQUEST ");
577536,1182996480,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_cid_w_1,P_WARNING,swLogPrintf("CESM , invalid attached EPS CID : %d setting , using CID 0 ");
577536,1182999040,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_auth_1,P_INFO,swLogPrintf("CESM , attached BR request , CID : %d , state : %d , pdnAuthReqRetry : %d ");
577536,1183000576,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_cid_1,P_VALUE,swLogPrintf("CESM , CID : %d , MO request bearer same as attached bearer ");
577536,1183002880,0,0,PS1,CESM,CemmEsmProcMsgContainerIndMsg_state_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , attached bearer state is not right : %e<CesmBearerContextState> ");
577536,1183004672,0,0,PS1,CESM,CemmEsmProcUnitDataIndMsg_1,P_VALUE,swLogPrintf("CESM , recv DL msgType : %e<EsmMessageType> ");
577536,1183006720,0,0,PS1,CESM,CemmEsmProcUnitDataIndMsg_dup_w_1,P_WARNING,swLogPrintf("CESM , recv duplicated DL msgType : 0x%x ");
577536,1183008768,0,0,PS1,CESM,CemmEsmProcUnitDataIndMsg_unknown_w_1,P_WARNING,swLogPrintf("CESM , unknown ESM msg : 0x%x , not proc ");
577536,1183010816,0,0,PS1,CESM,CemmEsmProcEstablishCnfMsg_s_1,P_SIG,swLogPrintf("CESM , EMM EST CNF bSucc : %d ");
577536,1183013120,0,0,PS1,CESM,CemmEsmProcEstablishCnfMsg_check_para_1,P_ERROR,swLogPrintf("CESM , wrong state : %d for cid : %d ");
577536,1183014912,0,0,PS1,CESM,CemmEsmProcEstablishCnfMsg_w_1,P_SIG,swLogPrintf("CESM , EMM EST CNF bSucc : %d , but no ESM procedure pending ");
577536,1183017472,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_nw_syn_w_1,P_WARNING,swLogPrintf("CESM , NW syn BR status , EBI : %d , not found : 0x%lx , or not acted State : %d , and no BR act ongoing ");
577536,1183019520,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_reAttach_0,P_WARNING,swLogPrintf("CESM , NW syn BR status , CID : %d , EBI : %d , state : %d , is the last def eps bearer , should re-attach ");
577536,1183021312,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_nw_syn_w_2,P_WARNING,swLogPrintf("CESM , NW syn BR status , EBI : %d INACT in NW , but in UE brState : %d , local deact ");
577536,1183025151,0,0,PS1,CESM,CemmEsmProcBearerContextStatusIndMsg_ue_syn_w_1,P_WARNING,swLogPrintf("CESM , SYN BR status , no EPS activated ");
577536,1183027199,0,0,PS1,CESM,CemmEsmProcRohcStatusIndMsg_w_1,P_ERROR,swLogPrintf("CESM , TDB , not support handle Rohc support in Network in TAU ");
577536,1183029247,0,0,PS1,CESM,CemmEsmProcTransmissionFailureIndMsg_s_1,P_SIG,swLogPrintf("CESM , attach complete trans fail , need ESM re-tx ActivateDefaultEpsBearerContextAccept ");
577536,1183031295,0,0,PS1,CESM,CemmEsmProcTransmissionFailureIndMsg_s_2,P_SIG,swLogPrintf("CESM , attach complete trans fail , need ESM re-tx EsmDummy ");
577536,1183031552,0,0,PS1,CESM,CemmEsmProcSuspendIndMsg_1,P_VALUE,swLogPrintf("CESM , EMM suspend ESM , ExptDataViaCPAllowed : %d , UpDataAllowed : %d ");
577536,1183035391,0,0,PS1,CESM,CemmEsmProcResumeIndMsg_e_1,P_ERROR,swLogPrintf("CESM , EMM resume ESM but esmInSuspending = FALSE ");
577536,1183037439,0,0,PS1,CESM,CemmEsmProcResumeIndMsg_1,P_VALUE,swLogPrintf("CESM , EMM resume ESM ");
577536,1183037696,0,0,PS1,CESM,CemmEsmProcResumeIndMsg_e_2,P_ERROR,swLogPrintf("CESM , ESM resumed , wrong stats : %d for cid : %d ");
577536,1183039488,0,0,PS1,CESM,CemmEsmProcResumeIndMsg_w_1,P_WARNING,swLogPrintf("CESM , ESM resumed , but more MO proc is pending : %d ");
577536,1183041536,0,0,PS1,CESM,CemmEsmProcReleaseIndMsg_s_1,P_SIG,swLogPrintf("CESM , proc CesmReleaseInd msg , bPowerOff : %d , local deact all bearers ");
577536,1183043584,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_act_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , MO ACT , abort by MM , local deact ");
577536,1183045632,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_deact_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , MO DEACT , abort by MM , local deact ");
577536,1183047936,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_e_1,P_ERROR,swLogPrintf("CESM , wrong stats : %d for cid : %d ");
577536,1183049984,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_e_2,P_ERROR,swLogPrintf("CESM , check para fail , sendUlDataBusy : %d , esmInSuspending : %d ");
577536,1183053823,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_clear_1,P_WARNING,swLogPrintf("CESM , all UL data clear / discard ");
577536,1183053824,0,0,PS1,CESM,CemmEsmProcAbortIndMsg_retry_1,P_SIG,swLogPrintf("CESM , UL data abort by MM , start retry time : %d ms ");
577536,1183057919,0,0,PS1,CESM,CemmEsmProcDataTransportSucceedIndMsg_e_1,P_ERROR,swLogPrintf("CESM , pCesmInfo->sendUlDataBusy should be FALSE ");
577536,1183059967,0,0,PS1,CESM,CemmEsmProcNasConfigIndMsg_e_1,P_ERROR,swLogPrintf("CESM , check para fail , pSimConfgInd = PNULL ");
577536,1183059968,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_e_1,P_ERROR,swLogPrintf("CESM , check para fail , pEpsFeatureInd = PNULL for srcId : %d ");
577536,1183062272,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_epco_1,P_VALUE,swLogPrintf("CESM , FeatureInd , NW support ePCO : %d , UE request ePCO : %d ");
577536,1183064064,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_without_pdn_1,P_VALUE,swLogPrintf("CESM , FeatureInd , NW support attachWithoutPdn : %d ");
577536,1183068159,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_ciot_v_2,P_VALUE,swLogPrintf("CESM , Not support CP-OPT , need enable PS_ENABLE_CP_OPT_FEATURE macro ");
577536,1183070207,0,0,PS1,CESM,CemmEsmProcFeatureSupportIndMsg_ciot_w_2,P_WARNING,swLogPrintf("CESM , UE not support CP-OPT feature , free all pending UL CP data ");
577536,1183072255,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_v_1,P_VALUE,swLogPrintf("CESM , recv sim ACL config is NULL or RawData NULL , consider sim ACL disable ");
577536,1183072256,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_error_2,P_WARNING,swLogPrintf("CESM , recv invalid aclrawLen : %d , or the rawdata is PNULL ");
577536,1183074560,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_0,P_INFO,swLogPrintf("CESM parse SIM ACl , Bytes : 0x%x , 0x%x ");
577536,1183076608,0,0,PS1,CESM,CemmEsmProcSimAclConfigIndMsg_2,P_WARNING,swLogPrintf("CESM parse SIM ACl , check attach pdn Apn is %d ( 1 : Not Check , 0 : Check ) , ACL totalLen : %d ");
577536,1183078656,0,0,PS1,CESM,CesmGetDefBrCmiDnsAddr_ipv4_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , ipv4 dns index : %d , all zero , invalid ");
577536,1183080704,0,0,PS1,CESM,CesmGetDefBrCmiDnsAddr_ipv6_w_1,P_WARNING,swLogPrintf("CESM , ebi : %d , ipv4 dns index : %d , all zero , invalid ");
577536,1183083008,0,0,PS1,CESM,CesmGetDedBrCmiPsDedPdpDefinition_1,P_WARNING,swLogPrintf("Is not dedicate , bDedicated : %d , or pBrBasic = = null. cid = %d , ebi = %d ");
577536,1183085056,0,0,PS1,CESM,CesmGetDedBrCmiPsDedBrCtxDynParam_1,P_WARNING,swLogPrintf("Is not dedicate , bDedicated : %d , or pBrBasic = = null. cid = %d , ebi = %d ");
577536,1183088639,0,0,PS1,CESM,CesmConvertSubnetMaskToPrefixFormat_1,P_WARNING,swLogPrintf("CAC PS , Invalid subnet mask... ");
577536,1183089152,0,0,PS1,CESM,CesmGetActedBrCmiPsTftFilterList_tftnum_1,P_ERROR,swLogPrintf("CESM , EBI : %d , cid : %d , acted TFT number is not right : %d ");
577536,1183090944,0,0,PS1,CESM,CesmCheckEpsBrNeedReact_dup_1,P_WARNING,swLogPrintf("CESM , another re-act CID : %d is ongoing , can ' t re-act another cid : %d ");
577536,1183092992,0,0,PS1,CESM,CesmCheckEpsBrNeedReact_ded_1,P_VALUE,swLogPrintf("CESM , CID : %d , EPSID : %d is a dedicated BR , but CGDCONT defined ctx , need to re-act ");
577536,1183095040,0,0,PS1,CESM,CesmCheckEpsBrNeedReact_apn_1,P_VALUE,swLogPrintf("CESM , CID : %d , EPSID : %d CGDCONT NULL APN , need to re-act ");
577536,1183097600,0,0,PS1,CESM,CesmCheckEpsBrNeedReact_invalid_1,P_WARNING,swLogPrintf("CESM , CID : %d , EPSID : %d activated default BR , but no basic info : 0x%lx , or APN is NULL : %d , need to re-act ");
577536,1183099136,0,0,PS1,CESM,CesmCheckEpsBrNeedReact_apn_2,P_VALUE,swLogPrintf("CESM , CID : %d , EPSID : %d APN not same , need to re-act ");
577536,1183101696,0,0,PS1,CESM,CesmCheckEpsBrNeedReact_iptype_1,P_VALUE,swLogPrintf("CESM , CID : %d , EPSID : %d , CGDCONT request iptype : %d , current acted iptype : %d , need to re-act ");
577536,1183103488,0,0,PS1,CESM,CesmMoReactEpsBrReq_dup_1,P_WARNING,swLogPrintf("CESM , another re-act is ongoing cid : %d , brState : %d , can ' t re-act new cid : %d ");
577536,1183105024,0,0,PS1,CESM,CesmMoReactEpsBrReq_mem_1,P_WARNING,swLogPrintf("CESM , no SLP2 mem left for re-act BR , cid : %d ");
577536,1183107072,0,0,PS1,CESM,CesmMoReactEpsBrReq_def_1,P_WARNING,swLogPrintf("CESM , re-act CID : %d , but CGDCONT not defined , abnormal ");
577536,1183109376,0,0,PS1,CESM,CesmMoReactEpsBrReq_est_req_1,P_SIG,swLogPrintf("CESM , CID : %d , as upgrade the NSLPI to %d , can to send establish req ");
577536,1183111168,0,0,PS1,CESM,CesmMoReactEpsBrReq_suspend_s_1,P_SIG,swLogPrintf("CESM , CID : %d , re-act EPS bearer request , but ESM is suspended , pending ");
577536,1183113475,0,0,PS1,CESM,CesmCheckEpsBrNeedRemap_apn_1,P_VALUE,swLogPrintf("CESM , new req apn : %s , attach request apn : %s , just same ");
577536,1183115523,0,0,PS1,CESM,CesmCheckEpsBrNeedRemap_apn_2,P_VALUE,swLogPrintf("CESM , new req apn : %s , attach NW assigned apn : %s , just same ");
577536,1183117568,0,0,PS1,CESM,CesmCheckEpsBrNeedRemap_s_1,P_SIG,swLogPrintf("CESM , remap type 1 , new req cid : %d , need remap to old cid : %d ");
577536,1183120676,0,0,PS1,CESM,CesmCheckEpsBrNeedRemap_t2_apn_1,P_SIG,swLogPrintf("CESM , remap type 2 , req new cid : %d , iptype : %d , apn : %s same as acted cid : %d , iptype : %d , apn : %s , remapping ");
577536,1183121408,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_cid_1,P_WARNING,swLogPrintf("CESM , invalid CID : %d in CcmCesmSetEpsBearerCtxReq ");
577536,1183123456,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_iptype_1,P_WARNING,swLogPrintf("CESM , invalid iptype : %d in CcmCesmSetEpsBearerCtxReq ");
577536,1183125762,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_apn_1,P_WARNING,swLogPrintf("CESM , invalid apnLen : %d > 99 , APN : %s , in CcmCesmSetEpsBearerCtxReq ");
577536,1183128068,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_apn_2,P_WARNING,swLogPrintf("CESM , invalid APN CHAR : %d , idx : %d , APN : %s , in CcmCesmSetEpsBearerCtxReq ");
577536,1183129600,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_apn_3,P_WARNING,swLogPrintf("CESM , apnPresentType : %d , don ' t need to update APN ");
577536,1183131648,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_ipv4allo_1,P_WARNING,swLogPrintf("CESM , ipv4AlloType : %d , not support ");
577536,1183133952,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_ipv4allo_2,P_WARNING,swLogPrintf("CESM , pdnType : %d , not ipv4 , or ipv4v6 , not need to set ipv4AlloType : %d ");
577536,1183135744,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_reqType_1,P_WARNING,swLogPrintf("CESM , reqType : %d , not support ");
577536,1183137792,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_NSLPI_1,P_WARNING,swLogPrintf("CESM , NSLPI : %d , not support ");
577536,1183139840,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_RDS_1,P_WARNING,swLogPrintf("CESM , RDS : %d , not support ");
577536,1183141888,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_secpco_1,P_WARNING,swLogPrintf("CESM , SEC PCO : %d , not support ");
577536,1183143936,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_pcscf_1,P_WARNING,swLogPrintf("CESM , PCSCF discovery type : %d , not support ");
577536,1183145984,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_same_1,P_INFO,swLogPrintf("CESM , define default cid : %d , same as before , not need update ");
577536,1183148032,0,0,PS1,CESM,CesmProcSetEpsBearerCtxReqSig_full_1,P_WARNING,swLogPrintf("CESM , can ' t allc memory for new bearer , cid : %d ");
577536,1183150080,0,0,PS1,CESM,CesmProcCcmGetEpsBrCtxReqSig_cid_1,P_WARNING,swLogPrintf("CESM , invalid cid : %d , can ' t get bearer context ");
577536,1183152128,0,0,PS1,CESM,CesmProcCcmGetEpsBrCtxReqSig_ded_1,P_WARNING,swLogPrintf("CESM , CID : %d , request dedicated bearer info , but bearer is default bearer ");
577536,1183156223,0,0,PS1,CESM,CesmProcCcmGetEpsBrCtxReqSig_brNum_1,P_VALUE,swLogPrintf("CESM , request all bearer info , but no bearer found need to return ");
577536,1183156224,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_cid_w_1,P_WARNING,swLogPrintf("CESM , CCM act EPS bearer request , but BR not found via CID : %d ");
577536,1183158272,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_cid_w_2,P_WARNING,swLogPrintf("CESM , CCM act attach CID : %d EPS bearer , create the BR ctx ");
577536,1183160320,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , CCM act EPS bearer request , but BR state : MO_ACT_PENDING , return ");
577536,1183162368,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_2,P_WARNING,swLogPrintf("CESM , CID : %d , CCM act EPS bearer request , but BR state : ATTACH_ACT_PENDING , change to MO_ACT_PENDING ");
577536,1183164672,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_3,P_WARNING,swLogPrintf("CESM , CID : %d , CCM act EPS bearer request , but BR state : %e<CesmBearerContextState> , confirm OK ");
577536,1183166720,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_brstate_w_4,P_WARNING,swLogPrintf("CESM , CID : %d , CCM act EPS bearer request , but BR state : %e<CesmBearerContextState> , reject ");
577536,1183168768,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_est_req_1,P_SIG,swLogPrintf("CESM , CID : %d , as upgrade the NSLPI to %d , can to send establish req ");
577536,1183170560,0,0,PS1,CESM,CesmProcCcmActEpsBrCtxReqSig_suspend_s_1,P_SIG,swLogPrintf("CESM , CID : %d , CCM act EPS bearer request , but ESM is suspended , pending ");
577536,1183172608,0,0,PS1,CESM,CesmProcCcmDelEpsBrCtxReqSig_none_1,P_VALUE,swLogPrintf("CESM , no BR find via cid : %d , BR delete OK ");
577536,1183174656,0,0,PS1,CESM,CesmProcCcmDelEpsBrCtxReqSig_ded_w_1,P_WARNING,swLogPrintf("CESM , delete default cid : %d , BR is dedicated , can ' t delete , but still CNF OK ");
577536,1183176960,0,0,PS1,CESM,CesmProcCcmDelEpsBrCtxReqSig_brState_1,P_WARNING,swLogPrintf("CESM , cid : %d , BR state : %e<CesmBearerContextState> , not allow to delete ");
577536,1183178752,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_none_1,P_VALUE,swLogPrintf("CESM , deact EPS BR , BR not found via cid : %d ");
577536,1183181056,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_1,P_VALUE,swLogPrintf("CESM , cid : %d , CCM deact BR , brState : %e<CesmBearerContextState> ");
577536,1183183104,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , CCM deact BR , while brState : %e<CesmBearerContextState> ");
577536,1183184896,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_2,P_WARNING,swLogPrintf("CESM , cid : %d , CCM deact BR , while brState : CESM_BR_CTX_ATTACH_ACT_PENDING , not allow to deact ");
577536,1183187200,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_3,P_WARNING,swLogPrintf("CESM , cid : %d , CCM deact BR , while brState : %d , abnormal , local deact ");
577536,1183188992,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_last_br_1,P_WARNING,swLogPrintf("CESM , cid : %d , CCM deact BR , last default EPS bearer , not allow to deact ");
577536,1183191040,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_ded_br_not_support_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , CCM deact BR , not allow to MO deact dedicated BR operation , need to enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
577536,1183193344,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_brState_w_4,P_WARNING,swLogPrintf("CESM , cid : %d , CCM deact BR , while brState : %d , local deact firstly ");
577536,1183195136,0,0,PS1,CESM,CesmProcCcmDeactEpsBrCtxReqSig_suspend_s_1,P_SIG,swLogPrintf("CESM , CID : %d , CCM deact BR , but ESM is suspended , pending ");
577536,1183199231,0,0,PS1,CESM,CesmProcCcmSetAttachBrCtxReqSig_w_1,P_WARNING,swLogPrintf("CESM , AT+ECATTBEARER is not support anymore , please try : AT+CGDCONT to define the attach bearer context ");
577536,1183201279,0,0,PS1,CESM,CesmProcCcmGetAttachBrCtxReqSig_w_1,P_WARNING,swLogPrintf("CESM , AT+ECATTBEARER is not support anymore , please try : AT+CGDCONT to read the attach bearer context ");
577536,1183201536,0,0,PS1,CESM,CesmProcCcmSetMtCpDataReportCfgReqSig_s_1,P_SIG,swLogPrintf("CESM , try set CRTDCP : %d , atSrcHandler : 0x%x ");
577536,1183204096,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_param_w_1,P_WARNING,swLogPrintf("CESM , invalid CID : %d , or authType : %d , or userIdLen : %d , or pwdLen : %d in CcmCesmSetDefineAuthReq ");
577536,1183205376,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_def_1,P_WARNING,swLogPrintf("CESM , cid : %d , not defined , can ' t set AUTH info , please try AT+CGDCONT to define the PDP firstly ");
577536,1183207424,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_ded_1,P_WARNING,swLogPrintf("CESM , cid : %d , dedicated bearer , not support to set AUTH info ");
577536,1183209472,0,0,PS1,CESM,CesmProcCcmSetDefineAuthReqSig_same_1,P_INFO,swLogPrintf("CESM , cid : %d , set auth info , nothing need update ");
577536,1183211776,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_w_1,P_WARNING,swLogPrintf("CESM , recv CcmCesmAbortMoProcReq , abortProc : %d , abortCid : %d , but BR not found ");
577536,1183214080,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_s_1,P_SIG,swLogPrintf("CESM , cid : %d , brState : %d , abort moProc : %d ");
577536,1183215872,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_react_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , react BR , new BR already acted EBI : %d , local deact old BR ");
577536,1183217664,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_react_w_2,P_WARNING,swLogPrintf("CESM , cid : %d , react BR , new BR not acted , local deact new BR ");
577536,1183219968,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_act_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , abort MO act request , but BR already acted : %d , remain ");
577536,1183222016,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_deact_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , abort MO deact request , but BR state : %d ");
577536,1183224064,0,0,PS1,CESM,CesmProcCcmAbortMoProcReqSig_proc_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , abort invalid / known MO proc : %d ");
577536,1183227903,0,0,PS1,CESM,CesmProcUlDataTransReqSig_V_1,P_VALUE,swLogPrintf("CESM , Not support CP-OPT , need enable PS_ENABLE_CP_OPT_FEATURE macro ");
577536,1183227904,0,0,PS1,CESM,CesmProcUlDataTransReqSig_w_2,P_WARNING,swLogPrintf("CESM , CesmUlDataTransReq , invalid input pHdr : 0x%x ");
577536,1183230464,0,0,PS1,CESM,CesmHandleT3482Expiry_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , T3482 expiry , brState : %d not right , or not default beerer : %d , abnormal ");
577536,1183232000,0,0,PS1,CESM,CesmHandleT3482Expiry_timer_1,P_WARNING,swLogPrintf("CESM , cid : %d , T3482 expiry , but guard timer not created ");
577536,1183234560,0,0,PS1,CESM,CesmHandleT3482Expiry_fifth_1,P_WARNING,swLogPrintf("CESM , cid : %d , T3482 expiry , has try : %d times , max retry : %d , reject / deact ");
577536,1183236096,0,0,PS1,CESM,CesmHandleT3482Expiry_suspend_s_1,P_SIG,swLogPrintf("CESM , CID : %d , retry MO act default EPS bearer , but ESM is suspended , pending ");
577536,1183238656,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_0,P_WARNING,swLogPrintf("CESM , cid : %d , T3492 expiry , brState : %d not right , or not default beerer : %d , abnormal ");
577536,1183240192,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_1,P_WARNING,swLogPrintf("CESM , cid : %d , T3482 expiry , but guard timer not created ");
577536,1183242752,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_2,P_WARNING,swLogPrintf("CESM , cid : %d , T3492 expiry , has try : %d times , max retry : %d , local deact ");
577536,1183244288,0,0,PS1,CESM,CesmHandleT3492Expiry_invalid_3,P_WARNING,swLogPrintf("CESM , CID : %d , retry MO act default EPS bearer , but ESM is suspended , pending ");
577536,1183248383,0,0,PS1,CESM,CesmHandleUlDataRetryTimerExpiry_w_1,P_WARNING,swLogPrintf("CESM , UL_DATA_RETRY_TIMER expiry , but timer not created or stop ");
577536,1183248384,0,0,PS1,CESM,CesmStartBrTimer_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , guard timer already created / start , need to restart ");
577536,1183250944,0,0,PS1,CESM,CesmStartBrTimer_s_1,P_SIG,swLogPrintf("CESM , cid : %d , start BR timer : %d , ms : %d ");
577536,1183252480,0,0,PS1,CESM,CesmTimerExpiry_s_1,P_SIG,swLogPrintf("CESM , Timer expiry , Tid : 0x%x ");
577536,1183254784,0,0,PS1,CESM,CesmTimerExpiry_no_eps_1,P_WARNING,swLogPrintf("CESM , BR timer : %d expiry , can ' t find BR via CID : %d ");
577536,1183256832,0,0,PS1,CESM,CesmTimerExpiry_brState_w_1,P_WARNING,swLogPrintf("CESM , BR timer : 0x%x expiry , but brState : %d , abnormal ");
577536,1183258880,0,0,PS1,CESM,CesmTimerExpiry_brTimer_w_1,P_WARNING,swLogPrintf("CESM , BR timer : 0x%x expiry , invalid BrTid : %d , abnormal ");
577536,1183260928,0,0,PS1,CESM,CesmFreeEpsBrCtx_react_s_1,P_SIG,swLogPrintf("CESM , free re-act BR context , EBI : %d , CID : %d ");
577536,1183262976,0,0,PS1,CESM,CesmFreeEpsBrCtx_s_1,P_SIG,swLogPrintf("CESM , free BR context , EBI : %d , CID : %d ");
577536,1183265024,0,0,PS1,CESM,CesmFreeEpsBrCtx_timer_1,P_VALUE,swLogPrintf("CESM , EBI : %d , CID : %d , when free BR context , guardtimer is still runing ");
577536,1183266816,0,0,PS1,CESM,CesmSaveDefEpsBearerDefinition_del_1,P_VALUE,swLogPrintf("CESM , delete default bearer definition , cid : %d ");
577536,1183268864,0,0,PS1,CESM,CesmSaveDefEpsBearerDefinition_update_1,P_VALUE,swLogPrintf("CESM , set / update default bearer definition , cid : %d ");
577536,1183270912,0,0,PS1,CESM,CesmSaveEpsBrAuthDefinition_del_1,P_VALUE,swLogPrintf("CESM , delete bearer AUTH definition , cid : %d ");
577536,1183272960,0,0,PS1,CESM,CesmSaveEpsBrAuthDefinition_update_1,P_VALUE,swLogPrintf("CESM , set / update bearer AUTH definition , cid : %d ");
577536,1183275008,0,0,PS1,CESM,CesmInitialise_auth_w_1,P_WARNING,swLogPrintf("CESM , init / wakeup , CID : %d , PDP not defined , but has AUTH info , delete AUTH info ");
577536,1183277568,0,0,PS1,CESM,CesmInitialise_s_1,P_SIG,swLogPrintf("CESM , init / wakeup , CID : %d , bDedicated : %d , brState : %e<CesmBearerContextState> ");
577536,1183279616,0,0,PS1,CESM,CesmProcOut_proc_1,P_VALUE,swLogPrintf("CESM , EPSID : %d , CID : %d , proc state : %e<CesmBearerContextState> , not allow sleep2 / HIB ");
577536,1183281664,0,0,PS1,CESM,CesmProcOut_tiny_1,P_VALUE,swLogPrintf("CESM , EPSID : %d , CID : %d , basic ctx store to tiny mem , index : %d ");
577536,1183283456,0,0,PS1,CESM,CesmProcOut_bs_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID : %d , CID : %d , basic context using sleep2 mem ");
577536,1183285504,0,0,PS1,CESM,CesmProcOut_ded_tft_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID : %d , CID : %d , dedicated bearer , more TFT configed , using sleep2 mem ");
577536,1183287552,0,0,PS1,CESM,CesmProcOut_def_tft_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID : %d , CID : %d , default bearer , more TFT configed , using sleep2 mem ");
577536,1183289600,0,0,PS1,CESM,CesmProcOut_tft_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID : %d , CID : %d , TFA configed by user , using sleep2 mem ");
577536,1183291648,0,0,PS1,CESM,CesmProcOut_qos_slp2_1,P_VALUE,swLogPrintf("CESM , EPSID : %d , CID : %d , EPS QOS configed by user , using sleep2 mem ");
577536,1183295487,0,0,PS1,CESM,CesmProcOut_acl_slp1_1,P_VALUE,swLogPrintf("CESM , sim configured ACL enable , should vote to SLEEP2 ");
577536,1183296000,0,0,PS1,CESM,CesmProcOut_react_1,P_WARNING,swLogPrintf("CESM , allow slp : %d , but re-act BR exist , cid : %d , brState : %d , not allow deep SLP ");
577536,1183299583,0,0,PS1,CESM,CesmProcOut_idle_1,P_VALUE,swLogPrintf("CESM , not allow sleep2 , or HIB ");
577536,1183301631,0,0,PS1,CESM,CesmProcOut_slp2_1,P_VALUE,swLogPrintf("CESM , vote sleep2 ");
577536,1183303679,0,0,PS1,CESM,CesmProcOut_hib_1,P_VALUE,swLogPrintf("CESM , vote HIB ");
577536,1183304192,0,0,PS1,CESM,CesmProcOut_hib_tiny_1,P_VALUE,swLogPrintf("CESM , CID : %d , EPSID : %d , be dedicated : %d , update tiny ");
577536,1183305984,0,0,PS1,CESM,CesmProcOut_hib_tiny_2,P_VALUE,swLogPrintf("CESM , CID : %d , EPSID : %d , basic context changed , update tiny ");
577536,1183307776,0,0,PS1,CESM,CesmAllocPti_w_0,P_WARNING,swLogPrintf("CESM , pti is %d , reset to 1 ");
577536,1183309824,0,0,PS1,CESM,CesmAllocPti_0,P_INFO,swLogPrintf("CESM , return last pti : %d ");
577536,1183311872,0,0,PS1,CESM,CesmAllocPti_1,P_INFO,swLogPrintf("CESM , allocate pti : %d ");
577536,1183315967,0,0,PS1,CESM,CesmBeEpco_epco_1,P_VALUE,swLogPrintf("CESM , UE config ePCO , but NW not support ePCO , set to PCO ");
577536,1183318015,0,0,PS1,CESM,CesmFreeBrBasicTft_1,P_WARNING,swLogPrintf("CESM , pBrBasic = PNULL ");
577536,1183318272,0,0,PS1,CESM,CesmCopyBrBasic_1,P_WARNING,swLogPrintf("CESM , para check fail , pToBrBasic : 0x%x , or pFromBrBasic : 0x%x ");
577536,1183322111,0,0,PS1,CESM,CesmCopyBrBasic_mem_w_1,P_WARNING,swLogPrintf("CESM , no slp2 memory left for TFT packet filter , can ' t copy ");
577536,1183322368,0,0,PS1,CESM,CesmBrMoProcDone_w_1,P_WARNING,swLogPrintf("CESM , cid : %d , MO proc done , but brState : %d , not right ");
577536,1183324160,0,0,PS1,CESM,CesmFindBrCtxViaPti_w_0,P_WARNING,swLogPrintf("CESM , pti : %d invalid ");
577536,1183326464,0,0,PS1,CESM,CesmFindBrCtxViaPti_react_1,P_VALUE,swLogPrintf("CESM , Re-act EPS BR ( CID : %d ) found via pti = %d ");
577536,1183328256,0,0,PS1,CESM,CesmFindBrCtxViaPti_w_1,P_WARNING,swLogPrintf("CESM , cannot find the bearer context! , pti = %d ");
577536,1183330304,0,0,PS1,CESM,CesmFindBrCtxViaEbi_w_0,P_WARNING,swLogPrintf("CESM , ebi : %d invalid ");
577536,1183332608,0,0,PS1,CESM,CesmFindBrCtxViaEbi_react_1,P_VALUE,swLogPrintf("CESM , Re-act EPS BR ( CID : %d ) found via ebi = %d ");
577536,1183334400,0,0,PS1,CESM,CesmFindBrCtxViaEbi_w_1,P_VALUE,swLogPrintf("CESM , cannot find the bearer context , ebi = %d ");
577536,1183336448,0,0,PS1,CESM,CesmFindBrCtxViaCid_invalid_cid_w_0,P_WARNING,swLogPrintf("CESM , cid : %d invalid ");
577536,1183338496,0,0,PS1,CESM,CesmFindBrCtxViaCid_w_1,P_VALUE,swLogPrintf("CESM , cannot find the bearer context! , cid = %d ");
577536,1183340544,0,0,PS1,CESM,CesmFindUnusedCid_v_1,P_VALUE,swLogPrintf("CESM , find an unused cid : %d ");
577536,1183342592,0,0,PS1,CESM,CesmFindUnusedCid_v_2,P_VALUE,swLogPrintf("CESM , find an unused cid : %d ");
577536,1183346687,0,0,PS1,CESM,CesmFindUnusedCid_w_1,P_WARNING,swLogPrintf("CESM , can ' t find unused cid ");
577536,1183346688,0,0,PS1,CESM,CesmGetDefBrCmiIpAddr_ipv4_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , IPV4 PDN , but all zero ipv4 addr ");
577536,1183348736,0,0,PS1,CESM,CesmGetDefBrCmiIpAddr_ipv4v6_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , IPV4V6 PDN , but all zero ipv4 addr ");
577536,1183350784,0,0,PS1,CESM,CesmGetDefBrCmiIpAddr_ipv6_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , IPV6 PDN , but all zero ipv6 ID ");
577536,1183352832,0,0,PS1,CESM,CesmAllocEpsBrCtx_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , alloc EPS bearer , but EPS bearer already exist ");
577536,1183354880,0,0,PS1,CESM,CesmAllocEpsBrCtx_e_1,P_ERROR,swLogPrintf("CESM , cannot alloc EPS bearer for cid : %d , as ASMB mem limited ");
577536,1183357184,0,0,PS1,CESM,CesmAllocEpsBrBasicCtx_w_1,P_WARNING,swLogPrintf("CESM , more EPS basic bearer created : %d , try alloc from ASMB for cid : %d ");
577536,1183358976,0,0,PS1,CESM,CesmAllocEpsBrBasicCtx_e_1,P_ERROR,swLogPrintf("CESM , CID : %d , EPS basic bearer alloc fail in ASMB ");
577536,1183361536,0,0,PS1,CESM,CesmUpdateEpsBrCtxState_s_1,P_SIG,swLogPrintf("CESM , EPS CID : %d , change state from : %e<CesmBearerContextState> to %e<CesmBearerContextState> ");
577536,1183363584,0,0,PS1,CESM,CesmLocalDeactEpsBr_ded_1,P_SIG,swLogPrintf("CESM , dedicated BR cid : %d , ebi : %d local deact , as linked default BR : %d deact ");
577536,1183365376,0,0,PS1,CESM,CesmLocalDeactEpsBr_react_1,P_VALUE,swLogPrintf("CESM , EPS ID : %d , CID : %d , BR re-act , old BR local deactivated ");
577536,1183367424,0,0,PS1,CESM,CesmLocalDeactEpsBr_deact_old_1,P_VALUE,swLogPrintf("CESM , EPS ID : %d , CID : %d , BR re-act , old BR MO deact ");
577536,1183369728,0,0,PS1,CESM,CesmLocalDeactEpsBr_w_1,P_WARNING,swLogPrintf("CESM , EPS ID : %d , CID : %d , invalid BR state : %d , when local deact ");
577536,1183371776,0,0,PS1,CESM,CesmLocalDeactEpsBr_react_w_1,P_WARNING,swLogPrintf("CESM , CID : %d , re-act new BR deacted , but old BR also deacted : 0x%lx , %d ");
577536,1183373312,0,0,PS1,CESM,CesmGetFullIpv6AddrFromNetif_para_check_w_1,P_WARNING,swLogPrintf("CESM , para check fail , cid = %d ");
577536,1183375616,0,0,PS1,CESM,CesmGetFullIpv6AddrFromNetif_1,P_VALUE,swLogPrintf("CESM , CID : %d , netif can ' t get full ipv6 addr with cause : %d ");
577536,1183377408,0,0,PS1,CESM,CesmBeLastDefEpsBrAllowDeact_para_check_w_1,P_WARNING,swLogPrintf("CESM , dedicated BR or pDedEpsBr is PNULL : %x , allow to deact ");
577536,1183379456,0,0,PS1,CESM,CesmEncodeUlPcoData_para_print_w_1,P_WARNING,swLogPrintf("CESM , not support cmiAuthType : %d ");
577536,1183381760,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_iptype_w_1,P_WARNING,swLogPrintf("CESM , invalid ipType : %d , set for CID : %d , change to IPV4 ");
577536,1183384064,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_alloType_1,P_WARNING,swLogPrintf("CESM , EPS CID : %d , ipType : %d , not ipv4 , but request ipv4AlloType : %d , ignore ");
577536,1183385600,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_sec_s_1,P_SIG,swLogPrintf("CESM , EPS CID : %d , CHAP failed , try PAP ");
577536,1183388160,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_sec_w_1,P_WARNING,swLogPrintf("CESM , EPS CID : %d , request PAP , but nameLen : %d , or pwdLen : %d , not right , still carried ");
577536,1183390208,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_sec_w_2,P_WARNING,swLogPrintf("CESM , EPS CID : %d , request CHAP / PAP , but nameLen : %d , or pwdLen : %d , not right , still carried ");
577536,1183391744,0,0,PS1,CESM,CesmConstructUlPcoAttrInfo_para_print_w_1,P_WARNING,swLogPrintf("CESM , para print : authType : %d ");
577536,1183393792,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_pti_1,P_VALUE,swLogPrintf("CESM , MO BR ACT , retx PDN_CONNECTIVITY_REQUEST , re-use old pti : %d ");
577536,1183396096,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_iptype_w_1,P_WARNING,swLogPrintf("CESM , construct : PDN_CONNECTIVITY_REQUEST , invalid ipType : %d , set for CID : %d , change to IPV4 ");
577536,1183397888,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_reqtype_EMC_4,P_VALUE,swLogPrintf("CESM , EPS CID : %d , request emergency bearer ");
577536,1183400192,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_reqtype_w_1,P_WARNING,swLogPrintf("CESM , EPS CID : %d , invalid reqType : %d configed , change to normal ");
577536,1183401985,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_att_v_1,P_VALUE,swLogPrintf("CESM , save attach req APN : %s into tiny ");
577536,1183406079,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_att_v_2,P_VALUE,swLogPrintf("CESM , attach req APN is NULL , save into tiny ");
577536,1183406336,0,0,PS1,CESM,CesmConstructPDNConnectivityRequest_eitf_1,P_VALUE,swLogPrintf("CESM , EPS CID : %d , PDN_CONNECTIVITY_REQUEST eitf : %d , not set PCO ");
577536,1183408128,0,0,PS1,CESM,CesmSetEpcoFlag_s_1,P_SIG,swLogPrintf("CESM , bEpco flag set to : %d ");
577536,1183410176,0,0,PS1,CESM,CesmSetAttachEpsCid_s_1,P_SIG,swLogPrintf("CESM , attach CID try set to : %d ");
577536,1183412224,0,0,PS1,CESM,CesmSetAttachEpsCid_para_check_w_1,P_WARNING,swLogPrintf("CESM , cid invalid : %d ");
577536,1183414272,0,0,PS1,CESM,CesmSetAttachEpsCidFromNv_para_check_w_1,P_WARNING,swLogPrintf("CESM , cid%d invalid ");
577536,1183417344,0,0,PS1,CESM,CesmSetUserDefinedTimer_s_1,P_SIG,swLogPrintf("CESM , user config T : %d , tryNumPresent : %d , tryNum : %d , tValPresent : %d , tValSec : %d ");
577536,1183418368,0,0,PS1,CESM,CesmSetUserDefinedTimer_para_check_w_2,P_WARNING,swLogPrintf("CESM , para check fail , tId = %d ");
577536,1183420672,0,0,PS1,CESM,CesmSetUserDefinedTimer_w_1,P_WARNING,swLogPrintf("CESM , user config T : %d , tryNum : %d , not valid ");
577536,1183422720,0,0,PS1,CESM,CesmSetUserDefinedTimer_w_2,P_WARNING,swLogPrintf("CESM , user config T : %d , tValSec : %d , not valid ");
577536,1183424512,0,0,PS1,CESM,CesmGetUserDefinedTimer_para_check_w_2,P_WARNING,swLogPrintf("CESM , para check fail , tId : %d ");
577536,1183426816,0,0,PS1,CESM,CesmGetNSLPIWithSimConfig_para_check_w_1,P_WARNING,swLogPrintf("CESM , para check fail , nslpiPresent : 0x%x , nslpiVal : 0x%x ");
577536,1183428864,0,0,PS1,CESM,CesmGetNSLPIWithSimConfig_0,P_VALUE,swLogPrintf("CESM , overrideNasSignallingPriority : %d , nasSignallingPriority : %d in SIM ");
577536,1183430912,0,0,PS1,CESM,CesmGetNSLPIWithSimConfig_result,P_VALUE,swLogPrintf("CESM , result , nslpiPresent : %d , nslpiVal : %d ");
577536,1183432704,0,0,PS1,CESM,CesmSetAclFlag_write_1,P_SIG,swLogPrintf("CESM , set ACL val to : %d ");
577536,1183434752,0,0,PS1,CESM,CesmSetPdpRemapFlagFromNv_w_1,P_WARNING,swLogPrintf("CESM , invalid bPdpRemap val : %d in NVM ");
577536,1183436800,0,0,PS1,CESM,CesmSetPdpRemapFlag_write_1,P_SIG,swLogPrintf("CESM , try set pdpRemap to : %d ");
577536,1183438848,0,0,PS1,CESM,CesmSetPdpReactFlagFromNv_w_1,P_WARNING,swLogPrintf("CESM , invalid bPdpReact val : %d in NVM ");
577536,1183440896,0,0,PS1,CESM,CesmSetPdpReactFlag_write_1,P_SIG,swLogPrintf("CESM , try set bPdpReact to : %d ");
577536,1183444991,0,0,PS1,CESM,CesmFindApnWithAclConfig_para_check_w_1,P_WARNING,swLogPrintf("CESM , there is no APN in ACL , retuen TRUE ");
577536,1183447039,0,0,PS1,CESM,CesmFindApnWithAclConfig_result,P_SIG,swLogPrintf("CESM , no find apn in acl , should forbidden it ");
577536,1183447296,0,0,PS1,CESM,CesmCheckSendPdnConReqByAclApn_para_check_i_1,P_INFO,swLogPrintf("CESM , ACL feature not config ( %d ) or USIM not enable ( %d ) , return TRUE ");
577536,1183449088,0,0,PS1,CESM,CesmCheckSendPdnConReqByAclApn_para_check_w_1,P_WARNING,swLogPrintf("CESM , pEpsBr is NULL : 0x%x , or dedicated BR , return TRUE , can send pdn connectivity request ");
577536,1183451136,0,0,PS1,CESM,CesmCheckSendPdnConReqByAclApn_0,P_SIG,swLogPrintf("CESM , check send pdn apn with ACL result : %d ( 0 : Forbidden , 1 , Allow ) ");
577536,1183453184,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_netmask_1,P_WARNING,swLogPrintf("CESM , subnet mask length : %d in TFT , ip address type is IPV4 ");
577536,1183455232,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_netmask_2,P_WARNING,swLogPrintf("CESM , subnet mask length : %d in TFT , ip address type is IPV6 ");
577536,1183457536,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_port_w_2,P_WARNING,swLogPrintf("CESM , invalid local port range : [ %d , %d ] in TFT setting ");
577536,1183459584,0,0,PS1,CESM,CesmConvertCmiTftToPFFormat_port_w_1,P_WARNING,swLogPrintf("CESM , invalid destination port range : [ %d , %d ] in TFT setting ");
577536,1183461635,0,0,PS1,CESM,CesmDisplayApnCmp_same_1,P_VALUE,swLogPrintf("CESM , APN : %s , and APN : %s , act as same APN ");
577536,1183463424,0,0,PS1,CESM,CesmMoReactEpsBrSucc_tfa_1,P_WARNING,swLogPrintf("CESM , re-act old BR CID : %d , Tfa should be already freed ");
577536,1183465472,0,0,PS1,CESM,CesmMoReactEpsBrSucc_eqos_1,P_WARNING,swLogPrintf("CESM , re-act old BR CID : %d , ReqTfa should be already freed ");
577536,1183467520,0,0,PS1,CESM,CesmMoReactEpsBrSucc_cgauth_1,P_WARNING,swLogPrintf("CESM , re-act old BR CID : %d , AUTH Req should be already freed ");
577536,1183471615,0,0,PS1,CESM,CesmRemovePcscfAddrViaEbi_v_1,P_VALUE,swLogPrintf("CESM , Remove all Pcscf addr. ");
577536,1183472128,0,0,PS1,CESM,CesmRemovePcscfAddrViaEbi_v_2,P_VALUE,swLogPrintf("CESM , ebi : %d , removed pcscf addr , raw bitmap : %x , curr bitmap : %x ");
577536,1183475711,0,0,PS1,CESM,CesmIsEstablishmentForEmc_0,P_WARNING,swLogPrintf("input parameter = = PNULL ");
577536,1183475712,0,0,PS1,CESM,DecodePCO_1_PCSCF_IPV6,P_VALUE,swLogPrintf("Pcscf ipv6 addr array is full , max size is : %d ");
577536,1183477760,0,0,PS1,CESM,DecodePCO_1_PCSCF_IPV4,P_VALUE,swLogPrintf("Pcscf ipv4 addr array is full , max size is : %d ");
577536,1183479808,0,0,PS1,CESM,DecodePCO_1,P_ERROR,swLogPrintf("Unexpected content Length of APNRC in PCO decode , contentLength : %d ");
577536,1183481856,0,0,PS1,CESM,DecodePCO_2,P_ERROR,swLogPrintf("Unexpected content Length of additional APNRC in PCO decode , contentLength : %d ");
577536,1183483904,0,0,PS1,CESM,DecodeEPCO_1_PCSCF_IPV6,P_VALUE,swLogPrintf("Pcscf ipv6 addr array is full , max size is : %d ");
577536,1183485952,0,0,PS1,CESM,DecodeEPCO_1_PCSCF_IPV4,P_VALUE,swLogPrintf("Pcscf ipv4 addr array is full , max size is : %d ");
577536,1183488000,0,0,PS1,CESM,DecodeEPCO_1,P_ERROR,swLogPrintf("Unexpected content Length of APNRC in PCO decode , contentLength : %d ");
577536,1183490048,0,0,PS1,CESM,DecodeEPCO_2,P_ERROR,swLogPrintf("Unexpected content Length of additional APNRC in PCO decode , contentLength : %d ");
577536,1183492096,0,0,PS1,CESM,DecodeNasEsmMessage_len_w_1,P_WARNING,swLogPrintf("CESM , can ' t decode signalling with len : %d < 3 ");
577536,1183494144,0,0,PS1,CESM,DecodeNasEsmMessage_pd_w_1,P_WARNING,swLogPrintf("CESM , invalid DL ESM signalling , PD : %d , not for ESM ");
578560,1184892928,0,0,PS1,SMS,EncodeSmsUsrDataTo7Bit_1,P_WARNING,swLogPrintf("CESMS too much SMS User Data Header %d ");
578560,1184894976,0,0,PS1,SMS,EncodeSmsUsrDataTo7Bit_2,P_WARNING,swLogPrintf("SMS User Data len %d is too long ");
578560,1184899071,0,0,PS1,SMS,Encode8BitFormatData_1,P_WARNING,swLogPrintf("CESMS Input data too long for ENC 8bit ");
578560,1184901119,0,0,PS1,SMS,EncodeSmsDataToDefault_1,P_WARNING,swLogPrintf("CESMS too much SMS User Data Header ");
578560,1184903167,0,0,PS1,SMS,EncodeSmsDataToDefault_2,P_WARNING,swLogPrintf("SMS User Data exceed packing 7bit max len ");
578560,1184903168,0,0,PS1,SMS,AssembleSmsSubmit_2,P_WARNING,swLogPrintf("MAX_SMS_LEN is less than dataLen %d ");
578560,1184905216,0,0,PS1,SMS,AssembleSmsCommand_1,P_WARNING,swLogPrintf("MAX_SMS_LEN is less than dataLen %d ");
578560,1184907264,0,0,PS1,SMS,ConstructCemmSmtlDeliveredInd_1,P_VALUE,swLogPrintf("pCemmSmtlDeliveredInd->smsLen is %d after DecodeUserDataToOctet ");
578560,1184909312,0,0,PS1,SMS,ConstructCemmSmtlDeliveredInd_2,P_VALUE,swLogPrintf("pCemmSmtlDeliveredInd->smsLen %d after DecodeUserDataToDef ");
578560,1184911360,0,0,PS1,SMS,ConstructCemmSmtlDeliveredInd_3,P_VALUE,swLogPrintf("pCemmSmtlDeliveredInd->smsLen %d output ");
578560,1184913408,0,0,PS1,SMS,PackCesmsDeliver_1,P_WARNING,swLogPrintf("MAX_TPDU_INFO_LENGTH is less then ieLen %d ");
578560,1184915456,0,0,PS1,SMS,CatUpProcGosTimerExpiryIndSig_1,P_ERROR,swLogPrintf("Unexpected Gos Timer Expiry : %d ");
578560,1184917504,0,0,PS1,SMS,CatUpTaskEntry_1,P_ERROR,swLogPrintf("Unexpected sigId : %d ");
578560,1184919552,0,0,PS1,SMS,CedrProcBearerTimerExpiry_1,P_ERROR,swLogPrintf("Unexpected Bearer Timer Expiry : %d ");
578560,1184921600,0,0,PS1,SMS,smsPduDecodeCbsDCS_1,P_WARNING,swLogPrintf("unknown cb DCS value : %d ");
578560,1184923648,0,0,PS1,SMS,smsPduDecodeCbsDCS_2,P_WARNING,swLogPrintf("unknown reserved DCS value : %d ");
578560,1184925696,0,0,PS1,SMS,smsPduDecodeCbsDCS_3,P_WARNING,swLogPrintf("unknown cb reserved DCS value : %d ");
578560,1184927744,0,0,PS1,SMS,smsPduDecodeCbsDCS_4,P_WARNING,swLogPrintf("unknown DCS value : %d ");
580608,1189087232,0,0,PS1,NAS_PLMN,CePlmnAddPreferFreqStatic_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t add the FREQ : 0x%x into the FREQ header ");
580608,1189089280,0,0,PS1,NAS_PLMN,CePlmnAddPreferFreqStatic_2,P_VALUE,swLogPrintf("CE PLMN , euArfcn ( 0x%x ) is not belong any band in nvm , can ' t add to the FREQ header ");
580608,1189091584,0,0,PS1,NAS_PLMN,CePlmnAddPreferFreqStatic_3,P_VALUE,swLogPrintf("CE PLMN , Current utcSec : %d , preFreqUpdateUtc : %d ");
580608,1189093632,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_1,P_VALUE,swLogPrintf("PLMN , plmn : ( 0x%x , 0x%x ) is ( E ) HPLMN , not FPLMN ");
580608,1189095680,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_2,P_VALUE,swLogPrintf("PLMN , plmn : ( 0x%x , 0x%x ) is forbidden in NVM list ");
580608,1189097728,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_3,P_VALUE,swLogPrintf("PLMN , plmn : ( 0x%x , 0x%x ) is forbidden in UICC list ");
580608,1189100032,0,0,PS1,NAS_PLMN,CePlmnIsFplmn_4,P_WARNING,swLogPrintf("PLMN , FPLMN in UICC is not read , can ' t decide whether the PLMN : ( 0x%x , 0x%x ) is a FPLMN , rplmnType : %d ");
580608,1189101824,0,0,PS1,NAS_PLMN,CePlmnIsGprsFplmn_1,P_VALUE,swLogPrintf("PLMN , plmn : ( 0x%x , 0x%x ) is forbidden for GPRS service ");
580608,1189103872,0,0,PS1,NAS_PLMN,CePlmnIsBlockedPlmnBlockedTac_1,P_VALUE,swLogPrintf("PLMN , PLMN : ( 0x%x , 0x%x ) is T3346 blocked temporarily ");
580608,1189105920,0,0,PS1,NAS_PLMN,CePlmnIsBlockedPlmnBlockedTac_2,P_VALUE,swLogPrintf("PLMN , PLMN : ( 0x%x , 0x%x ) is blocked temporarily due to severe network failure ");
580608,1189108480,0,0,PS1,NAS_PLMN,CePlmnIsEplmnStatic_eplmn_1,P_VALUE,swLogPrintf("CE PLMN , DEST PLMN : ( 0x%x , 0x%x ) and SRC PLMN : ( 0x%x , 0x%x ) are all EHPLMN , act as EPLMN ");
580608,1189110528,0,0,PS1,NAS_PLMN,CePlmnIsEplmnStatic_eplmn_2,P_VALUE,swLogPrintf("CE PLMN , DEST PLMN : ( 0x%x , 0x%x ) and SRC PLMN : ( 0x%x , 0x%x ) are all EHPLMN / HPLMN , act as EPLMN ");
580608,1189113088,0,0,PS1,NAS_PLMN,CePlmnIsEplmnStatic_eplmn_3,P_VALUE,swLogPrintf("CE PLMN , srcFound : %d , destFound : %d , DEST PLMN : ( 0x%x , 0x%x ) and SRC PLMN : ( 0x%x , 0x%x ) are not EPLMN ");
580608,1189114112,0,0,PS1,NAS_PLMN,CePlmnIsEqualRplmnStatic_1,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is RPLMN ");
580608,1189116160,0,0,PS1,NAS_PLMN,CePlmnIsEqualRplmnStatic_2,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is EPLMN of RPLMN ");
580608,1189118208,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_1,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is HPLMN ");
580608,1189120256,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_2,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is EHPLMN ");
580608,1189122304,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_3,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is FPLMN ");
580608,1189124352,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_4,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is UPLMN ");
580608,1189126400,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_5,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is OPLMN ");
580608,1189128448,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_6,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is RPLMN ");
580608,1189130496,0,0,PS1,NAS_PLMN,CePlmnGetPlmnTypeStatic_7,P_VALUE,swLogPrintf("PLMN ( 0x%x , 0x%x ) is EPLMN of RPLMN ");
580608,1189132288,0,0,PS1,NAS_PLMN,CePlmnFreqBelongValidBand_1,P_WARNING,swLogPrintf("CE PLMN , FREQ : %d , not belong to any band ");
580608,1189134592,0,0,PS1,NAS_PLMN,CePlmnFreqBelongValidBand_2,P_WARNING,swLogPrintf("CE PLMN , FREQ : %d , belong to band : %d , not the setting band ");
580608,1189136384,0,0,PS1,NAS_PLMN,CePlmnClearNvmPreFreqList_1,P_WARNING,swLogPrintf("CE PLMN , lock FREQ : %d , not right , clear cell lock info ");
580608,1189138944,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccEHPlmnInfo_1,P_WARNING,swLogPrintf("PLMN , local EHPLMN full : %d , can ' t add new EHPLMN : ( 0x%x , 0x%x ) ");
580608,1189140736,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccPlmnInfo_1,P_WARNING,swLogPrintf("Insert FPLMN number is %d , current FPLMN number is %d ");
580608,1189142784,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccPlmnInfo_2,P_WARNING,swLogPrintf("Insert UPLMN number is %d , current UPLMN number is %d ");
580608,1189144576,0,0,PS1,NAS_PLMN,CePlmnAddSaveUiccPlmnInfo_3,P_VALUE,swLogPrintf("No valid PLMN type : %d need to store ");
580608,1189148671,0,0,PS1,NAS_PLMN,CePlmnRemoveUiccPlmnInfo_1,P_VALUE,swLogPrintf("PLMN , remove all FPLMN in local PLMN context ");
580608,1189148928,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_1,P_VALUE,swLogPrintf("CePlmnSendPlmnSearchReqSig , requested Plmn : ( 0x%x , 0x%x ) ");
580608,1189150721,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_3,P_SIG,swLogPrintf("Start Plmn Search , Request Band ( s ) : %s ");
580608,1189152768,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_bcinfo_4,P_VALUE,swLogPrintf("CE PLMN , start BCINFO Plmn Search , Without Band , PLMN FREQ num is %d ");
580608,1189154816,0,0,PS1,NAS_PLMN,CePlmnSendPlmnSearchReqSig_4,P_SIG,swLogPrintf("Start Plmn Search , Without Band , Cell Lock Flag is %d ");
580608,1189157120,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_1,P_VALUE,swLogPrintf("PLMN , fobidden PLMN is HPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN ");
580608,1189159168,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_2,P_VALUE,swLogPrintf("PLMN , forbidden PLMN is EHPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN list ");
580608,1189161216,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_3,P_VALUE,swLogPrintf("PLMN , add forbidden PLMN ( 0x%x , 0x%x ) to NVM FPLMN list ");
580608,1189163264,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_4,P_VALUE,swLogPrintf("PLMN , FPLMN ( 0x%x , 0x%x ) already in NVM FPLMN list ");
580608,1189165312,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_5,P_VALUE,swLogPrintf("PLMN , add forbidden PLMN ( 0x%x , 0x%x ) to UICC FPLMN list ");
580608,1189167360,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_6,P_WARNING,swLogPrintf("PLMN , can ' t add the FPLMN ( 0x%x , 0x%x ) into UICC FPLMN list , as UICC FPLMN haven ' t been read ");
580608,1189169408,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_7,P_VALUE,swLogPrintf("PLMN , can ' t add the FPLMN ( 0x%x , 0x%x ) to local PLMN list ");
580608,1189171456,0,0,PS1,NAS_PLMN,CePlmnAddFplmn_8,P_VALUE,swLogPrintf("PLMN , FPLMN ( 0x%x , 0x%x ) already in UICC FPLMN list ");
580608,1189173504,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_1,P_VALUE,swLogPrintf("PLMN , GPRS forbidden PLMN is HPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN list ");
580608,1189175552,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_2,P_VALUE,swLogPrintf("PLMN , GPRS forbidden PLMN is EHPLMN ( 0x%x , 0x%x ) , can ' t add into FPLMN list ");
580608,1189177600,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_3,P_VALUE,swLogPrintf("PLMN , add GPRS forbidden PLMN ( 0x%x , 0x%x ) ");
580608,1189179648,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_4,P_WARNING,swLogPrintf("PLMN , GPRS forbidden PLMN ( 0x%x , 0x%x ) is already in list [ fplmnIdx ] ");
580608,1189181696,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_5,P_VALUE,swLogPrintf("PLMN , can ' t add GPRS forbidden PLMN ( 0x%x , 0x%x ) due to list is full ");
580608,1189183744,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_6,P_WARNING,swLogPrintf("PLMN , GPRS forbidden PLMN ( 0x%x , 0x%x ) is already in list [ fplmnIdx ] ");
580608,1189185792,0,0,PS1,NAS_PLMN,CePlmnAddGprsFplmn_7,P_VALUE,swLogPrintf("PLMN , add GPRS forbidden PLMN ( 0x%x , 0x%x ) ");
580608,1189188096,0,0,PS1,NAS_PLMN,CePlmnAddBlockPlmnBlockTac_1,P_VALUE,swLogPrintf("PLMN , T3402 block list is full , remove the oldest PLMN ( 0x%x , 0x%x ) , TAC 0x%x ");
580608,1189191679,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_1,P_WARNING,swLogPrintf("PLMN , no valid PLMN in EPLMN list ");
580608,1189193727,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_2,P_VALUE,swLogPrintf("PLMN , update EPLMN , but no EPLMN received , only need clear EPLMN ");
580608,1189193728,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_3,P_VALUE,swLogPrintf("PLMN , update EPLMN , all EPLMN ( %d ) just same as in local NVM file , don ' t need to update ");
580608,1189196032,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_4,P_VALUE,swLogPrintf("PLMN , need to up EPLMN list , valid EPLMN number : %d , all already in local NVM : %d , only need to update NVM ");
580608,1189197824,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_5,P_VALUE,swLogPrintf("PLMN , need to up EPLMN list , valid EPLMN number : %d , need to check whether anyone forbidden ");
580608,1189200128,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_6,P_VALUE,swLogPrintf("PLMN , EPLMN : 0x%x , 0x%x , is the FPLMN , need to remove from EPLMN list ");
580608,1189202176,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_7,P_VALUE,swLogPrintf("PLMN , EPLMN : 0x%x , 0x%x , is the UICC FPLMN , need to remove from EPLMN list ");
580608,1189206015,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_8,P_WARNING,swLogPrintf("PLMN , need to update UICC FPLMN , but have not read from UICC ");
580608,1189206272,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_9,P_VALUE,swLogPrintf("PLMN , EPLMN : 0x%x , 0x%x , is the GPRS FPLMN , need to remove from EPLMN list ");
580608,1189210111,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_11,P_VALUE,swLogPrintf("PLMN , update EPLMN , but all EPLMN are FPLMN , only need clear EPLMN ");
580608,1189210112,0,0,PS1,NAS_PLMN,CePlmnUpdateEqualRplmnList_12,P_VALUE,swLogPrintf("PLMN , after filtered by FPLMN , all EPLMN ( %d ) just same as in local NVM file , don ' t need to update ");
580608,1189212416,0,0,PS1,NAS_PLMN,CePlmnCheckRemoveFplmn_1,P_VALUE,swLogPrintf("PLMN , PLMN ( 0x%x , 0x%x ) is in the FPLMN list stored in NVM , remove it ");
580608,1189214464,0,0,PS1,NAS_PLMN,CePlmnCheckRemoveFplmn_2,P_VALUE,swLogPrintf("PLMN , PLMN ( 0x%x , 0x%x ) is in the FPLMN list stored in UICC , remove it ");
580608,1189218303,0,0,PS1,NAS_PLMN,CePlmnCheckRemoveFplmn_3,P_WARNING,swLogPrintf("PLMN , need to update UICC FPLMN , but have not read from UICC , update later ");
580608,1189218560,0,0,PS1,NAS_PLMN,CePlmnCheckRemoveBlockedOrGprsFPlmn_1,P_VALUE,swLogPrintf("PLMN , remove blocked PLMN : ( 0x%x , 0x%x ) ");
580608,1189220608,0,0,PS1,NAS_PLMN,CePlmnCheckRemoveBlockedOrGprsFPlmn_2,P_VALUE,swLogPrintf("PLMN , remove GPRS forbidden PLMN ( 0x%x , 0x%x ) ");
580608,1189222912,0,0,PS1,NAS_PLMN,CePlmnCalcOosTimeValue_1,P_VALUE,swLogPrintf("CEPLMN , Base on power level ( %d ) , Oos times ( %d ) , calc the oos timer value is %d ( s ) ");
580608,1189226495,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_1,P_VALUE,swLogPrintf("PLMN , CUR PLMN search procedure is done ");
580608,1189228543,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_2,P_VALUE,swLogPrintf("PLMN , Already camp on ( E ) HPLMN , stop HPLMN search timer. ");
580608,1189228544,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_3,P_VALUE,swLogPrintf("PLMN , start pending PLMN search ( %d ) proccedure ");
580608,1189230848,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_4,P_VALUE,swLogPrintf("PLMN , Already camp on ( E ) HPLMN 0x%x , 0x%x , cancel pending High Priority Plmn search. ");
580608,1189234687,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_6,P_VALUE,swLogPrintf("PLMN , no valid selected PLMN found , need to start PLMN OOS timer , and retry ");
580608,1189236735,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_7,P_VALUE,swLogPrintf("PLMN , period plmn T timer is running , need to stop it ");
580608,1189236736,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_8,P_VALUE,swLogPrintf("PLMN , start OOS PLMN timer : %d Seconds ");
580608,1189238784,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_9,P_VALUE,swLogPrintf("CE PLMN , PLMN search level : %d , already tried once oos plmn search , for power consumption considerations , no longer plmn search! ");
580608,1189241088,0,0,PS1,NAS_PLMN,CePlmnCurPlmnSearchDone_10,P_VALUE,swLogPrintf("PLMN , period high PLMN search done , selectedPlmn : 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189244927,0,0,PS1,NAS_PLMN,CePlmnProcedureOut_1,P_VALUE,swLogPrintf("PLMN , CUR PLMN search procedure is done , need to free it ' s memory ");
580608,1189246975,0,0,PS1,NAS_PLMN,CePlmnProcedureOut_2,P_WARNING,swLogPrintf("PLMN , Ready to enter PSM , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , stop it and check whether need to re-start when leave psm ");
580608,1189249023,0,0,PS1,NAS_PLMN,CePlmnProcedureOut_3,P_VALUE,swLogPrintf("PLMN , no procedure is ongoing / pending , need to free Dyn context ");
580608,1189249024,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_1,P_VALUE,swLogPrintf("PLMN , WiFi Scan is ongoing , Status : %d , just wait for the WiFi Scan ");
580608,1189253119,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_2,P_VALUE,swLogPrintf("PLMN , already aborted current PLMN search before , just wait for AS CNF ");
580608,1189255167,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_3,P_WARNING,swLogPrintf("PLMN , Manual PLMN search aborted ");
580608,1189257215,0,0,PS1,NAS_PLMN,CePlmnAbortCurPlmnSearch_4,P_WARNING,swLogPrintf("PLMN , BCINFO Manual PLMN search aborted ");
580608,1189257216,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search req , but another PLMN searching ( %d ) is ongoing , maybe need to pending ");
580608,1189259264,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_2,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search is ongoing , and procStatus : %d ");
580608,1189263359,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_3,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search is ongoing , but already under ABORT procedure ");
580608,1189265407,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_4,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search is ongoing , and ignore current request one ");
580608,1189265664,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_5,P_VALUE,swLogPrintf("PLMN , a PLMN search ( %d ) is ongoing ( %d ) , abort it , and pending AUTO PLMN search ");
580608,1189267456,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_6,P_VALUE,swLogPrintf("PLMN , already another PLMN search ( %d ) is pending ");
580608,1189271551,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_7,P_VALUE,swLogPrintf("PLMN , current PLMN is already AUTO in NVM ");
580608,1189273599,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_8,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search , no valid RPLMN / ignore RPLMN , try EHPMN / HPLMN ");
580608,1189273856,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_9,P_VALUE,swLogPrintf("PLMN , current selected PLMN just the same as the requested PLMN : ( 0x%x , 0x%x ) ");
580608,1189275648,0,0,PS1,NAS_PLMN,CePlmnAutoPlmnSearchReq_10,P_VALUE,swLogPrintf("PLMN , AUTO PLMN search , but AS is not in IDLE state ( %d ) , wait for AS to go ILDE ");
580608,1189277952,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing , and still a PLMN search pending ( %d ) , reject this MANUAL PLMN search request ");
580608,1189280000,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_2,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing ( %d ) , pending this MANUAL PLMN search ");
580608,1189281792,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_3,P_VALUE,swLogPrintf("PLMN , current MANUAL PLMN search is ongoing ( %d ) , but another MANUAL PLMN search comes , reject , and abort current procedure ");
580608,1189284096,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_4,P_VALUE,swLogPrintf("PLMN , current High priority PLMN search is ongoing ( %d ) , and still a PLMN search pending ( %d ) , reject this MANUAL PLMN search request ");
580608,1189285888,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_5,P_VALUE,swLogPrintf("PLMN , abort current High priority PLMN search ( %d ) , pending this MANUAL PLMN search ");
580608,1189287936,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSearchReq_6,P_VALUE,swLogPrintf("PLMN , start manual PLMN search , but current AS is not in IDLE state ( %d ) , force to do IDLE firstly ");
580608,1189290240,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_1,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing , and still a PLMN search pending ( %d ) , reject this BCINFO MANUAL PLMN search request ");
580608,1189292288,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_2,P_VALUE,swLogPrintf("PLMN , current PLMN search ( %d ) is ongoing ( %d ) , pending this BCINFO MANUAL PLMN search ");
580608,1189294080,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_cft_1,P_WARNING,swLogPrintf("PLMN , current MANUAL PLMN search is ongoing ( %d ) , but another BCINFO MANUAL PLMN search comes , reject , and abort current procedure ");
580608,1189296384,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_3,P_VALUE,swLogPrintf("PLMN , current High priority PLMN search is ongoing ( %d ) , and still a PLMN search pending ( %d ) , reject this BCINFO MANUAL PLMN search request ");
580608,1189298176,0,0,PS1,NAS_PLMN,CePlmnBcInfoManualPlmnSearchReq_busy_4,P_VALUE,swLogPrintf("PLMN , abort current High priority PLMN search ( %d ) , pending this BCINFO MANUAL PLMN search ");
580608,1189300992,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_1,P_VALUE,swLogPrintf("Manual PLMN selection ( %d ) , request PLMN : ( 0x%x , 0x%x ) , but another PLMN search ( %d ) is ongoing now ");
580608,1189304319,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_2,P_VALUE,swLogPrintf("PLMN , current manual PLMN selection just the same as the new request one , just return directly ");
580608,1189304320,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_3,P_VALUE,swLogPrintf("PLMN , already another PLMN search ( %d ) is pending , need to abort it ");
580608,1189306880,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_4,P_VALUE,swLogPrintf("PLMN , PLMN select type : %d and manual PLMN : ( 0x%x , 0x%x ) , as the same as the value in NVM ");
580608,1189308672,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_5,P_VALUE,swLogPrintf("PLMN , current selected PLMN just the same as the manual request : ( 0x%x , 0x%x ) ");
580608,1189310464,0,0,PS1,NAS_PLMN,CePlmnManualPlmnSelectReq_6,P_VALUE,swLogPrintf("PLMN , start manual PLMN selection , but current AS is not in IDLE state ( %d ) , force to go IDLE firstly ");
580608,1189312768,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is ongoing , type : %d , status : %d , just pending it ");
580608,1189314560,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_2,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is also pending , type : %d , just discard it ");
580608,1189316864,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_3,P_VALUE,swLogPrintf("PLMN , rplmn : 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189318912,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnSearchReq_4,P_WARNING,swLogPrintf("PLMN , selectedPlmn : 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189320704,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_1,P_VALUE,swLogPrintf("PLMN , default PLMN search req , but another PLMN searching ( %d ) is ongoing , maybe need to pending ");
580608,1189324799,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_2,P_WARNING,swLogPrintf("PLMN , Ignore current default PLMN search req ");
580608,1189326847,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_warning_2,P_WARNING,swLogPrintf("PLMN , Auto PLMN search is ongoing , ignore current default PLMN search req ");
580608,1189327104,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_3,P_WARNING,swLogPrintf("PLMN , default PLMN request , curent ongoing PLMN : %d , but still a PLMN searching ( %d ) in pending , replace it! ");
580608,1189330943,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_4,P_VALUE,swLogPrintf("PLMN , manual PLMN selection ");
580608,1189332991,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_5,P_VALUE,swLogPrintf("PLMN , manual then auto PLMN selection ");
580608,1189335039,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_6,P_VALUE,swLogPrintf("PLMN , first power on , attemptHplmn is set , try HPLMN ");
580608,1189337087,0,0,PS1,NAS_PLMN,CePlmnDefaultPlmnSearchReq_7,P_VALUE,swLogPrintf("PLMN , no valid RPLMN or roaming is not allowed , try HPLMN ");
580608,1189337600,0,0,PS1,NAS_PLMN,CePlmnCehckPlmnSuitable_1,P_VALUE,swLogPrintf("PLMN , plmn ( 0x%x , 0x%x ) , current TAC : %d is forbidden ");
580608,1189339136,0,0,PS1,NAS_PLMN,CePlmnCehckPlmnSuitable_2,P_VALUE,swLogPrintf("PLMN , Cell ( phyCellId : %d ) is barred ");
580608,1189343231,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityEhplmn_1,P_VALUE,swLogPrintf("try to choose highest priority EHPLMN ");
580608,1189343488,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityEhplmn_2,P_VALUE,swLogPrintf("PLMN , choose highest prirority EHPLMN ( 0x%x , 0x%x ) ");
580608,1189347327,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityUplmn_1,P_VALUE,swLogPrintf("try to choose highest priority UPLMN ");
580608,1189347584,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityUplmn_2,P_VALUE,swLogPrintf("PLMN , choose highest prirority UPLMN ( 0x%x , 0x%x ) ");
580608,1189351423,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityOplmn_1,P_VALUE,swLogPrintf("try to choose highest priority OPLMN ");
580608,1189351680,0,0,PS1,NAS_PLMN,CeplmnChooseHighestPriorityOplmn_2,P_VALUE,swLogPrintf("PLMN , choose highest priority OPLMN ( 0x%x , 0x%x ) ");
580608,1189355519,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_1,P_VALUE,swLogPrintf("PLMN , AUTO PLMN selection , try to choose a suitable PLMN ");
580608,1189355776,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_2,P_VALUE,swLogPrintf("PLMN , Roaming disable mode , Plmn ( 0x%x , 0x%x ) is not the HPLMN / EHPLMN ");
580608,1189359615,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_3,P_VALUE,swLogPrintf("PLMN , choose RPLMN / EPLMN ");
580608,1189361663,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_4,P_WARNING,swLogPrintf("suitablePlmnNum equal to SUPPORT_MAX_PLMN_NUM ");
580608,1189362176,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_5,P_VALUE,swLogPrintf("PLMN user reselection , highPlmnType %d , PLMN : ( 0x%x , 0x%x ) ");
580608,1189364224,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_6,P_VALUE,swLogPrintf("PLMN user reselection , curPlmnType %d , PLMN : ( 0x%x , 0x%x ) ");
580608,1189367807,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_7,P_VALUE,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM EHPLMN are found ");
580608,1189369855,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_8,P_VALUE,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM UPLMN are found ");
580608,1189371903,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_9,P_VALUE,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM OPLMN are found ");
580608,1189372160,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_10,P_VALUE,swLogPrintf("PLMN , MANUAL PLMN selection , try to choose PLMN : ( 0x%x , 0x%x ) ");
580608,1189374208,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_11,P_VALUE,swLogPrintf("PLMN , Manual PLMN ( 0x%x , 0x%x ) found ");
580608,1189378047,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_12,P_VALUE,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM EHPLMN are found ");
580608,1189378304,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_13,P_VALUE,swLogPrintf("PLMN , Manual select plmn not found , could choose HPLMN ( 0x%x , 0x%x ) ");
580608,1189382143,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_14,P_VALUE,swLogPrintf("PLMN , Manual select plmn not found , try to choose highest priority EHPLMN ");
580608,1189384191,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_15,P_VALUE,swLogPrintf("PLMN , period High priority PLMN selection , try to choose high priority PLMN ");
580608,1189384704,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_16,P_VALUE,swLogPrintf("PLMN , current VPLMN ( 0x%x , 0x%x ) type is : %d ");
580608,1189388287,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_17,P_WARNING,swLogPrintf("suitablePlmnNum equal to SUPPORT_MAX_PLMN_NUM ");
580608,1189390335,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_18,P_VALUE,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM EHPLMN are found ");
580608,1189392383,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_19,P_VALUE,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM UPLMN are found ");
580608,1189394431,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_20,P_VALUE,swLogPrintf("PLMN , more than UICC_PLMN_TRUNCATED_NUM OPLMN are found ");
580608,1189396479,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_21,P_VALUE,swLogPrintf("PLMN , Roaming disable mode , VPLMN is not allowed ");
580608,1189396992,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_22,P_VALUE,swLogPrintf("PLMN , choose PLMN ( 0x%x , 0x%x ) , and PLMN type : %d ");
580608,1189400575,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_23,P_VALUE,swLogPrintf("PLMN , user reselection , choose RPLMN ");
580608,1189402623,0,0,PS1,NAS_PLMN,CePlmnChooseSuitableFoundPlmn_24,P_VALUE,swLogPrintf("PLMN , no suitable PLMN could choose to use ");
580608,1189402624,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_1,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189404672,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_2,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189406720,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_3,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189408768,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_4,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189410816,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_5,P_VALUE,swLogPrintf("PLMN , band : %d , RF not support ");
580608,1189414911,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_6,P_VALUE,swLogPrintf("PLMN , invalid band setting ");
580608,1189416959,0,0,PS1,NAS_PLMN,CePlmnSetBandInfoReq_7,P_VALUE,swLogPrintf("PLMN , set band , clear celllock ");
580608,1189416960,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqInfoReq_1,P_WARNING,swLogPrintf("PLMN , invalid ARFCN num : %d in CemmPlmnSetFreqInfo ");
580608,1189421055,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqInfoReq_2,P_WARNING,swLogPrintf("PLMN , no valid FREQ setting in CemmPlmnSetFreqInfo ");
580608,1189421056,0,0,PS1,NAS_PLMN,CePlmnSetCellLockInfoReq_1,P_WARNING,swLogPrintf("Cell Lock , ARFCN num is not equal to 1 : %d in CePlmnSetCellLockInfoReq ");
580608,1189423104,0,0,PS1,NAS_PLMN,CePlmnSetCellLockInfoReq_2,P_WARNING,swLogPrintf("Cell Lock fail , ARFCN not belong to the right band , and phyCellId is not valid : %d ");
580608,1189427199,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_1,P_VALUE,swLogPrintf("PLMN , RPLMN is HPLMN / EHPLMN , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189429247,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_2,P_VALUE,swLogPrintf("PLMN , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , need to stop it ");
580608,1189431295,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_3,P_VALUE,swLogPrintf("PLMN , period high priority PLMN search is ongoing , don ' t need to start period T timer ");
580608,1189433343,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_4,P_VALUE,swLogPrintf("PLMN , period high priority PLMN search is pending , don ' t need to start period T timer ");
580608,1189435391,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_EnableHPPlmnSearch,P_VALUE,swLogPrintf("PLMN , period high priority PLMN search is disabled by user , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189435904,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_UserSetValid,P_VALUE,swLogPrintf("PLMN , SearchCount : %d , try_count : %d , timer_val : %d ");
580608,1189439487,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_stopHPPLMNSearchAttempts,P_VALUE,swLogPrintf("PLMN , No higher priority PLMN search attempts , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189441535,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_NoHPPLMNSearchAttempts,P_VALUE,swLogPrintf("PLMN , No higher priority PLMN search attempts , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189443583,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_5,P_VALUE,swLogPrintf("PLMN , plmnSelectType is not CEMM_AUTO_PLMN_REG , don ' t need to start PERIOD_HIGH_PLMN_SEARCH_TIMER ");
580608,1189445631,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_6,P_VALUE,swLogPrintf("PLMN , PERIOD_HIGH_PLMN_SEARCH_TIMER is still running ");
580608,1189445888,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_7,P_VALUE,swLogPrintf("PLMN , UE registered on RPLMN ( 0x%x , 0x%x ) , but OOS timer is still running , abnormal , stop it ");
580608,1189447680,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_8,P_VALUE,swLogPrintf("PLMN , try to start PERIOD_HIGH_PLMN_SEARCH_TIMER , sec : %d ");
580608,1189449728,0,0,PS1,NAS_PLMN,CePlmnCheckHighPlmnSearchTimer_9,P_VALUE,swLogPrintf("PLMN , try to start PERIOD_HIGH_PLMN_SEARCH_TIMER , mins : %d ");
580608,1189453823,0,0,PS1,NAS_PLMN,CePlmnOosSearchTimerExpiry_1,P_VALUE,swLogPrintf("PLMN , OOS PLMN timer expiry , but timer state is not started , maybe this timer already stop before ");
580608,1189455871,0,0,PS1,NAS_PLMN,CePlmnOosSearchTimerExpiry_2,P_VALUE,swLogPrintf("PLMN , OOS PLMN timer expiry , but PERIOD_HIGH_PLMN_SEARCH_TIMER is running... ");
580608,1189457919,0,0,PS1,NAS_PLMN,CePlmnOosSearchTimerExpiry_3,P_VALUE,swLogPrintf("PLMN , OOS PLMN timer expiry , start PLMN search again ");
580608,1189459967,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnTimerExpiry_1,P_WARNING,swLogPrintf("PLMN , period PLMN timer expiry , but timer state is not started , maybe this timer already stopped before ");
580608,1189462015,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnTimerExpiry_2,P_VALUE,swLogPrintf("PLMN , period PLMN timer expiry , but OOS PLMN search timer is running... ");
580608,1189464063,0,0,PS1,NAS_PLMN,CePlmnPeriodHighPlmnTimerExpiry_3,P_VALUE,swLogPrintf("PLMN , period PLMN timer expiry , start high priority PLMN search ");
580608,1189464064,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_1,P_VALUE,swLogPrintf("PLMN , can ' t process OOS PLMN selection , as plmnSelectState is not DEACTIVATED or OOS SLEEP state : %d ");
580608,1189466112,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_2,P_VALUE,swLogPrintf("PLMN , current plmn is in searing procedure with search type %d , no longer to process this oos plmn select req ");
580608,1189470207,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_3,P_VALUE,swLogPrintf("PLMN , PLMN OOS timer is running , need to stop it ");
580608,1189472255,0,0,PS1,NAS_PLMN,CePlmnOosPlmnSelectReq_4,P_VALUE,swLogPrintf("PLMN , no valid RPLMN , try HPLMN ");
580608,1189472512,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_1,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is ongoing , type : %d , status : %d , just pending it ");
580608,1189474304,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_2,P_VALUE,swLogPrintf("PLMN , while trigger period high plmn search , another plmn is also pending , type : %d , just discard it ");
580608,1189476608,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_3,P_VALUE,swLogPrintf("PLMN , rplmn : 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189478656,0,0,PS1,NAS_PLMN,CePlmnPostponedPeriodHighPlmnSearch_4,P_WARNING,swLogPrintf("PLMN , selectedPlmn : 0x%x , 0x%x , check whether need to start period T timer ");
580608,1189482495,0,0,PS1,NAS_PLMN,CePlmnCheckHplmnTimerWakeUpFromPsm_1,P_ERROR,swLogPrintf("PLMN , PERIOD_HIGH_PLMN_SEARCH_TIMER should not running , Pls Check it! ");
580608,1189482752,0,0,PS1,NAS_PLMN,CePlmnCheckHplmnTimerWakeUpFromPsm_2,P_VALUE,swLogPrintf("PLMN , currSC is %d , hplmnTimerExpiredSC is %d , PERIOD_HIGH_PLMN_SEARCH_TIMER had expired under psm , postponed this period high plmn search until the end of business! ");
580608,1189485056,0,0,PS1,NAS_PLMN,CePlmnCheckHplmnTimerWakeUpFromPsm_3,P_VALUE,swLogPrintf("PLMN , currSC is %d , hplmnTimerExpiredSC is %d , Wakeup from Psm , Re-Start PERIOD_HIGH_PLMN_SEARCH_TIMER with remain seconds : %d ");
580608,1189486592,0,0,PS1,NAS_PLMN,CePlmnSetPrefFreqUpdateUtc_1,P_VALUE,swLogPrintf("PLMN , preFreqUpdateUtc is set to %d ");
580608,1189490687,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_1,P_WARNING,swLogPrintf("PLMN SIM card changes , IMSI is not same as pervious in NVM ");
580608,1189492735,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_2,P_WARNING,swLogPrintf("PLMN , SIM card changes , RPLMN not valid in USIM , delete NVM stored RPLMN ");
580608,1189493504,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_cmp_1,P_WARNING,swLogPrintf("PLMN , HPLMN in SIM : ( 0x%x , 0x%x ) , not the same as previous : ( 0x%x , 0x%x ) , need to clear old prefer FREQ ");
580608,1189496831,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_3,P_WARNING,swLogPrintf("PLMN , HPPLMN period in SIM < minPeriodicSearchTimer ");
580608,1189496832,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_4,P_WARNING,swLogPrintf("More EHPMN : %d in UICC ; need read more ");
580608,1189499136,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_5,P_WARNING,swLogPrintf("PLMN , no EPS Location info in UICC , get RPLMN ( 0x%x , 0x%x ) from NVM ");
580608,1189500928,0,0,PS1,NAS_PLMN,CePlmnSimReadyInd_6,P_WARNING,swLogPrintf("More FPLMN : %d in UICC , need read more ");
580608,1189503232,0,0,PS1,NAS_PLMN,CePlmnFillActReqInfo_1,P_VALUE,swLogPrintf("CePlmnFillActReqInfo : Plmn is ( 0x%x , 0x%x ) ");
580608,1189505280,0,0,PS1,NAS_PLMN,CePlmnFillActReqInfo_2,P_VALUE,swLogPrintf("CePlmnFillActReqInfo , cell lock : FREQ : %ld , phyCellId : %d ");
580608,1189507328,0,0,PS1,NAS_PLMN,CePlmnRegisteredInd_1,P_VALUE,swLogPrintf("PLMN , RPLMN ( 0x%x , 0x%x ) is not changed , just same as before ");
580608,1189511167,0,0,PS1,NAS_PLMN,CePlmnDeregisteredInd_1,P_VALUE,swLogPrintf("PLMN , clear EPLMN ");
580608,1189513215,0,0,PS1,NAS_PLMN,CePlmnDeregisteredInd_2,P_VALUE,swLogPrintf("PLMN , PLMN select type is Manual then Auto , but manual PLMN selection failed , try to AUTO mode ");
580608,1189513472,0,0,PS1,NAS_PLMN,CePlmnRemoveBlockPlmnBlockTac_1,P_VALUE,swLogPrintf("PLMN , EMM notify to remove blocked PLMN ( 0x%x , 0x%x ) ");
580608,1189515520,0,0,PS1,NAS_PLMN,CePlmnRemoveBlockPlmnBlockTac_2,P_VALUE,swLogPrintf("PLMN , EMM notify to remove blocked PLMN ( 0x%x , 0x%x ) ");
580608,1189517824,0,0,PS1,NAS_PLMN,CePlmnRemoveBlockPlmnBlockTac_3,P_WARNING,swLogPrintf("PLMN , blockReason %d , t3402BlockNum %d , blockPlmnPresent %d! ");
580608,1189521407,0,0,PS1,NAS_PLMN,CePlmnDelLastPreferFreq_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t del the FREQ list ");
580608,1189523455,0,0,PS1,NAS_PLMN,CePlmnDelPreferFreq_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t del the FREQ list ");
580608,1189523456,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqList_1,P_VALUE,swLogPrintf("CE PLMN , cell locked , can ' t set prefer FREQ list : %d ");
580608,1189527551,0,0,PS1,NAS_PLMN,CePlmnSetPreferFreqList_2,P_VALUE,swLogPrintf("CE PLMN , FREQ is same , don ' t need update ");
580608,1189528064,0,0,PS1,NAS_PLMN,CePlmnSimReadDataCnf_1,P_VALUE,swLogPrintf("PLMN read : type %d of PLMN info from UICC , startIndex : %d , total num : %d ");
580608,1189529856,0,0,PS1,NAS_PLMN,CePlmnSimReadDataCnf_2,P_VALUE,swLogPrintf("PLMN , RPLMN ( 0x%x , 0x%x ) is in the FPLMN list stored in UICC , remove it ");
580608,1189532160,0,0,PS1,NAS_PLMN,CePlmnSimRefreshSorInd_1,P_WARNING,swLogPrintf("CE PLMN , totalNum ( %d ) + pData->numOfPlmn ( %d ) > CE_PLMN_MAX_UICC_PLMN_NUM ( 32 ) , only can update %d plmns ");
580608,1189534208,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_1,P_VALUE,swLogPrintf("PLMN , CEMM Request to do PLMN selection , type : %d manual Plmn : 0x%x , 0x%x ");
580608,1189537791,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_2,P_VALUE,swLogPrintf("PLMN , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , need to stop it ");
580608,1189537792,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_3,P_VALUE,swLogPrintf("PLMN , CEMM Request to do PLMN selection , type : %d ");
580608,1189541887,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_4,P_VALUE,swLogPrintf("PLMN , PLMN OOS timer is running , need to stop it ");
580608,1189543935,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_5,P_VALUE,swLogPrintf("PLMN , UE in manual PLMN reg state , initiate reg ( not the first time ) on FPLMN / FPLMN for GPRS , need to start PLMN OOS timer , and retry ");
580608,1189545983,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_6,P_VALUE,swLogPrintf("PLMN , period plmn T timer is running , need to stop it ");
580608,1189545984,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_7,P_VALUE,swLogPrintf("PLMN , start OOS PLMN timer : %d Seconds ");
580608,1189548032,0,0,PS1,NAS_PLMN,CePlmnProcSelectReqMsg_8,P_VALUE,swLogPrintf("CE PLMN , PLMN search level : %d , already tried once oos plmn search , for power consumption considerations , no longer plmn search! ");
580608,1189550080,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_1,P_VALUE,swLogPrintf("PLMN , Deact PLMN with cause : %d ");
580608,1189554175,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_2,P_VALUE,swLogPrintf("PLMN , DEACT , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , need to stop it ");
580608,1189556223,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_3,P_VALUE,swLogPrintf("PLMN , DEACT , OOS_PLMN_SEARCH_TIMER is running , need to stop it ");
580608,1189558271,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_Psm,P_WARNING,swLogPrintf("PLMN , Ready to enter PSM , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , stop it and when leave psm decide whether to re-Start! ");
580608,1189558784,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_4,P_WARNING,swLogPrintf("PLMN , PLMN search is ongoing when DEACT PLMN with cause : %d , type : %d , procStatus : %d ");
580608,1189560320,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_5,P_VALUE,swLogPrintf("PLMN , need to ABORT AS PLMN search , as DEACT by EMM with cause : %d ");
580608,1189562368,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_6,P_VALUE,swLogPrintf("PLMN , manual PLMN search , deact cause : %d , abort it and confirm with no PLMN ");
580608,1189564416,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_bcinfo_1,P_VALUE,swLogPrintf("PLMN , BCINFO manual PLMN search , deact cause : %d , abort it and confirm with no PLMN ");
580608,1189568511,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_8,P_WARNING,swLogPrintf("PLMN , PLMN search is ongoing , but EMM trigger to enter PSM , pending PSM deactivation ");
580608,1189568512,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_9,P_WARNING,swLogPrintf("PLMN , another PLMN search procedure ( %d ) is pending ");
580608,1189570560,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_10,P_VALUE,swLogPrintf("PLMN , manual PLMN search pending , deactCause : %d , abort it and confirm with no PLMN ");
580608,1189572608,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_bcinfo_2,P_VALUE,swLogPrintf("PLMN , BCINFO manual PLMN search pending , deactCause : %d , abort it and confirm with no PLMN ");
580608,1189576703,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_11,P_WARNING,swLogPrintf("PLMN , PLMN search is pending , but EMM trigger to enter PSM , pending PSM deactivation ");
580608,1189578751,0,0,PS1,NAS_PLMN,CePlmnProcDeactReqMsg_12,P_WARNING,swLogPrintf("PLMN , Ready to enter PSM , PERIOD_HIGH_PLMN_SEARCH_TIMER is running , stop it and check whether need to re-start when leave psm ");
580608,1189580799,0,0,PS1,NAS_PLMN,CePlmnProcIdleStateCnfMsg_1,P_VALUE,swLogPrintf("PLMN , Idle state is requested because of WiFi SCAN , do nothing here ");
580608,1189582847,0,0,PS1,NAS_PLMN,CePlmnProcIdleStateIndMsg_1,P_WARNING,swLogPrintf("PLMN , Idle state is requested because of WiFi SCAN , do nothing here ");
580608,1189583104,0,0,PS1,NAS_PLMN,CePlmnProcIdleStateIndMsg_2,P_VALUE,swLogPrintf("PLMN , current selected PLMN just the same as the ( E ) HPLMN : ( 0x%x , 0x%x ) ");
580608,1189584896,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_1,P_VALUE,swLogPrintf("PLMN , Current PLMN search type : %d , and already aborted , but still received CerrcPlmnSearchInd , ignore it ");
580608,1189587200,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_2,P_VALUE,swLogPrintf("PLMN , Roaming Disable mode , Plmn ( 0x%x , 0x%x ) in CerrcPlmnSearchInd is not HPLMN / EHPLMN ");
580608,1189589760,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_3,P_VALUE,swLogPrintf("PLMN , Plmn ( 0x%x , 0x%x ) in CerrcPlmnSearchInd is not the EPLMN as the request PLMN : 0x%x , 0x%x ");
580608,1189591808,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_4,P_VALUE,swLogPrintf("PLMN , Manual PLMN selection mode , Plmn ( 0x%x , 0x%x ) in CerrcPlmnSearchInd should not consider as the EPLMN of the request PLMN : ( 0x%x , 0x%x ) ");
580608,1189593088,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_5,P_VALUE,swLogPrintf("PLMN , TAC ( %d ) in CerrcPlmnSearchInd is forbidden ");
580608,1189595136,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_6,P_VALUE,swLogPrintf("PLMN , Cell ( phyCellId : %d ) in CerrcPlmnSearchInd is barred ");
580608,1189599231,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_7,P_VALUE,swLogPrintf("PLMN , PLMN select type is Manual then Auto , but can ' t find manual PLMN , try to AUTO mode ");
580608,1189601279,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_8,P_VALUE,swLogPrintf("PLMN , no suitable PLMN could be selected in CerrcPlmnSearchInd , try to find next plmn ");
580608,1189601536,0,0,PS1,NAS_PLMN,CePlmnProcCerrcPlmnSearchIndSig_9,P_VALUE,swLogPrintf("PLMN , Suitable PLMN ( 0x%x , 0x%x ) selected in CerrcPlmnSearchInd ");
580608,1189603328,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_1,P_VALUE,swLogPrintf("PLMN , PLMN search type : %d , aready aborted , but still received CerrcPlmnSearchCnf , need to wait for CerrcAbortPlmnSearchCnf ");
580608,1189605376,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_2,P_VALUE,swLogPrintf("PLMN , PLMN select type : %d , suitable PLMN already selected in CerrcPlmnSearchInd , PLMN search procedure done ");
580608,1189609471,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_3,P_VALUE,swLogPrintf("PLMN , PLMN select type is Manual then Auto , but can ' t find manual PLMN , try to AUTO mode ");
580608,1189609472,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_4,P_VALUE,swLogPrintf("PLMN , PLMN search type : %d , can ' t find any suitable PLMN... ");
580608,1189611776,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_5,P_VALUE,swLogPrintf("PLMN , Suitable PLMN ( 0x%x , 0x%x ) selected in CerrcPlmnSearchCnf ");
580608,1189615615,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcPlmnSearchCnfSig_6,P_VALUE,swLogPrintf("PLMN , pending Manual PLMN search proccedure , confirm to upper layer. ");
580608,1189615872,0,0,PS1,NAS_PLMN,CemmPlmnProcCerrcAbortPlmnSearchCnfSig_1,P_VALUE,swLogPrintf("PLMN , plmn search type : %d , procedure status : %d , abort confirm from CERRC ");
580608,1189619711,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_1,P_VALUE,swLogPrintf("PLMN , receive CemmAbortPlmnSearchReq from CCM , abort current manual PLMN search procedure ");
580608,1189621759,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_2,P_VALUE,swLogPrintf("PLMN , abort request already send to CERRC before , just wait for confirm ");
580608,1189623807,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_3,P_VALUE,swLogPrintf("PLMN , manual PLMN search is under pending , abort it ");
580608,1189625855,0,0,PS1,NAS_PLMN,CemmPlmnProcAbortPlmnSearchReqSig_4,P_VALUE,swLogPrintf("PLMN , BCINFO manual PLMN search is under pending , abort it ");
580608,1189625856,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_1,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189627904,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_2,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189629952,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_3,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189632000,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_4,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189634048,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_5,P_VALUE,swLogPrintf("PLMN , band : %d in NVM , RF is not supported ");
580608,1189638143,0,0,PS1,NAS_PLMN,CemmPlmnProcAsCapabilityIndSig_6,P_WARNING,swLogPrintf("PLMN , no valid band is left , just set current band to RF supported band ");
580608,1189638144,0,0,PS1,NAS_PLMN,CePlmnSearchGuardTimerExpiry_1,P_VALUE,swLogPrintf("PLMN , PLMN search guard timer expiry , status : %d ");
580608,1189640192,0,0,PS1,NAS_PLMN,CePlmnProcTimerExpiry_1,P_VALUE,swLogPrintf("CePlmnProcTimerExpiry : timerId is 0x%x ");
580608,1189644287,0,0,PS1,NAS_PLMN,CePlmnSetPlmnRegTypeParm_1,P_VALUE,swLogPrintf("Still Auto Plmn Reg , No Need To Write Nv ");
580608,1189644800,0,0,PS1,NAS_PLMN,CePlmnSetPlmnRegTypeParm_2,P_VALUE,swLogPrintf("Plmn Select Type is still %d , And the Plmn is still ( 0x%x , 0x%x ) , No Need To Write Nv ");
580608,1189647104,0,0,PS1,NAS_PLMN,CePlmnSetUserDefinedHighPriPlmnTimer_s_1,P_SIG,swLogPrintf("CE PLMN , set / cfg high priority timer , tryNumPresent : %d / tryNum : %d , tValPreset : %d / tValSec : %d ");
580608,1189648640,0,0,PS1,NAS_PLMN,CePlmnSetUserDefinedHighPriPlmnTimer_w_1,P_WARNING,swLogPrintf("CE PLMN , set / cfg high priority timer , tryNum : %d , invalid tValSec : 0x%lx > 0xFFFFF ");
580608,1189650688,0,0,PS1,NAS_PLMN,CePlmnSetUserDefinedHighPriPlmnTimer_w_2,P_WARNING,swLogPrintf("CE PLMN , set / cfg high priority timer , tryNumPresent : %d and tValPresent : %d , should set together ");
580608,1189652480,0,0,PS1,NAS_PLMN,CePlmnSetRoamModeFromNv_1,P_VALUE,swLogPrintf("CE PLMN , Power Up , enableRoam init from NV %d ");
580608,1189654784,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_1,P_VALUE,swLogPrintf("CE PLMN , set enableRoam from %d to %d ");
580608,1189658623,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_2,P_VALUE,swLogPrintf("CE PLMN , roaming mode is changed and take effect immediately ");
580608,1189660671,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_3,P_VALUE,swLogPrintf("CE PLMN , don ' t need to trigger PLMN selection in Manual mode ");
580608,1189662719,0,0,PS1,NAS_PLMN,CePlmnSetRoamMode_4,P_VALUE,swLogPrintf("CE PLMN , roaming mode will take effect after rebooting ");
580608,1189662720,0,0,PS1,NAS_PLMN,CePlmnSetSavePlmnSelModeFromNv_1,P_VALUE,swLogPrintf("CE PLMN , Power Up , savePlmnSelMode init from NV %d ");
580608,1189666815,0,0,PS1,NAS_PLMN,CePlmnSetSavePlmnSelModeFromNv_2,P_VALUE,swLogPrintf("CE PLMN , Power Up , reset PLMN select Mode to Auto ");
580608,1189667072,0,0,PS1,NAS_PLMN,CePlmnSetSavePlmnSelMode_1,P_VALUE,swLogPrintf("CE PLMN , set savePlmnSelMode from %d to %d ");
580608,1189669120,0,0,PS1,NAS_PLMN,CePlmnSetUpdateFreqCtrlFromNV_1,P_VALUE,swLogPrintf("CE PLMN , set updateFreqCtrl from %d to %d ");
580608,1189671168,0,0,PS1,NAS_PLMN,CePlmnSetUpdateFreqCtrl_1,P_VALUE,swLogPrintf("CE PLMN , set updateFreqCtrl from %d to %d ");
585728,1199575039,0,0,PS1,UICC,UiccCtrlCheckPinEnable_0,P_VALUE,swLogPrintf("universal PIN or PIN1 is enable ");
585728,1199575808,0,0,PS1,UICC,UiccCtrlVotePmuState_0,P_VALUE,swLogPrintf("bSimPowerSave %d , bSimSleep %d , usatCmdOngoing %d , bipSessionOpen %d , UiccCtrl Voted deep sleep not allowed ");
585728,1199577089,0,0,PS1,UICC,UiccTimerExpiryTrace_0,P_VALUE,swLogPrintf("%s expired ");
585728,1199581183,0,0,PS1,UICC,UiccCtrlHandleTimerExpiry_00,P_VALUE,swLogPrintf("nothing to do for init state ");
585728,1199583231,0,0,PS1,UICC,UiccCtrlHandleTimerExpiry_1,P_SIG,swLogPrintf("UICC presence detect timer expired , send STATUS command ");
585728,1199585279,0,0,PS1,UICC,UiccCtrlHandleTimerExpiry_2,P_VALUE,swLogPrintf("UICC presence detect not required as UICC was not active ");
585728,1199585536,0,0,PS1,UICC,UiccCtrlCheckTestCard_0,P_VALUE,swLogPrintf("UICC , MCC : 0x%lx , MNC : 0x%lx ");
585728,1199587584,0,0,PS1,UICC,UiccCtrlCheckTestCard_1,P_SIG,swLogPrintf("UICC , MCC : 0x%lx , MNC : 0x%lx , is a TEST SIM ");
585728,1199589632,0,0,PS1,UICC,UiccCtrlHandleUnexpectedSignal_0,P_VALUE,swLogPrintf("UiccCtrl , Handle unexpected signal 0x%x on state %d ");
585728,1199591424,0,0,PS1,UICC,UiccCtrlHandleUnexpectedSignal_1,P_WARNING,swLogPrintf("UiccCtrl , unexpected signal 0x%x will be destroyed without cnf ");
585728,1199593472,0,0,PS1,UICC,UiccCtrlNotifyCardRemoved_1,P_VALUE,swLogPrintf("UICC Card removed with cause : %d ");
585728,1199595520,0,0,PS1,UICC,UiccCtrlHandleCardInserted_1,P_ERROR,swLogPrintf("Select MF error , SW : %x , it ' s an invalid card! Terminate it... ");
585728,1199599615,0,0,PS1,UICC,UiccCtrlStart3GSession_0,P_ERROR,swLogPrintf("The IMSI is invalid , so the uicc intialization failed! ");
585728,1199601663,0,0,PS1,UICC,UiccCtrlStart3GSession_1,P_VALUE,swLogPrintf("The access control class is invalid ");
585728,1199601920,0,0,PS1,UICC,UiccCtrlStart3GSession_acl1,P_VALUE,swLogPrintf("CemmsimAppReadyInd bAclEnable : %d , aclRawDataLen %d ");
585728,1199605759,0,0,PS1,UICC,UiccCtrlStart3GSession_2,P_SIG,swLogPrintf("The Uicc initialized OK , send CemmSimAppReadyInd! The USIM is ready...... ");
585728,1199607807,0,0,PS1,UICC,UiccCtrlStart3GSession_3,P_ERROR,swLogPrintf("The uicc initialisation failed!! Cannot send SIM ready to CEMM! ");
585728,1199609855,0,0,PS1,UICC,HandleUiccCtrlInitState_0,P_VALUE,swLogPrintf("The USIM power on start.... ");
585728,1199611903,0,0,PS1,UICC,HandleUiccCtrlInitState_1,P_VALUE,swLogPrintf("The card is detected , start initialization... ");
585728,1199613951,0,0,PS1,UICC,HandleUiccCtrlInitState_2,P_ERROR,swLogPrintf("The USIM is not detected , please check the card plugged in well!! ");
585728,1199615999,0,0,PS1,UICC,HandleUiccCtrlInitState_3,P_ERROR,swLogPrintf("The USIM is removed! Please check if the usim card is plugged out! ");
585728,1199616000,0,0,PS1,UICC,HandleUiccCtrlInitState_timer,P_WARNING,swLogPrintf("UICC presence detect timer ( sigId : 0x%x ) triggers recovery the UICC after wakeup from HIB / sleep2 ");
585728,1199618304,0,0,PS1,UICC,HandleUiccCtrlInitState_4,P_VALUE,swLogPrintf("bUSimActive %d , leaveSleepMode %d ");
585728,1199620096,0,0,PS1,UICC,HandleUiccCtrlInitState_5,P_WARNING,swLogPrintf("Signal ( sigId : 0x%x ) triggers recovery the UICC after wakeup from HIB / sleep2... ");
585728,1199622400,0,0,PS1,UICC,HandleUiccCtrlAppActiveState_error,P_VALUE,swLogPrintf("UiccCtrl , stop recovery retry as error occurred %d times , or reqSignal 0x%x ");
585728,1199626239,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_0,P_SIG,swLogPrintf("Enter UICC Recovery procedure ");
585728,1199628287,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_1,P_VALUE,swLogPrintf("The initial communiation with card is estabilshed , start initialization for recovery... ");
585728,1199630335,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_110,P_VALUE,swLogPrintf("The Uicc resumed status ok... ");
585728,1199630592,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_verifyPin,P_ERROR,swLogPrintf("Uicc recovery with PIN verify failed , cmdStatus : %x , status words : %x! ");
585728,1199634431,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_2,P_ERROR,swLogPrintf("Select usim application failed!... ");
585728,1199636479,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_3,P_ERROR,swLogPrintf("The IMSI is invalid , so the uicc intialization failed! ");
585728,1199638527,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_get_iccid,P_WARNING,swLogPrintf("The ICCID is invalid , uicc intialization failed ");
585728,1199640575,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_4,P_VALUE,swLogPrintf("The uicc initialized OK... ");
585728,1199642623,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_5,P_ERROR,swLogPrintf("UICC card changed ");
585728,1199644671,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_6,P_SIG,swLogPrintf("UICC recovery done ");
585728,1199644928,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_7,P_WARNING,swLogPrintf("Select MF error , uiccCtrlData->cmdStatus : %d , SW : %x ");
585728,1199648767,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_8,P_WARNING,swLogPrintf("unexpected signal , destroy it ");
585728,1199650815,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_9,P_WARNING,swLogPrintf("UICC error occurred or card removed ");
585728,1199651072,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_10,P_WARNING,swLogPrintf("UICC recovery failed status : %d , recovery times : %d ");
585728,1199654911,0,0,PS1,UICC,HandleUiccCtrlRecoveryState_11,P_WARNING,swLogPrintf("UICC recovery failed , notify card removed ");
585728,1199656959,0,0,PS1,UICC,UiccCtrlRealSimEntry_0,P_VALUE,swLogPrintf("Enter real sim process ");
585728,1199657216,0,0,PS1,UICC,UiccCtrlStartTimer_debug,P_VALUE,swLogPrintf("timer : %d start , timerPeriod : %d ");
585728,1199659008,0,0,PS1,UICC,UiccCtrlStartTimer_1,P_VALUE,swLogPrintf("timer : %d is already started! ");
585728,1199661056,0,0,PS1,UICC,UiccCtrlStopTimer_debug,P_VALUE,swLogPrintf("timer : %d stop ");
585728,1199665151,0,0,PS1,UICC,UiccCtrlTaskEntry_0,P_VALUE,swLogPrintf("Enter UiccCtrl task , start init.... ");
585728,1199665408,0,0,PS1,UICC,CountUiccExecuteWriteCmd_0,P_VALUE,swLogPrintf("SIM write counter ( %d ) is not enable or pSwcList ( 0x%x ) is null , ignore it ");
585728,1199667200,0,0,PS1,UICC,ResetUiccCmdStatus_1,P_VALUE,swLogPrintf("Bad cmdStatus ( %d ) cannot be reset as normal , maybe should recovery uicc... ");
585728,1199669504,0,0,PS1,UICC,ParseUiccStatusWords_1,P_WARNING,swLogPrintf("Invalid status words : %x %x! ");
585728,1199671296,0,0,PS1,UICC,ParseUiccEFTotalFileSize_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199673344,0,0,PS1,UICC,ParseUiccEFTotalFileSize_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199675392,0,0,PS1,UICC,ParseUiccDfName_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199677440,0,0,PS1,UICC,ParseUiccDfName_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199679488,0,0,PS1,UICC,ParseUiccDirId_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199681536,0,0,PS1,UICC,ParseUiccDirId_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199683584,0,0,PS1,UICC,ParseUiccDirFileDescriptor_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199685632,0,0,PS1,UICC,ParseUiccDirFileDescriptor_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199687680,0,0,PS1,UICC,ParseUiccDirSecurityAttributes_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199689728,0,0,PS1,UICC,ParseUiccUsageQualifier_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199691776,0,0,PS1,UICC,ParseUiccUsageQualifier_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199693824,0,0,PS1,UICC,ParseUiccKeyReference_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199695872,0,0,PS1,UICC,ParseUiccKeyReference_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199697920,0,0,PS1,UICC,ParseUiccPinStatusTemplateDO_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199700480,0,0,PS1,UICC,UpdateUiccPinStatus_debug,P_VALUE,swLogPrintf("keyRef 0x%x , usePin %d , enabled %d ");
585728,1199702016,0,0,PS1,UICC,ParseUiccCharacteristics_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199704064,0,0,PS1,UICC,ParseUiccCharacteristics_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199706112,0,0,PS1,UICC,ParseEfFileDescriptor_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199708160,0,0,PS1,UICC,ParseEfFileDescriptor_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199710208,0,0,PS1,UICC,ParseEfFileId_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199712256,0,0,PS1,UICC,ParseEfFileId_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199714304,0,0,PS1,UICC,ParseUiccAppPowerConsumption_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199716352,0,0,PS1,UICC,ParseUiccAppPowerConsumption_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199718400,0,0,PS1,UICC,ParseUiccMinClockFrequency_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199720448,0,0,PS1,UICC,ParseUiccMinClockFrequency_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199722496,0,0,PS1,UICC,ParseUiccMemAvailable_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199724544,0,0,PS1,UICC,ParseUiccFileProprietaryInfo_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199726592,0,0,PS1,UICC,ParseFileLifeCycleStatus_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199728640,0,0,PS1,UICC,ParseFileLifeCycleStatus_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199730688,0,0,PS1,UICC,ParseEfCompactFormat_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199732736,0,0,PS1,UICC,ParseEfCompactFormat_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199734784,0,0,PS1,UICC,ParseUiccKeyRef_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199736832,0,0,PS1,UICC,ParseUiccKeyRef_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199738880,0,0,PS1,UICC,ParseUiccEfExpandedFormat_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199740928,0,0,PS1,UICC,ParseUiccRefToExpandedFormat_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199742976,0,0,PS1,UICC,ParseUiccFileSize_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199745024,0,0,PS1,UICC,ParseUiccFileSize_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199747072,0,0,PS1,UICC,ParseUiccTotalDirFileSize_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199749120,0,0,PS1,UICC,ParseUiccSfi_1,P_WARNING,swLogPrintf("unexpected tag : %x ");
585728,1199751168,0,0,PS1,UICC,ParseUiccSfi_2,P_WARNING,swLogPrintf("wrong length : %x ");
585728,1199753472,0,0,PS1,UICC,ParseUiccEfFcp_0,P_VALUE,swLogPrintf("abnormal fcp length 0x%x , rspdata length 0x%x ");
585728,1199755264,0,0,PS1,UICC,ParseUiccEfFcp_1,P_VALUE,swLogPrintf("ignore unknown EF fcp tag 0x%x ");
585728,1199759359,0,0,PS1,UICC,ParseUiccSelectEfResponse_1,P_VALUE,swLogPrintf("parse EF FCP error ");
585728,1199759360,0,0,PS1,UICC,ParseUiccDirFcp_1,P_VALUE,swLogPrintf("ignore unknown ADF / DF fcp tag 0x%x ");
585728,1199761664,0,0,PS1,UICC,ParseUiccSelectDirResponse_0,P_VALUE,swLogPrintf("saved currentlySelectedDir : %x , decode fileOperaData.currentDir : %x ");
585728,1199763456,0,0,PS1,UICC,ExecuteUiccSelectCommand_1,P_ERROR,swLogPrintf("Unsupport select menthod : 0x%x ");
585728,1199765504,0,0,PS1,UICC,ExecuteUiccSelectCommand_2,P_VALUE,swLogPrintf("Abnormal cmdstatus : %d ");
585728,1199767552,0,0,PS1,UICC,ExecuteUiccStatusCommand_1,P_VALUE,swLogPrintf("Abnormal cmdstatus : %d ");
585728,1199769600,0,0,PS1,UICC,ExecuteUiccReadBinaryCommand_1,P_WARNING,swLogPrintf("EF %x met file size as 0!!! ");
585728,1199773695,0,0,PS1,UICC,ExecuteUiccReadBinaryCommand_0,P_WARNING,swLogPrintf("UICC return normal ending but no valid data ");
585728,1199774208,0,0,PS1,UICC,ExecuteUiccReadBinaryCommand_2,P_VALUE,swLogPrintf("Abnormal SW : %x when read EF : %x , cmd status change : %d ");
585728,1199776000,0,0,PS1,UICC,ExecuteUiccReadBinaryCommand_3,P_VALUE,swLogPrintf("Abnormal EF Id : %x or cmdstatus : %d ");
585728,1199777792,0,0,PS1,UICC,ExecuteUiccUpdateBinaryCommand_0,P_ERROR,swLogPrintf("EF %x met file size as 0!!! ");
585728,1199779840,0,0,PS1,UICC,ExecuteUiccUpdateBinaryCommand_1,P_WARNING,swLogPrintf("Abnormal SW : %x is returned when UPDATE BINARY CMD execute ");
585728,1199782144,0,0,PS1,UICC,ExecuteUiccUpdateBinaryCommand_2,P_VALUE,swLogPrintf("Abnormal EF Id : %x or cmdstatus : %d ");
585728,1199783936,0,0,PS1,UICC,ExecuteUiccReadRecordCommand_0,P_ERROR,swLogPrintf("EF %x met file record length as 0 ");
585728,1199788031,0,0,PS1,UICC,ExecuteUiccReadRecordCommand_00,P_WARNING,swLogPrintf("UICC return normal ending but no valid data ");
585728,1199788032,0,0,PS1,UICC,ExecuteUiccReadRecordCommand_1,P_WARNING,swLogPrintf("Abnormal SW : %x is returned when READ RECORD CMD execute ");
585728,1199790336,0,0,PS1,UICC,ExecuteUiccReadRecordCommand_2,P_VALUE,swLogPrintf("Abnormal EF Id : %x or cmdstatus : %d ");
585728,1199792128,0,0,PS1,UICC,ExecuteUiccUpdateRecordCommand_1,P_WARNING,swLogPrintf("Abnormal SW : %x is returned when UPDATE RECORD CMD execute ");
585728,1199794432,0,0,PS1,UICC,ExecuteUiccUpdateRecordCommand_2,P_VALUE,swLogPrintf("Abnormal EF Id : %x or cmdstatus : %d ");
585728,1199796224,0,0,PS1,UICC,ExecuteUiccSearchRecordCommand_0,P_ERROR,swLogPrintf("EF %x met file record length as 0 ");
585728,1199800319,0,0,PS1,UICC,ExecuteUiccSearchRecordCommand_00,P_WARNING,swLogPrintf("UICC return normal ending but no valid data ");
585728,1199800320,0,0,PS1,UICC,ExecuteUiccSearchRecordCommand_1,P_VALUE,swLogPrintf("Abnormal statusWords : %x is returned ");
585728,1199802624,0,0,PS1,UICC,ExecuteUiccSearchRecordCommand_2,P_VALUE,swLogPrintf("Abnormal EF Id : %x or cmdstatus : %d ");
585728,1199804672,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_0,P_VALUE,swLogPrintf("Current directory %x is not USIM ADF , adfUsimId %x ");
585728,1199808511,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_1,P_WARNING,swLogPrintf("SYNC failure!!! ");
585728,1199810559,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_2,P_WARNING,swLogPrintf("Unknown response data!! ");
585728,1199810560,0,0,PS1,UICC,ExecuteUiccAuthenticateCommand_3,P_WARNING,swLogPrintf("Abnormal SW : %x returned ");
585728,1199812608,0,0,PS1,UICC,ExecuteSuspendUiccCommand_1,P_WARNING,swLogPrintf("Abnormal SW : %x is returned. ");
585728,1199814656,0,0,PS1,UICC,ExecuteUiccManageChannelCommand_1,P_WARNING,swLogPrintf("Abnormal SW : %x is returned. ");
585728,1199816704,0,0,PS1,UICC,ExecuteUiccGenAccessCommand_1,P_VALUE,swLogPrintf("Abnormal cmdStatus %d ");
585728,1199819008,0,0,PS1,UICC,ExecuteUiccGenLogicalChAccessCommand_1,P_VALUE,swLogPrintf("Abnormal cmdStatus : %x , SW : %x ");
585728,1199820800,0,0,PS1,UICC,ExecuteUiccTerminalProfileCommand_1,P_WARNING,swLogPrintf("Abnormal SW : %x is returned ");
585728,1199822848,0,0,PS1,UICC,ExecuteUiccFetchCommand_1,P_WARNING,swLogPrintf("Abnormal SW : %x is returned. ");
585728,1199826943,0,0,PS1,UICC,ReceiveUiccDrvSignal_1,P_WARNING,swLogPrintf("Uicc clock stop timer has already been stopped! ");
585728,1199828991,0,0,PS1,UICC,ReceiveUiccDrvSignal_2,P_ERROR,swLogPrintf("Uicc polling and presence detect timer has already been stopped! ");
585728,1199831039,0,0,PS1,UICC,ReceiveUiccDrvSignal_3,P_ERROR,swLogPrintf("Uicc wait response timer has already been stopped! ");
585728,1199833087,0,0,PS1,UICC,ReceiveUiccDrvSignal_4,P_ERROR,swLogPrintf("Uicc waitting response timer expired , try recovery ");
585728,1199833088,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_1,P_WARNING,swLogPrintf("Uiccctrl cmdStatus : %x , set uicc recovery flag ");
585728,1199837183,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_2,P_WARNING,swLogPrintf("Destory CARD_INSERTED_IND for reset frequency ");
585728,1199837184,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_3,P_WARNING,swLogPrintf("unexpected signal 0x%x recvd here ");
585728,1199841279,0,0,PS1,UICC,TransceiveUiccCtrlDrvCmdRsp_4,P_VALUE,swLogPrintf("Change uicc state to init as unexpected card removed Ind recved ");
585728,1199841280,0,0,PS1,UICC,UiccCtrlClearUiccDrvSignal_1,P_VALUE,swLogPrintf("destroy drv signal %x ");
585728,1199845375,0,0,PS1,UICC,DecodeDialNumberParams_1,P_VALUE,swLogPrintf("All data is unused bytes FF , no valid dial number ");
585728,1199847423,0,0,PS1,UICC,DecodeDialNumberParams_2,P_VALUE,swLogPrintf("All alphaId is unused bytes FF ");
585728,1199849471,0,0,PS1,UICC,DecodeDialNumberParams_3,P_VALUE,swLogPrintf("All dialling number is unused bytes FF ");
585728,1199851519,0,0,PS1,UICC,DecodeEmergencyNumParams_1,P_INFO,swLogPrintf("Emergency call code is invald as unused bytes FF ");
585728,1199853567,0,0,PS1,UICC,DecodeEmergencyNumParams_2,P_INFO,swLogPrintf("All alphaId is unused bytes FF ");
585728,1199853568,0,0,PS1,UICC,ReadUiccMaxPowerConsumption_1,P_VALUE,swLogPrintf("Uicc suspension procedure supported flag : %d ");
585728,1199857663,0,0,PS1,UICC,ReadEpsNscInfo_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199857664,0,0,PS1,UICC,ReadEpsNscInfo_2,P_VALUE,swLogPrintf("Reset command status when read EpsNscInfo cmdstatus : %d ");
585728,1199861759,0,0,PS1,UICC,ReadLoci_0,P_WARNING,swLogPrintf("MCC / MNC check failed as not digit ");
585728,1199861760,0,0,PS1,UICC,ReadLoci_1,P_VALUE,swLogPrintf("Reset command status : %d as ok. ");
585728,1199865855,0,0,PS1,UICC,ReadEpsLoci_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199867903,0,0,PS1,UICC,ReadEpsLoci_check_guti,P_WARNING,swLogPrintf("GUTI MCC / MNC check failed as not digit ");
585728,1199869951,0,0,PS1,UICC,ReadEpsLoci_check_TAI,P_WARNING,swLogPrintf("GUTI MCC / MNC check failed as not digit ");
585728,1199869952,0,0,PS1,UICC,ReadEpsLoci_2,P_VALUE,swLogPrintf("Reset command status : %d as ok. ");
585728,1199872256,0,0,PS1,UICC,ReadAccessCtrlInfo_1,P_VALUE,swLogPrintf("Read EF_ACC with SW : 0x%x cmdStatus : %d ");
585728,1199874048,0,0,PS1,UICC,ReadAccessCtrlInfo_2,P_WARNING,swLogPrintf("cmdStatus : %d incorrect can not Read EF_ACC ");
585728,1199876096,0,0,PS1,UICC,ReadLrPlmnsi_1,P_VALUE,swLogPrintf("Reset command status : %d to ok ");
585728,1199878144,0,0,PS1,UICC,ReadHpplmnSearchPeriod_1,P_VALUE,swLogPrintf("Reset command status : %d to ok ");
585728,1199880960,0,0,PS1,UICC,ReadPlmnData_3,P_VALUE,swLogPrintf("UICC READ DATA status : %d , totalEntries : %d , numValidEntries : %d , startFieldNum : %d ");
585728,1199882240,0,0,PS1,UICC,ReadPlmnData_1,P_ERROR,swLogPrintf("Service table for ( PlmnFileId : %x ) is not available ");
585728,1199884288,0,0,PS1,UICC,ReadNasConfigParams_0,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199886336,0,0,PS1,UICC,ReadNasConfigParams_1,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199888384,0,0,PS1,UICC,ReadNasConfigParams_2,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199890432,0,0,PS1,UICC,ReadNasConfigParams_3,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199892480,0,0,PS1,UICC,ReadNasConfigParams_4,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199894528,0,0,PS1,UICC,ReadNasConfigParams_5,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199896576,0,0,PS1,UICC,ReadNasConfigParams_6,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199898624,0,0,PS1,UICC,ReadNasConfigParams_7,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199900672,0,0,PS1,UICC,ReadNasConfigParams_8,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199902720,0,0,PS1,UICC,ReadNasConfigParams_9,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199904768,0,0,PS1,UICC,ReadNasConfigParams_10,P_VALUE,swLogPrintf("abnormal tlvLength %d ");
585728,1199906816,0,0,PS1,UICC,ReadNasConfigParams_11,P_VALUE,swLogPrintf("Reset command status : %d to ok ");
585728,1199908864,0,0,PS1,UICC,ReadKeysPs_1,P_WARNING,swLogPrintf("Read EFkeyPS failed , cmdstatus : %d , ignore it.. , ");
585728,1199912959,0,0,PS1,UICC,ReadMsisdnReq_1,P_WARNING,swLogPrintf("USIM service table of EFmsisdn is not available ");
585728,1199913216,0,0,PS1,UICC,ReadMsisdnReq_2,P_WARNING,swLogPrintf("Record error , read record number : %d , all file records : %d ");
585728,1199915264,0,0,PS1,UICC,ReadEmergencyCallNumReq_1,P_WARNING,swLogPrintf("Record error , read record number : %d , all file records : %d ");
585728,1199917056,0,0,PS1,UICC,UpdateUserPlmnActReq_1,P_WARNING,swLogPrintf("No free location , offset %d file size ");
585728,1199921151,0,0,PS1,UICC,UpdateUserPlmnActReq_2,P_WARNING,swLogPrintf("EFplmnwAcT is not available in UST ");
585728,1199923199,0,0,PS1,UICC,UpdateEpsLociReq_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199925247,0,0,PS1,UICC,UpdateEpsNscReq_1,P_WARNING,swLogPrintf("Usim service num_85 ( EMM Info ) is not available ");
585728,1199927295,0,0,PS1,UICC,UiccCtrlOpenISIMApplication_0,P_VALUE,swLogPrintf("ISIM is not supported ");
585728,1199927296,0,0,PS1,UICC,UiccCtrlOpenISIMApplication_1,P_VALUE,swLogPrintf("ISIM app has already been active on logical channel %d ");
585728,1199929344,0,0,PS1,UICC,UiccCtrlOpenISIMApplication_2,P_INFO,swLogPrintf("unsupport logical channel number %d , current only support 1-3 ");
585728,1199933439,0,0,PS1,UICC,UiccCtrlOpenISIMApplication_3,P_INFO,swLogPrintf("open logical channel for ISIM failed ");
585728,1199935487,0,0,PS1,UICC,UiccCtrlOpenISIMApplication_4,P_INFO,swLogPrintf("open logical channel for ISIM succesfully ");
585728,1199935488,0,0,PS1,UICC,UiccCtrlHandleMmAuthReq_1,P_ERROR,swLogPrintf("Authentication error , SW : %x , will enter uicc recovery procedure! ");
585728,1199937792,0,0,PS1,UICC,UiccCtrlHandleCcmImsAccessReq_1,P_VALUE,swLogPrintf("select ISIM EF %x response abnormal cmdStatus %d ");
585728,1199939840,0,0,PS1,UICC,UiccCtrlHandleCcmImsAccessReq_2,P_VALUE,swLogPrintf("access ISIM EF %x response abnormal cmdStatus %d ");
585728,1199943679,0,0,PS1,UICC,UiccCtrlHandleCcmImsAccessReq_3,P_VALUE,swLogPrintf("open ISIM app failed ");
585728,1199943936,0,0,PS1,UICC,UiccCtrlHandleCcmImsAccessReq_4,P_INFO,swLogPrintf("return data invalid , rspApduLen : %d , rspApdu : %x ");
585728,1199946496,0,0,PS1,UICC,UsatGetCurrentTimerValue_0,P_VALUE,swLogPrintf("timerId %d currTicksCount %d usatStartTimerTicks %d uiccCtrlData timerPeriod %d ");
585728,1199947776,0,0,PS1,UICC,UsatGetCurrentTimerValue_1,P_VALUE,swLogPrintf("timerId %d not start ");
585728,1199949824,0,0,PS1,UICC,UsatDeactiveTimer_1,P_VALUE,swLogPrintf("timerId %d not start ");
585728,1199953919,0,0,PS1,UICC,UsatGetImeiSv_1,P_WARNING,swLogPrintf("Read IMEI failed , use default IMEI ");
585728,1199954176,0,0,PS1,UICC,UsatDecCommandDetails_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199956224,0,0,PS1,UICC,UsatDecDeviceId_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199958272,0,0,PS1,UICC,UsatDecFileList_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199960320,0,0,PS1,UICC,UsatDecAID_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199962368,0,0,PS1,UICC,UsatDecAlphaId_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199964416,0,0,PS1,UICC,UsatDecIconId_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199966464,0,0,PS1,UICC,UsatDecTextAttribute_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199968512,0,0,PS1,UICC,UsatDecFrameId_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199970560,0,0,PS1,UICC,UsatDecPlmnwActList_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199972608,0,0,PS1,UICC,UsatDecRefreshEnforcePolicy_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199974656,0,0,PS1,UICC,UsatDecDuration_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199976704,0,0,PS1,UICC,UsatDecEventList_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199978752,0,0,PS1,UICC,UsatDecTimerId_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199980800,0,0,PS1,UICC,UsatDecTimerValue_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199982848,0,0,PS1,UICC,UsatDecSmsAddress_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199984896,0,0,PS1,UICC,UsatDecBearDescription_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199986688,0,0,PS1,UICC,UsatDecBearDescription_0,P_ERROR,swLogPrintf("Unsupport bearerType %x ");
585728,1199988992,0,0,PS1,UICC,UsatDecBufferSize_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199991040,0,0,PS1,UICC,UsatDecNetworkAccessName_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199993088,0,0,PS1,UICC,UsatDecOtherAddress_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199995136,0,0,PS1,UICC,UsatDecTextString_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199997184,0,0,PS1,UICC,UsatDecTransportLevel_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1199999232,0,0,PS1,UICC,UsatDecChannelDataLength_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1200001280,0,0,PS1,UICC,UsatDecChannelData_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1200003328,0,0,PS1,UICC,UsatDecSmsTpdu_00,P_VALUE,swLogPrintf("unexpected tag %x , decOffset %d ");
585728,1200007167,0,0,PS1,UICC,UsatEncCommandResult_0,P_ERROR,swLogPrintf("additInfoData is PNULL while additInfoLen is not 0! Ignore it! ");
585728,1200007680,0,0,PS1,UICC,UsatEncDateTimeZone_0,P_VALUE,swLogPrintf("utcTimePtr->UTCtimer1 , %d / %d / %d ");
585728,1200009984,0,0,PS1,UICC,UsatEncDateTimeZone_1,P_VALUE,swLogPrintf("utcTimePtr->UTCtimer2 , %d : %d : %d+%d ");
585728,1200011264,0,0,PS1,UICC,UsatEncImeiSv_0,P_VALUE,swLogPrintf("unknown Id type %d ");
585728,1200013312,0,0,PS1,UICC,UsatEncEventDownload_0,P_ERROR,swLogPrintf("Currently unsupport event : %x ");
585728,1200015360,0,0,PS1,UICC,UsatProcRefreshCmd_0,P_WARNING,swLogPrintf("Unsupport refresh type %x ");
585728,1200017408,0,0,PS1,UICC,UsatProcRefreshCmd_1,P_VALUE,swLogPrintf("Changed fileId %x ");
585728,1200019456,0,0,PS1,UICC,UsatProcProvideLocalInfoCmd_0,P_ERROR,swLogPrintf("Unsupport qualifier ( %x ) of provide local info command ");
585728,1200021504,0,0,PS1,UICC,UsatProcOpenChannelCmd_0,P_ERROR,swLogPrintf("Unknown data field ( tag : %x ) on open channel proactive command! ");
585728,1200025599,0,0,PS1,UICC,UsatProcOpenChannelCmd_1,P_VALUE,swLogPrintf("BIP session open ");
585728,1200025600,0,0,PS1,UICC,UsatProcReceiveDataCmd_0,P_ERROR,swLogPrintf("Unknown data field ( tag : %x ) on Receive data channel proactive command! ");
585728,1200027648,0,0,PS1,UICC,UsatProcSendDataCmd_0,P_ERROR,swLogPrintf("Unknown data field ( tag : %x ) on send data channel proactive command! ");
585728,1200031743,0,0,PS1,UICC,UsatProcTimerExpiration_1,P_VALUE,swLogPrintf("finish usat timer expiration process ");
585728,1200032000,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_0,P_WARNING,swLogPrintf("proactive command fetch failed as pendingFetch %d , isPoweringdown %d ");
585728,1200035839,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_1,P_WARNING,swLogPrintf("Decode length field error , length is 0... ");
585728,1200035840,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_2,P_VALUE,swLogPrintf("Fetched USAT proactive command type : 0x%x ");
585728,1200037888,0,0,PS1,UICC,UiccCtrlHandleUsatFetchReq_3,P_VALUE,swLogPrintf("USAT proactive command failed , usatcmdResult %d ");
585728,1200041983,0,0,PS1,UICC,UiccCtrlHandleSmsPpDownloadReq_1,P_WARNING,swLogPrintf("sms pp download in usim service table is disabled. ");
585728,1200044031,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_1,P_WARNING,swLogPrintf("mosms in usim service table is disabled. ");
585728,1200044032,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_2,P_VALUE,swLogPrintf("response present or not ( %d ) for mo control envelop cmd ");
585728,1200048127,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_3,P_WARNING,swLogPrintf("sc address is not gotten from usat control cnf. ");
585728,1200050175,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_4,P_WARNING,swLogPrintf("dest address is not gotten from usat control cnf. ");
585728,1200052223,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_5,P_VALUE,swLogPrintf("mo sms info present in resp data. ");
585728,1200054271,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_6,P_WARNING,swLogPrintf("mo sms info is not present in resp data. ");
585728,1200054272,0,0,PS1,UICC,UiccCtrlHandleMoSmsCtrlReq_7,P_WARNING,swLogPrintf("cmdResult for mo sms control is : %d ");
585728,1200058367,0,0,PS1,UICC,UiccCtrlHandleTeminateSessionReq_0,P_VALUE,swLogPrintf("Ignor the error status for power down ");
585728,1200058624,0,0,PS1,UICC,UiccCtrlHandleTeminateSessionReq_1,P_VALUE,swLogPrintf("Skip terminate USIM APP by select ADF for errorStateOccurred : %d or tsCause : %d ");
585728,1200060416,0,0,PS1,UICC,UiccCtrlHandlePinOperateReq_1,P_VALUE,swLogPrintf("Unsupport pinKeyReference %d ");
585728,1200062464,0,0,PS1,UICC,UiccCtrlHandlePinOperateReq_2,P_VALUE,swLogPrintf("unknown PIN func %d ");
585728,1200064512,0,0,PS1,UICC,UiccCtrlHandleCcmReadDataReq_1,P_WARNING,swLogPrintf("Unsupported request item %d ");
585728,1200068607,0,0,PS1,UICC,UiccCtrlHandleCcmUpdateDataReq_1,P_ERROR,swLogPrintf("Unknown Update data Item !! ");
585728,1200068608,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_0,P_VALUE,swLogPrintf("cannot process due to cmdstatus %d ");
585728,1200070912,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_1,P_VALUE,swLogPrintf("current EF : %x , current Generic access EF : %x ");
585728,1200072704,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_2,P_VALUE,swLogPrintf("SELECT 2FXX by fileid , but current dir : %x ");
585728,1200074752,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_debug,P_VALUE,swLogPrintf("abnormal reqData->path.length %d ");
585728,1200076800,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_3,P_VALUE,swLogPrintf("saved current Generic access EF : %x ");
585728,1200079104,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_4,P_VALUE,swLogPrintf("select path return SW %x%x ");
585728,1200081152,0,0,PS1,UICC,UiccCtrlHandleGenAccessReq_5,P_VALUE,swLogPrintf("return data invalid , rspApduLen : %d , rspApdu : %x ");
585728,1200084991,0,0,PS1,UICC,UiccCtrlHandleSimSleepReq_0,P_SIG,swLogPrintf("not allow SIM sleep , send STATUS command to detect SIM ");
585728,1200087039,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_1,P_VALUE,swLogPrintf("operation not allowed by SWC disable ");
585728,1200089087,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_2,P_WARNING,swLogPrintf("pSwcList is NULL ");
585728,1200091135,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_3,P_VALUE,swLogPrintf("operation not allowed by SWC disable ");
585728,1200093183,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_4,P_WARNING,swLogPrintf("pSwcList is NULL ");
585728,1200093184,0,0,PS1,UICC,UiccCtrlHandleSimWriteCntReq_5,P_VALUE,swLogPrintf("unsupport write counter mode : %d ");
585728,1200095744,0,0,PS1,UICC,UiccCtrlHandleSetSimParamReq_0,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200097792,0,0,PS1,UICC,UiccCtrlHandleSetSimParamReq_1,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200101375,0,0,PS1,UICC,UiccCtrlHandleMmReadDataReq_1,P_ERROR,swLogPrintf("Unknown read data Item !! ");
585728,1200103423,0,0,PS1,UICC,UiccCtrlHandleMmWriteDataReq_1,P_ERROR,swLogPrintf("Unknown Update data Item !! \n ");
585728,1200103680,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_0,P_ERROR,swLogPrintf("Cannot deactivate the uicc , suspension support : %x , PIN status : %x! ");
585728,1200105984,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_1,P_WARNING,swLogPrintf("Cannot deactivate the uicc , suspension support : %x , PIN status : %x , additional info : %x in EFad! ");
585728,1200109567,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_2,P_SIG,swLogPrintf("Leave PSM / EDRX , make uicc recovery ");
585728,1200109568,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_3,P_ERROR,swLogPrintf("Unknown type : %x! ");
585728,1200111872,0,0,PS1,UICC,UiccCtrlHandlePowerReduceInd_4,P_VALUE,swLogPrintf("Ignore it as pUiccCtrlTinyCtx->bSimPowerSave %d bSimSleep %d ");
585728,1200113920,0,0,PS1,UICC,SelectUiccApplication_1,P_WARNING,swLogPrintf("Activate APP returned %d ( 0-FCI / 1-FCP ) failed on logical channel %d ");
585728,1200115712,0,0,PS1,UICC,UiccctrlHandleOpenLogicalChannelReq_2,P_VALUE,swLogPrintf("unsupport logical channel number %d , current only support standard logical channels 1-3 ");
585728,1200118016,0,0,PS1,UICC,UiccCtrlHandleGenLogicalChAccessReq_0,P_VALUE,swLogPrintf("logical channel access failed reqData->length %d , reqData->logicChNum %d ");
585728,1200120064,0,0,PS1,UICC,UiccCtrlHandleGenLogicalChAccessReq_1,P_VALUE,swLogPrintf("logical channel access failed uiccCtrlData->state %d , uiccCtrlData->cmdStatus %d ");
585728,1200122112,0,0,PS1,UICC,UiccCtrlHandleGenLogicalChAccessReq_2,P_VALUE,swLogPrintf("return data invalid , rspApduLen : %d , rspApdu : %x ");
585728,1200125951,0,0,PS1,UICC,UsimSimuAppInit_0,P_SIG,swLogPrintf("The Uicc initialized OK , send CemmSimAppReadyInd! The USIM is ready...... ");
585728,1200127999,0,0,PS1,UICC,UsimSimuProcCCMReadData_1,P_VALUE,swLogPrintf("Unsupported request Item! ");
585728,1200130047,0,0,PS1,UICC,UsimSimuProcCEMMReadData_1,P_VALUE,swLogPrintf("Unsupported request Item! ");
585728,1200130560,0,0,PS1,UICC,UsimSimuSetSimParamReq_0,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200132608,0,0,PS1,UICC,UsimSimuSetSimParamReq_1,P_VALUE,swLogPrintf("simSimuPresent %d , bSimSimulator %d , bUsimSimulator %d ");
585728,1200136191,0,0,PS1,UICC,UsimSimulatorEntry_0,P_WARNING,swLogPrintf("Enter usim simulator / TEST SIM.... ");
585728,1200136704,0,0,PS1,UICC,UiccInterruptServiceRoutine_0,P_VALUE,swLogPrintf("IIR : 0x%x , FSR : 0x%x , LSR : 0x%x ");
585728,1200138240,0,0,PS1,UICC,UiccHwCardReset_0,P_WARNING,swLogPrintf("Unknow voltage %d , set as default class C ");
586752,1201672191,0,0,PS1,UICC_DRV,Usim1ClkLatchByAONIO_weak,P_WARNING,swLogPrintf("weak function is unexpected! ");
586752,1201674239,0,0,PS1,UICC_DRV,Usim1GpioConfig_weak,P_WARNING,swLogPrintf("weak function is unexpected! ");
586752,1201674240,0,0,PS1,UICC_DRV,UiccDrvSendErrorIndication_0,P_INFO,swLogPrintf("UiccDrv ErrInd status %d ");
586752,1201678335,0,0,PS1,UICC_DRV,UiccDrvSleepPrepare_0,P_VALUE,swLogPrintf("The uicc prepares to enter sleep1 mode ");
586752,1201678336,0,0,PS1,UICC_DRV,UiccDrvSleepPrepare_1,P_VALUE,swLogPrintf("The uicc clock has already been stopped as uiccCardState %d ");
586752,1201682431,0,0,PS1,UICC_DRV,UiccDrvSleepPrepare_2,P_VALUE,swLogPrintf("USIM CLK Is not Latched , latch it ");
586752,1201684479,0,0,PS1,UICC_DRV,UiccDrvSleepRecovery_0,P_VALUE,swLogPrintf("The uicc recover from sleep1 mode ");
586752,1201684736,0,0,PS1,UICC_DRV,UiccPmuCheckDeepSleepAvail_0,P_VALUE,swLogPrintf("pUiccDrvData->uiccCardState %d , lowPowerState %d ");
586752,1201688575,0,0,PS1,UICC_DRV,UiccDrvProcPmuDeepSlpDeactivate_0,P_VALUE,swLogPrintf("Stop deactivate session since uicctrl vote not allowed for new request ");
586752,1201690623,0,0,PS1,UICC_DRV,UiccDrvProcPmuDeepSlpDeactivate_1,P_VALUE,swLogPrintf("Terminate UICC since PS all vote hibernate / sleep ");
586752,1201692671,0,0,PS1,UICC_DRV,UiccDrvProcPmuDeepSlpDeactivate_2,P_VALUE,swLogPrintf("The uicc has already been deactivated , nothing to do... ");
586752,1201694719,0,0,PS1,UICC_DRV,UiccDrvPmuDeepSlpEnterCallBack_1,P_WARNING,swLogPrintf("Miss UICC deativation! power off immediately ");
586752,1201694720,0,0,PS1,UICC_DRV,UiccDrvPmuDeepSlpEnterCallBack_2,P_SIG,swLogPrintf("Uicc , prepare to enter : %d , HIB ( 4 ) / SLEEP2 ( 3 ) state ");
586752,1201698815,0,0,PS1,UICC_DRV,UiccDrvTerminateTaskWait_0,P_WARNING,swLogPrintf("Terminate uiccdrv task wait ");
586752,1201698816,0,0,PS1,UICC_DRV,UiccDrvTerminateTaskWait_1,P_WARNING,swLogPrintf("uiccdrv task wait flag set result %d ");
586752,1201702911,0,0,PS1,UICC_DRV,UiccReset_softsim,P_VALUE,swLogPrintf("No ATR recvd from softsim ");
586752,1201703168,0,0,PS1,UICC_DRV,UiccDrvHandleDeActivation_0,P_VALUE,swLogPrintf("uiccCardState : %x , start to deactivate the uicc card , send remove Ind : %d ");
586752,1201704960,0,0,PS1,UICC_DRV,UiccDecodeATRContent_2,P_VALUE,swLogPrintf("ATR length %d is wrong ");
586752,1201709055,0,0,PS1,UICC_DRV,UiccDecodeATRContent_3,P_WARNING,swLogPrintf("clock stop indicated on HIGH ");
586752,1201709056,0,0,PS1,UICC_DRV,UiccPPSProcedure_3,P_VALUE,swLogPrintf("PPS procedure failed , rs : %d ");
586752,1201713151,0,0,PS1,UICC_DRV,UiccDrvRestartCardClock_0,P_VALUE,swLogPrintf("The uicc clock has not been stopped , nothing to do.. ");
586752,1201715199,0,0,PS1,UICC_DRV,UiccDrvRestartCardClock_2,P_VALUE,swLogPrintf("USIM CLK is latched , release it ");
586752,1201717247,0,0,PS1,UICC_DRV,UiccDrvRestartCardClock_1,P_WARNING,swLogPrintf("Clock start failed on busy state of UCR_REG! ");
586752,1201719295,0,0,PS1,UICC_DRV,UiccDrvStopCardClock_1,P_VALUE,swLogPrintf("The uicc clock has already been stopped ");
586752,1201721343,0,0,PS1,UICC_DRV,UiccDrvHandleClockStopReq_2,P_WARNING,swLogPrintf("Clock stop failed on busy state of UCR_REG... ");
586752,1201723391,0,0,PS1,UICC_DRV,UiccInitCommEst_00,P_VALUE,swLogPrintf("The card support class A_B , change to 3v and reset ");
586752,1201725439,0,0,PS1,UICC_DRV,UiccInitCommEst_0,P_VALUE,swLogPrintf("ATR anlyze ok ");
586752,1201727487,0,0,PS1,UICC_DRV,UiccInitCommEst_atr,P_WARNING,swLogPrintf("ATR decode error ");
586752,1201729535,0,0,PS1,UICC_DRV,UiccInitCommEst_ATR_TIMEOUT_TERMINATE,P_VALUE,swLogPrintf("Terminate the initial communication ");
586752,1201729792,0,0,PS1,UICC_DRV,UiccInitCommEst_convention_before,P_VALUE,swLogPrintf("curr LCR : 0x%x , RBR : 0x%x ");
586752,1201731584,0,0,PS1,UICC_DRV,UiccInitCommEst_convention_after,P_VALUE,swLogPrintf("set LCR 0x%x ");
586752,1201735679,0,0,PS1,UICC_DRV,UiccInitCommEst_try_3v,P_VALUE,swLogPrintf("no ATR recvd on class_C_1_8v , reset UICC with 3v ");
586752,1201737727,0,0,PS1,UICC_DRV,UiccInitCommEst_tryMinClck,P_VALUE,swLogPrintf("try minclock for UICC ");
586752,1201739775,0,0,PS1,UICC_DRV,UiccInitCommEst_1,P_ERROR,swLogPrintf("no ATR recvd on class_C_1_8V and class_B_3v , UICC detection failed ");
586752,1201741823,0,0,PS1,UICC_DRV,UiccInitCommEst_2,P_ERROR,swLogPrintf("ATR error for reset 3 times on class_B_3v , UICC activation failed ");
586752,1201743871,0,0,PS1,UICC_DRV,UiccInitCommEst_3,P_VALUE,swLogPrintf("PPS done ");
586752,1201745919,0,0,PS1,UICC_DRV,UiccInitCommEst_PPS_TIMEOUT_TERMINATE,P_VALUE,swLogPrintf("Terminate the initial communication ");
586752,1201745920,0,0,PS1,UICC_DRV,UiccInitCommEst_4,P_VALUE,swLogPrintf("The ta1 : 0x%x is invalid or unsupported , set default value ");
586752,1201750015,0,0,PS1,UICC_DRV,UiccInitCommEst_configMinClck,P_VALUE,swLogPrintf("configure minclock for PPS ");
586752,1201752063,0,0,PS1,UICC_DRV,UiccInitCommEst_T1_init,P_VALUE,swLogPrintf("T1 initiate ");
586752,1201754111,0,0,PS1,UICC_DRV,UiccDrvStartCardInit_1,P_VALUE,swLogPrintf("USIM1 starts init ");
586752,1201756159,0,0,PS1,UICC_DRV,UiccDriverInit_1,P_VALUE,swLogPrintf("Uiccdrv task starts init... ");
586752,1201756160,0,0,PS1,UICC_DRV,UiccDriverTaskEntry_1,P_ERROR,swLogPrintf("Uicc driver received unexpected signal : %x! ");
586752,1201760255,0,0,PS1,UICC_DRV,UiccDllHandleProcedureByte_3,P_VALUE,swLogPrintf("No data recvd ");
586752,1201760256,0,0,PS1,UICC_DRV,UiccDllHandleProcedureByte_4,P_VALUE,swLogPrintf("Rx procedure byte : %x ");
586752,1201762304,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_0,P_VALUE,swLogPrintf("gUiccWtCnt : 0x%x ");
586752,1201764608,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_1,P_VALUE,swLogPrintf("WTR : 0x%x , EWTR : 0x%x ");
586752,1201768447,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_setbr,P_WARNING,swLogPrintf("Set baud rate divisior failed ");
586752,1201768704,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_2,P_VALUE,swLogPrintf("WTR : 0x%x , EWTR : 0x%x ");
586752,1201772543,0,0,PS1,UICC_DRV,UiccDllHandleBwtInterrupt_3,P_VALUE,swLogPrintf("core is not idle , CWT / BWT maybe not trigger again ");
586752,1201772544,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_0,P_VALUE,swLogPrintf("gUiccWtCnt : 0x%x ");
586752,1201774848,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_1,P_VALUE,swLogPrintf("WTR : 0x%x , EWTR : 0x%x ");
586752,1201778687,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_setbr,P_WARNING,swLogPrintf("Set baud rate divisior failed ");
586752,1201778944,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_2,P_VALUE,swLogPrintf("WTR : 0x%x , EWTR : 0x%x ");
586752,1201782783,0,0,PS1,UICC_DRV,UiccDllHandleCwtInterrupt_3,P_VALUE,swLogPrintf("core is not idle , CWT / BWT maybe not trigger again ");
586752,1201784831,0,0,PS1,UICC_DRV,UiccDllReceiveHandler_0,P_VALUE,swLogPrintf("BWT expired and enable BWT IRQ again ");
586752,1201786879,0,0,PS1,UICC_DRV,UiccDllReceiveHandler_cwt,P_VALUE,swLogPrintf("CWT expired and enable CWT IRQ again ");
586752,1201788927,0,0,PS1,UICC_DRV,UiccDllSendHandler_0,P_ERROR,swLogPrintf("The TX error interrupt occurred... ");
586752,1201790975,0,0,PS1,UICC_DRV,UiccDllSendHandler_1,P_ERROR,swLogPrintf("The TX fifo don ' t have enough space , wait for the next interrupt. ");
586752,1201790976,0,0,PS1,UICC_DRV,UiccDllSendHandler_5,P_VALUE,swLogPrintf("Enable UICC DMA RX , expected data length : %d ");
586752,1201794048,0,0,PS1,UICC_DRV,UiccDllSendHandler_DEBUG,P_INFO,swLogPrintf("FCR 0x%x , TOR 0x%x , IIR 0x%x , FSR 0x%x , DCR 0x%x ");
586752,1201795584,0,0,PS1,UICC_DRV,UiccDllHandleDmaRx_1,P_VALUE,swLogPrintf("Uicc DMA expected data length %d , actual recvd data length %d , DCR 0x%x ");
586752,1201797376,0,0,PS1,UICC_DRV,UiccDllHandleDmaRx_1_debug,P_INFO,swLogPrintf("CGR 0x%x , DCR 0x%x ");
586752,1201799168,0,0,PS1,UICC_DRV,UiccDllHandleDmaRx_3,P_VALUE,swLogPrintf("recv the remianing %d bytes by IRQ ");
586752,1201803263,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_0,P_ERROR,swLogPrintf("The DMA TX in busy state... ");
586752,1201803264,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_1,P_VALUE,swLogPrintf("TX DMA trans length %d ");
586752,1201807359,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_terminate,P_VALUE,swLogPrintf("Get terminate flag by no response timer expired. ");
586752,1201807360,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_3,P_ERROR,swLogPrintf("Unexpected task wait flag : 0x%x... ");
586752,1201809664,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_apdusize,P_VALUE,swLogPrintf("recv length %d is more than APDU size %d ");
586752,1201813503,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_4,P_VALUE,swLogPrintf("Rx error! ");
586752,1201813760,0,0,PS1,UICC_DRV,UiccDllSendRecvDataFunc_5,P_VALUE,swLogPrintf("send & recv abnormal , uiccDlState : %d , uiccParityErrCnt : %d ");
586752,1201815552,0,0,PS1,UICC_DRV,UiccDllDecodeT1SBlock_0,P_WARNING,swLogPrintf("Unknown S-Block type ( 0x%x ) ! ");
586752,1201819647,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_0,P_ERROR,swLogPrintf("Decode error! ");
586752,1201821695,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_1,P_VALUE,swLogPrintf("I-block! ");
586752,1201823743,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_2,P_VALUE,swLogPrintf("R-block! ");
586752,1201825791,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_3,P_VALUE,swLogPrintf("S-block! ");
586752,1201825792,0,0,PS1,UICC_DRV,UiccDllDecodeT1Response_4,P_ERROR,swLogPrintf("Error : unknown block type ( %x ) !!! ");
586752,1201827840,0,0,PS1,UICC_DRV,UiccGetBaudRateCfgParam_1,P_VALUE,swLogPrintf("ta1 : 0x%x unsupported , set default value ");
586752,1201831935,0,0,PS1,UICC_DRV,UiccHwConfigCardClckReq_2,P_WARNING,swLogPrintf("Uicc Clock register change busy!!! ");
586752,1201833983,0,0,PS1,UICC_DRV,UiccHwSetClockDivisior_1,P_WARNING,swLogPrintf("Uicc Clock register change busy!!! ");
586752,1201836031,0,0,PS1,UICC_DRV,UiccHwConfigureBaudRate_2,P_WARNING,swLogPrintf("Uicc baud rate register change busy!!! ");
586752,1201838079,0,0,PS1,UICC_DRV,UiccHwConfigureBaudRate_3,P_WARNING,swLogPrintf("Uicc baud rate register change busy!!! ");
586752,1201840127,0,0,PS1,UICC_DRV,UiccHwCardReset_2,P_VALUE,swLogPrintf("USIM CLK is latched , release it ");
586752,1201842175,0,0,PS1,UICC_DRV,UiccHwCheckInteAbnormalStatus_1,P_ERROR,swLogPrintf("Unknown interrupt occurred!!! ");
586752,1201842176,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_test1,P_VALUE,swLogPrintf("atrInfo->clkStopInd %d ");
586752,1201846271,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_0,P_ERROR,swLogPrintf("Uicc Clock Register is on change busy state! ");
586752,1201848319,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_stopclck,P_WARNING,swLogPrintf("Clock stop failed on busy state of UCR_REG... ");
586752,1201850367,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_1,P_ERROR,swLogPrintf("Set clock divisior failed!! ");
586752,1201852415,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_startclck,P_WARNING,swLogPrintf("Clock start failed on busy state of UCR_REG! ");
586752,1201854463,0,0,PS1,UICC_DRV,UiccHwConfigParamByAtrPps_2,P_ERROR,swLogPrintf("Set baud rate divisior failed!! ");
586752,1201854720,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase12_softsim_2,P_VALUE,swLogPrintf("delete INS byte %x , rspDataLen %d ");
586752,1201858559,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase12_2,P_VALUE,swLogPrintf("Rx error! ");
586752,1201858816,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase34_3,P_VALUE,swLogPrintf("Rx data Len : %d , cmdHeader->lc : %d ");
586752,1201862655,0,0,PS1,UICC_DRV,UiccTransLayerHandleCmdCase34_6,P_VALUE,swLogPrintf("Rx error! ");
586752,1201863168,0,0,PS1,UICC_DRV,UiccTransLayerHandleT0Cmd_1,P_VALUE,swLogPrintf("remove last procedure bytes %x %x , offset %d ");
586752,1201865216,0,0,PS1,UICC_DRV,UiccTransLayerHandleT0Cmd_2,P_VALUE,swLogPrintf("remove last procedure bytes %x %x , offset %d ");
586752,1201867008,0,0,PS1,UICC_DRV,UiccTransLayerHandleT0Cmd_ignore,P_VALUE,swLogPrintf("MaxExpApduLen %d , total recved %d , relace SW but ignore data ");
586752,1201870847,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_begin,P_SIG,swLogPrintf("The uicc verify terminate card ");
586752,1201872895,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_0,P_INFO,swLogPrintf("The uicc has already been deactivated , nothing to do ");
586752,1201874943,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_end1,P_SIG,swLogPrintf("The uicc verify terminate card ok ");
586752,1201876991,0,0,PS1,UICC_DRV,UiccVerifyTerminateSessionCase_end2,P_SIG,swLogPrintf("The uicc verify terminate card fail ");
586752,1201879039,0,0,PS1,UICC_DRV,UiccVerifyOtherSimAccessCase_0,P_SIG,swLogPrintf("Uicc verify USIM Access case : Authenticate / read_write SMS ");
586752,1201881087,0,0,PS1,UICC_DRV,UiccVerifyOtherSimAccessCase_end1,P_SIG,swLogPrintf("Uicc verify USIM Access case : Authenticate / read_write SMS ok ");
586752,1201883135,0,0,PS1,UICC_DRV,UiccVerifyOtherSimAccessCase_end2,P_SIG,swLogPrintf("Uicc verify USIM Access case : Authenticate / read_write SMS fail ");
586752,1201885183,0,0,PS1,UICC_DRV,UiccVerifyUsimAppInitCase_0,P_SIG,swLogPrintf("Uicc verify USIM application initalization ");
586752,1201887231,0,0,PS1,UICC_DRV,UiccVerifyUsimAppInitCase_end1,P_SIG,swLogPrintf("Uicc verify USIM application initalization ok ");
586752,1201889279,0,0,PS1,UICC_DRV,UiccVerifyUsimAppInitCase_end2,P_SIG,swLogPrintf("Uicc verify USIM application initalization fail ");
586752,1201891327,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_0,P_SIG,swLogPrintf("Uicc verify initial communication establishment case start... ");
586752,1201893375,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_1,P_INFO,swLogPrintf("Cold reset and Wait for ATR ");
586752,1201895423,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_2,P_SIG,swLogPrintf("ATR ok ");
586752,1201897471,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_3,P_SIG,swLogPrintf("PPS done ");
586752,1201899519,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_4,P_SIG,swLogPrintf("PPS failed ");
586752,1201901567,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_5,P_SIG,swLogPrintf("ATR fail ");
586752,1201903615,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_6,P_SIG,swLogPrintf("Uicc initial communication establishment ok ");
586752,1201905663,0,0,PS1,UICC_DRV,UiccVerifyInitCommEstCase_7,P_SIG,swLogPrintf("Uicc initial communication establishment failed ");
586752,1201907711,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_0,P_SIG,swLogPrintf("Uicc verify warm reset case ");
586752,1201909759,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_1,P_SIG,swLogPrintf("ATR ok ");
586752,1201911807,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_2,P_SIG,swLogPrintf("PPS done ");
586752,1201913855,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_3,P_SIG,swLogPrintf("PPS failed ");
586752,1201915903,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_4,P_SIG,swLogPrintf("ATR fail ");
586752,1201917951,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_5,P_SIG,swLogPrintf("Uicc verify warm reset OK ");
586752,1201919999,0,0,PS1,UICC_DRV,UiccVerifyWarmResetCase_6,P_SIG,swLogPrintf("Uicc verify warm reset failed ");
586752,1201922047,0,0,PS1,UICC_DRV,UiccVerifyClockOffOnCase_0,P_SIG,swLogPrintf("Uicc verify Clock Off / On ");
586752,1201924095,0,0,PS1,UICC_DRV,UiccVerifyClockOffOnCase_1,P_SIG,swLogPrintf("Uicc verify Clock Off / On case pass ");
586752,1201926143,0,0,PS1,UICC_DRV,UiccVerifyInit_0,P_SIG,swLogPrintf("Uicc start init... ");
586752,1201928191,0,0,PS1,UICC_DRV,UiccVerifyEntry_0,P_SIG,swLogPrintf("USIM FPGA verify start... ");
586752,1201930239,0,0,PS1,UICC_DRV,UiccVerifyEntry_1,P_SIG,swLogPrintf("Uicc verify all Pass... ");
586752,1201932287,0,0,PS1,UICC_DRV,UiccVerifyEntry_2,P_SIG,swLogPrintf("Uicc verify failed... ");
586752,1201934335,0,0,PS1,UICC_DRV,UiccVerifyEntry_3,P_SIG,swLogPrintf("test end ");
595968,1220544512,0,0,PS1,CCM,CcmInit_w_1,P_WARNING,swLogPrintf("CCM , sigId : 0x%x , should be enqueue before CerrcCcmInitConfigCnf ");
595968,1220546560,0,0,PS1,CCM,CcmPmuDeepSlpEnterCallBack_1,P_SIG,swLogPrintf("CCM , prepare to enter : %d , HIB ( 4 ) / SLEEP2 ( 3 ) state ");
595968,1220550144,0,0,PS1,CCM,CcmSetSetExtCfgReq_new_1,P_VALUE,swLogPrintf("Set extended CFG , bRohc : %d , bIpv6RsForTestSim : %d , bTcpTptOpt : %d ipv6GetPrefixTime : %d , bEnablePsSoftReset %d , bEnableDataCounter %d , emergencyCamp %d ");
595968,1220552703,0,0,PS1,CCM,CcmTaskEntry_1,P_VALUE,swLogPrintf("CCM allow to enter HIB state ");
595968,1220554751,0,0,PS1,CCM,CcmTaskEntry_2,P_VALUE,swLogPrintf("CCM allow to enter SLEEP2 state ");
595968,1220556799,0,0,PS1,CCM,CcmTaskEntry_3,P_VALUE,swLogPrintf("CCM not allow to enter HIB state ");
595968,1220558847,0,0,PS1,CCM,CcmTaskEntry_4,P_VALUE,swLogPrintf("CCM not allow to enter SLEEP2 state ");
596992,1222641920,0,0,PS1,CCM_REG,CcmRegTriggeredRegProcCnf_1,P_WARNING,swLogPrintf("CCM REG , SIM not ready : %d , or not CFUN1 state : %d , can ' t proc pending attach REQ ");
596992,1222643712,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_1,P_WARNING,swLogPrintf("CCM REG , invalid request REG PROC : %d ");
596992,1222645760,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_2,P_WARNING,swLogPrintf("CCM REG , ongoing proc : %d , abort current proc , try to power off! ");
596992,1222648064,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_3,P_WARNING,swLogPrintf("CCM REG , proc cfun0 , but ongoing REG proc : %d , pending REG proc : %d , abort pending proc ");
596992,1222650368,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_4,P_WARNING,swLogPrintf("CCM REG , ongoing REG proc : %d , pending REG proc : %d , can ' t process new proc : %d ");
596992,1222651904,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_5,P_WARNING,swLogPrintf("CCM REG , pending PROC : %d ");
596992,1222655999,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_6,P_WARNING,swLogPrintf("CCM REG , CEMM already under REG procedure , don ' t need to trigger again ");
596992,1222658047,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_11,P_WARNING,swLogPrintf("CCM REG , CEMM already under DEACT procedure , don ' t need to trigger again ");
596992,1222660095,0,0,PS1,CCM_REG,CcmRegHandleRegProcedure_12,P_WARNING,swLogPrintf("CCM REG , CEMM already under DEREG procedure , don ' t need to trigger again ");
596992,1222662143,0,0,PS1,CCM_REG,CcmRegProcedureOut_1,P_VALUE,swLogPrintf("CCM REG , all procedure done ");
596992,1222662144,0,0,PS1,CCM_REG,CcmRegCheckPendingRegProc_1,P_VALUE,swLogPrintf("CCM REG , process pending REG procedure : %d ");
596992,1222664448,0,0,PS1,CCM_REG,CcmRegCheckPendingRegProc_2,P_WARNING,swLogPrintf("CCM REG , SIM not ready : %d , or not CFUN1 state : %d , can ' t proc pending attach REQ ");
596992,1222668287,0,0,PS1,CCM_REG,CcmRegProcCemmrRegCnfSig_1,P_WARNING,swLogPrintf("CCM REG , no REG procedure is ongoing when receive : SIG_CEMMR_REG_CNF ");
596992,1222668288,0,0,PS1,CCM_REG,CcmRegProcCemmrRegCnfSig_2,P_WARNING,swLogPrintf("CCM REG , CemmrReg confirm failed : %d ");
596992,1222672383,0,0,PS1,CCM_REG,CcmRegProcCemmrDeregCnfSig_1,P_WARNING,swLogPrintf("CCM REG , no DEREG procedure is ongoing when receive : SIG_CEMMR_DEREG_CNF ");
596992,1222674431,0,0,PS1,CCM_REG,CcmRegProcCemmrDeregCnfSig_2,P_WARNING,swLogPrintf("CCM REG , the detachType of pDeregCnf is inconsistent with detachType of ongoingReg , discard this msg! ");
596992,1222676479,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_1,P_VALUE,swLogPrintf("CCM REG , manual PLMN search confirmed , need to stop the protection timer ");
596992,1222678527,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_2,P_WARNING,swLogPrintf("CCM REG , manual PLMN search confirmed , but no protection timer running , maybe confirmed before ");
596992,1222678528,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_3,P_WARNING,swLogPrintf("CCM REG , RC not succ ( %d ) in CemmManualPlmnSearchCnf ");
596992,1222682623,0,0,PS1,CCM_REG,CcmRegProcCemmManualPlmnSearchCnfSig_4,P_WARNING,swLogPrintf("CCM REG , no PLMN found in CemmManualPlmnSearchCnf ");
596992,1222682624,0,0,PS1,CCM_REG,CcmRegProcCemmAbortPlmnSearchCnfSig_1,P_WARNING,swLogPrintf("CCM REG , RC not succ ( %d ) in AbortPlmnSearchCnf ");
596992,1222686719,0,0,PS1,CCM_REG,CcmRegProcCemmAbortPlmnSearchCnfSig_2,P_WARNING,swLogPrintf("CCM REG , no PLMN found in AbortPlmnSearchCnf ");
596992,1222686720,0,0,PS1,CCM_REG,CcmRegProcCemmrOosPlmnSelectCnfSig_1,P_WARNING,swLogPrintf("CCM REG , RC not succ ( %d ) in CemmPlmnOosPlmnSelectCnf ");
596992,1222688768,0,0,PS1,CCM_REG,CcmRegProcCemmrDeRegIndSig_1,P_WARNING,swLogPrintf("Trigger silent reset %d time ");
596992,1222692863,0,0,PS1,CCM_REG,CcmRegProcCemmrDeRegIndSig_2,P_WARNING,swLogPrintf("Silent Reset reach max count! ");
596992,1222692864,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnSetBandFreqCnfSig_autocfg_1,P_WARNING,swLogPrintf("CCM REG , SET CIOT BAND CEMM confirm failed : %d ");
596992,1222694912,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnSetBandFreqCnfSig_1,P_WARNING,swLogPrintf("CCM REG , SET CIOT BAND CEMM confirm failed : %d ");
596992,1222696960,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnSetBandFreqCnfSig_2,P_WARNING,swLogPrintf("CCM REG , SET CIOT FREQ CEMM confirm failed : %d ");
596992,1222699264,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnGetBandFreqCnfSig_1,P_WARNING,swLogPrintf("CCM REG , can ' t get band / freq info type : %d , ret error : %d ");
596992,1222701056,0,0,PS1,CCM_REG,CcmRegProcCemmPlmnGetBandFreqCnfSig_2,P_WARNING,swLogPrintf("CCM REG , unexpected freqType : %d ");
596992,1222705151,0,0,PS1,CCM_REG,CcmRegProcManualPlmnSearchProtectTimerExpiry_1,P_ERROR,swLogPrintf("CCM REG , manual plmn protect timer expiry , but no such time info in CCM REG side ");
596992,1222707199,0,0,PS1,CCM_REG,CcmRegProcManualPlmnSearchProtectTimerExpiry_2,P_WARNING,swLogPrintf("CCM REG , manual PLMN search time expiry , need to abort the PLMN search ");
596992,1222707200,0,0,PS1,CCM_REG,CcmRegProcPoweronReqMsg_1,P_WARNING,swLogPrintf("CCM REG , CEMM UNDER REG state : %d , don ' t need to process CcmRegPoweronReq ");
596992,1222709248,0,0,PS1,CCM_REG,CcmRegProcPoweronReqMsg_2,P_WARNING,swLogPrintf("CCM REG , SIM not ready : %d , don ' t need to process CcmRegPoweronReq ");
596992,1222711296,0,0,PS1,CCM_REG,CcmRegProcPoweronReqMsg_3,P_VALUE,swLogPrintf("CCM REG , SIM state is : %d ");
596992,1222713344,0,0,PS1,CCM_REG,CcmRegProcSimReadyIndMsg_2,P_WARNING,swLogPrintf("CCM REG , CEMM UNDER REG state : %d , don ' t need to process SimReadyInd ");
596992,1222715392,0,0,PS1,CCM_REG,CcmRegProcSimReadyIndMsg_3,P_WARNING,swLogPrintf("CCM REG , SIM ready , but not on power on state : %d ");
596992,1222719487,0,0,PS1,CCM_REG,CcmRegSetCiotFreqReq_1,P_WARNING,swLogPrintf("This command must be restricted to execute in the CFUN0 or CFUN4 state ");
596992,1222719744,0,0,PS1,CCM_REG,CcmRegAutoPlmnSelectReq_1,P_WARNING,swLogPrintf("CCM REG , SIM is not ready : %d or CFUN is not power on : %d , just pass the AUTO PLMN param to CEMM ");
596992,1222721792,0,0,PS1,CCM_REG,CcmRegManualPlmnSelectReq_1,P_WARNING,swLogPrintf("CCM REG , SIM is not ready : %d , or CFUN is not power on : %d , just pass MANUAL PLMN selection to CEMM ");
596992,1222723584,0,0,PS1,CCM_REG,CcmRegDeregReq_1,P_WARNING,swLogPrintf("CCM REG , can ' t process DEREG req ( COPS = 2 ) , as SIM is initing ( %d ) ");
596992,1222725632,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_1,P_WARNING,swLogPrintf("CCM REG , invalid / not suitable plmn select type : %d ");
596992,1222729727,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_2,P_ERROR,swLogPrintf("CCM REG , can ' t get PLMN long name , not support now ");
596992,1222731775,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_3,P_ERROR,swLogPrintf("CCM REG , can ' t get PLMN short name , not support now ");
596992,1222731776,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_4,P_WARNING,swLogPrintf("CCM REG , plmn select state : %d ");
596992,1222733824,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_5,P_WARNING,swLogPrintf("CCM REG , regStaticCtx.plmnValid : %d ");
596992,1222735872,0,0,PS1,CCM_REG,CcmRegSetCmiMmCurOperInfoCnfInfo_6,P_WARNING,swLogPrintf("CCM REG , can ' t get PLMN info , as REG status : %d ");
596992,1222737920,0,0,PS1,CCM_REG,CcmRegManualPlmnSearchReq_3,P_WARNING,swLogPrintf("CCM REG , MANUAL PLMN search timer ( 0x%lx ) is already created , when start request manual plmn search ");
596992,1222739968,0,0,PS1,CCM_REG,CcmRegCemmBeUnderReg_1,P_WARNING,swLogPrintf("CCM REG , CEMM is not attached , and first to do attach ( %d ) ");
596992,1222742016,0,0,PS1,CCM_REG,CcmRegProcPsAttachReqMsg_cfun,P_WARNING,swLogPrintf("CCM REG , not CFUN1 state : %d , can ' t proc PS attach REQ ");
596992,1222746111,0,0,PS1,CCM_REG,CcmRegProcPsAttachReqMsg_sim_off,P_WARNING,swLogPrintf("CCM REG , SIM removed , can ' t proc PS attach REQ ");
596992,1222746112,0,0,PS1,CCM_REG,CcmRegProcPsAttachReqMsg_sim_not_ready,P_WARNING,swLogPrintf("CCM REG , SIM not ready : %d , pending proc PS attach REQ ");
596992,1222748160,0,0,PS1,CCM_REG,CcmRegProcPsDetachReqMsg_1,P_WARNING,swLogPrintf("CCM REG , can ' t process CGATT0 , as SIM is initing ( %d ) ");
596992,1222752255,0,0,PS1,CCM_REG,CcmRegGetLocationInfo_1,P_WARNING,swLogPrintf("CCM REG , no valid PLMN info ");
596992,1222754303,0,0,PS1,CCM_REG,CcmRegGetLocationInfo_2,P_WARNING,swLogPrintf("CCM REG , no valid cell info ");
596992,1222756351,0,0,PS1,CCM_REG,CcmRegGetCellInfo_1,P_WARNING,swLogPrintf("CCM REG , no valid PLMN info ");
596992,1222758399,0,0,PS1,CCM_REG,CcmRegGetCellInfo_2,P_WARNING,swLogPrintf("CCM REG , no valid cell info ");
596992,1222758400,0,0,PS1,CCM_REG,CcmRegOosPlmnSelectReq_1,P_WARNING,swLogPrintf("CCM REG , can ' t process OOS PLMN search , as SIM is not ready : %d ");
596992,1222760448,0,0,PS1,CCM_REG,CcmRegOosPlmnSelectReq_2,P_WARNING,swLogPrintf("CCM REG , can ' t process OOS PLMN selection , as CFUN is not power on state : %d ");
596992,1222762752,0,0,PS1,CCM_REG,CcmRegPlmnReselectReq_1,P_WARNING,swLogPrintf("CCM REG , SIM is not ready : %d or CFUN is not power on : %d ");
598016,1224740863,0,0,PS1,CCM_DEV,CcmDevStopPeriodStatisProc_1,P_VALUE,swLogPrintf("CCM DEV , stop period statisic info report ");
598016,1224742911,0,0,PS1,CCM_DEV,CcmDevProcOut_1,P_VALUE,swLogPrintf("CCM DEV procedure done , free the DYN context ");
598016,1224744959,0,0,PS1,CCM_DEV,CcmDevProcOut_2,P_VALUE,swLogPrintf("CCM DEV no procedure is ongoing , could enter HIB mode ");
598016,1224745216,0,0,PS1,CCM_DEV,CcmDevHandleCfun0Proc_1,P_WARNING,swLogPrintf("CCM DEV current ongoing cfun proc : %d , and pending cfun proc : %d , can ' t proc the new CFUN0 req ");
598016,1224749055,0,0,PS1,CCM_DEV,CcmDevHandleCfun0Proc_3,P_VALUE,swLogPrintf("CCM DEV , proc the cfun0 ; power off the protocol firstly ");
598016,1224749312,0,0,PS1,CCM_DEV,CcmDevHandleCfun4Proc_1,P_WARNING,swLogPrintf("CCM DEV current ongoing cfun proc : %d , and pending cfun proc : %d , can ' t proc the new CFUN4 req ");
598016,1224753151,0,0,PS1,CCM_DEV,CcmDevHandleCfun4Proc_3,P_VALUE,swLogPrintf("CCM DEV , proc the cfun4 , power off the protocol ");
598016,1224753408,0,0,PS1,CCM_DEV,CcmDevHandleCfun1Proc_1,P_WARNING,swLogPrintf("CCM DEV current ongoing cfun proc : %d ; and pending cfun proc : %d ; can ' t proc the new CFUN1 req ");
598016,1224757247,0,0,PS1,CCM_DEV,CcmDevHandleProc_1,P_WARNING,swLogPrintf("CCM DEV ; no procedure need onogoing ");
598016,1224757504,0,0,PS1,CCM_DEV,CcmDevCurProcDone_1,P_VALUE,swLogPrintf("CCM DEV PROC pending procedue : %d , which SRC module : %d ");
598016,1224759296,0,0,PS1,CCM_DEV,CcmDevProcGetExtStatusCnf_1,P_WARNING,swLogPrintf("CCM DEV , get layer : %d STATUS CNF , but no AT+ECSTATUS? is pending , ignore it ");
598016,1224761344,0,0,PS1,CCM_DEV,CcmDevProcStatisInfoInd_1,P_WARNING,swLogPrintf("CCM DEV , get layer : %d STATIS INFO , but no statistic proc is pending , ignore it ");
598016,1224765439,0,0,PS1,CCM_DEV,CcmDevProcStatisPeriodTimerExpiry_1,P_WARNING,swLogPrintf("CCM DEV , Statis Period Timer expiry , but no statis proc ongoing ");
598016,1224767487,0,0,PS1,CCM_DEV,CcmDevProcCerrcBasicCellListInfoCnfSig_asyn_1,P_WARNING,swLogPrintf("CCM DEV , no cell found in CerrcCcmBasicCellListInfoCnf , not report BCINFO URC ");
598016,1224769535,0,0,PS1,CCM_DEV,CcmDevProcCerrcAbortBasicCellListInfoCnfSig_asyn_1,P_WARNING,swLogPrintf("CCM DEV , no cell found in CerrcCcmAbortBasicCellListInfoCnf , not report BCINFO URC ");
598016,1224771583,0,0,PS1,CCM_DEV,CcmDevProcBasicCellGuardTimerExpiry_1,P_WARNING,swLogPrintf("CCM DEV , ECBCINFO guard Timer expiry , but timer not created ");
598016,1224771840,0,0,PS1,CCM_DEV,CcmDevSetCfunReq_1,P_WARNING,swLogPrintf("CCM DEV invaild cfun request : %d ; from sub-mod : %d ");
598016,1224774144,0,0,PS1,CCM_DEV,CcmDevPowerWakeUpReq_1,P_WARNING,swLogPrintf("WAKE UP , but already procedure : %d / %d / %d ");
598016,1224777727,0,0,PS1,CCM_DEV,CcmDevPowerWakeUpReq_2,P_VALUE,swLogPrintf("WAKE UP from HIB / Sleep2 state ");
598016,1224779775,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_1,P_WARNING,swLogPrintf("CCM DEV no procedure ongoing , but received a SIM power on CNF ");
598016,1224781823,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV set the AIR PLANE state even no SIM ");
598016,1224783871,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_3,P_WARNING,swLogPrintf("CCM DEV set the POWER ON state even no SIM ");
598016,1224784128,0,0,PS1,CCM_DEV,CcmDevProcSimPoweronCnfMsg_4,P_WARNING,swLogPrintf("CCM DEV ongoing CFUN PROC : %d , POWER PROC : %d , but received a SIM power on CNF ");
598016,1224787967,0,0,PS1,CCM_DEV,CcmDevProcRegPoweronCnfMsg_1,P_WARNING,swLogPrintf("CCM DEV no procedure ongoing , but received a REG power on CNF ");
598016,1224787968,0,0,PS1,CCM_DEV,CcmDevProcRegPoweronCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV , POWER WAKE UP Fail from CCM REG : %d ");
598016,1224790016,0,0,PS1,CCM_DEV,CcmDevProcRegPoweronCnfMsg_3,P_WARNING,swLogPrintf("CCM DEV , POWER PROC : %d , but recv CCM REG CNF ");
598016,1224794111,0,0,PS1,CCM_DEV,CcmDevProcSimPoweroffCnfMsg_1,P_WARNING,swLogPrintf("CCM DEV no procedure ongoing , but received a SIM power OFF CNF ");
598016,1224794112,0,0,PS1,CCM_DEV,CcmDevProcSimPoweroffCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV ongoing CFUN PROC : %d , but received a SIM power OFF CNF ");
598016,1224798207,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_1,P_VALUE,swLogPrintf("CCM DEV , no procedure ongoing but recv REG power off CNF ");
598016,1224798464,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_2,P_WARNING,swLogPrintf("CCM DEV , Reg Poweroff Cnf failed with : %d , funcSrc is %d ");
598016,1224802303,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_3,P_VALUE,swLogPrintf("CCM DEV , protocol power off done power off the SIM ");
598016,1224802560,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_4,P_WARNING,swLogPrintf("CCM DEV , funcSrc is %d , ccmRc is %d ");
598016,1224804352,0,0,PS1,CCM_DEV,CcmDevProcRegPoweroffCnfMsg_6,P_WARNING,swLogPrintf("CCM DEV , ongoing CFUN PROC : %d but received a REG power OFF CNF ");
598016,1224808447,0,0,PS1,CCM_DEV,CcmDevGetCurPowerState_1,P_WARNING,swLogPrintf("CCM DEV when get power state , A CFUN : 4 is ongoing ");
598016,1224810495,0,0,PS1,CCM_DEV,CcmDevGetCurPowerState_2,P_WARNING,swLogPrintf("CCM DEV when get power state , A CFUN : 1 is ongoing ");
598016,1224810496,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_plmnSearchPowerLevel,P_WARNING,swLogPrintf("CCM DEV , ' plmnSearchPowerLevel ' can only be set to 0-3 , can ' t set to : %d ");
598016,1224812544,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_enableEpco,P_WARNING,swLogPrintf("CCM DEV , ' EPCO ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to : %d ");
598016,1224814592,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_qRxLevMin,P_WARNING,swLogPrintf("CCM DEV , ' qRxLevMin ' can only be set to 0 , or -156< = qRxLevMin< = -44 , can ' t set to : %d ");
598016,1224816640,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_reselToWeakNcellOpt,P_WARNING,swLogPrintf("CCM DEV , ' reselToWeakNcellOpt ' can only be set to 0 < = reselToWeakNcellOpt < = 100 , can ' t set to : %d ");
598016,1224818688,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_dataInactTimerS,P_WARNING,swLogPrintf("CCM DEV , ' dataInactTimer ' can only be set to 0 , or > = 15s , can ' t set to : %d ");
598016,1224820736,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_relaxMonitorDeltaP,P_WARNING,swLogPrintf("CCM DEV , ' relaxMonitorDeltaP ' can only be set to < = 15db , can ' t set to : %d ");
598016,1224822784,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_userDrxCycle,P_WARNING,swLogPrintf("CCM DEV , ' userDrxCycle ' can only be set to < = 12 , can ' t set to : %d ");
598016,1224824832,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_relVersion,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' relVersion ' can only be set 13 or 14 , can ' t set to : %d ");
598016,1224826880,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_nbCategory,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' UeCategory ' can only be set 1 or 2 , can ' t set to : %d ");
598016,1224828928,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_rohcProfileBit,P_WARNING,swLogPrintf("CCM DEV , ' rohcProfileBit ' can only be set to < = 0x1FF , can ' t set to : %d ");
598016,1224830976,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_14,P_WARNING,swLogPrintf("CCM DEV , ' bRohc ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to : %d ");
598016,1224833024,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_be_RS_for_ipv6,P_WARNING,swLogPrintf("CCM DEV , ' bIpv6RsForTestSim ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to : %d ");
598016,1224835072,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_ipv6GetPrefixTime,P_WARNING,swLogPrintf("CCM DEV , ' ipv6GetPrefixTime ' can only be set to ( 0~65535 ) , can ' t set to : %d ");
598016,1224837120,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_psSoftReset,P_WARNING,swLogPrintf("CCM DEV , ' bEnablePsSoftReset ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to : %d ");
598016,1224839168,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_bTcpTptOpt,P_WARNING,swLogPrintf("CCM DEV , ' bTcpTptOpt ' can only be set to 0 / 1 / 2 , can ' t set to : %d ");
598016,1224841216,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_bEnableDataCounter,P_WARNING,swLogPrintf("CCM DEV , ' bEnableDataCounter ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to : %d ");
598016,1224843264,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_enableaAcl_1,P_WARNING,swLogPrintf("CCM DEV , ' EnableAcl ' can only be set to TRUE ( 1 ) or FALSE ( 0 ) , can ' t set to : %d ");
598016,1224845312,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_pdpRemap_1,P_WARNING,swLogPrintf("CCM DEV , ' PdpRemap ' can only be set to 0 / 1 / 2 , can ' t set to : %d ");
598016,1224847360,0,0,PS1,CCM_DEV,CcmDevSetExtCfgReq_pdpreact_1,P_WARNING,swLogPrintf("CCM DEV , ' PdpReact ' can only be set to 0 / 1 , can ' t set to : %d ");
598016,1224849408,0,0,PS1,CCM_DEV,CcmDevSetMeasCfgReq_rsrpThreshAdjust,P_WARNING,swLogPrintf("CCM DEV , ' rsrpThreshAdjust ' can only be set [ -388 , 388 ] , can ' t set to : %d ");
598016,1224851456,0,0,PS1,CCM_DEV,CcmDevSetMeasCfgReq_rsrqThreshAdjust,P_WARNING,swLogPrintf("CCM DEV , ' rsrqThreshAdjust ' can only be set [ -124 , 124 ] , can ' t set to : %d ");
598016,1224853504,0,0,PS1,CCM_DEV,CcmDevSetMeasCfgReq_rsrpRptAdjust,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' rsrpRptAdjust ' can only be set [ -388 , 388 ] , can ' t set to : %d ");
598016,1224855552,0,0,PS1,CCM_DEV,CcmDevSetMeasCfgReq_rsrqRptAdjust,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' rsrqRptAdjust ' can only be set [ -124 , 124 ] , can ' t set to : %d ");
598016,1224857600,0,0,PS1,CCM_DEV,CcmDevSetMeasCfgReq_rsrpMeasAdjust,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' rsrpMeasAdjust ' can only be set [ -388 , 388 ] , can ' t set to : %d ");
598016,1224859648,0,0,PS1,CCM_DEV,CcmDevSetMeasCfgReq_rsrqMeasAdjust,P_WARNING,swLogPrintf("CCM DEV , CAT1 ' rsrqMeasAdjust ' can only be set [ -124 , 124 ] , can ' t set to : %d ");
598016,1224863743,0,0,PS1,CCM_DEV,CcmDevGetExtCfgReq_1,P_WARNING,swLogPrintf("CCM DEV , already get EXT CFG PARAM ongoing ");
598016,1224865791,0,0,PS1,CCM_DEV,CcmDevGetMeasCfgReq_1,P_WARNING,swLogPrintf("CCM DEV , already get MEAS ADJUST CFG PARAM ongoing ");
598016,1224867839,0,0,PS1,CCM_DEV,CcmDevGetExtStatusReq_1,P_WARNING,swLogPrintf("CCM DEV , already a AT+ECSTATUS ongoing ");
598016,1224869887,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_1,P_VALUE,swLogPrintf("CCM DEV , stop statisic info report ");
598016,1224871935,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_2,P_VALUE,swLogPrintf("CCM DEV , stop statisic count , but no statisic before ");
598016,1224871936,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_3,P_WARNING,swLogPrintf("CCM DEV , not cfun1 state : %d , can ' t start statisic info report ");
598016,1224873984,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_w_rptS,P_WARNING,swLogPrintf("CCM DEV , statisic interval too short : %d < 1 ");
598016,1224876032,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_4,P_VALUE,swLogPrintf("CCM DEV , start statisic info report with interval : %d s ");
598016,1224880127,0,0,PS1,CCM_DEV,CcmDevSetExtStatisModeReq_5,P_WARNING,swLogPrintf("CCM DEV , already a statisic info report is ongoing ");
598016,1224882175,0,0,PS1,CCM_DEV,CcmDevGetEmmCapaParmCnf_1,P_WARNING,swLogPrintf("CCM DEV , get EMM CFG PARAM CNF , but no AT+ECCFG? is pending , ignore it ");
598016,1224884223,0,0,PS1,CCM_DEV,CcmDevGetCerrcExtendedConfigParamCnf_1,P_WARNING,swLogPrintf("CCM DEV , get CERRC CFG PARAM CNF , but no AT+ECCFG? is pending , ignore it ");
598016,1224886271,0,0,PS1,CCM_DEV,CcmDevGetCerrcMeasAdjustConfigParamCnf_1,P_WARNING,swLogPrintf("CCM DEV , get CERRC CFG PARAM CNF , but no AT+ECMEASCFG? is pending , ignore it ");
598016,1224888319,0,0,PS1,CCM_DEV,CcmDevGetBcInfoFromTinyContext_1,P_WARNING,swLogPrintf("CCM DEV , no saved BCINFO , please AT+ECBCINFO to save the BCINFO firstly ");
598016,1224890367,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_1,P_WARNING,swLogPrintf("CCM DEV , another basic cell info means maybe ongoing ");
598016,1224890624,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_cfun_1,P_WARNING,swLogPrintf("CCM DEV , CFUN : %d / %d is ongoing / pending , can ' t proc BCINFO ");
598016,1224892416,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_sim_1,P_WARNING,swLogPrintf("CCM DEV , SIM is not ready : %d , AT+ECBCINFO = 0 change to AT+ECBCINFO = 1 , let PLMN search ");
598016,1224894464,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_cfun_2,P_WARNING,swLogPrintf("CCM DEV , CFUN is not power on state : %d , AT+ECBCINFO = 0 change to AT+ECBCINFO = 1 , let PLMN search ");
598016,1224897024,0,0,PS1,CCM_DEV,CcmDevGetBasicCellListInfoReq_band_1,P_SIG,swLogPrintf("CCM DEV , BCCELL mode : %d , SIM not ready : %d and emergency disable , or not cfun1 state : %d , should change to search band ");
598016,1224898560,0,0,PS1,CCM_DEV,CcmDevBcInfoManualPlmnSearchCnf_1,P_WARNING,swLogPrintf("CCM DEV , RC not succ ( %d ) in BCINFO PLMN seach confirm ");
598016,1224900864,0,0,PS1,CCM_DEV,CcmDevBcInfoManualPlmnSearchCnf_asyn_1,P_WARNING,swLogPrintf("CCM DEV , CCM RC not succ ( %d ) , or no cell ( %d ) found in BCINFO , not report URC ");
598016,1224904703,0,0,PS1,CCM_DEV,CcmDevSetPowerClassReq_1,P_WARNING,swLogPrintf("AT+ECPOWERCLASS must be restricted to execute under CFUN0 or CFUN4 state ");
598016,1224904704,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_parse_e_1,P_ERROR,swLogPrintf("PS CFG NVM , get next parameter err : %d ");
598016,1224906752,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_parse_1,P_VALUE,swLogPrintf("PS CFG NVM , pCfgParam->paramId %d ");
598016,1224908800,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_unkown_param_1,P_WARNING,swLogPrintf("CCM CFG , can ' t parse paramID : %d , ignore and remove it ");
598016,1224911104,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_rm_w_1,P_WARNING,swLogPrintf("CCM CFG , can ' t parse paramId : %d , type : %d , remove this param ");
598016,1224914943,0,0,PS1,CCM_DEV,CcmCfgPowerOnRead_parse_error_1,P_ERROR,swLogPrintf("CCM CFG , uepsconfig.nvm file parse error , reset to default PS config ");
598016,1224914944,0,0,PS1,CCM_DEV,CcmProcCerrcCcmGetParamCnfSig_1,P_WARNING,swLogPrintf("CCM main , unexpected param type %d in CerrcCcmGetParamCnf! ");
598016,1224919039,0,0,PS1,CCM_DEV,CcmRegProcSimNokIndMsg_2,P_WARNING,swLogPrintf("Power on without SIM inserted , trigger emergency camp on ");
599040,1226838015,0,0,PS1,CCM_PS,CcmPsStartGuardTimer_w_1,P_WARNING,swLogPrintf("CCM PS , start guard time , but guard timer is not null , restart ");
599040,1226838272,0,0,PS1,CCM_PS,CcmPsStartGuardTimer_s_1,P_SIG,swLogPrintf("CCM PS , start guard timer Id : %d , val : %d ticks / ms ");
599040,1226840064,0,0,PS1,CCM_PS,CcmPsProcedureOut_1,P_VALUE,swLogPrintf("CCM PS , proc : %e<CcmPsProcEnum> is ongoing , can ' t enter deep sleep ");
599040,1226844159,0,0,PS1,CCM_PS,CcmPsProcedureOut_w_1,P_WARNING,swLogPrintf("CCM PS , no proc ongoing , but guard timer is not null ");
599040,1226844416,0,0,PS1,CCM_PS,CcmPsProcCesmActEpsBearerCtxCnfSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmActEpsBearerCtxCnf , but CCM curPoc : %d , curCid : %d ");
599040,1226846464,0,0,PS1,CCM_PS,CcmPsProcCesmActEpsBearerCtxRejSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmActEpsBearerCtxRej , but CCM curPoc : %d , curCid : %d ");
599040,1226848512,0,0,PS1,CCM_PS,CcmPsProcCesmDeactEpsBearerCtxCnfSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmDeactEpsBearerCtxCnf , but CCM curPoc : %d , curCid : %d ");
599040,1226850560,0,0,PS1,CCM_PS,CcmPsProcCesmDeactEpsBearerCtxRejSig_w_1,P_WARNING,swLogPrintf("CCM PS , recv CcmCesmDeactEpsBearerCtxRej , but CCM curPoc : %d , curCid : %d ");
599040,1226854399,0,0,PS1,CCM_PS,CcmPsProcDlNonIpDataIndSig_nonip_w_1,P_WARNING,swLogPrintf("CCM PS , CcmPsProcDlNonIpDataIndSig , cannot proc DL non IP data , need enable PS_ENABLE_CP_OPT_FEATURE macro ");
599040,1226854656,0,0,PS1,CCM_PS,CcmPsProcActBrGuardTimerExpiry_w_1,P_WARNING,swLogPrintf("CCM PS , CCM_PS_ACT_BR_GUARD_TIMER expiry , but curProc : %d , guardTimer : %d ");
599040,1226856704,0,0,PS1,CCM_PS,CcmPsProcDeactBrGuardTimerExpiry_w_1,P_WARNING,swLogPrintf("CCM PS , CCM_PS_DEACT_BR_GUARD_TIMER expiry , but curProc : %d , guardTimer : %d ");
599040,1226858752,0,0,PS1,CCM_PS,CcmPsProcModifyBrGuardTimerExpiry_w_1,P_WARNING,swLogPrintf("CCM PS , CCM_PS_MODIFY_BR_GUARD_TIMER expiry , but curProc : %d , guardTimer : %d ");
599040,1226862591,0,0,PS1,CCM_PS,CcmPsProcImsDeregCnfOfCgattMsg_1,P_WARNING,swLogPrintf("CCM PS , proc Ims dereg confirm , trigger PS detach request ");
599040,1226862592,0,0,PS1,CCM_PS,CcmPsProcImsDeregCnfOfCgattMsg_2,P_WARNING,swLogPrintf("CCM PS , pCcmPsCtx->curProc is %d ");
599040,1226864640,0,0,PS1,CCM_PS,CcmPsProcImsDeregCnfOfCgactMsg_1,P_WARNING,swLogPrintf("CCM PS , pCcmPsCtx->curProc is %d ");
599040,1226866688,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_t_w_1,P_WARNING,swLogPrintf("CCM PS , curProc : %d , CGATT , but guard timer is not running ");
599040,1226868736,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_cgact_w_1,P_WARNING,swLogPrintf("CCM PS , curProc : %d , CGACT , but guard timer is not running ");
599040,1226870784,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_cgatt_w_2,P_WARNING,swLogPrintf("CCM PS , PS not attach , and not allow to attach , can ' t ACT a bearer , cause : %d ");
599040,1226873088,0,0,PS1,CCM_PS,CcmPsProcRegAttachCnfMsg_proc_w_1,P_WARNING,swLogPrintf("CCM PS , REG proc ps attach cnf , not curProc : %d , curCid : %d ");
599040,1226875136,0,0,PS1,CCM_PS,CcmPsProcRegDetachCnfMsg_proc_w_1,P_WARNING,swLogPrintf("CCM PS , REG proc ps detach cnf , not curProc : %d , curCid : %d ");
599040,1226877440,0,0,PS1,CCM_PS,CcmPsAttachReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS attach request : %d , but a proc : %d ongoing , reject.curCid : %d ");
599040,1226878976,0,0,PS1,CCM_PS,CcmPsAttachReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS attach request : %d , but guardtimer is created ");
599040,1226881536,0,0,PS1,CCM_PS,CcmPsDetachReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS detach request : %d , but a proc : %d ongoing , reject.curCid : %d ");
599040,1226883072,0,0,PS1,CCM_PS,CcmPsDetachReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc PS detach request : %d , but guardtimer is created ");
599040,1226885376,0,0,PS1,CCM_PS,CcmPsActEpsBearerReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc act bearer request , but a proc : %d ongoing , reject.curCid : %d ");
599040,1226889215,0,0,PS1,CCM_PS,CcmPsActEpsBearerReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc act bearer request , but guardtimer is created ");
599040,1226891263,0,0,PS1,CCM_PS,CcmPsActEpsBearerReq_s_1,P_SIG,swLogPrintf("CCM PS , proc act bearer request , need trigger PS attach firstly ");
599040,1226891520,0,0,PS1,CCM_PS,CcmPsDeactEpsBearerReq_proc_w_1,P_WARNING,swLogPrintf("CCM PS , proc deact bearer request , but a proc : %d ongoing , reject.curCid : %d ");
599040,1226895359,0,0,PS1,CCM_PS,CcmPsDeactEpsBearerReq_timer_w_1,P_WARNING,swLogPrintf("CCM PS , proc deact bearer request , but guardtimer is created ");
599040,1226897407,0,0,PS1,CCM_PS,CcmPsProcDataCounterOptionReq_1,P_WARNING,swLogPrintf("CCM PS , data counter is disable , can ' t proc this cmd! ");
599040,1226899455,0,0,PS1,CCM_PS,CcmPsSetSaveDataCounterPeriodReq_1,P_VALUE,swLogPrintf("CCM PS , stop auto save data counter ");
599040,1226899456,0,0,PS1,CCM_PS,CcmPsSetSaveDataCounterPeriodReq_2,P_VALUE,swLogPrintf("CCM PS , start auto save data counter timer with new interval : %d s ");
599040,1226901504,0,0,PS1,CCM_PS,CcmPsSetSaveDataCounterPeriodReq_3,P_VALUE,swLogPrintf("CCM PS , keep auto save data counter timer with previous interval : %d s ");
599040,1226903552,0,0,PS1,CCM_PS,CcmPsActEpsBearerReq_energency_w_4,P_WARNING,swLogPrintf("CCM PS , reqType : %d , not support emergency br act , should enable PS_ENABLE_EMC_BR_FEATURE ");
601088,1231032319,0,0,PS1,CCM_SIM,CcmSimProcAppStartedInd_1,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId : 21 , argvUint8 : 1 , argvUint16 : 0 , argvUint32 : 0 ");
601088,1231032320,0,0,PS1,CCM_SIM,CcmSimProcAppStartedInd_2,P_ERROR,swLogPrintf("The uicc card inserted in Error state : %x , stop uicc initialization... ");
601088,1231036415,0,0,PS1,CCM_SIM,CcmSimProcAppStartedInd_3,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId : 21 , argvUint8 : 0 , argvUint16 : 0 , argvUint32 : 0 ");
601088,1231036416,0,0,PS1,CCM_SIM,CcmSimProcAppInitCnf_1,P_ERROR,swLogPrintf("Unknown UICC Initialise failure cause : %x ! ");
601088,1231038464,0,0,PS1,CCM_SIM,CcmSimProcCardRemovedInd_0,P_VALUE,swLogPrintf("The uicc state of simUiccStaticCtx is %d ");
601088,1231042559,0,0,PS1,CCM_SIM,CcmSimProcCardRemovedInd_1,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId : 21 , argvUint8 : 0 , argvUint16 : 0 , argvUint32 : 0 ");
601088,1231044607,0,0,PS1,CCM_SIM,CcmSimProcCardRemovedInd_2,P_VALUE,swLogPrintf("The uicc state has been removed , nothing to do ");
601088,1231046655,0,0,PS1,CCM_SIM,CcmSimProcGenAccessCnf_1,P_ERROR,swLogPrintf("Unknown command reference! ");
601088,1231046656,0,0,PS1,CCM_SIM,CcmSimProcReadDataCnf_2,P_WARNING,swLogPrintf("Unknown request item : %x! ");
601088,1231048704,0,0,PS1,CCM_SIM,CcmSimProcUpdateDataCnf_1,P_ERROR,swLogPrintf("Unknown request item : %x! ");
601088,1231052799,0,0,PS1,CCM_SIM,CcmSimProcEpsConnectionModeInd_1,P_WARNING,swLogPrintf("No simUsatDynCtx is available! ");
601088,1231054847,0,0,PS1,CCM_SIM,CcmSimProcEpsConnectionModeInd_2,P_VALUE,swLogPrintf("curr power off state , clear locStatusChange ");
601088,1231055104,0,0,PS1,CCM_SIM,CcmSimStartCfunGuardTimer_1,P_VALUE,swLogPrintf("timer : %d start , timerPeriod : %d ");
601088,1231056896,0,0,PS1,CCM_SIM,CcmSimStartCfunGuardTimer_2,P_VALUE,swLogPrintf("timer : %d has already been started ");
601088,1231058944,0,0,PS1,CCM_SIM,CcmSimStopCfunGuardTimer_1,P_VALUE,swLogPrintf("timer : %d stop ");
601088,1231063039,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_1,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId : 21 , argvUint8 : 0 , argvUint16 : 0 , argvUint32 : 0 ");
601088,1231065087,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_2,P_VALUE,swLogPrintf("MSG = > CcmDevProcSimPoweronCnfMsg , srcId : 21 , argvUint8 : 0 , argvUint16 : 0 , argvUint32 : 0 ");
601088,1231067135,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_3,P_ERROR,swLogPrintf("CCM SIM , SIM cfun guard timer expiry , but no such time info in CCM SIM side ");
601088,1231069183,0,0,PS1,CCM_SIM,CcmSimProcCfunGuardTimerExpiry_4,P_WARNING,swLogPrintf("CCM SIM , SIM cfun guard timer expiry , need to abort the UICC procedure ");
601088,1231069184,0,0,PS1,CCM_SIM,CcmSimUsatProcTerminalProfileCnf_1,P_WARNING,swLogPrintf("unknown terminal profile operation mode %d ");
601088,1231071232,0,0,PS1,CCM_SIM,CcmSimUsatProcRefreshInd_1,P_WARNING,swLogPrintf("Currently the refresh qualifier ( %x ) is not support! ");
601088,1231073280,0,0,PS1,CCM_SIM,CcmSimUsatProcProvideLocalInfoInd_1,P_WARNING,swLogPrintf("Currently the command qualifier ( %x ) is not supported in CCM! ");
601088,1231075840,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_1,P_VALUE,swLogPrintf("Immediate mode : stored PDU length %d , SendDataInd Length %d , offset %d ");
601088,1231077632,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_2,P_VALUE,swLogPrintf("Immediate mode : create new PDU for SendDataInd Length %d , offset %d ");
601088,1231079936,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_3,P_VALUE,swLogPrintf("Stored mode : stored PDU length %d , new SendDataInd Length %d , offset %d ");
601088,1231081472,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_4,P_VALUE,swLogPrintf("Stored mode : create nww PDU for SendDataInd Length %d , offset ");
601088,1231083776,0,0,PS1,CCM_SIM,CcmSimUsatProcSendDataInd_5,P_VALUE,swLogPrintf("tmpPtr->length %d , simUsatDynCtx->bipBufferSize %d ");
601088,1231085568,0,0,PS1,CCM_SIM,CcmSimUsatProcEventDownloadCnf_1,P_WARNING,swLogPrintf("The event ( %x ) download confirm is not ok! ");
601088,1231087616,0,0,PS1,CCM_SIM,CcmSimGetUiccPinState_0,P_WARNING,swLogPrintf("abnormal sim state %d , cannot get PIN state ");
601088,1231091711,0,0,PS1,CCM_SIM,CcmSimGetImsiStr_0,P_WARNING,swLogPrintf("pImsiStr is null! ");
601088,1231091968,0,0,PS1,CCM_SIM,CcmSimHandleUiccFailure_0,P_VALUE,swLogPrintf("simUiccStaticCtx.uiccState %d , NokCause %d ");
601088,1231094272,0,0,PS1,CCM_SIM,CcmSimSendUsatEventDownloadReq_1,P_VALUE,swLogPrintf("abnormal simUsatDynCtx 0x%x , simUsatDynCtx->bipChannel [ %d ] .linkEstOrPsActive %d ");
601088,1231096064,0,0,PS1,CCM_SIM,CcmSimProcUsatDataAvailableReq_0,P_VALUE,swLogPrintf("pDataPdu 0x%x or simUsatDynCtx 0x%x is null ");
601088,1231098112,0,0,PS1,CCM_SIM,CcmSimProcUsatDataAvailableReq_1,P_VALUE,swLogPrintf("BIP PDU channel Id %d is invalid , saved bipChannel Id %d ");
601088,1231100160,0,0,PS1,CCM_SIM,CcmSimUsatOpenChannelRspFunc_0,P_VALUE,swLogPrintf("pCmiOpenChannelRsp 0x%x or simUsatDynCtx 0x%x is null ");
601088,1231102208,0,0,PS1,CCM_SIM,CcmSimUsatCloseChannelRspFunc_0,P_VALUE,swLogPrintf("cmdResult 0x%x or simUsatDynCtx 0x%x is null ");
601088,1231104256,0,0,PS1,CCM_SIM,CcmSimUsatSendDataRspFunc_0,P_VALUE,swLogPrintf("cmdResult 0x%x or simUsatDynCtx 0x%x is null ");
601088,1231106304,0,0,PS1,CCM_SIM,CcmSimUsatReceiveDataRspFunc_00,P_VALUE,swLogPrintf("cmdResult 0x%x or simUsatDynCtx 0x%x is null ");
601088,1231110143,0,0,PS1,CCM_SIM,CcmSimUsatReceiveDataRspFunc_0,P_VALUE,swLogPrintf("pDataPdu->ptr is null ");
601088,1231112191,0,0,PS1,CCM_SIM,CcmSimUsatReceiveDataRspFunc_1,P_VALUE,swLogPrintf("pDataPdu is null ");
601088,1231114239,0,0,PS1,CCM_SIM,CcmSimUsatGetChannelStatusRspFunc_00,P_VALUE,swLogPrintf("simUsatDynCtx is null ");
601088,1231114496,0,0,PS1,CCM_SIM,CcmSimUsatSendSmRspFunc_00,P_VALUE,swLogPrintf("pCcmSimSmsSendSmRsp 0x%x or simUsatDynCtx 0x%x is null ");
601088,1231118335,0,0,PS1,CCM_SIM,CcmSimUsatSmsPpDownloadReqFunc_00,P_VALUE,swLogPrintf("pDeliveredInd is null ");
601088,1231118592,0,0,PS1,CCM_SIM,CcmSimMoSmControlReqFunc_00,P_VALUE,swLogPrintf("pSmeAddr 0x%x or pScAddr 0x%x is null ");
601088,1231120640,0,0,PS1,CCM_SIM,CcmSimUsatRefreshResetFunc_00,P_VALUE,swLogPrintf("simUsatDynCtx 0x%x is null or refreshOngoing is %d ");
601088,1231122432,0,0,PS1,CCM_SIM,CcmSimUsatRefreshResetFunc_1,P_WARNING,swLogPrintf("Refresh qualifier ( %x ) is wrong! ");
601088,1231124736,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_0,P_WARNING,swLogPrintf("changeInfo 0x%x or simUsatDynCtx 0x%x is null ");
601088,1231127296,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_1,P_INFO,swLogPrintf("regstate %d , bLocInfoChange %d , tac %x , currConnStatus %d ");
601088,1231130623,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_debug_2,P_INFO,swLogPrintf("refresh is Ongoing , do nothing ");
601088,1231132671,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_debug_3,P_INFO,swLogPrintf("curr power off state , do nothing ");
601088,1231132672,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_2,P_INFO,swLogPrintf("Location status ( %d ) and location info are not changed ");
601088,1231136767,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_3,P_INFO,swLogPrintf("Location status-limit service is not changed ");
601088,1231138815,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_4,P_INFO,swLogPrintf("Location status-no service is not changed ");
601088,1231138816,0,0,PS1,CCM_SIM,CcmSimRegStatusChangeInfoInd_5,P_INFO,swLogPrintf("Unknown Dereg type %x! ");
601088,1231140864,0,0,PS1,CCM_SIM,CcmSimSetSimSleepFunc_1,P_VALUE,swLogPrintf("Set SIM sleep mode : %d ");
601088,1231142912,0,0,PS1,CCM_SIM,CcmSimGetPreferPlmnListReqFunc_1,P_WARNING,swLogPrintf("unknown select prefer plmn list %d ");
601088,1231144960,0,0,PS1,CCM_SIM,CcmSimProcTimerExpiry_1,P_WARNING,swLogPrintf("unknown timer Id %d ");
606208,1241516544,0,0,PS1,CAM,CamSendCmiOperaNotSuppCnf_w_1,P_WARNING,swLogPrintf("CAM , SG : %d , can ' t proc reqPrimId : %d from handler : 0x%lx , reply : CMI_BASE_OPERATION_NOT_SUPP_CNF ");
606208,1241518336,0,0,PS1,CAM,CamProcCmiReq_1,P_ERROR,swLogPrintf("CAM , SG : %d , can ' t process the reqPrimId : %d ");
606208,1241520384,0,0,PS1,CAM,CamProcCmiRsp_1,P_ERROR,swLogPrintf("CAM , SG : %d , can ' t process the rspPrimId : %d ");
606208,1241522688,0,0,PS1,CAM,CamCmiSyncSigCnf_w_1,P_WARNING,swLogPrintf("CAM , CMI SYNC CNF , cnfId : 0x%x , handler : 0x%x , but no req pending : 0x%x ");
606208,1241524480,0,0,PS1,CAM,CamSendCmiCnfSig_w_1,P_WARNING,swLogPrintf("CAM , CMI SYNC CNF to APP ID : %d , but invalid sigQueId : %d , pass to CMS ");
606208,1241526272,0,0,PS1,CAM,CamProcCamCmiReqSig_0,P_VALUE,swLogPrintf("CAM req , sigId : CAM_BASE , primId : %e<CMI_BASE_PRIM_ID> ");
606208,1241528320,0,0,PS1,CAM,CamProcCamCmiReqSig_1,P_VALUE,swLogPrintf("CAM req , sigId : CAM_DEV , primId : %e<CMI_DEV_PRIM_ID> ");
606208,1241530368,0,0,PS1,CAM,CamProcCamCmiReqSig_2,P_VALUE,swLogPrintf("CAM req , sigId : CAM_MM , primId : %e<CMI_MM_PRIM_ID> ");
606208,1241532416,0,0,PS1,CAM,CamProcCamCmiReqSig_3,P_VALUE,swLogPrintf("CAM req , sigId : CAM_PS , primId : %e<CMI_PS_PRIM_ID> ");
606208,1241534464,0,0,PS1,CAM,CamProcCamCmiReqSig_4,P_VALUE,swLogPrintf("CAM req , sigId : CAM_SIM , primId : %e<CMI_SIM_PRIM_ID> ");
606208,1241536512,0,0,PS1,CAM,CamProcCamCmiRspSig_1,P_VALUE,swLogPrintf("CAM rsp , sigId : CAM_SIM , primId : %e<CMI_SIM_PRIM_ID> ");
606208,1241538816,0,0,PS1,CAM,CamProcCamCmiSyncReqSig_w_1,P_WARNING,swLogPrintf("CAM , CMI SYNC table full : 0x%lx , can ' t proc reqId : 0x%lx ");
606208,1241540864,0,0,PS1,CAM,CamProcCenasCamSetParmCnfSig_1,P_WARNING,swLogPrintf("CAM Main , CEMM PARM setting : ( %d ) , confirm failed : ( %d ) ");
606208,1241542912,0,0,PS1,CAM,CamProcCemmGetParmCnfSig_1,P_WARNING,swLogPrintf("CAM Main , NAS get PARM : ( %d ) , confirm failed : ( %d ) ");
606208,1241546751,0,0,PS1,CAM,CamBaseCmiBaseSubscrbSrvReqFunc_1,P_WARNING,swLogPrintf("CAM BASE , CME_OPERATION_NOT_SUPPORT , when subsribe CAM service ");
606208,1241548799,0,0,PS1,CAM,CamCmiReqEnBuf_1,P_WARNING,swLogPrintf("CAM ; CmiReq BIT buffer full : total 16 request ");
606208,1241548800,0,0,PS1,CAM,CamCmiReqOnBuf_1,P_VALUE,swLogPrintf("CAM , CmiReqId : 0x%lx , already found in the pending buffer ");
606208,1241550848,0,0,PS1,CAM,CamCmiReqBufDelLastOutput_1,P_WARNING,swLogPrintf("CAM , invalid lastOutput index : %d in pending CmiReq buffer ");
606208,1241552896,0,0,PS1,CAM,CamCreateCmiCnf_0,P_VALUE,swLogPrintf("CAM cnf , sigId : CAM_BASE , primId : %e<CMI_BASE_PRIM_ID> ");
606208,1241554944,0,0,PS1,CAM,CamCreateCmiCnf_1,P_VALUE,swLogPrintf("CAM cnf , sigId : CAM_DEV , primId : %e<CMI_DEV_PRIM_ID> ");
606208,1241556992,0,0,PS1,CAM,CamCreateCmiCnf_2,P_VALUE,swLogPrintf("CAM cnf , sigId : CAM_MM , primId : %e<CMI_MM_PRIM_ID> ");
606208,1241559040,0,0,PS1,CAM,CamCreateCmiCnf_3,P_VALUE,swLogPrintf("CAM cnf , sigId : CAM_PS , primId : %e<CMI_PS_PRIM_ID> ");
606208,1241561088,0,0,PS1,CAM,CamCreateCmiCnf_4,P_VALUE,swLogPrintf("CAM cnf , sigId : CAM_SIM , primId : %e<CMI_SIM_PRIM_ID> ");
606208,1241563136,0,0,PS1,CAM,CamCreateCmiCnf_5,P_VALUE,swLogPrintf("CAM cnf , sigId : CAM_SMS , primId : %e<CMI_SMS_PRIM_ID> ");
606208,1241565440,0,0,PS1,CAM,CamSendCmiCnfNotFreeEntity_1,P_WARNING,swLogPrintf("srcHandler : ( %d ) , cnfId : ( %d ) ");
606208,1241567488,0,0,PS1,CAM,CamSendSmsCmiCnfNotFreeEntity_1,P_WARNING,swLogPrintf("srcHandler : ( %d ) , cnfId : ( %d ) ");
606208,1241569280,0,0,PS1,CAM,CamCreateCmiInd_1,P_VALUE,swLogPrintf("CAM ind , sigId : CAM_DEV , primId : %e<CMI_DEV_PRIM_ID> ");
606208,1241571328,0,0,PS1,CAM,CamCreateCmiInd_2,P_VALUE,swLogPrintf("CAM ind , sigId : CAM_MM , primId : %e<CMI_MM_PRIM_ID> ");
606208,1241573376,0,0,PS1,CAM,CamCreateCmiInd_3,P_VALUE,swLogPrintf("CAM ind , sigId : CAM_PS , primId : %e<CMI_PS_PRIM_ID> ");
606208,1241575424,0,0,PS1,CAM,CamCreateCmiInd_4,P_VALUE,swLogPrintf("CAM ind , sigId : CAM_SIM , primId : %e<CMI_SIM_PRIM_ID> ");
606208,1241577472,0,0,PS1,CAM,CamCreateCmiInd_5,P_VALUE,swLogPrintf("CAM ind , sigId : CAM_SMS , primId : %e<CMI_SMS_PRIM_ID> ");
606208,1241579776,0,0,PS1,CAM,CamSendCmiInd_w_sigQ_1,P_WARNING,swLogPrintf("CAM , broadcast CMI IND to APPID : %d , but invalid sigQueId : 0x%lx ");
606208,1241582080,0,0,PS1,CAM,CamSendCmiInd_s_1,P_SIG,swLogPrintf("CAM , CMI IND to handler : 0x%lx , APPID : %d , sigQue : 0x%lx ");
606208,1241584128,0,0,PS1,CAM,CamSendCmiIndToApp_w_1,P_WARNING,swLogPrintf("CAM , CMI IND to APP ID : %d , but invalid appInfo : 0x%x , or invalid sigQueId : %d , destory ind ");
606208,1241585664,0,0,PS1,CAM,CamEncodeGprsTimer3_1,P_WARNING,swLogPrintf("timerValueS : ( 0x%x ) ");
606208,1241587712,0,0,PS1,CAM,CamDecodeGprsTimer3_1,P_WARNING,swLogPrintf("unit : ( 0x%x ) ");
606208,1241589760,0,0,PS1,CAM,CamEncodeGprsTimer_1,P_WARNING,swLogPrintf("timerValueS : ( 0x%x ) ");
606208,1241591808,0,0,PS1,CAM,CamDecodeGprsTimer_1,P_WARNING,swLogPrintf("unit : ( 0x%x ) ");
606208,1241593856,0,0,PS1,CAM,CamEncodeEDRXValue_1,P_WARNING,swLogPrintf("eDRXValueMs : ( 0x%x ) ");
606208,1241596160,0,0,PS1,CAM,CamDecodePTWValue_1,P_WARNING,swLogPrintf("actType : %d , ptwValue : %d ");
607232,1243613184,0,0,PS1,CAM_DEV,CamDevCmiDevSetCfunReqFunc_1,P_WARNING,swLogPrintf("CAM DEV : not support cfun : %d ");
607232,1243615232,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotBandReqFunc_1,P_WARNING,swLogPrintf("CAM DEV : not support ECBAND setting parms , bandNum : %d ");
607232,1243617280,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotFreqReqFunc_1,P_WARNING,swLogPrintf("AT+ECFREQ , invalid mode : %d ");
607232,1243619328,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotFreqReqFunc_2,P_WARNING,swLogPrintf("AT+ECFREQ , set FREQ , but no FREQ / more FREQ : %d ");
607232,1243621632,0,0,PS1,CAM_DEV,CamDevCmiDevSetCiotFreqReqFunc_3,P_WARNING,swLogPrintf("AT+ECFREQ , LOCK CELL , but no FREQ / more FREQ : %d , or invalid phyCellId : %d ");
607232,1243623424,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_1,P_WARNING,swLogPrintf("CAM DEV : not support CIOTPOWER : %d ");
607232,1243627519,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_4,P_SIG,swLogPrintf("CAM DEV , CIOTPOWER wake from HIB ");
607232,1243629567,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_5,P_SIG,swLogPrintf("CAM DEV , CIOTPOWER wake from SLEEP2 ");
607232,1243631615,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerStateReqFunc_6,P_SIG,swLogPrintf("CAM DEV , CIOTPOWER wake from HIB / SLEEP2 ");
607232,1243633663,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtCfgReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , no valid CFG set in AT+ECCFG ");
607232,1243635711,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtCfgReqFunc_3,P_WARNING,swLogPrintf("IMS disable , enableSpsPresent / enableTtiBundlingPresent must be restricted to set in the CFUN0 or CFUN4 state ");
607232,1243637759,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtCfgReqFunc_4,P_WARNING,swLogPrintf("Some Parameters must be restricted to execute in the CFUN0 or CFUN4 state ");
607232,1243639807,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtCfgReqFunc_5,P_WARNING,swLogPrintf("CAM DEV , AT+ECCFG set failed , maybe some parameters not suitable ");
607232,1243639808,0,0,PS1,CAM_DEV,CamDevCmiDevRemoveFPlmnReqFunc_1,P_WARNING,swLogPrintf("CAM DEV : not support AT+ECRMFPLMN : %d ");
607232,1243643903,0,0,PS1,CAM_DEV,CamDevCmiDevGetExtStatusReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECSTATUS? is ongoing , can ' t request again ");
607232,1243645951,0,0,PS1,CAM_DEV,CamDevCmiDevSetExtStatisModeReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , AT+ECSTATIS? is ongoing , can ' t request this ");
607232,1243647999,0,0,PS1,CAM_DEV,CamDevCmiDevSetMeasAdjustCfgReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , AT+ECMEASCFG? is ongoing , can ' t request this ");
607232,1243650047,0,0,PS1,CAM_DEV,CamDevCmiDevSetMeasAdjustCfgReqFunc_2,P_WARNING,swLogPrintf("CAM DEV , AT+ECMEASCFG set failed , maybe some parameters not suitable ");
607232,1243652095,0,0,PS1,CAM_DEV,CamDevCmiDevGetBasicCellListInfoReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECBCINFO / CFUN / COPS is ongoing , can ' t proc current : AT+ECBCINFO ");
607232,1243652352,0,0,PS1,CAM_DEV,CamDevCmiDevGetBasicCellListInfoReqFunc_param_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECBCINFO , invalid mode : %d , or invalid rptMode : %d ");
607232,1243656191,0,0,PS1,CAM_DEV,CamDevCmiDevSetPsTestReqFunc_0,P_WARNING,swLogPrintf("CAM DEV , unsupport ecpstest feature ");
607232,1243658239,0,0,PS1,CAM_DEV,CamDevCmiDevGetPsTestReqFunc_0,P_WARNING,swLogPrintf("CAM DEV , unsupport ecpstest feature ");
607232,1243658240,0,0,PS1,CAM_DEV,CamDevCmiDevSetPowerClassReqFunc_1,P_WARNING,swLogPrintf("CAM DEV : not support ECPOWERCLASS setting parms , power class : %d ");
607232,1243662335,0,0,PS1,CAM_DEV,CamDevCmiDevGetPowerClassReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , another AT+ECPOWERCLASS? is ongoing , can ' t request again ");
607232,1243664383,0,0,PS1,CAM_DEV,CamDevCmiDevSetWifiScanReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , unsupport wifiscan feature ");
607232,1243666431,0,0,PS1,CAM_DEV,CamDevCmiDevGetWifiScanReqFunc_1,P_WARNING,swLogPrintf("CAM DEV , unsupport wifiscan feature ");
607232,1243668479,0,0,PS1,CAM_DEV,CamDevSetCfunCnf_1,P_WARNING,swLogPrintf("CAM DEV ; no CMI_DEV_SET_CFUN_REQ pending when process the cfun CNF from CCM DEV ");
607232,1243670527,0,0,PS1,CAM_DEV,CamDevSetCiotBandCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_CIOT_BAND_REQ ' pending , when process the SET CIOT BAND CONF from CCM REG ");
607232,1243672575,0,0,PS1,CAM_DEV,CamDevSetCiotFreqCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_CIOT_REQ_REQ ' pending , when process the SET CIOT FREQ CONF from CCM REG ");
607232,1243674623,0,0,PS1,CAM_DEV,CamDevGetCurCiotBandCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_CIOT_BAND_REQ ' pending , when process the GET CIOT BAND CONF from CCM REG ");
607232,1243674624,0,0,PS1,CAM_DEV,CamDevGetCurCiotBandCnf_2,P_ERROR,swLogPrintf("CAM DEV , current bandNum : %d , no band info in current setting ");
607232,1243676672,0,0,PS1,CAM_DEV,CamDevGetCurCiotBandCnf_3,P_WARNING,swLogPrintf("CAM DEV , can ' t get current band info , rc : %d ");
607232,1243680767,0,0,PS1,CAM_DEV,CamDevGetCiotBandCapaCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_CIOT_BAND_CAPA_REQ ' pending , when process the GET CIOT BAND CAPA CONF from CCM REG ");
607232,1243680768,0,0,PS1,CAM_DEV,CamDevGetCiotBandCapaCnf_2,P_ERROR,swLogPrintf("CAM DEV , bandNum : %d , no band CAPC info ");
607232,1243682816,0,0,PS1,CAM_DEV,CamDevGetCiotBandCapaCnf_3,P_WARNING,swLogPrintf("CAM DEV , can ' t get band CAPA info , rc : %d ");
607232,1243686911,0,0,PS1,CAM_DEV,CamDevGetCurCiotFreqCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_CIOT_FREQ_REQ ' pending , when process the GET CIOT FREQ CONF from CCM REG ");
607232,1243686912,0,0,PS1,CAM_DEV,CamDevGetCurCiotFreqCnf_2,P_WARNING,swLogPrintf("CAM DEV , can ' t get current FREQ info , rc : %d ");
607232,1243691007,0,0,PS1,CAM_DEV,CamDevSetPowerStateCnf_1,P_WARNING,swLogPrintf("CAM DEV ; no CMI_DEV_SET_POWER_STATE_REQ pending when process the POWER CNF from CCM DEV ");
607232,1243693055,0,0,PS1,CAM_DEV,CamDevCemmRemoveFPlmnCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_REMOVE_FPLMN_REQ ' pending , when process the REMOVE FPLMN CNF ");
607232,1243695103,0,0,PS1,CAM_DEV,CamDevGetExtCfgCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_EXT_CFG_REQ ' pending , when process the get ExtCfg CNF ");
607232,1243697151,0,0,PS1,CAM_DEV,CamDevGetMeasAdjustCfgCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_MEAS_CFG_REQ ' pending , when process the get MeasAdjustCfg CNF ");
607232,1243699199,0,0,PS1,CAM_DEV,CamDevSetPowerClassCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_ECPOWERCLASS_REQ ' pending , when process the set power class confirm from CCM DEV ");
607232,1243701247,0,0,PS1,CAM_DEV,CamDevGetPowerClassCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_ECPOWERCLASS_REQ ' pending , when process the get power class confirm ");
607232,1243703295,0,0,PS1,CAM_DEV,CamDevGetPowerClassCapaCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_ECPOWERCLASS_CAPA_REQ ' pending , when process the get power class capability confirm ");
607232,1243705343,0,0,PS1,CAM_DEV,CamDevSetTxPowerCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_TX_POWER_REQ ' pending , when process the set Tx Power setting from CCM DEV ");
607232,1243707391,0,0,PS1,CAM_DEV,CamDevGetExtStatusCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_EXT_STATUS_REQ ' pending , when process the get ExtCfg CNF ");
607232,1243709439,0,0,PS1,CAM_DEV,CamDevGetBasicCellListInfoCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_BASIC_CELL_LIST_INFO_REQ ' pending , when process the get basic cell info CNF ");
607232,1243711487,0,0,PS1,CAM_DEV,CamDevGetNBRelFeatureCnf_1,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_NB_REL_FEATURE_REQ ' pending , when process the NB Rel feature CNF ");
607232,1243713535,0,0,PS1,CAM_DEV,CamDevGetTimerParaCnf_0,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_GET_NAS_TIMER_PARA_REQ ' pending , when process CenasGetTimerParmInfo CNF ");
607232,1243715583,0,0,PS1,CAM_DEV,CamDevSetTimerParaCnf_0,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_DEV_SET_NAS_TIMER_PARA_REQ ' pending , when process set NAS Timer CNF ");
607232,1243717631,0,0,PS1,CAM_DEV,CamMmSetOosPlmnIntervalCnf_0,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_OOS_PLMN_INTERVAL_REQ ' pending ");
607232,1243719679,0,0,PS1,CAM_DEV,CamMmGetOosPlmnIntervalCnf_0,P_WARNING,swLogPrintf("CAM DEV , no ' CMI_MM_GET_PLMN_INTERVAL_REQ ' pending ");
608256,1245710336,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_1,P_WARNING,swLogPrintf("CAM MM , invalid year : 0x%x in EMM TZ INFO ");
608256,1245712384,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_2,P_WARNING,swLogPrintf("CAM MM , invalid nomth : 0x%x in EMM TZ INFO ");
608256,1245714432,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_3,P_WARNING,swLogPrintf("CAM MM , invalid day : 0x%x in EMM TZ INFO ");
608256,1245716480,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_4,P_WARNING,swLogPrintf("CAM MM , invalid hour : 0x%x in EMM TZ INFO ");
608256,1245718528,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_5,P_WARNING,swLogPrintf("CAM MM , invalid minute : 0x%x in EMM TZ INFO ");
608256,1245720576,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_6,P_WARNING,swLogPrintf("CAM MM , invalid second : 0x%x in EMM TZ INFO ");
608256,1245722624,0,0,PS1,CAM_MM,CamMmDecodeUTCInfoFromEmmTimeInfo_7,P_WARNING,swLogPrintf("CAM MM , invalid timeZone : 0x%x in EMM TZ INFO ");
608256,1245724672,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSelectReqFunc_1,P_WARNING,swLogPrintf("CAM MM , invalid manualMode : %d , in CMI_MM_MANUAL_PLMN_SELECT_REQ ");
608256,1245726976,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSelectReqFunc_2,P_WARNING,swLogPrintf("CAM MM , invalid plmnFormat : %d , or act : %d , in CMI_MM_MANUAL_PLMN_SELECT_REQ ");
608256,1245729024,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSelectReqFunc_3,P_WARNING,swLogPrintf("CAM MM , invalid plmn : %x , %x , in CMI_MM_MANUAL_PLMN_SELECT_REQ ");
608256,1245730816,0,0,PS1,CAM_MM,CamMmCmiMmSetOperIdFormatReqFunc_1,P_ERROR,swLogPrintf("CAM MM , invalid PLMN format setting : %d ");
608256,1245732864,0,0,PS1,CAM_MM,CamMmCmiMmManualPlmnSearchReqFunc_1,P_VALUE,swLogPrintf("CAM MM , Manual Plmn search guard timer is : %d sec ");
608256,1245735168,0,0,PS1,CAM_MM,CamMmCmiMmSetPsmParmReqFunc_1,P_WARNING,swLogPrintf("CAM MM , not support req mode : %d , or req bit map : 0x%lx in CmiMmSetPsmParmReq ");
608256,1245739007,0,0,PS1,CAM_MM,CamMmCmiMmSetEdrxParmReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport edrx feature ");
608256,1245739264,0,0,PS1,CAM_MM,CamMmCmiMmSetEdrxParmReqFunc_1,P_WARNING,swLogPrintf("CAM MM , not support req mode : %d , or actType : %d , in CmiMmSetEdrxParmReq ");
608256,1245741312,0,0,PS1,CAM_MM,CamMmCmiMmSetEdrxParmReqFunc_4,P_WARNING,swLogPrintf("CAM MM , not right reqEdrxValue : %d / reqEdrxValueMs : %d , in CmiMmSetEdrxParmReq ");
608256,1245745151,0,0,PS1,CAM_MM,CamMmCmiMmGetRequestedEdrxParmReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport edrx feature ");
608256,1245747199,0,0,PS1,CAM_MM,CamMmCmiMmReadEdrxDynParmReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport edrx feature ");
608256,1245749247,0,0,PS1,CAM_MM,CamMmCmiMmSetPtwEdrxParmReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport edrx feature ");
608256,1245749504,0,0,PS1,CAM_MM,CamMmCmiMmSetPtwEdrxParmReqFunc_1,P_WARNING,swLogPrintf("CAM MM , not support req mode : %d , or actType : %d , in CmiMmSetPtwEdrxParmReq ");
608256,1245751552,0,0,PS1,CAM_MM,CamMmCmiMmSetPtwEdrxParmReqFunc_2,P_WARNING,swLogPrintf("CAM MM , not right reqEdrxValue : %d / reqEdrxValueMs : %d , in CmiMmSetPtwEdrxParmReq ");
608256,1245755391,0,0,PS1,CAM_MM,CamMmCmiMmGetRequestedPtwEdrxParmReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport edrx feature ");
608256,1245757439,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport cp opt feature ");
608256,1245759487,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_1,P_WARNING,swLogPrintf("CAM MM , set CCIOTOPT , no valid PARM input ");
608256,1245760000,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_2,P_WARNING,swLogPrintf("CAM MM , set CCIOTOPT , invalid PARM : reportMode ( %d ) , ueSuptOptType ( %d ) , uePreferOpt ( %d ) ");
608256,1245761792,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_3,P_WARNING,swLogPrintf("CAM MM , set CCIOTOPT , invalid input ueSuptOptType : %d , uePreferOpt : %d , ( 0-NO_OPT , 1-CP_OPT , 2-UP_OPT , 3-CP_UP_OPT ) ");
608256,1245763584,0,0,PS1,CAM_MM,CamMmCmiMmSetCiotOptCfgReqFunc_4,P_INFO,swLogPrintf("CAM MM , set CCIOTOPT , only set the report type to : %d ");
608256,1245767679,0,0,PS1,CAM_MM,CamMmCmiMmGetCiotOptCfgReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport cp opt feature ");
608256,1245769727,0,0,PS1,CAM_MM,CamMmCmiMmGetCiotOptCapaReqFunc_0,P_WARNING,swLogPrintf("CAM MM , unsupport cp opt feature ");
608256,1245771775,0,0,PS1,CAM_MM,CamMmRegProcedureCnf_1,P_VALUE,swLogPrintf("CAM MM , no ' CMI_MM_SET_AUTO_PLMN_REQ / CMI_MM_MANUAL_PLMN_SELECT_REQ ' pending , when process the REG CNF from CCM REG ");
608256,1245773823,0,0,PS1,CAM_MM,CamMmDeregProcedureCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_DEREGISTER_REQ ' pending , when process the DEREG CNF from CCM REG ");
608256,1245775871,0,0,PS1,CAM_MM,CamMmManualPlmnSearchCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_MANUAL_PLMN_SEARCH_REQ ' pending , when process the MANUAL PLMN SEARCH CNF from CCM REG ");
608256,1245777919,0,0,PS1,CAM_MM,CamMmCemmCamSetPsmParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_REQUESTED_PSM_PARM_REQ ' pending , when process the PSM PARM setting CNF ");
608256,1245779967,0,0,PS1,CAM_MM,CamMmCemmCamSetCiotOptCfgParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_SET_CIOT_OPT_CFG_REQ ' pending , when process the CIOT OPT CFG PARM setting CNF ");
608256,1245782015,0,0,PS1,CAM_MM,CamMmCemmCamGetRequestPsmParmCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_REQUESTED_PSM_PARM_REQ ' pending , when process the GET PSM REQUEST PARM CNF ");
608256,1245782272,0,0,PS1,CAM_MM,CamMmProcCamSignalQualityIndSig_1,P_WARNING,swLogPrintf("CAM MM , rsrq is 0x%x , rsrp is 0x%x ");
608256,1245784320,0,0,PS1,CAM_MM,CamMmProcCamSignalQualityIndSig_2,P_WARNING,swLogPrintf("CAM MM , rsrq is 0x%x , rsrp is 0x%x ");
608256,1245786112,0,0,PS1,CAM_MM,CamMmProcCamLocalTimeIndSig_1,P_WARNING,swLogPrintf("CAM MM , numOfDaysLeft is %d ");
608256,1245788160,0,0,PS1,CAM_MM,CamMmProcCamLocalTimeIndSig_2,P_WARNING,swLogPrintf("CAM MM , numOfDaysLeft is %d ");
608256,1245790208,0,0,PS1,CAM_MM,CamMmProcCamLocalTimeIndSig_3,P_WARNING,swLogPrintf("CAM MM , numOfDaysLeft is %d ");
608256,1245792256,0,0,PS1,CAM_MM,CamMmProcCamLocalTimeIndSig_4,P_WARNING,swLogPrintf("CAM MM , numOfDaysInCurrYear is %d ");
608256,1245796351,0,0,PS1,CAM_MM,CamMmCemmCamGetPlmnSelectStateCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_PLMN_SELECT_STATE_REQ ' pending , when process the CMI_MM_GET_PLMN_SELECT_STATE_CNF ");
608256,1245798399,0,0,PS1,CAM_MM,CamMmOosPlmnSelectCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_START_OOS_PLMN_SELECT_REQ ' pending , when process the CMI_MM_START_OOS_PLMN_SELECT_CNF from CCM REG ");
608256,1245800447,0,0,PS1,CAM_MM,CamMmEmmNwInfoInd_1,P_WARNING,swLogPrintf("CAM MM , no valid info in ' EMM information ' ");
608256,1245800448,0,0,PS1,CAM_MM,CamMmEmmNwInfoInd_2,P_WARNING,swLogPrintf("CAM MM , invalid localTimeZone : 0x%x in EMM TZ INFO ");
608256,1245804543,0,0,PS1,CAM_MM,CamMmCmiMmGetCurOperNameCnf_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_GET_CURRENT_OPER_NAME_REQ ' pending , when process the CMI_MM_GET_CURRENT_OPER_NAME_CNF from CCM REG ");
608256,1245806591,0,0,PS1,CAM_MM,CamMmTriggerTauCnfFunc_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_TRIGGER_TAU_REQ ' pending ");
608256,1245806592,0,0,PS1,CAM_MM,CamMmTriggerTauCnfFunc_2,P_WARNING,swLogPrintf("CAM MM , TAU is triggered : %d ");
608256,1245810687,0,0,PS1,CAM_MM,CamMmTriggerRrcReleaseCnfFunc_1,P_WARNING,swLogPrintf("CAM MM , no ' CMI_MM_TRIGGER_RRC_RELEASE_REQ ' pending ");
608256,1245810688,0,0,PS1,CAM_MM,CamMmTriggerRrcReleaseCnfFunc_2,P_WARNING,swLogPrintf("CAM MM , RRC Release is triggered : %d ");
609280,1247809535,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_GET_DEFINED_BEARER_CTX_REQ ' is pending , can ' t process this one ");
609280,1247809536,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID : %d in CMI_PS_GET_DEFINED_BEARER_CTX_REQ ");
609280,1247813631,0,0,PS1,CAM_PS,CamPsCmiPsDedicateBearerCtxReqFunc_1,P_WARNING,swLogPrintf("+CGDSCONT , Not support Set Ded BR operation , need enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
609280,1247815679,0,0,PS1,CAM_PS,CamPsCmiPsDelDedBearerCtxReqFunc_1,P_WARNING,swLogPrintf("Not support MO delete Ded BR , need enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
609280,1247817727,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_GET_DEFINED_DEDICATED_BEARER_CTX_REQ ' is pending , can ' t process this one ");
609280,1247817728,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID : %d in CMI_PS_GET_DEFINED_DEDICATED_BEARER_CTX_REQ ");
609280,1247821823,0,0,PS1,CAM_PS,CamPsCmiPsReadDynBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_READ_BEARER_DYN_CTX_REQ ' is pending , can ' t process this one ");
609280,1247821824,0,0,PS1,CAM_PS,CamPsCmiPsReadDynBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID : %d in : CGCONTRDP ");
609280,1247825919,0,0,PS1,CAM_PS,CamPsCmiPsReadDynDedBearerCtxReqFunc_1,P_WARNING,swLogPrintf("CAM PS , another ' CMI_PS_READ_DEDICATED_BEARER_DYN_CTX_REQ ' is pending , can ' t process this one ");
609280,1247825920,0,0,PS1,CAM_PS,CamPsCmiPsReadDynDedBearerCtxReqFunc_2,P_WARNING,swLogPrintf("CAM PS , invalid CID : %d in : CGSCONTRDP ");
609280,1247828480,0,0,PS1,CAM_PS,CamPsCmiPsSendUlDataReqFunc_1,P_WARNING,swLogPrintf("AT+ECSENDDATA , invalid CID : %d , or length : %d , or pData : %d ");
609280,1247832063,0,0,PS1,CAM_PS,CamPsCmiPsGetEmcAttachStateReqFunc_1,P_WARNING,swLogPrintf("AT+ECEMCATT? , not support this feature cmd. ");
609280,1247834111,0,0,PS1,CAM_PS,CamPsCmiPsSetEmcAttachDetachReqFunc_w_1,P_WARNING,swLogPrintf("CAM PS , AT+ECEMCATT , not support this feature cmd. ");
609280,1247836159,0,0,PS1,CAM_PS,CamPsCmiModifyBearerCtxReqFunc_1,P_WARNING,swLogPrintf("+CGCMODE , Not support MO modicication BR operation , need enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
609280,1247836160,0,0,PS1,CAM_PS,CamPsCmiPsSetAttachWithOrWithoutPdnReqFunc_1,P_ERROR,swLogPrintf("CAM PS , invalid CIPCA param2 : %d ");
609280,1247840255,0,0,PS1,CAM_PS,CamPsCmiPsSetUeVoiceDomainPreferenceReqFunc_0,P_WARNING,swLogPrintf("CAM PS , unsupport cevdp feature ");
609280,1247842303,0,0,PS1,CAM_PS,CamPsCmiPsGetUeVoiceDomainPreferenceReqFunc_0,P_WARNING,swLogPrintf("CAM PS , unsupport cevdp feature ");
609280,1247844351,0,0,PS1,CAM_PS,CamPsCmiPsSetDefineTFTParmFunc_1,P_WARNING,swLogPrintf("+CGTFT , Not support MO Set TFT operation , need enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
609280,1247846399,0,0,PS1,CAM_PS,CamPsCmiPsDeleteTFTParmFunc_1,P_WARNING,swLogPrintf("Not support MO delete TFT operation , need enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
609280,1247848447,0,0,PS1,CAM_PS,CamPsCmiSetDefineQosReqFunc_1,P_WARNING,swLogPrintf("+CGEQOS , Not support MO set QOS operation , need enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
609280,1247850495,0,0,PS1,CAM_PS,CamPsCmiDelDefineQosReqFunc_1,P_WARNING,swLogPrintf("Not support MO Delete Qos operation , need enable PS_ENABLE_MODIFY_AND_DEDICATED_BR_FEATURE macro ");
609280,1247851008,0,0,PS1,CAM_PS,CamPsCmiSendDataViaCpReq_1,P_WARNING,swLogPrintf("AT+CSODCP , invalid CID : %d , or length : %d , or pData : %d ");
609280,1247852544,0,0,PS1,CAM_PS,CamPsCmiPsTransCiotPlaneReqFunc_1,P_WARNING,swLogPrintf("AT+ECCIOTPLANE , invalid plane set : %d ");
609280,1247856639,0,0,PS1,CAM_PS,CamPsCmiPsTransCiotPlaneReqFunc_2,P_WARNING,swLogPrintf("AT+ECCIOTPLANE , another CMI_PS_TRANS_CIOT_PLANE_REQ pending , can ' t process cur one ");
609280,1247858687,0,0,PS1,CAM_PS,CamPsCmiPsTransCiotPlaneReqFunc_4,P_WARNING,swLogPrintf("AT+ECCIOTPLANE , Not support CP CIOT REQ operation , need enable PS_ENABLE_CP_OPT_FEATURE macro ");
609280,1247858688,0,0,PS1,CAM_PS,CamPsCmiPsDefineAuthCtxFunc_invalid_0,P_WARNING,swLogPrintf("CAM PS , not supprt auth prot : %d ");
609280,1247861248,0,0,PS1,CAM_PS,CamPsCmiPsDefineAuthCtxFunc_invalid_1,P_WARNING,swLogPrintf("CAM PS , invalid userNameLen : %d , or pwdLen : %d , > %d ");
609280,1247864831,0,0,PS1,CAM_PS,CamPsCmiPsDefineBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_BEARER_CTX_REQ ' pending ");
609280,1247866879,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_BEARER_CTX_REQ ' pending ");
609280,1247867136,0,0,PS1,CAM_PS,CamPsCmiPsGetDefinedBearerCtxCnfFunc_2,P_WARNING,swLogPrintf("CAM PS , CID : %d , is a dedicated bearer , PCID : %d , don ' t need to confirm for CGDCONT ");
609280,1247870975,0,0,PS1,CAM_PS,CamPsCmiPsDelDefineBearerCtxCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEL_BEARER_CTX_REQ ' pending ");
609280,1247873023,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxCnf_0,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_DEDICATED_BEARER_CTX_REQ ' pending ");
609280,1247873280,0,0,PS1,CAM_PS,CamPsCmiPsGetDedBearerCtxCnf_1,P_WARNING,swLogPrintf("CAM PS , CID : %d , is a default bearer , PCID : %d , don ' t need to confirm for CGDSCONT ");
609280,1247877119,0,0,PS1,CAM_PS,CamPsReadBearerDynCtxParamCnfFunc_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_READ_BEARER_DYN_CTX_REQ ' pending ");
609280,1247877376,0,0,PS1,CAM_PS,CamPsReadBearerDynCtxParamCnfFunc_2,P_INFO,swLogPrintf("CAM PS , CID : %d , is a dedicated bearer , PCID : %d , don ' t need to confirm for CGCONTRDP ");
609280,1247879424,0,0,PS1,CAM_PS,CamPsReadBearerDynCtxParamCnfFunc_3,P_INFO,swLogPrintf("CAM PS , CID : %d , brState : %d , is not activated , don ' t need to confirm for CGCONTRDP ");
609280,1247883263,0,0,PS1,CAM_PS,CamPsReadDedBearerDynCtxParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_READ_DEDICATED_BEARER_DYN_CTX_REQ ' pending ");
609280,1247883520,0,0,PS1,CAM_PS,CamPsReadDedBearerDynCtxParamCnf_2,P_WARNING,swLogPrintf("CAM PS , CID : %d , PCID : %d , don ' t need to confirm for CGSCONTRDP ");
609280,1247885568,0,0,PS1,CAM_PS,CamPsReadDedBearerDynCtxParamCnf_3,P_WARNING,swLogPrintf("CAM PS , CID : %d , brState : %d , is not activated , don ' t need to confirm for CGCONTRDP ");
609280,1247889407,0,0,PS1,CAM_PS,CamPsGetBearerIpAddrCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_BEARER_IPADDR_REQ ' pending ");
609280,1247891455,0,0,PS1,CAM_PS,CamPsAttachDetachCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_ATTACH_STATE_REQ ' pending , when process the ATTACH / DETACH CNF ");
609280,1247891456,0,0,PS1,CAM_PS,CamPsAttachDetachCnf_2,P_WARNING,swLogPrintf("CAM PS , AT+CGATT , ATTACH / DETACH Fail : %d ");
609280,1247895551,0,0,PS1,CAM_PS,CamPsCemmCamSetCipcaParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_ATTACH_WITH_OR_WITHOUT_PDN_REQ ' pending , when process the setting CNF ");
609280,1247897599,0,0,PS1,CAM_PS,CamPsCemmCamGetCipcaCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_ATTACH_WITH_OR_WITHOUT_PDN_REQ ' pending , when process the CNF ");
609280,1247899647,0,0,PS1,CAM_PS,CamPsGetAPNRateCtrlCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_APN_RATE_CTRL_PARM_REQ ' pending ");
609280,1247899648,0,0,PS1,CAM_PS,CamPsGetAPNRateCtrlCnf_2,P_WARNING,swLogPrintf("CAM PS , CID : %d not activated , can ' t return APNRC , continue... ");
609280,1247903743,0,0,PS1,CAM_PS,CamPsCmiPsGetDefineTftParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_TFT_PARM_REQ ' pending ");
609280,1247905791,0,0,PS1,CAM_PS,CamPsCmiPsGetDefineTftParamCnf_2,P_WARNING,swLogPrintf("CAM PS , CGTFT request all TFTs , current CID no TFT , check next one ");
609280,1247907839,0,0,PS1,CAM_PS,CamPsCmiPsGetDynTftParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_TFT_PARM_REQ ' pending ");
609280,1247909887,0,0,PS1,CAM_PS,CamPsCmiPsGetDynTftParamCnf_2,P_INFO,swLogPrintf("CAM PS , CGTFTRDP request all TFTs , current CID no TFT , check next one ");
609280,1247911935,0,0,PS1,CAM_PS,CamPsGetDefinedEpsQoSCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_EPS_QOS_REQ ' pending ");
609280,1247913983,0,0,PS1,CAM_PS,CamPsGetDefinedEpsQoSCnf_2,P_WARNING,swLogPrintf("CAM PS , CGEQOS request all QOSs , current CID no EQOS , check next one ");
609280,1247916031,0,0,PS1,CAM_PS,CamPsGetDynEpsQoSCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_READ_DYN_BEARER_EPS_QOS_REQ ' pending ");
609280,1247918079,0,0,PS1,CAM_PS,CamPsGetDynEpsQoSCnf_2,P_WARNING,swLogPrintf("CAM PS , CGEQOS request all QOSs , current CID no EQOS , check next one ");
609280,1247920127,0,0,PS1,CAM_PS,CamPsGetAllBearersBasicInfoCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_ALL_BEARERS_CIDS_INFO_REQ ' pending ");
609280,1247922175,0,0,PS1,CAM_PS,CamPsCmiPsAttBearCtxPresetCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_ATTACHED_BEARER_CTX_REQ ' pending ");
609280,1247924223,0,0,PS1,CAM_PS,CamPsCmiPsGetAttBearCtxCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_ATTACHED_BEARER_CTX_REQ ' pending ");
609280,1247926271,0,0,PS1,CAM_PS,CamPsCmiPsSetMtCpDataReportCfgCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_MT_CP_DATA_REPORT_CFG_REQ ' pending ");
609280,1247928319,0,0,PS1,CAM_PS,CamPsCmiPsGetMtCpDataReportCfgCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_MT_CP_DATA_REPORT_CFG_REQ ' pending ");
609280,1247930367,0,0,PS1,CAM_PS,CamPsTransCiotPlaneCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_TRANS_CIOT_PLANE_REQ ' pending ");
609280,1247932415,0,0,PS1,CAM_PS,CamPsCmiPsSetDefineAuthCtxCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_DEFINE_AUTH_CTX_REQ ' pending ");
609280,1247934463,0,0,PS1,CAM_PS,CamPsGetDefineAuthCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DEFINED_AUTH_CTX_REQ ' pending ");
609280,1247936511,0,0,PS1,CAM_PS,CamPsCmiPsSetDataOffCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_DATA_OFF_REQ ' pending ");
609280,1247938559,0,0,PS1,CAM_PS,CamPsCmiPsGetDataOffCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DATA_OFF_REQ ' pending ");
609280,1247940607,0,0,PS1,CAM_PS,CamPsCmiSetDataCounterCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_DATA_COUNTER_REQ ' pending ");
609280,1247942655,0,0,PS1,CAM_PS,CamPsCmiGetDataCounterCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_DATA_COUNTER_REQ ' pending ");
609280,1247944703,0,0,PS1,CAM_PS,CamPsCmiGetSaveDataCounterPeriodCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_SAVE_DATA_COUNTER_PERIOD_REQ ' pending ");
609280,1247946751,0,0,PS1,CAM_PS,CamPsCmiGetTrafficIdleMonitorCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_GET_TRAFFIC_IDLE_MONITOR_REQ ' pending ");
609280,1247948799,0,0,PS1,CAM_PS,CamPsCemmCamSetCemodeParamCnf_1,P_WARNING,swLogPrintf("CAM PS , no ' CMI_PS_SET_UE_OPERATION_MODE_REQ ' pending , when process the setting CNF ");
609280,1247950847,0,0,PS1,CAM_PS,CamPsCmiPsSendRrcConnEstReqFunc_1,P_WARNING,swLogPrintf("CAM PS , not support signal : CMI_PS_SEND_RRC_CONN_EST_REQ. ");
609280,1247952895,0,0,PS1,CAM_PS,CamPsCmiPsSetL2MonitorReportReqFunc_0,P_WARNING,swLogPrintf("CAM PS , not support signal : CMI_PS_SET_L2_MONITOR_REPORT_REQ. ");
610304,1249906687,0,0,PS1,CAM_SIM,CamSimCmiSimFacilityLockReqFunc_0,P_ERROR,swLogPrintf("Unknown lock mode ");
610304,1249908735,0,0,PS1,CAM_SIM,CamSimCmiSimFacilityLockReqFunc_1,P_WARNING,swLogPrintf("Don ' t support FDN / MEP , so send cnf with error code of CME_OPERATION_NOT_SUPPORT! ");
610304,1249910783,0,0,PS1,CAM_SIM,CamSimCmiSimSetExtCfgReqFunc_1,P_WARNING,swLogPrintf("CAM SIM , no valid CFG set in AT+ECSIMCFG ");
610304,1249912831,0,0,PS1,CAM_SIM,CamSimCmiSimSetExtCfgReqFunc_2,P_WARNING,swLogPrintf("CAM SIM , not allowed set SIM slot or softsim in AT+ECSIMCFG as non-cfun0 state ");
610304,1249913344,0,0,PS1,CAM_SIM,CamSimCheckSendUiccStateInd_1,P_VALUE,swLogPrintf("curr power state %d is not cfun1 or bUiccStateIndToIms %d or psImsSolutionType %d , nothing to do ");
610304,1249915136,0,0,PS1,CAM_SIM,CamSimUsatRefreshIndFunc_1,P_VALUE,swLogPrintf("don ' t send refresh Ind as pFileList %x , ImsSlType %d ");
610304,1249918975,0,0,PS1,CAM_SIM,CamSimCmiSimOperPinCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_OPERATE_PIN_REQ ' pending , when process the CCM_SIM_OPERATE_PIN_CNF from CCM SIM. ");
610304,1249921023,0,0,PS1,CAM_SIM,CamSimCmiSimLockFacilityCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_LOCK_FACILITY_REQ ' pending , when process the CCM_SIM_LOCK_FACILITY_CNF from CCM SIM. ");
610304,1249923071,0,0,PS1,CAM_SIM,CamSimCmiSimGenericAccessCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GENERIC_ACCESS_REQ ' pending , when process the CCM_SIM_GENERIC_ACCESS_CNF from CCM SIM. ");
610304,1249923328,0,0,PS1,CAM_SIM,CacSimCmiSimGenericAccessCnfFunc_2,P_VALUE,swLogPrintf("abnormal len %d data 0x%x ");
610304,1249927167,0,0,PS1,CAM_SIM,CamSimCmiSimRestrictedAccessCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_RESTRICTED_ACCESS_REQ ' pending , when process the CCM_SIM_RESTRICTED_ACCESS_CNF from CCM SIM. ");
610304,1249927424,0,0,PS1,CAM_SIM,CamSimCmiSimRestrictedAccessCnfFunc_2,P_VALUE,swLogPrintf("abnormal len %d data 0x%x ");
610304,1249931263,0,0,PS1,CAM_SIM,CamSimCmiSimOpenLogicalChCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_OPEN_LOGICAL_CHANNEL_REQ ' pending , when process the CMI_SIM_OPEN_LOGICAL_CHANNEL_CNF from CCM SIM. ");
610304,1249933311,0,0,PS1,CAM_SIM,CamSimCmiSimCloseLogicalChCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_CLOSE_LOGICAL_CHANNEL_REQ ' pending , when process the CMI_SIM_CLOSE_LOGICAL_CHANNEL_CNF from CCM SIM. ");
610304,1249935359,0,0,PS1,CAM_SIM,CamSimCmiSimGenLogicalChAccessCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GENERIC_LOGICAL_CHANNEL_ACCESS_REQ ' pending , when process the CMI_SIM_GENERIC_LOGICAL_CHANNEL_ACCESS_CNF from CCM SIM. ");
610304,1249937407,0,0,PS1,CAM_SIM,CCamSimCmiSimSetSimWriteCntCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_SIM_WRITE_COUNTER_REQ ' pending , when process the CMI_SIM_CLOSE_LOGICAL_CHANNEL_CNF from CCM SIM. ");
610304,1249939455,0,0,PS1,CAM_SIM,CamSimCmiSimSetSimRemovalCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_SIM_REMOVAL_REQ ' pending , when process the CMI_SIM_SET_SIM_REMOVAL_CNF from CCM SIM. ");
610304,1249941503,0,0,PS1,CAM_SIM,CamSimCmiSimGetSubscriberNumberCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_SUBSCRIBER_NUMBER_REQ ' pending , when process the CMI_SIM_GET_SUBSCRIBER_NUMBER_CNF from CCM SIM. ");
610304,1249943551,0,0,PS1,CAM_SIM,CamSimCmiUsatSetTerminalProfileCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_TERMINAL_PROFILE_REQ ' pending , when process the CMI_SIM_SET_TERMINAL_PROFILE_CNF from CCM SIM. ");
610304,1249945599,0,0,PS1,CAM_SIM,CamSimCmiUsatGetTerminalProfileCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_TERMINAL_PROFILE_REQ ' pending , when process the CMI_SIM_GET_TERMINAL_PROFILE_CNF from CCM SIM. ");
610304,1249947647,0,0,PS1,CAM_SIM,CamSimCmiSimSetPreferredPlmnListCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_SET_PREFERRED_PLMN_LIST_REQ ' pending , when process the CMI_SIM_SET_PREFERRED_PLMN_LIST_CNF from CCM SIM. ");
610304,1249949695,0,0,PS1,CAM_SIM,CamSimCmiSimGetPreferredPlmnListCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_PREFERRED_PLMN_LIST_REQ ' pending , when process the CMI_SIM_GET_PREFERRED_PLMN_LIST_CNF from CCM SIM. ");
610304,1249951743,0,0,PS1,CAM_SIM,CamSimCmiSimImsAuthCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_IMS_AUTH_REQ ' pending ");
610304,1249952512,0,0,PS1,CAM_SIM,CamSimCmiSimImsAuthCnfFunc_2,P_WARNING,swLogPrintf("Auth CNF params error , pRes 0x%x , pCk 0x%x , pIk 0x%x , resLen %d ");
610304,1249954048,0,0,PS1,CAM_SIM,CamSimCmiSimImsAuthCnfFunc_3,P_WARNING,swLogPrintf("Auth CNF params error , pAuts 0x%x , autsLen %d ");
610304,1249957887,0,0,PS1,CAM_SIM,CamSimCmiSimGetEmergencyNumCnfFunc_1,P_WARNING,swLogPrintf("No ' CMI_SIM_GET_ECALL_NUM_REQ ' pending , when process the CMI_SIM_GET_EMERGENCY_NUM_CNF from CCM SIM. ");
786432,1610615296,0,0,CUSTOMER,LUATOS,airm2m_service_1,P_INFO,swLogPrintf("cnf %d , %d , %d ");
786432,1610617344,0,0,CUSTOMER,LUATOS,airm2m_service_2,P_INFO,swLogPrintf("ind %d , %d , %d ");
786432,1610618881,0,0,CUSTOMER,LUATOS,airm2m_service_3,P_INFO,swLogPrintf("nst result %s ");
786432,1610620928,0,0,CUSTOMER,LUATOS,airm2m_service_4,P_ERROR,swLogPrintf("param len %d ");
786432,1610622977,0,0,CUSTOMER,LUATOS,airm2m_service_6,P_INFO,swLogPrintf("find %s ");
786432,1610627071,0,0,CUSTOMER,LUATOS,airm2m_service_5,P_ERROR,swLogPrintf("find at , but no end ");
786432,1610627073,0,0,CUSTOMER,LUATOS,debug,P_ERROR,swLogPrintf("%s ");
786432,1610629376,0,0,CUSTOMER,LUATOS,uart_rx_2,P_INFO,swLogPrintf("uart%d , rx buffer len %d ");
786432,1610631936,0,0,CUSTOMER,LUATOS,uart_rx_1,P_INFO,swLogPrintf("uart%d , rx%dbyte , buffer %dbyte , %dbyte ");
786432,1610633216,0,0,CUSTOMER,LUATOS,uart_tx_1,P_INFO,swLogPrintf("uart%d , tx true done ");
786432,1610635264,0,0,CUSTOMER,LUATOS,uart_tx_2,P_INFO,swLogPrintf("uart%d , tx wait true done ");
786432,1610637824,0,0,CUSTOMER,LUATOS,uart_tx_3,P_INFO,swLogPrintf("uart%d , start 0x%x %u ");
786432,1610639616,0,0,CUSTOMER,LUATOS,uart_tx_4,P_INFO,swLogPrintf("uart%d , 0x%x done ");
786432,1610641664,0,0,CUSTOMER,LUATOS,uart_err_1,P_INFO,swLogPrintf("uart%d , ISR %x ");
786432,1610643456,0,0,CUSTOMER,LUATOS,uart_tx_5,P_INFO,swLogPrintf("uart%d , tx true done ");
786432,1610645760,0,0,CUSTOMER,LUATOS,uart_rx_11,P_INFO,swLogPrintf("uart%d , buffer len %u ");
786432,1610647808,0,0,CUSTOMER,LUATOS,USP_ERR_1,P_INFO,swLogPrintf("usp%d , stat %x ");
786432,1610649600,0,0,CUSTOMER,LUATOS,USB_DIRECT_OUTPUT,P_ERROR,swLogPrintf("dlpdu ( %d bytes ) failure! ");
786432,1610653695,0,0,CUSTOMER,LUATOS,udp_abort_1,P_ERROR,swLogPrintf("this is luatos udp , no need abort ");
<end>
Structs
c5d803ed1c32abdda7889c72706a330b44007a9d105e3650bb7cc7334c46e6ead9cb2bd4823f3d28f5b11d42bbcc8e8960ed47b031e52227cf55b04d1484bdbb75be3e0aa170569578d0b6c7125c98c5d9cb2bd4823f3d28f5b11d42bbcc8e890906e24082aeefbbc16e4c4ebd5d6cbc94ac4803f36db6b29884fee46f813835daaf09b800049a13d1f98621d34ce408bd9fedc030f35273328ea8e7456d5b6d42fab8702ef21963caaba59c634b97b8492622f225bda4302705a702abff793b2497a1446e5810b322c374284bbaf60eb910584cf87112fa569800aeae7e2a2058b4ee3d8ab135b4b1ee0f29027e7040e8c3c4751baaf6de83e328b245e4149dc44181d4e7dabc590de3cf492d3060199350a834c207276d436af5e244608adc764bbfa3e10ca6682b9d18f6c7ae666f4482f635efb73125e1680ffbb77786580f434b027b0c4cb3a1b44f515afc4d0fa4707d22b3535804e08c7958b419f853510111e06b878629b3b09d2daf75d38b359cd0551308bf1fdea509050285c144bea3fe8eedbff6105d225f1a90b37fbce161279b6ec5bf76d9ac95747889d50316d09b7a3ea30a667f720dfe04a403ef89c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe27f16e482df485097431c1dbd6cbcdeb2dbf25497e62c15fb3544079cddfff8cd0ece434a1a22775d85d675f65ac4f8918f093575fe9d3be9dbd33f03505b7aae
e7ef2cd2d7f99999a6738cad5868b0e44ce65f11a256cb0ac2be9103dbe1f7258eff9d4a322a1b446bbd959812092a4a222a7e2e89f57d61ebf1bc24afd3b2cbf6055ee6a990d94ee7ffe91f4ff74dd2703ba157ec54dc69dce08e65ba7171313f0ed8b228cd67bd5f5a7a2214bb70443fc6330b661c40eb4c11dbd3659088436b86f8ac846d17148827e879df9ae02467d5c3b5f21982139ddc085a6322848e8a9373f9155dcb2da5b44dcf919a745b8d9714ac34da04af14aaa0b90b2eda0e
9e11e5df52a1f3865abc1050df6e30bc1ecf7dd9e48a8f9384585fbed3349473268694875db40324f5d8dafa91a5ddaef8a23f7376a97af2759ee649f1afb6d03c5086d3b20c2cd5c9708ba2b2f4ca8fc9d6fd48b5db1cea3b4d92d5367860008eba1ce84b7415ea06846968d17d5c5c2ff340917c6c81733a252fde9dd08c1f0e0d39e801f840437f4b3dc63f84fb8b12b08234695048d200c7ad6dad5e623cd88513f441c5e72ff3f9540f261c33b455a41ada53032b4f6a884f66da67d9ef
8e97cc07221c47aa11f3bdb33448711a7fd7c5943a6ec13fb3c1af4e7577bcbab947ba969c97d91d7d5b14162d3be01ff8a23f7376a97af2759ee649f1afb6d0ece6ae07382b34ece1ed32f6402ea774c653df8bcba8cf1458fe238c0c12711d945e87844b98958c59543917fff09888ce7dbabf69a9abe11b85863d5daeeaccaf85a644dba5710c05afb7e3c93745d4945e87844b98958c59543917fff09888a589fa4d29039d83c648662b8c63c4d2a4707d22b3535804e08c7958b419f853510111e06b878629b3b09d2daf75d38b5145a239529c9b8e14bdd1c3443e3a1fdaaf09b800049a13d1f98621d34ce408d4ae2f766200beaac0f75c03cda04ab213052b26903d1e65713088c8921be0fece781237d9b3efeecb99b843c3fd16b7e7d71c89c0dc36302e53ec82f83ec8cd83cbfd52d7892b0b84cd8e554d3cd39566443bf3ddb00b1d0f3b2afa5f948599d00687e2c54558e84245a291c3f1a99b072b616b28dd11449cde88b03c017b2466443bf3ddb00b1d0f3b2afa5f948599d00687e2c54558e84245a291c3f1a99b04bdd6feb6e01d4751f821770f384af2
157812f8c2addcd61efc53b741789b9ba560f58cea57c1da0e167a40d835a0e99d7051400c52f3ef416edc9f05584a3dca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588c444f96f37c3b7bedd4c4ab00d616669a0cca77b19a1f89ff04a77ec43f03eb5805bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afb1c5036fd8f92ed55e3f9e8351728c2b018f9fb71744b73a41254b6ace731e2a5301da5a0fcbebf0a41f8828780f716fbfadf8cbef7756e8ef6df55b915fa7e59ea43e6e94874b96dcc57579003bf1619908c2953013cda8e657eb2cbc4074a5b48fb917a1492b0c9b93240c7cd920b6670780b503a56c511b8f9cc59fd8b2a94be3aaf7ac2542bfc0f857c9926bc3b85df522259d6d48940bb150b15d01a8be664e00408a858bcc069282d8bca06194f0b30426ef29cecd4d9ae3c48585b2317b9ceaa5171345d7868e2bc87d1abc109f8a23f7376a97af2759ee649f1afb6d0e904fac46b8e924f526ed6754908cf91955de3aedfa16406ca615f5ed72b954c18f9fb71744b73a41254b6ace731e2a5301da5a0fcbebf0a41f8828780f716fbc230c5345930d8aeaccf931c32c4f3962ad4a717dd2751ed93c89ec542e5e4f8b9ceaa5171345d7868e2bc87d1abc109f8a23f7376a97af2759ee649f1afb6d0c69cefdcfe5533966def88b11f2166e939fa77dc74a105ef2f25ffb5ed6dc7fa0cca77b19a1f89ff04a77ec43f03eb5805bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afb3bae4b910795ec7d0e3beab44fe0556eca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588c6712e8ed6e335b0070bfa0b57b5a415de1f0fc96592d89b08614f8ffa9b6c3fc9bfa2b7d52e64a36e23b529790bea1da831e439fc2b13f59c7d5839d808248144f414db0fd9a11919a6bcc8265e588fd812cbe5c10ed44148d657b53b7adb1d5271043d4e2cb09f4ba25785a666a10a24246207cf554b420a94df73a9bff02a0bea3fe8eedbff6105d225f1a90b37fbcad476e34dc16725fa2e7a6d0cadd9f50b947ba969c97d91d7d5b14162d3be01ff8a23f7376a97af2759ee649f1afb6d0b19320c67822b221d4999e0e54a866ae2f3377c85bf9a85750cf81a428790b4b06d5173aa5f9a001fc2d01070d5832725453307812a99155787388a575aedd2dd87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e4bf7ac10c03c1a9dea82b323cfbced2d8ff0d9a308ded223396bec7290a9defa5e8c3c4751baaf6de83e328b245e4149dc9ba4a483570e74bf7a28c7708256885c74d3fe9b2729b27d4f21821cf294e3937ee674de2119dde153d78a25b44d852c06bb5277ae26554a23aa254e7e6c60acd46f732f3195ef9eaaa1c5cfa324fd8945e87844b98958c59543917fff098885b48d3a881df9ccee6ca2c64f58f6840a4707d22b3535804e08c7958b419f853510111e06b878629b3b09d2daf75d38be7fbb541c13c343d885c8ef781c0690a5041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f59073fd4150cbe5964d08f61f76848b385cc094e65b959722176febf654233f0d49b06d5173aa5f9a001fc2d01070d5832721687ae9c8925761a8c96bf0a60843cdaff0d9a308ded223396bec7290a9defa5e8c3c4751baaf6de83e328b245e4149d501b98e23991d2d818948c128ac62a15a4707d22b3535804e08c7958b419f853510111e06b878629b3b09d2daf75d38b09d0e917754af110422e87d5eb56d64f53835173b1f0e725d18df789519f6ff744f14e2e517ae86f049e8caf534082e5b5d25d924ae93809b12ead4076f0761f53835173b1f0e725d18df789519f6ff744f14e2e517ae86f049e8caf534082e51a3b085f9886de33ee0add4500445a48
97e9546b7157ea44db207d9843e0904a58f35f45a540e0cdb9330e79749f633c597dd53a13923f2a23be45bc948c00d0a95d1421942a056a074776a6dce011d9dbe53f1898df26c1c16cef8ec23ad379a1570d3d455c03defec50f103746c1dfce781237d9b3efeecb99b843c3fd16b76d6d7a316373975c18349f8000feadf6d404d8218694c8f2c243947380ddcf06bea3fe8eedbff6105d225f1a90b37fbcac1910f9a22fa96a206cce2cd4b66e5b0d5c647d989a488a885c7d8fc0a3054519fe62e40aceb0f96f1879d1549dc4a6f229ca5e3d8a2372cdee642c1a55433c9f3c05d6628122dd432fe6f15d030a66ce781237d9b3efeecb99b843c3fd16b7e7d71c89c0dc36302e53ec82f83ec8cdf609d80604e107662860cfae96a08f4d
b6e9790ada30a263d2fda9b5e6a47f3b3168d4f39fed6b4c17ceabc78a30fb310764578f277f41cbf50227264a1c4af5f8a23f7376a97af2759ee649f1afb6d089260b0c180fbe76293ea7d63a8e504d48a8984d7d250cb14354ae418254b1997f76e44ccfd997dcd0373065906583765ae772ae58c37aa83fda41baadbd47ca712311a106ee8f64529c89f60ceacb44f8a23f7376a97af2759ee649f1afb6d07c88574e120462fae52928c31796650e
78571c05c4ba9de5a8584b4b219a65c2eb2eff36f90772f4b9420c201865f43555103678f580c7e304eb5258580487682e230e2e745141b09d50d437abec89b2a7d56c29938ff13fe9ab5a231b6ad8b855103678f580c7e304eb52585804876845e292b54ce6f06f7e1fbcdc201cecda7924e65e814cabd9681082964718a18d812cbe5c10ed44148d657b53b7adb1d5483d2603495035a4085f5d28bc1ef5038d9714ac34da04af14aaa0b90b2eda0e
a9c06f68e4d92035227db3902235761d909e1c246c7671f1ee24c599c34289c64e1480dd528f4b39a299007cc2caef71f82b433b3327087809ae28fcfcb34436945e87844b98958c59543917fff09888da03cb5acbb6904a42e90ca8083ab3117dc4fe7e70f5d339e565874b7c76fc015b3647a0b41ccd2da0d760f183ef074034c3475d1cc76fe99eae73c44167bbe2fecca34b60757992edf742aa3882c49b
d4850550a1fa9b771e1ca7ebf8f85fae6f74a1c6b8545b1fcdbfb75fd6569729daaf09b800049a13d1f98621d34ce40865360c7f1f7dd8f509ee4bac19538f848224bf0da615a6c36cac36a0ca1f3e3a8ec09d87fceabddc7a5ff3c6406cf35070480932717793bfb7cdabeec5f41212
6221357e45c85671121266d3b7d25fcc6f74a1c6b8545b1fcdbfb75fd6569729daaf09b800049a13d1f98621d34ce40865360c7f1f7dd8f509ee4bac19538f848224bf0da615a6c36cac36a0ca1f3e3a14fe5e10217bf98194d924714bde16fd70480932717793bfb7cdabeec5f41212
2eb4f630f33887d3c5d01d782358bc35eb8f87af4a69624a0502ab871f1eba24aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012f17ba4648c9644fd5533a064fe766117e093d01551a8fd7423422447111bb28d5f8a23f7376a97af2759ee649f1afb6d0e371d5da9830d2c1586567953d77ad17314c965490aded88e07dec0d7c03d95fc0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06bbfcb99eaf1003d52562b2113c0edd477511728a1bc34235fcaa07ec0e95047b2fd894da2d583ae8c194825b03f84aefa81bb92a61672ce0cea361cd7e21ca8fe6f754cb23549e12d95be0aa8a9ffadeaeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012fabf1746c623c5737e91b4495a8efd344df80d09ed98f2cf89419fd4311e7ca7605bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afbc396f61c4efcc2496ab6cbf0977b8505c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06afc1a1474e52263d5b550f13fa8f791eddd6821be217cfbb006a85339b9e8eae2fd894da2d583ae8c194825b03f84aef9c815e85c417c5b44f790379b83ba47362455a46e82f859f9b18f4ca0fe25b91aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012fb0a13c340d2ec6b454bb701f33168371839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b668550605dd3355b6eb1511caaa535bb311623579774daacfe46457d34a2306e1853835173b1f0e725d18df789519f6ff73fcc6d5a947141eba850c29dbd0333af5a0019819ca536b0a2c603dfba43021183f5075df60a08f467ea5e32cc46f9ca08b5e234b7f9eb586c3344b797be81925c045ca26a81eb136c1ff13678d74359fa66ce320fa5c9f570c33d6f6708adcdaeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012f53937e86f494d77b2113ed494b261a7c00a69028c75e3b9a9587b1303bb20c999eab6a2e525cbf58dc3b828707f2841fe6e986b26b6b576a19e7dbcd9172bac1cb47d0bd99f5df380bae46c437201093c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f0678a03b5971a636594dfeb07c6a423c4d4a73e615cf70e196b81cf20f47e5f0e8ca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588cfb59bca3249407415b572a167f8876115218e65e885794db8c4b7443fb563cbdf8a23f7376a97af2759ee649f1afb6d0dbbad982037321df0c59304acaf3bfcd635ca3fadb03854a7a434a6d9da9164eca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588ce97729340dce0781b4adbd24a8c3abe9be31e1ac1e44627c646d6efa552826ff05bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afb7a785ab49e3ddad1fdb7b47b31d3fb1fc0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06d970d09a381ae6b8bc48a32c0fa8ecba856fed539b1dc9da0398d085dd9ed378301da5a0fcbebf0a41f8828780f716fb2c8e39d713d721aa68a88c68f4ce129cbc2fa7761b015cc3cf6a13507137988a422f92cebfbdea5560ed401434f97fcfb5636c1c33bc3046d36c5d37c02d7a24d9f22fd081394c7ca19a4b4d91442e54839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b660291d66a2fbf722242a43b9ae5fca8c1cf44c643d28237aa58be9c788b6554b0492622f225bda4302705a702abff793ba5b62234f3ea7e2a2cfd7a9689646d39f76b6b32eb99bd9fa049107611e31eb2839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b66ae6683e0514381225356d62705185ec8c4083f9b03167190d63771f4e995003cca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588c252e0ce4b89be71bcb5171ed701268979bb9a0b103c2c9d750afaf1f010dc70e2fd894da2d583ae8c194825b03f84aef9c815e85c417c5b44f790379b83ba47309023e26e4baceb1dc8aa6fdb59af620492622f225bda4302705a702abff793ba5b62234f3ea7e2a2cfd7a9689646d39407f772f982b8498927fead560a7f58b422f92cebfbdea5560ed401434f97fcfb5636c1c33bc3046d36c5d37c02d7a24804cb83aa3ae57a794e5b86768a7b4b1e91042b7d2de0a627f43d5a97043aa3b08b5e234b7f9eb586c3344b797be81925c045ca26a81eb136c1ff13678d7435950aac0dad5b01a26606f093eb5bb13e8c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f062bb389e233654426352e2bf2abb63bac66443bf3ddb00b1d0f3b2afa5f948599d00687e2c54558e84245a291c3f1a99b0f67c357f905c89426ae0807b1d1219a
048e090de0b78b0c196870e515079022eb8f87af4a69624a0502ab871f1eba24aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012f17ba4648c9644fd5533a064fe766117e093d01551a8fd7423422447111bb28d5f8a23f7376a97af2759ee649f1afb6d0e371d5da9830d2c1586567953d77ad17314c965490aded88e07dec0d7c03d95fc0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06bbfcb99eaf1003d52562b2113c0edd477511728a1bc34235fcaa07ec0e95047b2fd894da2d583ae8c194825b03f84aefa81bb92a61672ce0cea361cd7e21ca8fe6f754cb23549e12d95be0aa8a9ffadeaeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012fabf1746c623c5737e91b4495a8efd344df80d09ed98f2cf89419fd4311e7ca7605bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afbc396f61c4efcc2496ab6cbf0977b8505c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06afc1a1474e52263d5b550f13fa8f791eddd6821be217cfbb006a85339b9e8eae2fd894da2d583ae8c194825b03f84aef9c815e85c417c5b44f790379b83ba47362455a46e82f859f9b18f4ca0fe25b91aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012fb0a13c340d2ec6b454bb701f33168371839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b668550605dd3355b6eb1511caaa535bb311623579774daacfe46457d34a2306e1853835173b1f0e725d18df789519f6ff73fcc6d5a947141eba850c29dbd0333af5a0019819ca536b0a2c603dfba43021183f5075df60a08f467ea5e32cc46f9ca08b5e234b7f9eb586c3344b797be81925c045ca26a81eb136c1ff13678d74359fa66ce320fa5c9f570c33d6f6708adcdaeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012f53937e86f494d77b2113ed494b261a7c00a69028c75e3b9a9587b1303bb20c999eab6a2e525cbf58dc3b828707f2841fe6e986b26b6b576a19e7dbcd9172bac1cb47d0bd99f5df380bae46c437201093c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f0678a03b5971a636594dfeb07c6a423c4d4a73e615cf70e196b81cf20f47e5f0e8ca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588cfb59bca3249407415b572a167f8876115218e65e885794db8c4b7443fb563cbdf8a23f7376a97af2759ee649f1afb6d0dbbad982037321df0c59304acaf3bfcd635ca3fadb03854a7a434a6d9da9164eca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588ce97729340dce0781b4adbd24a8c3abe9be31e1ac1e44627c646d6efa552826ff05bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afb7a785ab49e3ddad1fdb7b47b31d3fb1fc0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06d970d09a381ae6b8bc48a32c0fa8ecba856fed539b1dc9da0398d085dd9ed378301da5a0fcbebf0a41f8828780f716fb2c8e39d713d721aa68a88c68f4ce129cbc2fa7761b015cc3cf6a13507137988a422f92cebfbdea5560ed401434f97fcfb5636c1c33bc3046d36c5d37c02d7a24d9f22fd081394c7ca19a4b4d91442e54839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b660291d66a2fbf722242a43b9ae5fca8c1cf44c643d28237aa58be9c788b6554b0492622f225bda4302705a702abff793ba5b62234f3ea7e2a2cfd7a9689646d39f76b6b32eb99bd9fa049107611e31eb2839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b66ae6683e0514381225356d62705185ec8c4083f9b03167190d63771f4e995003cca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588c252e0ce4b89be71bcb5171ed701268979bb9a0b103c2c9d750afaf1f010dc70e2fd894da2d583ae8c194825b03f84aef9c815e85c417c5b44f790379b83ba47309023e26e4baceb1dc8aa6fdb59af620492622f225bda4302705a702abff793ba5b62234f3ea7e2a2cfd7a9689646d39407f772f982b8498927fead560a7f58b422f92cebfbdea5560ed401434f97fcfb5636c1c33bc3046d36c5d37c02d7a24804cb83aa3ae57a794e5b86768a7b4b1e91042b7d2de0a627f43d5a97043aa3b08b5e234b7f9eb586c3344b797be81925c045ca26a81eb136c1ff13678d7435950aac0dad5b01a26606f093eb5bb13e8c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f062bb389e233654426352e2bf2abb63bac66443bf3ddb00b1d0f3b2afa5f948599d00687e2c54558e84245a291c3f1a99b0f67c357f905c89426ae0807b1d1219a
65ed93ef551fce0f41657053506b4ae900027b2befaf9e078b87a153ef09590a666e6a4437e76d1ab0b1f9234c267aeee8c3c4751baaf6de83e328b245e4149db6f400d618818a545d5d47fb406d86914439622c24b24d6945b66069b25bfad393010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14eea667fd7116121abb896988baa017d4da4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb794bfd52089635a6babb4dc0f562e2dd8889c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe2f82c85dc841959e83a12d00a77a71f1dd87773b130e31e9d69aa77a08d58260aadd45e64178466c2547c5dfbb2ffb98a0878b2992a2a4d44f7619877b51814eddaaf09b800049a13d1f98621d34ce4086af031696e359ca9173ce5b5aa7ef2ea
7409bb7a2960bcf8662a5fcd33972d6d56eb43560e4865d645552c208bc3d9cce1f0fc96592d89b08614f8ffa9b6c3fc9bfa2b7d52e64a36e23b529790bea1daa677bc7d99dc4b7b926eff92e91d3150ca08c78259430297f29efc0805e19c642fd894da2d583ae8c194825b03f84aef9c815e85c417c5b44f790379b83ba473e2fa4217d4254fd037957178f860db4e839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b661474dc404283804d1e391f17cae09d1a936b085932621c4807db55634f166d3d492622f225bda4302705a702abff793ba5b62234f3ea7e2a2cfd7a9689646d3914eb4d73fb530a8999c7caf144833171e1f0fc96592d89b08614f8ffa9b6c3fc9bfa2b7d52e64a36e23b529790bea1da79dcf2b0482f9029f4cc2a92fa5de106f74b09b22837c347605a0410ac17d24b08b5e234b7f9eb586c3344b797be81925c045ca26a81eb136c1ff13678d743599cb9fccdb28e9d47e633e76beaaa66ac908c2953013cda8e657eb2cbc4074a5b48fb917a1492b0c9b93240c7cd920b66dbec2fd0af6fb97552a1e6d17174c2ef46c898278dec923d75b09882ca647db8492622f225bda4302705a702abff793ba5b62234f3ea7e2a2cfd7a9689646d39b7ba360b4a645b3fce4756081db54066e1f0fc96592d89b08614f8ffa9b6c3fc9bfa2b7d52e64a36e23b529790bea1da1ca678bb45f1ee3fd8cbf1988912ce40be31e1ac1e44627c646d6efa552826ff05bb46ca8c0c85eb0bd01fe55230b5eec68c8f1e5d7ebb446b8e7f5f7116a345a557c9bfb7bfd2204ee07d8b5a46579f66443bf3ddb00b1d0f3b2afa5f948599d00687e2c54558e84245a291c3f1a99b384c82ea7e244676c413b43df8f6ffe9f0cd7ade29f09a0ad347628c4a06f524ca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588c136985e897cb9a3415ac6bcde2e6f663e1f0fc96592d89b08614f8ffa9b6c3fc9bfa2b7d52e64a36e23b529790bea1daecd4f1c719d555d99eb50b3c0c37b01ff75ae1d56277cee9fd12b81ce1b6b5dddf522259d6d48940bb150b15d01a8be664e00408a858bcc069282d8bca06194f437f800b1ec9361fe8f013cb8ef843bb839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b66d30021a2c99a45a721d7327296c7124717a7c951479839bc06886348d1ed34c3aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012ff453b090bf8fcb1753d00969e439d48c4c26af2e0736237405b57d4fbf9ffd902fd894da2d583ae8c194825b03f84aef9c815e85c417c5b44f790379b83ba47348e88a40c24dff19cea0319ef4382be4aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012f7cf49d08b34b73fb5f54431150403450e91042b7d2de0a627f43d5a97043aa3b08b5e234b7f9eb586c3344b797be81925c045ca26a81eb136c1ff13678d743594e8b70fe8602c4b786e74eb355cd1a62839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b66744f1455b1f6edfecb6497860d66f5aeb03c4693cd56dcc1c8d5bfbbd0ca96899eab6a2e525cbf58dc3b828707f2841fb4a2308107a37a72b5c6c82c0138f5025c5a46b3827792a4292fcb411796ac68c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06dda371f1301887d57952b26e629bc96e431383dc345e128313a7985058c5b7a105bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afb133ea693a51650de38076302633bc479422f92cebfbdea5560ed401434f97fcfb5636c1c33bc3046d36c5d37c02d7a2445d02db7fdcebef54c64dfe983164635be31e1ac1e44627c646d6efa552826ff05bb46ca8c0c85eb0bd01fe55230b5ee6cfa510c65e70da7f1754a59c1065afb43f284ae6610194a66154e8c43bb6531aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012f922bd04c6bab8764871e446de3126488458e4549e895ae1c1844a67a98d79323492622f225bda4302705a702abff793ba5b62234f3ea7e2a2cfd7a9689646d39c0c73792c49581d5c1acd160a4f3072b422f92cebfbdea5560ed401434f97fcfb5636c1c33bc3046d36c5d37c02d7a2452b755442bf6ca5e61631364fdc6e926c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06faea6173237c531178029c41a8132caf72c9fb9eccf92b233ca139612326e175ca6596d28e408e2fd060a45c51ae236a9fc5b872f20266d30a37a4885759588c177fd0ff1ef3c24183064e865922ee84839acb4c4d52abcab0b45733503d580b48fb917a1492b0c9b93240c7cd920b66079f1ca669f8a7f4465718fbec1bd6651a883704263e3d393398605fc04df246f8a23f7376a97af2759ee649f1afb6d0d35a40d9ca14dabd03b7b630728e13b5
13b916f13e6a53cb32a9f077d24ae9b74c53eedaa35a2e06c135b83fd3d0bdad355049bbe4da813b2aedc386658d902e89c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe2363430bb789a57e8222c10224e4c8f62
2f374e6b8d635b770bf303fc0e88ba3ad583d365420565a6d37b5d5ebaa6878789c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe2664718c8565142fba0e76d5fa392391f3f9e929564fe992fc15884f66a1f697fe8c3c4751baaf6de83e328b245e4149d62a29d0f539782be8e1ba38bc0c6d51dc24d356c09c3a210f89cce6b5049103ae8105983b43074229e1f7fce0fdf182359fa515904e6504177ecd3036bb5cd5e62f4162ea1678bcce3f55e1ee4d94979
56e176a2b01caa01b99a014cb3ceeacad57320b880a55def2d312c01636ae3391dd7a5b70e100bf6752daee24174e905a255a9b4d06895e996a30ee35b0500afbd55741fcc9e9c82f202cddc14e0c787945e87844b98958c59543917fff09888bf5cee83487bf8d82fcf81c52fc0d1cdce781237d9b3efeecb99b843c3fd16b70b32ced2ef08c309ca7e48a694d4ebc55041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907b65ac987c89c4ea9187bc215411d857537ee674de2119dde153d78a25b44d85255061088680f91b4426f9493753a1030b70778fdad7878780b535e254582ed46945e87844b98958c59543917fff0988842cb8558e0a525db4f38fcea4bc0a655550e81b9f5064573869eeed7e53d53b529e164ad369af0830fe9888c80a3a7c98d9714ac34da04af14aaa0b90b2eda0e
5e037046fc01fa8bc4639d1f0465aab6057d44190617ee0351fb7bbbea4644de1dd7a5b70e100bf6752daee24174e905a255a9b4d06895e996a30ee35b0500affd8f7d215f0648ac735b4f6ceebe4f827f76e44ccfd997dcd0373065906583767aa35592e8faf3c85a38b9b688ff09fba4707d22b3535804e08c7958b419f853510111e06b878629b3b09d2daf75d38b54caa8928226ea02bbe58dc553bed89c812cbe5c10ed44148d657b53b7adb1d5854662e621b38f90f07af6a5c9d924aa
bb81f4b52298f84a6f842af3469f0a26bc4918cea390771ee97787e3640d9827de1dd12cd3dce30c92710c0e0d12f85006d5173aa5f9a001fc2d01070d583272ebceee3e6f7f30b3b956c4a745c3482b0d7517eb73da0ff580ed87c6a81ba9cb945e87844b98958c59543917fff09888043d87892d79bb2869e4608b9b315440d0bb2b0ba62b1a9e32f737ef03f7a411f8a23f7376a97af2759ee649f1afb6d00ddf4dd8ca7c5252a81203a00e3c1cbe5041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907f157e6b3d0ef5e2075935559e42202d939d5ff4096b007b35dfb3cafb657cfad945e87844b98958c59543917fff09888d34bee04b4bcdd229c0249da5c664ade
4f3a7854dfe643ac796b30dc3509ac7fd8706284ca050501fe6299c2de82ae55789fef2be4e69dfc9829fdab7b825b9b2b33c5d284183758aa46232697ae385f5f3399b66a68e85b75f57d6bb2eed3a3
9c0f4fd1bc40fd478457b27d18d4429e4d15c2512e2facfe836ea7eff4da5ce3ce781237d9b3efeecb99b843c3fd16b7dd9486468f455f4c24838ae4332c0ab7094e65b959722176febf654233f0d49b06d5173aa5f9a001fc2d01070d58327286b97bd8abd1185b41a636975c2dd80dce781237d9b3efeecb99b843c3fd16b7f74a445106fc9cdf60b45b6b7405120fb6bcb2b80249232cda6ec6fdbef4372306d5173aa5f9a001fc2d01070d583272d967bd2dd54fbc7bcc18619ca7d7038037ee674de2119dde153d78a25b44d8523a5512bb41c2c0933399a02ef078103f34dbf5202e34c6e449667e4c08fb5288bea3fe8eedbff6105d225f1a90b37fbcbc5a8031a7c246266363157b7473aef9
3cb22c9570534419f78814b73b53e5f3ab19e377f1fd2f407861aa4dae8a3a55c8bfd64d72e860e4195b66e52a4d281e7f76e44ccfd997dcd037306590658376719d0fa9a8e831c2799acded278b60172fa424d9b1ba541af26f454464b8df6412bc6f19bedf6ebf2fb4a2b634fac68e7b1dbc289ceec77fa14d823536990075d999126ecb99c249d15a59e3de21e6120ca9aec8538ed101a2f4bf604129584d090bc4f84ef5496b6443ec1a8fe23df5bd5f134173a06135477197fb3764fc9f15295ad41d3f9d9514fd9729dc489de4607aa799b7cc1b3fc17609c1eed6275169eba384e5cd6b46f69de12e937dbf804f424b05d3c988401cfb48b20593b081492622f225bda4302705a702abff793b250a0dfb5a4480f5647560bee13937b2
00530eb6e608f6f94b939578941af83a566f8d993eb9db69753d3b0b6226e5aff34013821628db10d2823d6582903f9e1dd7a5b70e100bf6752daee24174e905a255a9b4d06895e996a30ee35b0500af7d2939f9a8ca9e44ec4a3657d1ea0671ce781237d9b3efeecb99b843c3fd16b79b818745994ebcce9b331e6fb796675cf2a83f1bd502d340dde5c8bc0473bd3e1dd7a5b70e100bf6752daee24174e905a255a9b4d06895e996a30ee35b0500af10eb9ff6b8a4822e889498d9caa5c8d12b33c5d284183758aa46232697ae385f22d7b557c80125c82477cf073dddfbf2ca6596d28e408e2fd060a45c51ae236a15264b62f60dc627f75cfc892cfc69ecd104b298860b415d86fe17f4bdada67a4dcf058a6f963f6faaedad7cbe94c6a859fbe1cece454cf3471499be02083fb440394883e873dda78420ce41d3b9fe363a5da9768ad3313ee09386eb9b2af126e9f4baf9a23f3f872a1d649b9b4059e5d999126ecb99c249d15a59e3de21e612a756749785ba170c202e5450f33e952026e236de91c37cb78d473da8221426f008b5e234b7f9eb586c3344b797be819238d603c3eb967d0eb12ebd5f3182a7843621a8c18dd71be3445ca51d533f2e2f2fd894da2d583ae8c194825b03f84aef319ffaec3d5fcc871bd2814022a64b7bc02bb52d061b9371be38966b155f27ffb558872af9996e7e63f0e0cae5a55ce234c060fe30593effa6055f8adffd50d54d681ce50c58f09b6a5b4dd82d1d11eba175d3fa3fd3554eade31dc770d7d748c2e559c228495bb52a0cbc528c99cfaf607aa799b7cc1b3fc17609c1eed627519790e0ee9f4cc26174b75e2bcdd4dcec734141df9ded9f664bc006eeea50923c8338862de977399405260de8403b92a06f6d44ed3df52b3cc4a3af5011fa3559
e0812a1bd3df6ef2f05666d7e93883dc783c57b487008c54cd53a49aea62954f875a1fb2bd383c56f85cce98afb91bb2b34767a07d05582f9b7040472de9ca7c67966b28d38dd0de86c4d108c254f0fad999126ecb99c249d15a59e3de21e612bd20b04058600d3859fcf191ff280fdc6e4e1023d6e02bee263fbaaedcd5d6dfbd5f134173a06135477197fb3764fc9f26bfc5bf0f342300887e21ac83abe632
011dc8db447732c9253f09fce88e8944c9ec1979a3484904c7e5eb1d0a8d8acabd2493455d64368cc2d9dcca8a8ca7f4f8a23f7376a97af2759ee649f1afb6d03f644778e7f7705d7547a17bda789822163cc2e006e995ac60e1e5a468ac656e34765c61998fcc8bc99d990db85ad8afe33495d372b8d9b5e09fd3cf20cfb822b44a036ec1f011d080a32a3a04bccb36b15c2eaaef97328b4ab7e075edd53266
6f89b04f5a5b8af098aba441a9ae41717539e9308e9d0462d4441080990a89a089c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe2abc9031dc4f2b5659a6785bdf613858f01caa90fd7e1b3f3f3344ac70d98a43ee8c3c4751baaf6de83e328b245e4149d21e4ff85187a5e943f3af56b7946c70286b57479dd9febebe35b8b318398cee6
0ff13b4afda9cd13711800135e6b9934c9ec1979a3484904c7e5eb1d0a8d8acabd2493455d64368cc2d9dcca8a8ca7f4f8a23f7376a97af2759ee649f1afb6d09d06df8c0af1a43c2646e426727979f09f228d194737d6944df6ea9097ee4389945e87844b98958c59543917fff09888417940563dd0071d6fe0fad7e005ce9289c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe234edc420d7596fba70e1c598d38a594d550e81b9f5064573869eeed7e53d53b529e164ad369af0830fe9888c80a3a7c9543a58a36f3d23de9c7856b5559d42668338862de977399405260de8403b92a0cf236630f06dbbe0602afdfada98f00dac859eb2e99943454d8c228be60ec710de5b5e39e2361696cbed2d1d2671c7dca91f9f2b232a17d3eb8f56cdadaa11850f7dda5f95691f7f8fd517a338c9ad482caf6620e7e2fe12c6b0959627d7a6fb
6d3ec703b957c4c1af867109ee17d181c9ec1979a3484904c7e5eb1d0a8d8acabd2493455d64368cc2d9dcca8a8ca7f4f8a23f7376a97af2759ee649f1afb6d0d5ae3379293aa6633da05464b662d98e93010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e574724bfec0533efd09f9fdbf4c16cb9bea3fe8eedbff6105d225f1a90b37fbc6f581df7ee5f99b32973d9ddf3b94bda0138cd4c2311a52cd836469ea55c4f3137ee674de2119dde153d78a25b44d852a3a881d56f951f9cb8aea8cdefa4f37d893f9100cc66b282507bc73a1e7a79e4ce781237d9b3efeecb99b843c3fd16b7e7d71c89c0dc36302e53ec82f83ec8cdbf559894eb2ffb58f1e6d1db4a2a9158
b5ef6ae5b8170d5b1bd895b14fa42764c9ec1979a3484904c7e5eb1d0a8d8acaace93dbcb62ddfb559592f88ea128b6b53532bd7de088f4b68d222b6037c7921836fb93ebe8f0791987d9db079ae9976a45b0e8dcdccad6fd4ced9fdd8fd751453532bd7de088f4b68d222b6037c7921e3f40c0d309972757ff78bcaf9db9f8cd87773b130e31e9d69aa77a08d58260aadd45e64178466c2547c5dfbb2ffb98aa0e8067d471d76694e2334309060f9ede8c3c4751baaf6de83e328b245e4149d2bb05aad5e7ae0a63449d572c08e0133ea93b1d0398810cb7dd371727ab4dcbee8c3c4751baaf6de83e328b245e4149d153d925aca365345882a99ae29fc48707f8ef11a2c6112d34c808887316c124ae8c3c4751baaf6de83e328b245e4149d2bb05aad5e7ae0a63449d572c08e013376c3ae16148143fbd123698d49c93017d87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e4a7d5702f128d2b9be8615ed4939b53d1a66a57ea024f656d6150237e3d2871a4945e87844b98958c59543917fff098889e01c7a7e11db863c9b0054a2d463e99bc77deebff6de611a3727dcd101cbb2c93010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e5af7af68c881d7d407b7a591727c9674a66a57ea024f656d6150237e3d2871a4945e87844b98958c59543917fff098882f962e000f79d8e495e1aa0311b023212a85ae746e960d9bfb258f9f3e1ebf6fce781237d9b3efeecb99b843c3fd16b7e7d71c89c0dc36302e53ec82f83ec8cd0f42beca7a9f52e00843858e097a136a5041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907c1fb09ff3cf10552e5fde7ec7d9dcd39e41df1b4c3934a917273e52f7dc6e64e812cbe5c10ed44148d657b53b7adb1d5356ecc453eed3e689605ea9b7adc6936a2ffeed55c44f3dfb20c3b689e49848793010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14ee39444546a78930f82ed2028c767f61647bc6d025c22c1df17f83a210d923e0d37ee674de2119dde153d78a25b44d8525e9584d20305c4fc1369f3aeb6155923108df67e314a18057faf21a0e964d1ca93010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14ea7628905e24fdf92bd725d06ab7874d25eea6762948e778d3209c876cd477495bea3fe8eedbff6105d225f1a90b37fbc314d5ab2559ec696ac25d9673227a398cd57fd427f1822eb73589efab492a0c7d87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e487d914b3ac8c5a358f20f8c78a764570302d0dd442a41a18699b12c350fa84fff8a23f7376a97af2759ee649f1afb6d03e25823af11bb4e565d489cb3ec6e30b43f331941ae7f35f27a51f61cd8d63dad87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e43b269886ed8cfa3b045d5483fa8235a6698a5d23253a4910ab9a13dcff2e9ada06d5173aa5f9a001fc2d01070d5832721bd8ef725524b177b852559a483e6bc0536a220e90acfd065ca672c48b53a4f9ce781237d9b3efeecb99b843c3fd16b7e7d71c89c0dc36302e53ec82f83ec8cd40245b92d072ba2a0b3aa44748454e5b
2aca0778ea9d6c0d2b5659bb969b49c63116c2685027c965af8fa0fb3ddcd833fe3f8d35b9690c1740610858bf3a6560e8c3c4751baaf6de83e328b245e4149d9593f56d8cd246791888faf2f195e67245ef0fb1326cc5ddb7d3786f4a471ead7f76e44ccfd997dcd0373065906583766a893c0ab8c943c15243485f42c6dc2ea55d4348c72e6b47287ad47020cb288b37ee674de2119dde153d78a25b44d8525b5f8c8b4f34d15734a77f782f23881866b8fef288a590d32bb2b613d00308f8d87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e4b8e3034852c1c3193d22df21fbddac27
ff34463fff5f56a66eb386e047934db039173d3d1aa0d81f018284a16fa26faa95bcb79296cf19c0697c8c1437eb3519f06d9e9f4763d9ea9aa781494d1da14eca6db5e44414ea6324821554cacb7e0a812cbe5c10ed44148d657b53b7adb1d570ce5c717beeffa468c547f56d8995cd09fa207252ee4bcc5e806fde8c3deb0df5b08f4f84ce84f80d9737081d3af2d24a0a10aba0ce08233cdf4ce8d0235c01c7ab682aeb3676a1573859a72f3247efe299304e66f69c1ce3194b8713102ff8bd3dcf826d86cde03d0d4b0501eaa2932061bf9568d37604e00605c8a9e67e5cbea3fe8eedbff6105d225f1a90b37fbc882458d54b62b4e4ed0695345671e56c1a3b085f9886de33ee0add4500445a48
bf23c39d946e378ab3e870c8f92b59ba45bcb48f8fb6ef38d96357d0e1005a03a4707d22b3535804e08c7958b419f853510111e06b878629b3b09d2daf75d38b54caa8928226ea02bbe58dc553bed89c812cbe5c10ed44148d657b53b7adb1d5c77a05139a1b5bfdda5def592a19548cefaf5a7a77c0e7ac65a7e97c9fe63a500241dba70aa19ee3be5dc9abc99534656a0f73f276637ddb0c6fe1acfe6d6c07
bbca95d4680b56eb3600ebdafe7c317b6485a9b4cdd8f062b2163348506ef4817455a5018e55de132c3c6c2d82beebad19fe62e40aceb0f96f1879d1549dc4a68d356ca63f86ac7c4386eef957afe2ff1a3b085f9886de33ee0add4500445a48
386bc640a7422158f4f1c1dced0291208d26a136f7cbf684dac0e6db4d81df443e829e970351c3d77684013bc0dbd04906d5173aa5f9a001fc2d01070d5832723c90572404fb27bdb3992f0671d9d9b65041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907e6721e4151155ae2cff90a5de275f7d0aae494d7daab1f7a9732179b8cafd562f8a23f7376a97af2759ee649f1afb6d07c88574e120462fae52928c31796650e
8f17639025f6e8813af6133001e9f9c32917c7d960c47a674376d332faaa8cf98e79b74baa3d927d323afdc914619b7fbea3fe8eedbff6105d225f1a90b37fbc98d81b0ed20b316dd1aad9746a7cf8e9532e45d73ac44ba933c940a7dd1f085b812cbe5c10ed44148d657b53b7adb1d563eca19060a5c0ef56d75c1823249b22b4c9edbeef223cbef498d5c5e59f927955103678f580c7e304eb525858048768cf8c4860382831d61b2aec4256c599c6
5d2a9eedaf3ec596e0a3592b97c13bcb6342db89a2f929db3281d7a97c77f44795bcb79296cf19c0697c8c1437eb3519f06d9e9f4763d9ea9aa781494d1da14eaac2f01f1c0bed82c2cffb25199d940889c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe202738e0817fe2d9e5b983e30e05ffa573e829e970351c3d77684013bc0dbd04906d5173aa5f9a001fc2d01070d583272d1c5c0e83dfbf27d50f2fa45429a97c6301da045d0ddebf14f05ee72ece3d13e945e87844b98958c59543917fff098885633f1e09821f5976a532749ae035042626ad963d13817a22d23be3cac06df9df78b55cc11cfd6dcc8073493e8087f6e8b9f74b01c527b948830f37ea8cfa0327cc7d723e3de6421c2067ab002e6ab3514cb1a7f9f37de294da2f284c2488c8e5d4492f7cc3d04167586fb822a371cec
bb3ce6345352ae3f864f107d09c8487f5357c99fed64b42d0110b225834c3632792db5e6c635c916f510aa3be4b9a038945e87844b98958c59543917fff0988821e0821aba9a78eb0d1cca1875e4701e3dca4dc0d79be04a5cf89c4c593694356d28eeea88e9f39395d1fc03006e8233a99568c1d9a9dc408bc26065efd674f8baf7e8a083d13ae8f5bf6f68b02441aa678db09e54aec00ccea2ec93e392f938
ef0dc27b7eab2262e35a79ef0ced53e53fc1e8f59707fa7e20ef0459ff8d60ce3e829e970351c3d77684013bc0dbd04906d5173aa5f9a001fc2d01070d5832724ecd984d1dbbacdbad6db6e13b619d380809ccda599f9c143280efbf5f11e19de8c3c4751baaf6de83e328b245e4149dd87e7cd9c8a3b4ebdc4c78300a24580156f7f87ab99facbfe85bc130c3d8fc04222a7e2e89f57d61ebf1bc24afd3b2cb88be0a13ef035e74feca2b246d02808c3d8df9fc74729c5c0948cdb1f765c97433e68175c31560f5959b07bcb02b688e32a83b4922c57ab35f07f3c2541ec2c926148293b64005c5e46d78dff03ebabc
ca930e8f42d0d52705ce3267358cebbcc9d6fd48b5db1cea3b4d92d5367860008eba1ce84b7415ea06846968d17d5c5cd4e9a1814a006b111ab877db3e1dd19a97b82e4bffeea0516aa2c134afff31b2f8a23f7376a97af2759ee649f1afb6d07c88574e120462fae52928c31796650e
54bb8875c740d2470cd6d7adca92083f11b941835990b43818d95927fca6c1dc5041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907c24cec92e9638795e9452cc8dba5f7d0daaf09b800049a13d1f98621d34ce408ffd42dc5a523f720aace211648774caa6554613db6d81495e6e2132c1ea8962755103678f580c7e304eb5258580487680e1f7ec55296bb8d9018d032f8dafa4efa652e7bf88c21336e52b0031db517bddf522259d6d48940bb150b15d01a8be6745d2fbc349b649e469f84eae4b9ee32
36c24f20269c1c659d60f1614a7560ec7d3f8f84b95a9ddc4aff25eeac8a6f77f847cde4ba1470350409ecf67e25d191daaf09b800049a13d1f98621d34ce408ffd42dc5a523f720aace211648774caa4486d22796da9d7491d8f943a7013af90f68768871c7255ecef83c9642035346bea3fe8eedbff6105d225f1a90b37fbcbc5a8031a7c246266363157b7473aef9
59025da06322a391bef62f7881290d21504ca6ede2e52d0181f6f69759ee1b7f7b1b180d699a1c0c8812b1a04081ef31945e87844b98958c59543917fff098884f32887abc00a2a58422d62611aadcdfd87773b130e31e9d69aa77a08d58260aadd45e64178466c2547c5dfbb2ffb98ac1aeaacaf7e6c50ad6fe3ccac3f27ffbe5cccc0781105f49127451bda9eaff1fa82bbc4f4aa89d97a98c842f1d07eb1bea76f87038aa08e859495fe712255a2ffecca34b60757992edf742aa3882c49b
f24024aff169e75f04536b0d7bc366fde08f2b79022df209663cec19dd7ddba682d6a8b8f182ad05f08ebd5052e9e5c8db3c52201b2004811e38a0549aaf6f0907f9a8793ec5596567a269fa0faf24aba546163a1502b597bf89a0e42c89b3da7f76e44ccfd997dcd037306590658376f344fbc2e8254ea15dc9e3b5284b033890a478f77dd4ac8d9fcbe98d1f5ee11bd4cff51ce08ef853b4adcf13c68f66c556433a3fd4654caea54c210d5c43a83d678db09e54aec00ccea2ec93e392f938
98fd2054fd5dac87e7154d7875fb5b50223b6176169fc37b922aba46fab786e70b01cf0d94e1cdd47961427a1c6d7ffb37ee674de2119dde153d78a25b44d852c764cb429f3fb847f7bf1566022e23a2a3d92d73291281222d0d3d375e7e3096a5a5ef5baae309a66e654a3887677a9b38e594bdf56201523fddc6955a645da6edaa5b1a794cd99c3a70a4f45a033dd922a803c0ec361a7106eacf6660869bd9678db09e54aec00ccea2ec93e392f938
3c0f2cf67adf6b4623a7ce6d9ce2e0281118ad500f065fc158638f4fb9c5887fa4707d22b3535804e08c7958b419f853510111e06b878629b3b09d2daf75d38b58a376359c090e5981d47a15ed9962cdbea3fe8eedbff6105d225f1a90b37fbc0808c66831a1d05b2e524fc9e11b5ff94a74e27eb0d887f739afebb624749abcbbcf0aed0f7289ff96d210af8aa9e701cefa0c4de96d7dadc079d7ed7f4a98d5c9054ee4e0a4295f79770e5d50e153f301d2b578f2ad98e1754f2ecf15501124d3557f0ceb51ab46df70380125367f3808c6ef362c8ae99a1ad7c27e325dc96f335392280969c6e4130cf95dbfa2a7f3c8a9b3b3257b6269d6269e03c330d625
1c52201ffdfa17a665634c4263b99eb705276351d94a3b5880847e096b9dceb893010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e00b1e4465cac5d5abd5ab869ae80ef2f37ee674de2119dde153d78a25b44d85255061088680f91b4426f9493753a10306931b4e091c49626e1171b02a4150439945e87844b98958c59543917fff09888e24c2a7dccf397add17a999542b906a6f07a705c04087f6cc83b083f25e9cf190b0d6535d21657569a601c98e8f1e8396200b0dd2b74f7c2813f84c79e46bc8cf20d72c37592d7e3d494e9b7e73bce2f8d9714ac34da04af14aaa0b90b2eda0e
45a14e51faa073c830af806c8debb42347ca3d3f2cbee02e35a0397b956b45ef19d8cc3c4821ce0de2d5c96aefab69ba455a279a57e39bfc4c5688c0294e653e301da5a0fcbebf0a41f8828780f716fb06807dceb28d7ff9141403a9fa83c340
64caad9bebaa25f517f40960f34677d888f0fce1c15b354b2b7bea7c76462758e22513d5eb0c0c964d5bb03005b59894e299304e66f69c1ce3194b8713102ff860c9fd4009bfd725e1f7fffac41e7715792db5e6c635c916f510aa3be4b9a038945e87844b98958c59543917fff098884272b991054c3d9fde1ca2ed7819a84f703ba157ec54dc69dce08e65ba7171313f0ed8b228cd67bd5f5a7a2214bb7044eb1b052aff7a65f588823d0348ee1c52
64caad9bebaa25f517f40960f34677d82a7664872c32b0069b009ab5fe6461d2e22513d5eb0c0c964d5bb03005b59894e299304e66f69c1ce3194b8713102ff860c9fd4009bfd725e1f7fffac41e7715792db5e6c635c916f510aa3be4b9a038945e87844b98958c59543917fff098884272b991054c3d9fde1ca2ed7819a84f703ba157ec54dc69dce08e65ba7171313f0ed8b228cd67bd5f5a7a2214bb7044eb1b052aff7a65f588823d0348ee1c52
f201a0d09ad709741af9b6dbbef564f805949e3d307c146db0e6bdd5076474c193d5c6d438d215c16b4e95ef917af3c6be6b35103b9fa20a8d0dae3a89a26f8382b6d5a8eabbac793abd05ebaafae8134ee3fb7cdc568513c64600c9d3928eacf4370021b3bf4ebe6dd80ca657694ead1a3b085f9886de33ee0add4500445a48
0f9182f572ed3a803c46f51de023c28dc139c4606ca0c5fd0f2fe7309e4468b91dd7a5b70e100bf6752daee24174e90507a528bf917e6924474cd08ce5f8e1fd35edceaaa19efb975d7d997a9185537b
1215ebaf311ed5ea6a84b7cd992d9e9d95db6d1a5f6adbb8e6e3def59f17f438c2f69415b6578907864e5630e870713929a2541d5941450bca4d665112e83a5d310277e8934c574972be1fe5d33f4365150d80b3a0e8c4aa60dc8a486cfc68fc295f009ec3e8e49b15174b257f57472fbbcf0aed0f7289ff96d210af8aa9e701f00351830596c56dffe229de3ce27791de9c4345d985cff814061b3103086a4e7ad5d35bb63761f78efba3e24d69b9380ce4ceb308e7aefda069bc089d016d12db3c0360618b0b7565f1b3c1eb7587cbc9d6fd48b5db1cea3b4d92d5367860008eba1ce84b7415ea06846968d17d5c5c84abd6f827490e14378c7c0578795d4e
05db7098e957588635fc28ec1109da585f92d3146b5076cff1c5620c08cae156eee8690c637b239832e13481ff280929bea3fe8eedbff6105d225f1a90b37fbc0808c66831a1d05b2e524fc9e11b5ff9b8a3ef26d2f0f0a77f98e96f8c5e326b06d5173aa5f9a001fc2d01070d5832727b11fd3f4bb83c0e783539fc43b7991e29a2541d5941450bca4d665112e83a5d88bdca6eec63b9673c9d3615c9dbfbcd92ed5936269ef356054b30a37149034e714ac5ab363917318b6c78a16c903c7f77d2099fad22f180eff6706719ff4090
1eb6d274bc9ab05d215b9dabe5fe4cf87b10c5d53120f53cf64f19966afb4023f1df2776b83d661be4d044aeb83dd690aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012fd2e9aff736c802169b6eb67bf9f73840aeee3a0a53e8b77fb0b2a0ba6b227ff039034ed1dd1dc12231a4eb8a87ca012f9f2dc4ffa84e0448ee48c13605325c92908c2953013cda8e657eb2cbc4074a5b48fb917a1492b0c9b93240c7cd920b6693dc800257f97dadce391fba29099d73af9aec944cf078c4ae429dd9d1c6e74605bb46ca8c0c85eb0bd01fe55230b5ee0dc25269879252cff00508cf4ef4dc26678db09e54aec00ccea2ec93e392f938
94b57d31cbc744d34c1d5748711cf679d9acb48741e272ee7654b66674a910e12fd894da2d583ae8c194825b03f84aef98d7fca327f35b9eefe566c86f1c3cf5c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06fecca34b60757992edf742aa3882c49b
1edd41b0c87a494f4b126e38db5de277d9acb48741e272ee7654b66674a910e12fd894da2d583ae8c194825b03f84aef98d7fca327f35b9eefe566c86f1c3cf5c0c156b8853038074cdfc2bbb455c57dea337ee8aadf19d992baca17d1954f06fecca34b60757992edf742aa3882c49b
ece15b20eda7a1e1961910dc885ef79c6e26c27e33fea7bc7e5db1b239ea248075bc1cbeab8489bf51ad4ff47797b2abce781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc93977eec17a5236136c56ab412399abe3ae837ee674de2119dde153d78a25b44d852d85c8d805c21c00255644a496f50f20d88d0bdb3a55d856275721320e7d32870bea3fe8eedbff6105d225f1a90b37fbc02370c5378d71049eeedc07c6310a2090a990060bdac131d9c9a71f12d5afbec812cbe5c10ed44148d657b53b7adb1d591e9c8bcb55035fe52e998b395904b7ffbe9b3575eb3df51c747a1cec40b4eb7e8c3c4751baaf6de83e328b245e4149db6f400d618818a545d5d47fb406d86911c5f000da6e01e67f33d9d38afde22bd7f76e44ccfd997dcd037306590658376a2293d8cc73d766a80eae769dbb20858dd0dc57d0625fd16477629325e1d8b9bf8a23f7376a97af2759ee649f1afb6d08a5fb189802a7dc57393124172f53e9a27ddde199473453b0c7f716875782ae4945e87844b98958c59543917fff09888562f31d6a85316350f47c2238430f127dc72cfad36c0633d31936071975287ec06d5173aa5f9a001fc2d01070d5832726e92d6c7ea71277f0fe55d51ab166da95041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f590786d291bdc59b9eea228785493544a76389c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe203ffd587b68ae7064a029b671a3775ca93010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e11afd0b961ff48184c92de9a42b79abda4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb79ccdd1d562cc31c249298258cb4d0479ad87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e44749fed09176a65a95a91c8283c02c381dd7a5b70e100bf6752daee24174e9054eb5ec281b53c01a50b8437ffe3fafb3598c8b985f9a40752ea36af1c9ae85a4daaf09b800049a13d1f98621d34ce408ba1596553992a52f5e211ea4d037ed14e9ee04042f32b465cc4caca4cdbfc4d9ce781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc9397867afce17d94e5d1f64e696ffdbdc57237ee674de2119dde153d78a25b44d852d85c8d805c21c00255644a496f50f20d0f6e0a39fd50e3a33d84fb86931220e1bea3fe8eedbff6105d225f1a90b37fbc02370c5378d71049eeedc07c6310a209886e76b7d8c6e2a649a59992736940fa812cbe5c10ed44148d657b53b7adb1d591e9c8bcb55035fe52e998b395904b7f0bedb403f62617a210bcb56f58ed0a31e8c3c4751baaf6de83e328b245e4149db6f400d618818a545d5d47fb406d86912ee69b556237db51e2c53ef524ddc04e7f76e44ccfd997dcd037306590658376f4dc0b3b619ecf1377d8d8bb68168567dd0dc57d0625fd16477629325e1d8b9bf8a23f7376a97af2759ee649f1afb6d0ac47e5d8171ba9c33f4e2b099a49e94c27ddde199473453b0c7f716875782ae4945e87844b98958c59543917fff0988897c7b5702d448aea85a45cfc53d3b1ffdc72cfad36c0633d31936071975287ec06d5173aa5f9a001fc2d01070d583272504d925c32278d5f6fb415c7c7c217975041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907eee5d4fe6103b8c0f426c5da53168b8789c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe27616e2dfa201c06a0e0b1c75b7f010aa93010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e1bb58a9da4510c77715dc750ec0fb974a4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb79c62c82476a141d72d64add6a5e5b1dd9d87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e41fe02012d030c5b8161d6f3e6f1be8341dd7a5b70e100bf6752daee24174e9054eb5ec281b53c01a50b8437ffe3fafb3daeaa460f7fbb276eceb9dd366dbe9c0daaf09b800049a13d1f98621d34ce408ba1596553992a52f5e211ea4d037ed141a179356553ce4d3011c7b5b1c79c076bea3fe8eedbff6105d225f1a90b37fbc02370c5378d71049eeedc07c6310a209a6e620b61709a3769567234f22183f401dd7a5b70e100bf6752daee24174e9054eb5ec281b53c01a50b8437ffe3fafb30f154c8156fdfafe624a03ad382912aece781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc9397a15b3533f634f8feab6a9a84ed73f47fbea3fe8eedbff6105d225f1a90b37fbc02370c5378d71049eeedc07c6310a2092e0b7c136ffb69feccc4e082958ec15bce781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc9397f5d14d6d82109aa15fee9c721a61ed6f1dd7a5b70e100bf6752daee24174e9054eb5ec281b53c01a50b8437ffe3fafb3b14dc2f9af3b0bfc477fe2b17efb77381dd7a5b70e100bf6752daee24174e9054eb5ec281b53c01a50b8437ffe3fafb301f545ecc438fc6580fe0873f76bc5f4a4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb79dddb18c21c3dde35b4723dec9530d17189c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe2d3fea012a474d6f87892b01daa68162d3411ac533c80333257ff685e1bc2a1da7f76e44ccfd997dcd0373065906583760c5319f7436b02f3e4f0c0399f6945497fd11aba6bfaf7d405576cbfbe6d5ce9e8c3c4751baaf6de83e328b245e4149db6f400d618818a545d5d47fb406d869199a668a0dbb985713b2e1dda22e9242f812cbe5c10ed44148d657b53b7adb1d591e9c8bcb55035fe52e998b395904b7fa32cd87ffe2fb0d0aa24fdf7795e7efc37ee674de2119dde153d78a25b44d852d85c8d805c21c00255644a496f50f20d3efed71f856aaf583b65decd8d58d279daaf09b800049a13d1f98621d34ce408ba1596553992a52f5e211ea4d037ed14bce52fe704e062c6d4b596f33c9c21d2a4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb799bc9b2870fca10e67b2290facbb82a5cd87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e4e16251de13d648f858ad74b75d1313e089c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe2f7132c4e276db565b7310cbe131f80e55041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907a88692114d42b3e37a6f29f4178c7ab7af19f480b7972b236d4dd257e146a796e8c3c4751baaf6de83e328b245e4149db6f400d618818a545d5d47fb406d86918c2ac8de689916c2168222642b55d3eace781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc9397ca8fccf984e9ebad4704cde8c26408d3ce781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc9397e58eb9e4d2bf5b66dc9884c61ca10840ce781237d9b3efeecb99b843c3fd16b7e7d71c89c0dc36302e53ec82f83ec8cd43de68cbdfc24133ed82ad3251cfd68c
ece15b20eda7a1e1961910dc885ef79ccdcede89ccd061e392658ded286de0852511c6e98f8091e60cef48bc3e8075735041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f590732dd98e4218fbb0f673b695d29ec1d2693010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e46631c4d94d7c9d334c700a9e8ad062593010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e654bd52f10bb74a49e9d50cf47fa08c189c177c2127579a290861dfad2312ad734c3475d1cc76fe99eae73c44167bbe28aea74d20b96718c3b99f1ab75c399ca5041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f59070077405d2bc8b5a732a5fcc8171c7331a4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb796df534820df065a7ca286f2b4e2618c9d87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e4c919a7e7e7b317805719e61824434389daaf09b800049a13d1f98621d34ce408ba1596553992a52f5e211ea4d037ed14b012e831d5842063b6424c73deea5b74daaf09b800049a13d1f98621d34ce408ba1596553992a52f5e211ea4d037ed14d592315cd67bd6ecb579edfbb2e67731a4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb79491b3f2e684ee91f36d6fe7fe8cfdd69a4707d22b3535804e08c7958b419f853baeba1ccbbdf695588186f7b002ffb79bdb43df9f4ecf7bedde565dda98d275493010cb058ee8c3606092a3de8970ae7f06d9e9f4763d9ea9aa781494d1da14e1bcbeae76eeace2b3ce80ffa14d182e6d87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e4d643032c35ec654af753c6b9077b2c8adaaf09b800049a13d1f98621d34ce408ba1596553992a52f5e211ea4d037ed14d73fc289a893d57619a2c92f6f001392ce781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc9397c27f001f2333a240e008b54d64984427ce781237d9b3efeecb99b843c3fd16b730f09559f3ea3f774e7ba1e5b5fc93970dde671938c12f4a1d812df210ffc04537ee674de2119dde153d78a25b44d852d85c8d805c21c00255644a496f50f20d143b386660f0f37d0cf8b603f4f54d981dd7a5b70e100bf6752daee24174e9054eb5ec281b53c01a50b8437ffe3fafb30bda0ff8f0c96575427faaf392d340dfd87773b130e31e9d69aa77a08d58260ad33388c0db0dc0abae1cdee2026391e4a280f98a34752d2f81749367abacba52daaf09b800049a13d1f98621d34ce408ba1596553992a52f5e211ea4d037ed1494166844896c22463e8f337daf010318
ece15b20eda7a1e1961910dc885ef79c363c00a86d230566c299ccd364e673c4d54730edb53b03a2f2bb2bdae8a31a56fa0957e01362e6a96749d85dcedb2b95b5636c1c33bc3046d36c5d37c02d7a24fb3edf10d59f587f84924aa9dc12ab6bdbd8186abe303ca71eb5c26664c0c6e2d00687e2c54558e84245a291c3f1a99bcfdad001a0b14421de3db193edb3dd45d3b81b4578be783bbb096268bdf6ae85bc6ef04efcbfd4abbbd0c75d52b6ceeaa81bb92a61672ce0cea361cd7e21ca8fcc3aaf09d9d310d5fe7f8b14bc24aab6e99cc7831d591e81e53d4103afce45a4ea337ee8aadf19d992baca17d1954f0629352eec80b97f1491d0a74934dfc313e5001df2f163e02a634bb1d032370ec7
43e24a5ff49083886c42592937b93d2d2aed202a5ed8630ea97ccd8d51edbb6ef2faee44e2d6e25ba8c2ca87ad7a524cd9cb2bd4823f3d28f5b11d42bbcc8e89394b82225dc6293666e36f6aab176f080e9aeb32c7ee1b0aec25848034d5db9f37ee674de2119dde153d78a25b44d852e245c5335becd0dd10ca466343d14917625a5c715eda3056253c1ea67d9590d0bea3fe8eedbff6105d225f1a90b37fbc0808c66831a1d05b2e524fc9e11b5ff95041ade050a7702aad055e0d75c65e3a7b90df90560cb0cfe48a2956996f5907bea52a199ba92b6d1c375cf25b15a869
d7087e700c4685dd8aa4c2378e569598e455b7f68caf92f5b56cf61a1742bce79317ee25dca93f6f6d748159965a72809bfa2b7d52e64a36e23b529790bea1dacb60c10177762b9faec710f9c6bfa3580f96333b3eb40044021e9c29ccf3610006d5173aa5f9a001fc2d01070d583272f79dd2868b2017ae90630f5a19a4d225c2aeffa813087137580a1129d01f879140b751bbafad657a9e90dfa22867e7d67d62dbe9bb471ed0e5674173464d3b63a73debf633c858b9c60fdb66ed0f1d8646caeaa47db4e6e7d223c11eea7b39298b534995dddc86d8445dfd92cdc8208bd8d330a613440d4b746d4c186efd8e13ba6de9543b5b4543c0a1139a773b049a00545df60c56735fffd56656cbaee39ff2fb0f0396acd938080f7199a6228744bb70df9df82d75c9edd99ccc6b9e7e6699c6d67972d598840b64db773e8a475c86e88f63c8fdf61b17eb455779cc05b1d610a9c431740259386aa6aa6079fc23
<end>
Unions
88e69f90879ebab62ad9bd1109163e17622ed7b9b77453e83a0a83c9c2d0e23de7f097c74756f1f6d6b724214971a404a9528d759fd2636a2fcb6ab9e81b6d36528189536ac4d7b73970a5b397bff024756a5d41d29a58d5ca07e26b14c76f1c5ebd9dd8c0fce7261c209f904c94f7c6d541825399391d65c239c191b8c5db8b9284198fc4a942d8f5689c9d12265654
a4be2af3f13fed8643b6a1ee4b5a78a8a62fbdf9d669c3208c870285808bd2cd464caf9774d8322d81b3fe2103668e6d9fb20850b1e3f3522a44ff3a77ee4c4d42a29ead02fd4b31370f3e7e3f4e8150a8b22ac4c1612b4c2990da4a4723d2682bf76d891bd3ccf036e6857e802f4f7cd823490572509d908c7c7b1613b573da148730c56d19c71c275f8e005cf8b139f0c6b6ed7e9d91e6726b7bdcbf956d5a
a4be2af3f13fed8643b6a1ee4b5a78a8cca32a7f5dbad142402f76b7ef73d24c4e04db4031d5fe7251601cb929620666e125d555a9d6d064c0d9acf2b1d20cc76e26c27e33fea7bc7e5db1b239ea2480e6100203cd9a891ce419f23c065eed00db8d7033a976f413fbe050a801e3d542f06d9e9f4763d9ea9aa781494d1da14eda5623a7237787a3bb35e9487d218aaf
<end>
Enums
0cdc737e870ac8bc9e97ffc23e0edc7b1f7517e3f2e0316a8520b4f21070550cda2c60c72efcb3670d70c44666899aff53ed94503ece44acc92de8e096a39222a74409dea2a77b19cf5a04398d9e0cbc74ac0a819ab28fe9d8a524fc2476a218efafb7cd6b7b64b3f98e5ba8dafd74131f19512a34a3ce33b95a945a93b8491d23a1673ddfe2f0f8c6fe0d5ca1a2dbc3a07a8bca2365c81acc39c45154c46de5d241c5ee8d2ed1ef92f29e3e2f531e757605eb8a43ffd0c6eb69a2126486c57ef7b1a8a851096fa37d578311ab13c93e55a73d67bc2e52bf616c894253c8e058b7f9520b2df3e07ab47685527b022412b60046700cc2bfadccfe23e1df70a0f55dea78e3c0168ccd900f677de5d32bffeae9e04edf5e3ad509e5f3ac25259c4a755ee522c3a25ef0d35c939ffea0fcc0415c675ed5e8e4b616bf23bc862f21d1453c313ffee6d8f5aac97b4dab62c509fc69553b31b46ab4746df174726f74f45dea78e3c0168ccd900f677de5d32bffeae9e04edf5e3ad509e5f3ac25259c4a6c8af76f3ed68957fe5ef4a91f768f4d60c96acbcca0eeef64dca043316d0245453c313ffee6d8f5aac97b4dab62c509244af7e2e01695e9603510a399d5db125dea78e3c0168ccd900f677de5d32bffb4d53a3cb61dc4f397b602da466c42a25bf0f6caca37aa878e87835df7b18de6a3c54c04efaae25cb32edfedc28c23f2e8bb34393a99a656e73e50e8255d710478ed8feafd10bc106c2d747bc6d5fec16efc445c28d23a50bcdd8aee0b0a4a23b2b067b76257bb9a4b8249814ab465d71c6cdad094fe559e0454bcdb88430e0cdb48bd10690eca4c92d7b9506e0502c7f6f0e0a853746d6df31d78b38fb7ec6645c6720624e47f182165d3638ebad6b582b744a8edf5859b3bc7e07436e47b81c7a40cfd47045f597873ed83f51207f0950dfd641a2987d591c2e50b855b092bcb861a5b214065da076048aa2e8be85578ea04de6be7f6b0676821ef584c8f892c71752820a907a74683e0d1798f0b909b1d25aea2a93f871b4acd57d6b6a84ecaf5ecdcb22bd6ff47198894a91d3ca7a2653cab918ba69122c6a269e3f4eae2ac2709d9b9934924efc5bf1a083e6afe0fc0b788a2ac3d59aa3925cb7c6198ff24eef4eb575e2a521c51e3fc3e027d5db179e23f9e32425e09b4d08c15db75f048f9fc7c2a60a5b31f8f0458733ffc0d095718cd22e412a8934f7dd52c75f669a24aec7e28fb601c1801c8fdd37623c7ecbfc24fd9648fc33ef5bd68b94f46f398b9aea8836dd5f6d61ddd66ea5974afcaff6de6153cd7ea91af5f9555d8e0d874c539c9d3425d6827fd0a8f20401022
b3adf920ba5f1b2d3ccaf8651909a1c58173c1d7e9ff586fc16ba5b01e70deb73825c2098f5bde9dde57a23bd794247a7cfdf01f5036333016e6fbb49692d29f19292053656c404e9d549a00767c9f103b52be30b853c4f11344b0fde8c3f4bd8c2ee0329d477a14908bc182785f285e4d5567273ce643dd794877f95b6b5b012d80b567bf15112efc8530e3d2182fb7f1d95422b687c2c60c5c6aee00ecf03a
909eaa4f3b45060ee85d16c729c09ce207b1718b8334446f5c232d3be2e13831aeaba8bcf0b419dbb061a257b8cf9a72fe395baaf1c788337725d56113c4fafeeab3bcb7bc43a6557c66d2dc9f7682806e30c279346d9a1ac6b7869d80c876652ddad651422f1ae9a28efa59caf8379ec820bf33468e1ccdd5d2cb2910dea5bec0168671e2cb7db91fa8fadf44405c544d54b3fdccae7d5b3969a22d06d812b3
c370f4a3975fb18f36a863478287706d0709c30ea0fdf7f4322f7d875cdd4298ae8b92e51101f36f96b72578d6bef4fd0a124806da12e9d5f9ef78751d527461
aa440bdca0e3d5d24426f5dede6edf88ac99de2e41f7db3f9a23f8b4e3074b9d8d125776b7dfd8c6ed28d6fe8cc7a93ae8da455cd479569f7f8c5a66a277e68e878a0d7703318ca7e8297070e654c836565c7ca3c046535c9f5ccadfacd4d6cc3ec2ef652c034a2886256061b92605191787f371327d6997a6c898d9574b4c7c039ba537b83f2f556a79373a7ff0cf92fefbb95a8be711a96935f73395a17dc0c244db7995f2ebe05d6da1ef9e130814
fade61ffc54148702b99f428eadd2e57ee3562aa62a04b2a4abfa670ae021a34b7adc872c031b6b3887cfca0e1496378fcc1484f8aea2f1a75e8eb3752da0ee97b1fdb32e8ec8d3d3b31cf0a6bc297af
b43292c002c321f2088646717a3e6d27c0f0afe5579f94daa67ebb0bec7cca3ce9bbf1d9bb279d0f2832ff3ef50c28bf12f885aafd7b4be368bb09de5215e8a77f193d304e4e910ea8f8ce4e5b10216d8fd1bba5b12bfd3009350c7001c0090055db1914fbfc4f9d31870cdaf182eaa10bfe343885857a6ced89e0fccafb6e63af5f7d51f7aaec0fbab31e0f852298d599655b4bcc749ea0f4300bda638ea0561563058ad80698a966073ab45fc9ca2c0e4ee5a24b452beb25fcfc80c3ac959f1be317ab826d7a2676b9b468813a25a0ffda6772775112bf61c09c614f66b36191f0619b74338f13344efff6492a7b67f0a06e6322e4c338bc784695148725b36aaa7be0cf1f1f90ba2691c95f2847a8ebf076495664192df558af817230e4374af886cff2d90c840061cf9cf436fcbeb3e6baf96ec00bd490bf18aa9484ec1770dcfcbdbde8090099f7b65fc8c5afda8fd1bba5b12bfd3009350c7001c00900d52ef41e3d6fa5f62e23ae44a3e25bbf8fd1bba5b12bfd3009350c7001c009009f17ce75e61957476f561dffa74d5941f734f0823b14f036c523d4f9c5a526b5ebf076495664192df558af817230e4379510e5e446a3120dbe90fa2f2f79454ec641a0bb4d8c421dc77a65fa34584639d61941cd9e23d0d4d1cd72fbe11cf22b3f05ee3d0a2b3255d1dbeed39ddb2f635ffb8b3a6a9ae922fbfffa9bd002e4dc
435b065e984651022c774e6aaad0b6acff9db0199e81595d889fbaae704c5ea63adcf12be331438c365f55c34e37ba1cc3ca9b269bea3d1bd594e23993501328783a4b6406526dc99daed04aa1e40ea19f4e98a32891790366f149d9958723942f5a4f409e4ad7741069466ac9c5a7a53227f4d5666929908edd7459d327fb612f5a4f409e4ad7741069466ac9c5a7a54fe678cce24ee196777df059b03209366180005bc68b63aa6e872454520e394d1d82a74175f7f8e2728d08e52396347847b914fc56cc00177b743f035bd1ba442f5a4f409e4ad7741069466ac9c5a7a58a9d7f6b3f3e7dacc6ce3f45fe45d4134105d44d0831c5a885cbb13f5442e41d0453d6ab39c702f2feae24add74d7d0b2635644541495dee5677c3ab65d073b1d7ed80a47d83d03a48b65330806743487aa31e0687a1d1b3ffb9e8675aa178de
7e97d2fd001b83ad9821b626d324040c68f511b46892a39807ec488bcd2eb62b78d0910253f0b40dca83b63870f999b52ee78712fe2cd5718bfb6db22aee7308f40c3da3984c1469ebb9c515757cd6bed74805cbf9ccc6fbc01799493c57fa15207e1e93e807c24bdd115308dc8c56fe973d3a35c341349e6c9b0a0f01bfdde1345e64ed1aa9d6bd541908c31be8f379cc85f0814378b0d9abd3709debc20bf77523567f3376eeea49dbb887331f237a
4d7e10dbe46fc986009388147131f76c359678bdf0b7d4b45f3a5585b680c3192606174c4134333e83663227beb3e4862e74752452242ba97098f0b69e2622dc71b620ded49fedb639acdb7a07a9733e7a9f7a2874b29600447c8089d63c1ac2b5461af10b65300796211514029e087ff4f9fa32466b24201e68b974bdb4f27a21be8e980a8bfac5d1af16aac11be7de87864931a1418b4410bb642651229fe8ece141e00cacd4762d31d96ffa462c93d87f4545b312ab15a844990897cdb00aceb76e42b7d5a9f1d1e200828e2a2dd2a89c01cf1fd791c4d93f0e29891a8e4a054aba809c1d19679c684aa2b8691a85720e4c1cdfb9fbb82aa0ae5db43350555b7c158ad78bc72b553442235c14ba323670ce47fea779f4f1941d2e5e878b826683e87435bfc0b91ba309bc3feed9684c2fabff8a632ef1efd2522a18621309ab2896fb1df042c170482d98008170a02e08243d75c2dd7c0a14046b555882688d29bc85fe40ebbeb30f0ccc891ed0ba1e5aad0cbaf0301cb25a1cc9a9d1a619a796061e3dbd90701eecf34872b6374764bd8cec7ef9e767f930b2fc800c45746d60d8140186917da426db235f86ccae672a9a1755f74e43936e45a55e95b4656b02b566ed64ecf7c26a2634a04b3eaffa212a81cfb43f0cd5ebbc4893499b4382bd1c287a12d83478337133d57649fcee77f13362ba3e8c8a0934f854f67ee6fa5bb0f1f5aba7fae203366805471cb2da93f3df08b9ccb756ffd3a710945b9c833148fa585794903505a7dd8aa536a3cce5b9d3a59a3110ef16ba09ff4571b17ed9f75ce1fdca52ff49a3620c79fe29c22582d0dc670162b487960f6e9b928b1ae29c8ecea0f9315b79f67cb386deb716f1169be01f26a9db3073e7c01ac4aff9f187efba3ce14a795a78a9600cdc16e2868cbf836013e14b85581a8f67ab5e839bf5674340dbc18852843758c44d1a2b38863b11fa626a6610d9141bf86549bb74d3463113859a92521fd4863324b8831e5de5311be8bfefab81d6800c687aee327af2959268d9fc66c532f2a74925840a7d942813ae3f19213d4056245f7b6e8104241520d314fa397d42f224ebfb5a74877c000760aaca67b5a1d2129312c06e0814edc2470ef307f4235ac0e5c770cb816842c49e8026aa99651cc0d1a0dbd797bdf207cb9be8e0259a3553b99562fb71d2c988777fc8cef3dc8cf307176ccf674d8215afbcc2e7f5c5748fa917fa37ce8ba4e02335809da2f8eb33eee9c9adb349e3f917f6ad716f8f70c3e98a77c97e0210d2b30576dc6f1a87dcc3de0b518db42965afceadc4d331582d8317957109eb2355a9508b1bd0602036fc1bb10da2a0a6e92a2ecae4415f9154b5a963edada9cb2601123cb220a859e6402c3de8cef3d24c5792cb03bad136bd37d8add6ce9f3b1ea2b04398bae0b71f0260f449a4f96ff06083f5f9846e1ee455606103b15a4fff97d4adffdbcd6a5d5cac331e35d5f19be3d541e88c8e8a5ed0ba1a6d706cf5accea966afd3c1bbd6fdbdde3ea8387b5e1953586772c2491c86df2ac08d7b8b20806aee9addabbbb63bfca68d0a0c27b998fb08861bd6cbe67584c6c42c7d48d1d487d79e1c2d06d095c1f8b11bcb80d7f02cfd1524526eb023d57c0ec2d0fd013ed9420c2e94e17f9191ce85d93884d6d4381ffa7bdbc0aef6a4f20065fc34268e71f579bbb967d3d191f62f4aad0f09493e543db36eff78dedb6dfba374fc30b7469ca593c0f2389ba94da1797433fb9bb733ceb8e0e9258f5aa3da5ab071ea0b7b2b15de53feeed7acd50329362ace6e2ad9a8fd81003f775b5ba5987e100af43c1f828f9755ee29063734136444aece3af00ee1a5555fba54571ccf50de3818294cc72dbffac5de5b3734136444aece3af00ee1a5555fba540b97a61a2757e1c34268384e09d09c10da42bbef8951bd52d6d50fbb7ee7995a523761dd093db568634402aef53bc4ea15f146d9db893db8cd7e26902d65e41c35a873f603931bdd6d0b9316b6588c33e2b08bd5cd8d77db1e3b35b861e91b58d306ca598410d55845e41e98527cd0cfbe81b2abd3e88bd51597c061aa8dfc2c8afa81df7f565f16f3148c5260d7500fec843c6aff324d6b953fdaf4a13b5d728afa81df7f565f16f3148c5260d7500f3e87158fd02b0e984bdb40f98a9d927bbcf9a9c5286122c712aad6a4b215c76aca16fc12d0a0da8a5725f4767e24e3b49046855fd13e636c14d0c4c99dfe31bdcfd0de5cc11d02c95e9b4993a7506e7205a8782751374f33a7e3eadf174954d83c41bdb44a4f64e352b6c8fb79f097cd4b2cc6a6fe1c9ae49bbd93ca3ad2bd77d836498cc63bf778371b826187f75266ac2d649a1a7b7f0b359818e91d3e38bf8f0ff43614f6c6768358851706ad13cf0fe44571bc8e8c663b243b86f69ae332bae432bdf9168e64028732ae1ab3f7712eaccb4500923699b1f683184b41131da0914bdcc68c2799bb10ec356203a30ddb41ea557e23b0aa60b688c701bd6bdda9e72c3ee294a09fe38e2f7643133ebc607ec2f8f5a9af1dd083a41ab4d4d0f67e27e3d84e0a4bc316eaf7fbb6cc5d23c30448be4ca5635f3e43cc8322d3f965a0191fa33dce1917c21db4b230cdeebc9bdce98551068b9e30b47324fe6f0234dc7740c91ed1c20f065698a3322d662324f3b3f0e7b074530bf3138ca032b181ea76637eb1f8577bc9570e5a93047e53686b1dbeed75cf0f8602a4d73456f4060f47aff876c70a6029efd3206558bfc6ba93e6fad84770f59725a808af50d39d6572d699d81eb9afe17b9def540630d65d9c975278179d17eb5f03fe9d8a163b83e01de63bb276b0ea84e7c5fec1453530dff0c476912679457a75ccb1bee804da3435b7909109649b6000edca541045ff3dfb82066f02ebd395e1aa4a679f8f507f0829f84cb77cd7350661d8b8ec7388be42a8d62b76be5a3d48e1bedfd658c9823133b0f4b11a227afb66d961b3f52e92a1cd2a17770e35b98d07fbc9594422ed97f4d97639831210213512c7ae07e978d9c0b116b513998e5fb0b472697f87e4e755e1c61ea92570625c6ce15eea956189e404c06e8aa199538837618b5e0afff1df9f19af38a3b6a4133b6470c3740abd9948666754af65eaa1aa9cc6bc6ec50cfb5a8ef0a4976adaa6a71ac13a2972e9c82f9e737cb6b46e8d6df67f6918cf169576ba94698e55f287e4217ee27487e6dc10e207d3d87fb844a79e84957f02380a90acf9cbf91e684cfdae9ed273cffd6a2d5428fa3e1553697e2838bdcf99b85359f0de739ad612befa527235c369ad63e96f11aafe1f5bd0925df9d914c084b3095eff8b65fa5ec5186f564053bee5e215621218e181b40d5e1adff2661084642a828dec308ddcef929d77981b83f6df63e6e197161f631b97c6e72ab7749239c91b38b3d1c99c831439820afeef0e0402a89c889d5b28b027bc4c5d8d89cc4d1e1c18a6638411f74952494eefd857a490d4834e21b5c67f9909c4ad5147c2ec7abce876a66f094472ce295d02653e0d9640d2abc5c00b80f75a440d97a999fab70750bb141e7f40c807ff848d059e8373bb1ae071342e6d28e30f1ca0eebdce140506bdecb10ebbaf5263ad448a52b1fdba6f40eebcd5cfc4e67633f84bcb5434f972b697abf4ba63bb6b4536c24f486bcbbcadbcf0f19a8c5206ff53e07e67e94fc173e64da752c9c53b1973d3b5db3d3b6dc83cfe9fd158abb694c79b67c6832bfb64a55107f854b030643b9effbcc481d69b80647912a83f9319fece15135181fab3fa2e470f073648e977a9fd59d5f47e20c2a79bd552dde2d09b25b14c45d1656459ebf718fc4a99444d705e95fea64025a4602051315776445b92461746383b103e18a5cb1f7fedfd19ec3a272ba795c121c67b2ef78d7ba379039bf97ddc6ce37bad4d3581eff72136ee4603a373a4f20545a4008c953ef901cceb99fff11c3afc666b32faf424765aa5fc2f141c5399a8dc980bec3d180d219dd398f72dbc69599585dacedfdcfc84d719ec795c626d8c16801a6af6876e318ffb534cba51434d025157010af301f93d16c9516f8e9aed27943606dd1b2244397203d281f5de52ee2f90d2064e98b1950be5caae05d3744e36b87f8da48c65001ee15303d5e6ca8e9b9067c97bd2e67924f06fa10411ce15a1499931224eee27eafdc0f9e2a96f4c3634b0a78087fba70d2ef2844e4124d942a3bb29091e327eaa68d0ab17fea404bde0d821f65deb53e32c1e6497ae043bac888c5fc850a17c26f734ff2b2fc0c9b92365dba3680c1d0b496a761dc9e3085e99392e99018b1aace649935e70f81e9db747f59b2087b3874b7415f1b20f40ee492ff3544f0eeb5eec5c0c12a9406e09cc29d3856170937eb2caf649b8c279a015c91f8812813f52a04db7f34ed5b74cb3e491456bd4787bc60b4860b6a6d62a3b7174e4de199e4f522f95e6a752710ed152a0308912559128542b468459d5a0db04fffe5457604cb2149c45e49a4fbba8c2f2c0564532134a894964d0af37032142602529fd56ab02646c4898167654e7513c3965d3fcc09a4184e0a8a6af0f16391f06f64249f492686e7d2b03e2468e52cae5c0149f7f6383d8f1195779812b78b06688d7c638ff3c6709b3237772b152d6f33a5ff13623afbb149ea46775561d996fb6d90e48521001e41689ab41c237198d00ab354fb6c2ac4d8d31b6903fe87f13dca94d5346f64e3c32cbcab1dc35d73ab7516ce3d8cb8445ac9b0cc3f80efbc0abb3278f1e6897cb717a163f0e1592a7b890875e6056700764ea0b7f8533c6c9cdd5a23f56cdbc6dacdfec53c01b16f9f7cb558297cc413b650a12958d288c7da395fb63171dd54826d037674bc9f55f915c3b5255cac1c6354d32393f36669b27d9f079780a2b67c4d7f66070d76e8b3d0cbe5b907a2f6576490e6fd561ac2f27
d67cde489b38b3ec893c3cad63c0e2700fb8a66c750ecb190bde063696f78a8cd2eb6f8874b483d77056224a9ae0a6809cde119d466b107f7fd7d1476055ba2fb215c33edf6673a464c0e8949801febdb9d20b0084bd6972919f2f8cfde5e06b9bbb66bd01678b1be66b32e343fe35574d9e648faa05471757cc0be5e71df834930e21c0d33880c56f37c18d82bb09d6d4b09202bd51038654c00182f80e6caa0cb0522cab7261d062ee09b1a36aed9123875ce9a22651e85e86fe51aed2e2c6d74b8f08b0a75a01d1089dfa3cb79695e0cf1ffedaf1829bc4f9640fd95095e578b5d1e82a44ed42a964c28442cf6fe722d6a15b15e63cf3c6375b41f73dd5b3b7a2b1be4004023e160814ea05b12c1b61b71fff2790652abee2961ae66ed18709d0c75ed8d0e69695f682bf7e113bb20b9dac896249e484a3a15910f606d90140ce7598b1cb7f3ba2b095da36e8f200241448b0437b36dddf611f1d5d9f113c9ab5ea48de57f30a963775b1a6bcb3848753fe7adf68c73b08b92ce62085d551ce96a6793148f6684cccf040f932420d9461cd2763fe966dad82d6c40fd11567c5aad130484315960a9cc969cd8fc5884e73b227c6764f23d0f23f4179cc689ce09afaf77f6bf81d2cc5bdc97cda32a9a76cae77b0ff340d1ea9cd9decb160ac69d48fec42de03806e25015dffe05e20c13cd3d6a120bf1e10924b708a1b13e23fe1c141980a1eaa179c8a7820b8c02d1d2edfd1358fb664eb1783ae893d55c1a888214d7b2fb279ba230c8c29125a3dec4382c12d6be388921dcf55c842dbd52cad1d2f53a30af0ffea06a14688049a7d461fabc1fa385bb8a4851ad98231aeabab256e95baa01a1fc01ac4483f34c925614d1f5c4b1fb8f2fad91109a0644c52ae30187c8773be340c41ed5ff30997b01deff3777ecabfd07b800f70e62a2b314981a71ff0ef62f65aaf4c8910f5362754779d19b0d69280889320c999d299d903bff31b9b0ecc6f8a81bdb656a0283c8331d488d18531af3fd9703fb4f9b5c2340cb9000c80ad96f4a4d46ac3a273d842a0aabbd0806e6f21a7088b0a3e32cbd58dd4ed99c71409083422e04a1cedc7b798f8562be361acdaa809312d08eb613733a978137220e503745934e72d487ccbbbe7ec526fd177d0d28f8653f5b68a47826c15e5c2f75d63ddcdbed7c9386749d930769718afd51bcb9e5e699e4fed32db8ef371b5e01d20a2958faa97a0c030724db7b19b316d5d4cdf5bd19b94f89bc2d8cf235cf0d8c9be83039df4068a47826c15e5c2f75d63ddcdbed7c938a97c880e3e0b8b52b893aa7563bb10fd2754779d19b0d69280889320c999d29979e1c9be78422f6560dfb5aeba181bc01c2fef17728526aaf7bb3d0260ec14e91710f4213107ab7ffcb7dc2d6cdb3648fbfb466a7fd83a99d1053e85360aaef7126ebfa437b8744315d6e50d55c9d3979d09ceb196b6a5d6aff9211f81f3a4e070a211fcbe7bfb8ca0d0e5e4c02c45f95547b705b45cdb8b44892f73aa463595cfefbdeca010445b68d40b6caa836624c45e535d71465c60a8195df5f63f978fae12e3a8d293c34f9dbc1e83aa0a0d0eafd388391dd2ded58a09423251a9102fe8eb3a5520f327606d315913ec25357678cfa2161dff741db9feaff4ae3fb181a8433f22683ffa51522faf84ab3a3ca41096f5d3f23e4eaedbe9bd90ca574f3c29d0e78aa0a7ffeeac9ed3429f6c541c00d431e541d21d06e4113b539c1cec06e58233364cfe127929f16082ade9c2f680b63e1196bf743c92b5a74f7521176dfd793bb56e4f06e1bcd6f028412a3f8bd6c0964765fa5dc55043f90355d0ccca2ebda73269d3bfccbeb4b26fc915ecbd7c7c56d2181ffe9ea4a26d6aaa2811f63d0fecb5d9690e58f6cf7ee3931cd4c63a99637b8976dcd1a0b91d6460a2dbb9981b61042bbeb39b9cb8acacc95612e2d252541774dd69231ad590f1ac0e26d4ee35effdd82a5301529be453a4d65273981b61042bbeb39b9cb8acacc95612e2d252541774dd69231ad590f1ac0e26d409a130327975a2aadb647e0b519b8e721071fa4f533faa4de4d9c1d9719eafda2cad1d2f53a30af0ffea06a14688049a67d0efa15ba34591c1cb29d75d86096ad7e962f87d80a947cd2f52306d0e7189eb182c134ea7bfa57a3c1ea7f877a742c95edcd6d13aec9ecfe4d22df9bedcb168117c11e6860d6be7f69df8946e94151cc434a7539a53f292d81f727c1ba17e31804304456646a80211956d5beef81e400fb4414362ced668713b998bb2bcad5472ecd1b88983ad8a7957f995ee92a7a80a0210ecea976ad0520bbff8cf74ffaaaa00d16bb3130f5bd8f14a3a90e516e8b07ddf1b2814879be276de82c3ee44d2e4aee9356f5433a7ce79559fecd06e586d8822941c282404c174d94f6bc5f77ddcc2578ac19daa040c4052e6584755156283cd041725cabe4c71ce8b8a5e6dcfac0a25679f7000b9f947a5a87b680240c292e80a1b3e732876626e815dbc03de91ef491e9b9fa0374ad9d15fbb167095abb799e2ae3b357bc9a27d69b0fc1babcb0bb9bec119ab62d774e766c210f684c3c65eff7616efe188c5aca9d08f4518b24d4d153a1fa2a634cdd4e39f6cc181b77cca1bcb624273426cf9cdda99681c8bfb52078e69853ec22457f5bd5233ef2811e62959280a582afa5a2f338b65d9b1a3c477a64f61a4bfa1317f1aeceb6f472656fbb2d627f58bb0b4ee3eef048748f146f49a8ef9b4110f8c025acbb1123a1516f1bd2a554724709a320aff44ce9ec7e72417b9637d5d2efc90de98209fb023cfe85d89305601d5346cb364f81ddc675b70048775721aa910434779d290f2f301315655aa6dba0ed6d936952753f9945f8cf0a7e253af833ebe7556690171d82bd30200f741824b5a28264a998a9573e015b07e4c79f90455fecd65435a5c6d92198879dac8379b37ea9a33db82bfa9b9d55b2e06a09aecba87245b247c0046cd32844303f087cd41e545503e8c42e6759992b629eba16f3011c81aee04557125995dc7d5cf0dba2b6b30526eda16bc6ff2540afb5209be573d27ee07b97bf47384691fbb033ccc46b331845d644e1ec49dc46780e2245fe8f5d784cccd3d0da3c7f383a15871b9c5aaee356a74c32792da778daadd0a95fefd5ac94fc5aad130484315960a9cc969cd8fc5883b407fa6142b5ea092f31699b53f38988f3aff85a8cc511ce9837475bf53f11ba76cae77b0ff340d1ea9cd9decb160acf1408afc4dfdd8bc7e695f026f81dd45d7e946061fd9a8cb63c0db8240d2f7929dd9ba8880d4b737cedc02e69241e8118e9d5e7295c2b5ed69b1cd8e9e2259bc81ea9c6b0b4aec1fa6c278f38daa8a299a0f3da666ec6ac2bed5a8ea98a5ca148faa1b99b9b977ea15506f6b6001d458282b012cdc919cb67efe6aaea8bb30d9bb2bb0c80c83380b24bda724e8e285023f5515324028e89b7eae940dbb4c491101facd5c6f9ff6b3cf2a7d4fba5e341c4a7a5b220119d41370e5668acb60f82cbeed627d4c8d1eaca0d1c21f38f5171fcdf51f252f961568f84d95fe981d859496d7dd56db9451b1b6cfeace9a5fd2ff35f51e14885598862e621b7e348af98e10ca00c80049a21098e416d9ce5a14df54e802b7721ac5250d940ac97c4e4c0fb4120a769242972e7bc19c4c512c6d54b746c18ffd837a5c3fa36330bec96f48a41ff525d3f43fa7db7e0248a2facd66b33c443fc8e345cbfcea342613c7831fe94114d0e4e22c2a37ad87af7941d16ddf7bfe388f604d8e90e6f378f578debdbeedc8f3d6b206318b50330a0101451bf2d221d6ae870255d620cab8645b00bb489ca66cc51e0067b579ec268f53313f92da2088bec4ce03a3b1b3ecad91aa651b329bdb81597ecea6fe385f1661a9be3e05960c214b8d2269961cfa728518dcb94d34cd81a1f9865d9773f70696a94a0b8d12043c56122c513753f55270d763b33c3e72c485c5a26d60d4a13e007ee0dfc3483172b2a0724ab5e0f5601351764932cd6bc81a05cd23814f1826883dbb4e0021a0fe2af8c8f59b06c9ecfa3c114346ce5e66c2bb5dc49efc8f78319297af162e6dbe05ec3dceee35e281e9dfd832c0f02f57ce3aca79da4fe084cb267fce8ada7f9d68c94a11d269939652a8be82358d7cbcd109bdf0885d00b169d0cdcb1ca0de18c6ed86d2837641c832f058b1ec7108a4f451e13f5a386d376dc363e9f6d175b92d1e0fb43cc04d28adc949d73f0c4adee32afaac6f3781df35766f0cdd2374e6ea133ffbd3d9d4c711e306
8c89b2a5c174c945ea050dfd88b1a4a0319bc17e2b483a714cf329ed61a20d70e3b390dc02fd62f50bd408fb3e2e4eb55e2af42dd0d318eec66408e5fd296d51b7f33857b6998a6738e6c554894bbec5a0325f9ab676e8ab47586cecdeba19dade1607d7a4e7364826f6e660d08b18beba89896ca0a5af5bd203f2edf57a1d3d8fa0bf480b23a20de960136e918804ee521b21ab439c878a7e22f99c2076cf5cc67eaa8a5731f517c4fdf9013e526d122466c94a8e5606062a9f29166b2760bbbda96fdaf8204b1750e6b919ebe4b1e76ae9e797eb6bf4ff64446fe4286844a2cc8c4a824baf600683f7428ca60366ff3d0fa3de12f10d5342120ea5922e49af5bc150ab8438dbcd31b334c93214d398b5ab58cae5460318251a67495b53bed171e968a85ed202621a96b96552c020a6e24d9368278b95f6f3e811d8c7b95c7386a69d68149a16dfb2289ab5ef70e496b9bd773cb395fc64cd77a636e78b24fb9f2ea4ea8eb528990396c2dad1ad2fc0b667a9444066d8d9d7e82527547870af0bebcc3a9ffaf8521528187a8f50d321e56be3b6a358284e5cc9c3ae9e84f217b9bd773cb395fc64cd77a636e78b24fb8d36ef4770835ed29086ace67e1e0e32a5c717230ebefe6b9440ddac25f9e5fa0bebcc3a9ffaf8521528187a8f50d321321070855934e1201ad9ce7a73052a3dc594fab200e1e1cce32d2f3b0044ea826a164a8d05e9b3932ac53b58bfc8aa3bcd146cac29fafbbed885a470c2309f598016fa32b650e2ca1160a1b6d46b18c658a53ec957b2da7149129f459f66be594f896804db0216e3030db4d74ebc96e54cf8356ad242a5a578f9d7699e7dbe3706d75b25ad66e6fc4f49615a8cf086a545be34d3a91fc0dd22617352915680018e8ccaf33eeb7fc755f82f9c23b2ca1807502ab1c28374ebb933d18b5c442db55cbf2d72b295e832d54c2c398bfa1eb9c0806a90f784c0cdd5341a3c7d9ecf130bebcc3a9ffaf8521528187a8f50d3210427dc3c597895c67363e209ca184e7869cdd4556e7cbfc106cb04e756dc6a7c4a52fa47d5dd7aa06cccf1f24550fc62256cb09f6a6c150bc839ccc014ec08ebe18f67e0e4ab61c1f532dbcd9e9f1368cf22c7b25760784e7406abd148ce6c4676e885a1c12d63e46fd31a9b7e126496ba0598fa32733a3b0a87a83e693ede7029c54ed4cd846f5742b52008b092abbf01277673ac9e16ea85bf73c8e217c7ee07502ab1c28374ebb933d18b5c442db513df6a8864128f42d7b0fbd2425f55202474c2a7cba7b4aeadfbf6b13cd90ec824b9e5149cf6167d629660a89b6aa26c5a863054a53f1ab126f3a8887e561dea8a22e63336fae9619361b91df7e2716138c0e2cc322d55145284cadab30cfbb6551d4844c6178dbbedcaede8713734ac4092fc9bf18c6b179ac04b5a1243bbbd6576ea57ef74b9ba9ae0ab52722a97607ccd9d9dcaafbd22a231f73b94764a7c3dff714ed9f111e6593bd7b0c97631e8bd8ec4a15d34d44507939f630b58c397b797c10fe580d08c7249b06bd4d476430af6ce377455028036308d8ce7add0b8f3cb16f6049c6962c8dc6316b08382ad2838cf2f9616366be3926ee27e7387a48bb42387a99f768dd530589e7d93281bb0be643b8852e7166ec4134bb99e89dad30be92999bd248845fddcef7fd439136649800000bbb3f4f63877095d45ebc18bda097c8aa2f93d4b21bbbfaf7c7b5ff4b2b87712de912574cc5b9fa95c613b6a1c3df5d5addcd8a584b2f7064f5c8d6c72a98e048d16ab4ec9dcfe5f4dcdb7c2b46fc1054ee9ba3fd6b4df39847611914891f6a52d8733b3aab4cfb986a95f6e1d5e160b68ecd413efb6d275634e3cb379fafbd614df154a99d8dcbb82544fce6ebf02d346353f9e10d0cca7a223812bb148977203cbac71596ec8a447cfb0ce3a04426ebce9cdf94456c31f860fc5af9e5f9f9071317b3a2908037138eb39b00b201306a0793e8644457696e6eaca60376570968bced63ad3d958091a056f146497e176f08d250d3b4a1039da7dce084c8c1c07d835d23bf9e2fb5f34bca3431bf427121749556edd948bbcf4e9b0e40eba092754bd42a69a25ec59f9b104797727ecb8cce6d8f805928eed4b9e28460ab163754550ed19ff12ddd1d174caf20a21071eb8fbbce872dae67dda79725e84d06603cfe38f72b32d682ead292fad2732aa284c3f503e9e344438d7a810681e5ea82576aba25d39ba7dad87dace29f38133f20b35a59d413428c8f326d5790a7e5fb4cc1f4fb9141507c489668a5e84d06603cfe38f72b32d682ead292f54d7a8e73d2b7f8e45309ff4782e9fb4389800b00721fc6fa0c15475aa1ab38e29f38133f20b35a59d413428c8f326d52578acb4d355b73c67a24b94c8c530135e84d06603cfe38f72b32d682ead292f9709c5f061310141aa2602e7aa9b2b0a77801fb4a689afbe186e2c3b76594f45e302f9753ffac07b8c8e3fcbee4c2213f94d0ed55d0b80f329546c476bccd2c0d36323177cd0a4f72b6346ada48a12b17e5ae60d264fc8895d2b752c523957015bfce70eaf534c1b3696ae9776117179bd166727ca0b2e8f2afc9c35aec4999de665768cd4f3555d66155b7ca2a95ae0ca4a0a6b9c9baa90d6f3f86bddc3b8c564209b95408a13ae6d9db521157272fd078f6f8d9df1650dbbbab0f217565c7c62912ad282ac423a63e25ef8697ccb2ee6d1da5f5cd6a192eaceb487758096c549b654d2dc028b3513e5062f1602833256dd954657836e99b30499f5b8ef99f945fca58e73e46e00192d06c49c14fc85235496c9e4003b7bcd5cae8eefe73a69cf3cef05a6e90f033b94c132a26fd3df655403409d7323f2c693f45f29bedd5d06de39dd0022c6aa48745b28525a1190f0e5bdf0c371b895cf8c03becb4c2fe7b181af91f3c824ef0bc896e9eba25027f5d51be990a36865066b7524adf34164d2ee9ddcc178db7e9d2cc1a7b35ea0b04cb3b40fcb0bcccf506aac25574914fb9770c576095d8d3fd8bbea88f62504055fd3f42aebdb42a556acfba69c3e4ab169cdd4556e7cbfc106cb04e756dc6a7cfcd09ac3f07dedbb6739f550d9d6afd1f5e133ed0f9ae3f8972e3a6efb30654defa08f5e2960ff95305814b1121b12dd6099819ba42d034243a674586eb6652ca747ff38745734884d48a94ea36200e1aa4fa6bda1c3ab2fb545741900f3851cc0cfd425ded16e6e7c89d91c59f36ddba30d2e0c2ad943251a973d6cdfa110ab1de1640ebf3a1132f10d7ca1c4a9fb028b1994fd4a01fbbf384d6a0fd2a831a42a447c5e2c83220e5c68dd62d60909c6615e8e84d7fa9c315e0e1aff65f0143a09880860bb0ddd5ac45db5efc1f5285b02e66d86e69ee8a7ca9315df65c2ceb9c7895de67630e36ccbe99be99836be5bb83f7006886e472851a9be74ad295636f387aaa0f6f1c574c9af8f4ad3dc96002b1b842367a4c75780faf37ddf6fcb0d8faf3d22cec5c13ba5cbef620a065decbf95c36126d94adc4e02327a3ad2f97017d236dd1106ca360afc64a18b3f525e3e44e61e228efa1adc400e6c9e2b6a1211532575db288685f0f620814787e4439725b87c03947b21306ed39a25290348ddbb87561a4d4e1e26e19f6bb80b7e93fdb502cdbe17b70e82253d928de278b351734aeeaf0ba1fef7b43323d0595bb971e968a85ed202621a96b96552c020a67df46c89dbf4e7abd473584c8db2656ac8a44f89aa9342dd5b7753b4e9c70061fbda5db69d0b8bd2245385b5320cf1a45f4de57e8effec66a7a513886b322163f220ecfc82b109f598f6625ca55f3d89bce773d21e16b40c3ef82e012de56d70413689f3ccbd42394617fc46628f5ce4daf54202c72d40b2e6f9eec1206e216c8536c5ad7957e1f6e2164e565aad0ee531af68eb806bcf3fe88f63ec789d935c859b74034a43c19dfb3d3614806a37df996e43d33408c4e7f66cef175bd0a25760a12ef8121e05a2b1867b456ba246c5125b730b21a1618b33fe942f5dfc7d7c33955a9bf9775bcdad140563b94ca222ac7153443833aea4a4cc2cbe13f344c662f14a72cdbba593984b908cc616cca7e250d983efabda0a579cb01d4f766540625d1b6cb4d3d5fab32b51fe200d82f7decfd8b3d0f6a737e4934fe76407410a817f924746c7ef8704a592c612946491d51eff6890fdc18b524c2b684aee82387814096ffe3c5840baf386801c98c84542ce28f94986df8d02ad3bf5a278ae87141ea0e334b5b4febdc9c9a208cf53404c955699e938dbfc5ff598029fbea76bd493ec8db376ed6f3254b0e7dddce6b8ba2b4a6ff8bfedb06f2ea837e6f80cca0da67a2d2964143026bb1406971eb384479a2b3f32ddc1e089d8ce681c4f332b62f71b2bac3419b70a08633dc0fb603daaf43bd13361eb8e218f2b72d046c420af373788b1094d847ea767ce30aeb392e18cbe2cc28d4f79735511017012b029a57bffecc17d86fba7f6606939a000e34b0097a5459bfcdba51ac8d484d01365e18cbe2cc28d4f79735511017012b0292710b227e3a0806a920677076d580a1f6497cddfc8b868c6b2c0ab1cab316aa0e18cbe2cc28d4f79735511017012b029a57bffecc17d86fba7f6606939a000e3bd8ec4a15d34d44507939f630b58c397e18cbe2cc28d4f79735511017012b0292710b227e3a0806a920677076d580a1f696837bff9b9f210b582c024633c2dccfd4f1cac37da7c083e0f6dae3feba508364acb91b30a32e9432c3383ee8f25eb63309d15321255b33824b7e0c4564b11fa55e402e9a6b94f132557295f0760af7c324328a413e11266c66022fd7f6800d3a23cf9e03646aa16dbbf16a82b0cdc42f54d1be8ffe8696ef24e09dfce039264c8a278b1a8c37bcb1b71c438c09e280b0de0f4f2489f9e05f0dd4c81898b5f688823b81b54f915caa8015ac44ddd8210e84bba8651e2c09e53679d7498a41eafd07a97c9fc374c2f432680997f69f0fff62cc7e2425f79bd734a019d864c5ec51885d6cfe4ce93a11040bda613377b3761fe4f646df868607edb158532b1011b9b6da265c471e6805c3dacb247a65dbf38a4dd14cc8b43a4b69ff6775314231e7974be42a2b5a67b499b955e7af197a5a24492e669d759398ad519128563d6d235149f83b2091768c30960bee3cd070454c89537ad13fbe2a0f51119aec16f16378139a38da3afde62e5b7ecff1d0eef8c2f16d428efdf083df246e906fdff350a186414a497cbe9ef362b496be8cf1da75191d13432417c07d43c7a1c24c5ae43bd4dd55d0d024cc94f7310d30db42ec60cef8087e2c22b99ca6e0bd61cf64cea39e4f34c41ed3f92385b9586bc790515b69715210d6e12a0bb9468964313be69f8f391b3c565a708ce824409de5facd26545fc88086ba0f794adb715f4910900f0be1ff1d73a24f9f31b6100c120fb04e26e6c5d75f3e0209348b9e2308bef56e8ca2ab34b2cc9af453ad18e9fc4391f84292be1bb8236aaeeb83a1756543873d00c079d209fc9b4816efa27d7274f40547c05d3868eddf690b20795c9850aa87c9c34b99da41a3bc5d8510423a4f5bc8b2fac45f3eb5daec5c75fe0b4a8dabbf9019110471efdc5501e0883272916615c43eb16ab3fc720bd56de4cbd706fca8e2410519bb44f3b2a350a94aa13579e7766245c6b1df9b4fa34d6bb4f2121ead1585e389e716609cbd2f34c8ce529de39b3caf3fa55860dbdb124c6a090b0e2053e18153ca578a3f3c4c7902bcda4da13274efbedd165c7fa0b35decbad1990f055e4bb37b208da6ad4703b432f7dc036aa9b8beedee30eda2fcdadbc16c308152606ed56ebdcca51a2cb953fced8ef58d95f20907aa80903dc32ebb5d360157ebcb6db501ede5ef0aa7e12fc0f7ca3fb263f2bd71e992d2d3e67bdac19c623204d6a01e880a8690e741655cdc052b74d71a7fe64dd0299cedb98dba4414e35480b66963a2c700a82b36ea5501a5c808972111fe5f5ae0077ee8076e90757d4b40ed63b563e62481c526081dabc1930829fcf985a9085cfcc613ea14deb4a1bfdb1ebee2895d344226f8ebde18c6bf061865f3ce860a910409a01ad98f55108a00eb8391b54ad34fcbce00d83264e5fc13653292f6e9e010f0614da355698ed3b0d0e3ff9b2e18951873a294696c0456508da584a88042592a2e51c522b3c8fdac6263885832255eb3f92bed6abf23f70e900b74e022594dde5875ae5040ed329f082feb0375801b02dd54871ccd35786170364776eb5dff3caf87b4f09da7ea901c2530488b18c3bcee8dec86d5c46beb2605e1779980c746ac52504f995b7d7dde4e8cfdf4af6bfd31cc1f0970e2797b5941dc87d03208a43df11b59b2462aa58fb6daa38ca79b004827f153ca4e48764d607838a1393719ace976cf195b7d7dde4e8cfdf4af6bfd31cc1f097b1fe04a9d571d4ce4624a134abbc32892462aa58fb6daa38ca79b004827f153c7a8691eb78af965abb6dccc394aa4128e022c3665284f467922455d951271d89d4770bbefb724889d3db1fcde3fcd6d55589c8cd39cc8da17553f99f1af3ae6266ac1056a6383a61e9babdde2a6f5c74f2817f2bddf8d5aa0cc5fc9fe93320541a1b062deb947cf03740fb9d95588a41685e1a47640c3d5f1ce2fb1fb4ebb39a187c1f9c0cffd3f3c76e8b5f8e5e9007abd399fddad241c809d2ddcb9bbe22c6589a3c5d30965f2f054924f1fa53701b5c61654d83d3b09d833a7c817a863f3cf6bc6fb58c85148fadfcd0c628188e321ce1b1dfc510ee6b4842215e34300a9b890e72f9d42f0fc1f821c27bfcb9696afefee4ed66b7206a83cba05c37be37b9d6f33abde817c1cb3493062ab3c2579ee3d7771a5d3402a6ac07b7ee31454a6eeb2ed0d9c3f2318a057e2ac3667bb826a3d69fca52176ad5244f0c99766233bfea35d44737692d9c0b7f27f58f44c0e81c164a82aaeedc02daa16c2138d113f48d6ae87a0dc2e9cd824a651c02a595ff8d43995cbd29692e44a92ca5641de0e0e9628da3663f0abf2c769fff8de2886989d37e0475224d50d451399255d5dc6442edaf0f64abc297dbfbf1f9fabb7d5fdd3627243beb2901294efc9b0041e5c427dfbda4fc5b507f6b853bcb2eca02061a584ad6972dfaf3448777d47d97c8c91327b26921ff4cbd5a910afbcfd5ba5d5f7a05c91dba8bf51edce997e79f8014367fb3b9416cfbcba8af41fc227456ca8548573a38612970086a53f540209ecfd3e46375dd7b54ecee50a340eaef940f04b821991bc0a3d01e2428bfc7134ef22295484d629dd0a0b7b4812a06d5cab9367fb3b9416cfbcba8af41fc227456ca978c368bdda0229a436abe3795871f61a7105eb124dffe2bbbb90f1d01d96c666b9f651fbdc7d91f173cfd86f4984084839b87642d0685400448860da30b1f0da7105eb124dffe2bbbb90f1d01d96c666b9f651fbdc7d91f173cfd86f49840842c1374498e2a47ec06db6b88762c980738356ad3ee21a1572720938a1411f3b26b9f651fbdc7d91f173cfd86f4984084509276f8e15a6c1045307e5f92a0f38038356ad3ee21a1572720938a1411f3b26b9f651fbdc7d91f173cfd86f4984084be425ef0f7cea75804b4a19be03cc8f522be3e2202a132059ab3cea283e6e4ed3d46e1be9a4e11d48dab3304aebefa803b78ebed9b30203b5c184dd51a58332b2423fb0611edc40e5502871a1a3798cee0cca66d4cf5cfd37579eac9d3b49fcd0a658be45c8a85355731d80fcebd46307bea5dd2998f2209f858141eab1a21cc95b338200afd6ff5c9352dba0388a2d20a778d7235241dd7ac35db601d424ce57aa49cf265562b81a6368a0d1c24a565873df994d518d119f011e198db0d701784cfb936d7433b4437bd7adddbd89c648cce2ed02f72ea8b9ceea6c88a7c43a449463eefca15b5a9d798bf369a34b32d709cdc3c5e668da21ea45e1b8f83337906da33a03ba7bbef88b9ea3eefca09f9449a49d2e657c507add41159fbc87a5f61a05825e8464cdbb14c95b04114c9ef55d5894c89fa804a25353cb32c93bd825ce3465f521b7b1341476840b595cbad86a78a228af5457e28067955188373dd2ddf2d0c6d0c9a7ea1bae150d377b571ea109c3d8dee597accdfa1cdab1ced6ca1f86e2d14fd06fd30bb40a6d2dbad405ffb8b3a6a9ae922fbfffa9bd002e4dc
c9eecb62a5c0a0f7abe86cad0b31846c34eb9c14471697171c795389e23b9fad29625479164caebc4b0d4c2d32563b18d8cddaaab57e244ec752c292ba63abc9caf16dff03219b6a7083f924658bdb104e95c469dbd09a63f8ff6bca5b58c099844059c1b22bda5a6d3b0b53c0beb97b1f2f0aaedd2e4fb6d3ae19f45060cca06f99652e87f25b233693cc28b6e2179142a96f347aedf6f4d0e6fd07ac59db010b22b70839b207d04e2f037b818b7606f5557123ebb32a9d2e4414bde00c4639b13996d2a11c506400903d4cfc22dcc117cb113bb21d3da4d8407bac7519d7d3fe4442d11d2587206888ba54fc356b7cb8bb5b352cbae8f42e98bd43c1ad791f695e0d3ba88a12828e47c31494cdf5af0aa4bf1580941cbda192c2ba2482f66c7b0b8ce095cb1b6da76ec8ae69dbe8e5132bc84f24a80f3f24526c4401fa0dcc5e3732e9e85e91c79d155e08fe11d4c4cb3eca9c58490a92512b369abe187ee2d15600909145fc0c5f7b9f4a7276959ae838b2922f06e52467b02750614df094d15600909145fc0c5f7b9f4a7276959abdc0c64c0d61d7da9d3cd47ea70a5c28bed18eece3f36c98f5dcddf83bcf11d2db1e20fd90db901fa06812fec3359ab16bfae28332064e211c00dd541ff439f51fd8329a12461000212fd763051b6aa18b7e2b28fb40fe7124022899710c4a8086af8ace4a1fe22a3288eedee96c9b2c54cc0bb1b65c461df77f821f15fcb8878fe6b436f8c537ad48afd847dc9f0fc2137f7d1df4409dac4d7803b14e186b18f27530b6bf873e030b44ab3d24105841e0e9f23587dc0c9fa2c40384938722aac801e1c9fa2d0341cc30288336a652d36acd7ec2922a612e33c06f39f3fa66a39f83c82bc7bb50b06f89d59a7f7def33b76b5e4c6d1f1a4f9611d82d266c2796707ac19441da20cb71c46bfb12fa5250cf4c11e8d2a8670d1db9d11b973fcfb0b76b5e4c6d1f1a4f9611d82d266c2796707ac19441da20cb71c46bfb12fa52506b47a63c0d56f49bbd2a3b07a09a66d4d44d8f3988e7b23abbb32d1cd60c56aaaf02720560007833bc04cabd6a28912bc700d84a290f4a180403603c799f5be615bdc1e1ef99e05887d0c3af2f5b1288dcd49b77a75d7ebf80cda4ff2fd108d11627621645cb6098316e40f01da7b9bceb77b046f00f80268ae27a9d79f8ee08aa04de1728c95a65557c2dd673e460154aff2c3b40bc068060011a6bcf080ba8624118b2947cca633814b566e93d591163e6674e8242863587bc18853795c565ba343116741e1177f0681243d621ca6bb3f9711c400f4cb2f81f457ccbd6504d8064df9e9daebdd73655557afc8936a764adc29e950238525b365c16fcd3fcdc863178a928c09a146861bc06114de2c1b06eeee409c5429cb4ffb555cee28a07645486f0cbdf6fae5905bb4f9df3f1aba2b69bd7a2b70e4730e7fb7bc99ce9d28a98b5ee56697feeb59a767149950a01e0821f1081ff9c4072c165c2bc1b136552f9441d73c6d728d055fbe23503e9850419eb70503e5569a62d01f7c8c20e88777e5f4e076b8e4eda8f61449bfe8367ad848cdd144fa5861a62c6cabbe49bb31f8c958915fe83079b949b354a361944460db9585846009d3106994a90cabf7e02bd96d7bef7627bfc19aa8cde7f9b890ab30d06cf60b5fd82f84217fcb68b9d6ddeb02f6924bb32f9c401ac8b3d163e4e9903540d59d76884ac89c44191038f1c6ca45511ca488185a3bc3d01ac48b22c5c1313bdec9411154e98989cddf908ccadad609807f33a80887c3ad3d3542af9eabeb2d6c684d5ca9e0ebc42d2cfd8826611f8bebecdf20ef14a1f3f2cd870d736b96dba7b9abc4a8788b376c4c12b0b1b4b2bd9672deb327601473cce51cf0146bad2b838e9f89c286a5f8668158ada7e13de921fbc977a049d3b260e2f2d33b324ebe99b02e8e18405f0651f5dd01f1269b16dc6c2b71f16ff5ca514a914c90dd428c2bef25dc8ce5cac4d8b0182aa12789caccf1071b84ee93af9a6de52146c136d69ad4acc8205f781113b5c100474532044d83c67972fa69a043dbd2e91f00f30ff2e76061d2f217d18dd6267503918997c26d4d24d18020d27b7047f0cd3414f9ea673cda463c186fc06a51ea0aece5ec948a2e7c18edfddaf65fb0e4acf998e3424f94f5f4fa6b61584ec73440d523ec0810821c1ea4ac82d8d7d3caa90e4af4dec32181bd289f7f10d3f562c31930016e078579ee014227459d1064b48ff843c3574e021899c624ceebbc9779eb2cb4cdfc9be445f6fbe853ef927ce2aaa2918c0373724cbe1d0dd54df6e460db9585846009d3106994a90cabf7ec7ff20f74854a055e6e0c785016dd86908fed8783965325fcb69a4c35863cc51b22e62086406cd96efe9b0fc3db6f5a1d544269b1d29717a4fe080960bcf2643de9283b5b2f504f9dfa94df3f2093b77d544269b1d29717a4fe080960bcf2643100d0a3fb6874216b211b5d44e63c525e1740aa4901d181c78a257845c51f98b8d19b92a54465465cc5b81400d8f1ac4b0f17d56ddb67e91e083ec15d725a6de9d7413dec9fd01dabe53e50833dfa7b5bc2d24c3de878cd5e73f914f22fbf90176b5167f44087e01ff797a7fdbc00f17b7ac0c07126765c369a734dbd92969db10a7c015415c5888eb69f58dc3db0c194baca8699cc7b492fdf79bc9031d7db03b7e5eb125066532961e027808419bad5565293a065b1195628ff69de2c49271ec667ec47e187c4975cd23bf0be4ca781456ecd6a082771b270349dbfa3465e7cbec4c4bee4fa31277d90a108ccb2574595fd09ef4e2e20f05ce77cf065fad1736d721f8fe415b7ac0e533ee3f4683e3a0d6692ec055489c8e4f10c88e4e2c419013e0139f2ed11790c5d4d2f690923e314292297b4a6966b4aebef2d8667e26c8d9d0dc85a64a97fa484fcfcd0444f319314146425e2099ac2b14cf4986031d95e9e0a4e9836a84ef64ee70f9efb1216097d82851c78adbd08d7398d16c974b07ddeeec75ce83190a3a012826e3c2c2ba1029ea07b35cb03a997c8f4aacc0dd493a78491499c0782126330986c42ae0f45b345bd4cec30b8b9bb41630a32c369c7309d44f04925317ce07862a34bb627e13b15560d2ac4f83136fb10573ff7bd61ca0a16ee959091add9ddb6ad537b83c94821741eba5f1ddb2300806e519df26b4f9c90517dc60bab9b02cb097af120ad4c80f1b70f5a0a05cc87aba7a8101b9690e200125770bb3fd7e56dad8833e8b904a974bae597bdd26eeb47723978e181bfa1828110bfbcbd0071f0b7109a54fe863ed8ebe010a25dbd1ee8c72859e43702013f831f5da9e7f7786e58e552accb9cea5fdc1b6b9eda49bba9046ea8ff2563ceff98f6aaaf2508c61bc8952c1664ef2c9bbbc567160c1c2afaee233601aa79fb163a1295d9f2060805151d35323ba3a60b29ed210c1b9bd27c7b2f8b28a5e975938beeb44ea61b281a8e097b95a6f240a30edcfa09d3003033d64bec43bedfe4a7c0a7889d771eefbc040f5a9a7ebef13d481bf815f297a9d58e609a51b935e54e73d4ec008e016756151bcbe3a70f76829f57c19beb9b23b01ba1ca221c1eb633895f04dbea042621eb355f57b98661d1ab1f17f8481bae317b62dcdc08466f9821362e638f8467429b1e91e7338baa4a36eb7b5bdf3e302e664800ec08466f9821362e638f8467429b1e91efa34f09f17d9e6ca1a1eb63b8a88c07b405548ce85a102d176f058630088b1b9c0c39acd34dde074fff222ef0e4e8c194430131f42b95812211e3bb2136efd6fea5715faee30875244a2081385703e6bf0a5118af570b4d21db1f9b02b1474702fbd3cfd80d84a7a292966852f396bbfe02d624e2f99e1d63357ed16a29116cfa70b7bd69dd0e0442847443e25ba7e9359aea56c49c41c6bf99207d909d0af5fccb645c9d8a450a123941a13d8aac53dbf3547966577ea56dabdb9af9b41befc08113847bf955f71609cc41b3c96c22028ddff5c29e990085a5dfe6f0911f6bf24e7c8f1154b07038cd1661970cb40447523567f3376eeea49dbb887331f237a
1e6910d1314f89968abef096bd48a586ce23892bb9d48acb55d056665fe60d1229625479164caebc4b0d4c2d32563b18148c2e81cd0e61198f307535427d3074ac2950085af22884ece8b9413a10b82f94a377bae9720d31dd462d70001f4b45552729902fe2bfab3245ddae5a6470d3d85ba5afb6baa5a733faa6baba9c6896552729902fe2bfab3245ddae5a6470d3798286eba699a4904ee218aacd37be60068b85c3c86b567a10585a1ca7472f326b47a7a6866bd1f5279a11a3f80051a74aefbf0ae9d4afa6a1521664743285b37fb13cd721ff3e92a0a31646065bf52075919294ab1f344fba764ae87292b70a5e24b324d3a1e95141dc908729da4ba2e7ab8f9c3893f5cef5aaefe7bac4400e75690069d2a98217190f6b619df19c44f80447213367c17ba589f0b0a36cdefc590892e05160e3d850c8c6c8eb480c9dbe97605753c036e70236006333525a869b1c10fd2bb85839fbd598828122c92c89832d9e90b95619ccb071d4891ff66b9dd59762832470e6e92630dee51126ce31b45bfadfc7ef7e78ab11c3dcf207fda88112927d6bae58411b474335c56cc6c5f1181e15aab9434e7f1fc6c3df49c908aeec74ca9d70d1385daf9c4de291d86d02a79898ced1fb1e940757c0f9c2783287f9e290f58636cc8e1004ea1e880bc8d6b63a2f46e7fef71868d21eddf6f7d1577b8b3e2aa74d6768a166fdd7610fe642edf8afaddf6b30821766f72c95e9ed023b61223c8c45fb3c7927bb340a79bb0b908ab1ccc944f300af89f70bee9b150e7e968b9a7252a5c0c7b8a8bdad153748a1ac65300741be83d66eabe8324dba3941dfd334deaf2ea1c2afbfa7d69fe280dd51bea378f8f5cc6c7dead93fee5cdae2ca7927e79d9f1f90652255a01ef532368fbd07f62d1470bc510dac2fe3ce72cc1e29943bcd4cac080f8de3d472e14a36d836a6064eaf7692bc7b764101d199d4fad778f95e5d5b3e9a19682e0c566c190f513670c539fbbcf956bd2def13af573c306334169b7918fe7a316953ae8461dbe33ff2f72ebaf664ab4841d6d4c7bfa6e9ec177282f252485bbc2da6a5382080f8e52229e20fe425bab115dbfec665281e2649f6a814121a18e638745fed89d9fe5d3cb5cf6b6981c2aaed289f33b9917cca5882c02d3156593bcd0589f96fea4903340c9438a978d6d266b0d5db3312827b48c20cbf412b720942051f4bc0ca4fed4cd922e4738a059843d3d4eeaaeb42c28502491393cba52808422825d573c249fe91dfe00774f83418736a97cc7555fc258c6e61549b67eeecc13bd833d9d1c30f7c173bdfc6d839d38a68f3f9034453244ff57f6a8b49e38dee5ac4062b6e4b4f57b1ca6d364e665d0aad1fcafce0596238b906f049c784ffb125dd560d8df37bb8c6021578f6adc0dc342414ff4c2217db7cef17d7c7fa1bcead096f33d31a62347392a0e2f4853031e1494110e5cacf01a30f4f70dbdb038b55a3ef32391db1d82936a0e374c5c926e8ec8e554a259f0d275b86ace67e48573414b9b3381604cba5dc8a2d48101020a84a50fce657beb4481a1e4a2c97e06f7486ab5485f23579a274aa5514a45537b1ea6f4f1d9133ad871445029776029bf68c71e86ad0e063c18ba259d77d00a2f856300d85e70f295461b954280075433c810cf110ca4426e7ea0205359647fa15d8573ac9cce18228c0ee6361b60168fc9179b8de2f513dc112dc8b4c5b64c3b65890968c59850e23e87b90d6e022998e232687df4e01816938ffe4437ca0928038c611b1f4b3c06adc8c8e3043bef2e7ece5a025844b8ed7844ebad4c53b0683896c04875780c189c6a2d41ee7ee5e784d8b1b2a63d8dddd28c4fb2bc67225570a2a87f41e2349a9474fd826f7d4104f474d9d26d25ceb44529c06a000225a86bc02fa9f54c12d45d954d6b747d337fd4df2422a8dc31808d17e7867853724319d35933292d7de6512dbcd37c46be3dc9e3517cec9882a496628c98b4fbd12530653c5503a2dc0f8f0ae675398afc2d7069c60462f663b448d063bb87af39bf3fd80b8584e1dd7b0db119735a403571d86aaa340029a3d00fb992b6c64f459d113f47dd488ddf21d48856c89351a325023f448b0b9ce96ee4852b249514b8a
8a8ed5d70f49b9413efe33b25be507302bf3748f22cc67a30e6a5c1cd21e2c6f174801e997cadbf673ac038a7eefb84bd33356904135707708cc3f7624c67c2d04b47395e39f86b2869e2b5fd98baf31725d863899869c323fa168f1c14ad0c7005557df52f8ae2d8e0955f34e5fd576c261f763b64ab0292efe9abed4d305667561eac85273fb8be48c15f95e2c63761eb747f9b85387178e07141ad0df61df
7ac088ffeb71bc4e523e86848516d7b05fe08d4104f8337e254a74dbd067817fda009bb0f8c4e8b49853821f3ce835d6323d9a4a9ab2c3b115a07a9522c90338946f00594832afe3ba4798df00b7eb43395ed64ae3bfb1b19a7ff7c595d3611a363dd8176ba126870fe6e9ab53795eed67e40db3b48f5a70588c2d03662bcf2f77fd4775a02afe12aa99f6e02941d659453e6698f55d2f586cbf3a79a43c6d806dfbc9f50e5d7b8554767403c191f6c1e0c468da3bee78905f19780a38f7f9b358afe26f06f5bca5d77456a4a8133a5f1be317ab826d7a2676b9b468813a25a08f47e3ea026c227ecab1943d25b16dffdd108f036ba76f9514194795512dc4de2f323922be5fa1e37df8e0b04c0f6ea4c83625f320c0b23afe151e7b403077b25ef5ad679aaf64aa88fd7928585f92f179fed8bf2f08066ce845812698d02977ea4ccafc13b658285894d75f203a10d0eabade8e978bee314eb9831bd5bf29f8dc407ef9b2a03df7c9ac62b6fd87eabaabc0e9c8450b7a26f945f8131e3231ddffe0c3d74e4bd7e93347064fac7f1a7d32d54e362011ea1bf5a13a8dd9500b80b70639d39e5a49df5da184366b90a7acbc5c306c47119ac12cc777ae2c8e19e3eef536f7030b7cdffd401051f998ef764e16f85cc3099678390b9327bf8990f649fa1b5aac846772dc72d2657be42beaffe0c3d74e4bd7e93347064fac7f1a7d8b5a41baf2abf967c48b1fec1b168c95aa9bf66e4ed8276ff6ef9acf41933c1a
4af61a8a1f25d4dd921c7791207310cc81612c471e2867bfbad4908fa359809a6c2ac1494d6411898ecce633ee00b2a53d939eb0baeaba4e1eda340f16a444549a15bfbb6ffbc7f1d128a6795ca57a4ed8230ccffb3e487bf7d06682b286271f3dd50e84b1c2fd2baf21485cb88a8b18b2229c28c81505b4b81f34ededcd574d95892801fbd8db4f92c0964881c12cf6bb9f73b9e511eaf37f77e51d3a79b02d85268aa9b995be0bf21de45da2eb24f86c11480a2840372cf0b281464405bb226035b638b1ef00c38162b6e21a341d0644b7abe46c5b171d2bb223299b04d4ace906f598b1b10ca49c256945c4ca4ea98378847feae60e6537518b6a186f08f303827380b2e9577e8fda3217557da1c546896876df5f35af27aeca6a0d6d8b48f10831abb826a55b31942ce6f18653217f5e727301397ab0e1de4eaa59bf43d0
3ea85f68e8dff3715a90fc9f0fbcf96cff7035ab4a32efd1bbadb43790a8c9cdddca8120604accec0f293271ada3f0f0268f8baf5a39419f001dd5a100651a0f060b4d52b5fd02f7d9495c2aac18a339d5127d5e60d48b3bedec87a50597651f9a09ebee7dcaf27f52cdb0bd48f9ca38
6a03863717ba768ff57ee550d2c1066d30ff11e4c3988c3591d31410f8d4ab39a7109ba22e2b2d70a40255420e3d42e1bb8c11010e5662343afa9ac96fdc7e7b261dcfd4f4a4771557285e4e3b48a18c24a4b01be6c185c1b9eee4e147e5b678e1e3852e79a0e5fa5a9034519e077a5024141a945d15c3b029c030ff862ff28ca42a447c7440265ce08725d610cea1ddd592753e3e65efa70461f47c36d17fa9
6322dc270da5469604ffe673ccd0b34c2cd27424ba3bf0dafbcf3bf499eb4310da190a0149f7068e6037d775313c4f3667906b938da94310a5122ccf6c462a1fc9c01ad7c393642cfd675317456ec2ced4def1cda81c44fbde3f48327d0efb7ec58c1a4c98ed8f1548ccfc22fb6323ad3b371084e4b95fc1256fae79be8c45d8f0e4a882c234ef6c2fb2d2e72fa8f2b4e26bf49a9a57662111986319e1ae1ade1f90a112c0e499f5eedb950dc294cedbade8b79b7a27308f8f79d4b2592e2c7f77b0e0167734929bb7b1693d892b113987171087d1a74052fb46b31d57842e42d386e9d71b99f07c62ec892766b0d47366cdafbdb03f1c5309798797eb85460d2cc599ff1eba194ff1efae44251d34cef70e987cde7baf9310ddf1a903a824ecd451219cf2348517bb195d255d7f5a6d020de4a5c7d09786f22b7f557504dd502e4fa4b6b0a7ca94aaf2b0c0c9c34f1abc50895598a65530b04d7d8d75cd21fda1595b7429370ba057ec082ff103bc676cf61d8c43fc244fe611b116f349f6e2f71b2355e451d75619e145c29d80c10aa3cde8f3c56975aa34adc20b76bda614f1a5d28919edd205e6841e91950b29c665c4c29d53164ab359e5212941be51aa0050adce22f0d9433becf9265074d510fe8753e76aca869e50be56f51fe347887b5c7605cdb38ab374d641b2e23200eff7dec498de90b46f2204cea8d793edbeb51af92659b9ef58911e955de6c9b3a082a6ce9d572bea2b965409e6ac35c73929627a81a68777052eb2ed45d62d4aceada5221b88aad453e0f442e7bae1be28e3d03350dd4054a6ae74d0ac602a5f8daf9f3f49d06ae4a2608410fe6df689193f495958dace445b92635d5860d3417accaad3b353e1e121342b0cba7c0f608f5e9d4ea23271d65e39ed75977ddfd6e8853f7a35042cf26cc02ebbec343e90c4cc8c8d9cf314e40095dc47b86e1d5516b71e4bb040f9f82d5a89e929bc2c0a6603a8cc0646415b8682e131977539f04f55b4186b67cbd05c80b679326c35d8927733b274e3a4e70d86baf60326683b135ca8536344cd0d11826ddf97fde8115b79fab89f9ba7e77d4002841fc541f4c74bb652b0e55d025a457588a03c45d461a4c861bb3d0c658e6096c8d4f61939dc7ca385a0372297cd348490a4fca86c327084457001c7efe43e0231cabc1af3ee3484a22ad11c597cf1a930e0c8653e05cf3063d3dfd096e3660d4af1b21c556ef829710e8c05248af82c023d2353b463d8115498bd2f2b47a24f7b699f0d784c3966f28e29ecce07635d157ad45bf30acb09522844f6c8a9a1fbecfcdb737f7b6501fdf6b4e91d8ed60281992bd1e51033aad80054bfe1d51e76d66d284936d4587e7622165f33b16c44ba65e760b705ff43d794c19709abc5da99380bb3cff5667e58998d2e77aaadc526958a15ef513a311893090c6d9a00f023049f115259dcfe8c78b5ae2f7ce4fd07374a57fdeb97157a02cad062141fa07609d4e1e32def1f67e0ea09663b11601838b05945c39aed9ff169c8581f9173ceeb023eba40c4e23e24645983fac4c6ffe0a240a3fc54f019aa64e9613ef7316f4d8ba626be7b00c483b2c8a5770a062a93a89eb571bc04ffe96c2bc5c11c2d30cce7cf7b8dfe335106ae890e916a0b9431d8c3b45b476d241cbba84ecc90a6fdba4d803b74dfda8d391b6f6d38236a0a49f2519466499f5f1c77564d4a74b128a58fe92f23956096c5c50bb6792930430b43678809894a0a2afdb342e352433407b8d5a2f40e7ccddb8e3403d7a2b986da82fc0a04cb11f461b0f79b0417547934270144bedc2480960b6116a421a716242989d277dc18fcd89be7f3d08b8707fe6eab413238685046223885af04d2c89e2a9a31a5f3a3b21ef43dda733dde05d5aa68ed3aef3bb5ec9173d9420ba6241ee9eb5a4b7564a5c1fdc49546bf3ee96172456ca88655bb44c4a419089d43c47cfd06a4764bc749845f58dae2156061402ddab02eb493854b0053d067e2ef58b0ca3fe91842548b52c717e6f3bac085654198c48e73cfc65bc1ab3d84b841263dc0db7f20c2eca11f154972732b227cede27c48b83fefadf1547f85c3a45c54c8fd16836a1d5270d1617ebad70ad28b1b0d5fea79cc79f708d376ccc847882cd507a5e60fbcf76e3857b7a159c7a1a5374a3237569df0b10848624fa75740213fed061c6d7e3df5660da8d0112b27d13bebf2dfd8d19bab2f096cfa97b634fa59bfa33877c71d674d4e64802ee5d0a00d8e12e20d94bac24ab02674d8b32125b788e99124375092d7f651701d4d8a7f72b57660bde1f98af9246abbd5c9e817c6c58cbf714bc7bdc6241813dc476f7287405ea0762a8aab8f48aef544485279405011af35ef7e641e6bf736d9698a72cdd679cbdfd46d3e180a0a67bf7713dd452fed01d04d563dd885cbb640740d3e98a776c853fb617c7aef279d7e6c57d455a4e565b10e3567661c696f3cc4aa3127de0884c400365ee210111be2d7f0c632b97e212702b29f3e14f404ae33e1e93178463f3d083d6307b37d3516a66fd893eded5b1ae2d2667d921014cb04dacf3010b495ede6eb67d575c3fc20717a20f2cb4ed2536a2147befaa17bff08d4b5c54f7008b65f2bb5fd0c254fae1fad9e84032724f8d06f8afe651e8140ff25e59f98b24e945a0f6a62cceeae63772dd16e5266bd6a5dd23f5a137bf58df6508c66a8baf38098c4631ea476fc61f0d3214f6b39cee49bbcf29833135c7e161b3518c7f9f958
1f7530348d8af0ea8067ccf83a59b4da0b8d77eecf605d104e863b836ba6c8a56f81ecfab26352a237233a35d5eaeae37c7c6f16d6280bbbdfaf90d8046924b53e0fdb76f08abe62894a6546f70c0d58bdb0491735a3df1efb3628d00a83d26abdcae137329c06140d6568afaf8016729f8067ddb40d8f53f277a8352324976852df20867de23af00b06ecc64a9b24109fe41285d40b688189d092a9f824442c5cb6f2c40f7853984ab7423d86d63d763eb2067653e086815c7530e5f271b2f7a85e9d53b51394da8842d5b739c818d96f798125590819923cc7a4703c079002102654cbbb2144308655513d8460d595987483fedbae541fda06b93f61998355e455fdd2ee52f5826bbcfedc1ab8f7279259e7fce25a2c3a578460b77fb556c1432820ff8befda7287322f5e804caf5772b6e558ec978ed119a101a5bc31f362e8d90109ba4ee13b80a1e03e0a95387ac481a0e490e33f707fe59c5169cda75d26220b453c579baac2eab23c23f6da24c24325484d89637c4aa9d090e4c097dcfac9e8723a5546b3ebfaad30a58c1c72e5c5ad234273c0e5c959cae8ff2f3b2f34190ca8f13dcb4512db44065a172b45a42fde75c6a39c44b570e30361d98f0a3ef32d15393b3a16ae627533e0c3dd103572085522317c04703d259524d770fa0dd8a89e1af272d6100010fb9ad9d4fdf7806f9dfbb660efbc574e178b7e7df46faec4926962dd535865ac6910d925355d1bbd0bcbec92fbfbd585918fd6a8b9aefcb7df4e403b5a42947f4d5605d229042d4c87ded4e351ed61eb5c6f35da5e9bca3a9059cf881de89f6dcfc58e531047c8ff15f06030261207dcec03e6aabf9a31f8c59ff29c8ddfc3e26fa2c1b4cc417d6b36abd0dd00c13d75d4a943b25e55cfd3b594eb1947faf5c0670b86bc7d6f495c0d2ae1968f33a183d8be1a3c0ed5281a9968b645be66adf780332e9a191797c3408066b8361abbd3ad1b19860f109e6880beea0594bd31de6e6dcfe2da08852886525bf458e3159ab8a861b27eea6ccc86a38f2d6206926101baa31083a912651373d3941c18d0297e28068785fd3051cd41ae5e119c03ee3b5205f190978b100aa8e517877065968f0f1a3dbdde698ded0322265fc68e2777a64806d858ddec7011f380c20785c5ef7c329b6231de416cb65fab6e41240f441e8d89e42c182fc2fc51c5b296e272a6a8e790760f4e15757477c36a48c6ce28cf6b7073f94e3d385f118bb2f9309153c256a178fa2358f720ad9b996e720221b9c4a9b506ebd547728ff7eea77bf1f9386dee124a1405dd894a1c03e4448e988d9a62d4c0fe83d671fcfa16052086c2d529ac29bcd97f632344abf26b2f25a2a4308e1583ccb8c5d9d0136246c0067ec10d5ae13ad8bf4f88f55b20741d7ff8e47c57ea4d07653720baa27d0f1dfb4f0fefe38c72e5384a39768a39f48a5d15665b990fe8688db1d28c09cdab3016b3ebf54731b557612914b8cd9ea1222ebc7f1b1d8d5a3a3e498307331c9364909ed4bf3d91
207e3d747923c6b0bfd1488cefa77164bcb7f42a1522fe65c24594a0a772b61b873595df92e777a3ddcb77c2e60fcd21c793d25a668782a80960d3102abeddec91f7adcc5a568d666140ef82e03a9d53ecb01fa0996b8923057c375095b82936bb7f0b0ce691a0d61002c6bc2cef91b45b7520bc4d0b2e1a4a1f445e0b5f1870b6ddf6432379e06b1e2d4bbf76dddf5b69a7628b4a8c88d06ebd69923c6d7531b6ddf6432379e06b1e2d4bbf76dddf5b34f31afd25d8d019f437769f050c48c5b6ddf6432379e06b1e2d4bbf76dddf5b418f819b1344370e2713aedccbd103698ac54cd740618a5519574f99f79bcd274a1581852eaefa3699b8e892ce558f2e668c55161310b3700c371aafb6d4b8deadd4e75e5eb37dac3d516012f739b3cf0ec3985eebf48fd4680e2afab739665a8a759830607875f17a8ffb467744eb1793b1079619b5e1d0cf98445977d23f7522974786a254ed3e0d0f69e98f22a048ad49c30e12e580ea75da0457a61fcd3d0d098ef6bd907463e75df78886a9aeb89046e4834e406838a9fd871f5968dc44f000312b2e0ac80d5eb0272df93283fc2bf76153d9547d33e414725567b7b1f759cf12b2a9bc2799c77c658b771602f28c503869993e639e6715fe65cdff4da80983e00767ef2d584b4f05f1df925dcbfe20870877401c0aec91ee40a6fb4cb3e403117095609d475bd3a8782c35677bb57b4fabbc4f3d7dfdb4b2a97aec233277e8ae7b79198788c1a1fcd371e0e18df8688879816045193eaf46a40ebb9b1d67797c45bb345c76ecd6350dda95e4293deec2854fdea6956ec415cc579134e0d214e7edc6348f192bec099d130acccf57b01317be91762fec30aa076406898e2d77fceae11f5d9d756d60dd672adfa9f0c8d576580181b8c4a2ec05749236b4be8356a0ae493e252aa463533c532e1ac813def1fc3be84414fe3c3156790c85341224488df89abaa6f40dae66c503b2833faac16c1a075041347a923776cee5d56b362938f2c0441fe31e7c1fbcbabd24136ea748e2e0413df8df8cd87354f407e72636d0b9834ff4539e21d51c62d79b50e0c81a301f61b3d87de1e3b28709114abb9baa8b2373554d5dcea17b2b29b442989f85af7b2ebbc86324bb90b7f11f919ac1498d0e7390f1ae423b6b74946758d074f47d5ae048ffb2ecef403e241292a860973cc2e62eda408977a78629c05b2bcb407fed691558c0c2b3e04a37a09762adb70c7be936fae2a2d146d3a45f4b69ca7c3cde69c1190dea464e82a8a09762adb70c7be936fae2a2d146d3a431ae3c7fb0f61a40e62b3c9845e0248f1e3b9f02aaf1134e0da81711c9ea3a13af027345b8e5cfba1dace2b7a48b98659c939d6267ec0a7e409b3f756eb7b0d22543b7e306d2ea78398c4e934d3994aecdb86712bf81772202ed301e9d4426f990ac1c63615241b3ee4d85d4e4e1c86bfc975206549dee06b7e4700190420b2aba56d5a556b65ee2780e0c57481a6ff86d68007cf5e0bd159bbaaf15f639bbc267368d832f488232ef476f30fbd68f36496954f37fa95f0d2fddecef56eddb0d7c090a92c27a015532236bcfe8d3973b2a18e94e7ea160035af6288dcb7e75247cee6dff92037bcfeb7b3921cd36cc32dae45bd7dd496d61893fc6a4cfaf328a05075150d7ab78793ca3c73375f0b3d3c448ed401d95bd82555d20047f1413422ac5728c7767aa13f46177c768d0f3e65e414dc5df88ed84dbade8f5e36dbd1267fb4fdbcf8db49da03a835b16374fa221de3c9c71ee26431f557750e38a12fe12ebdf2d08d9e5f6aeb7c38d95766ccd0127f9452b41577f8c732fa599d71d0dd29fcdf0321991649f02d9d9db07dded155d7b31044790c8657b362bfbb409f442fa2f08da1600cd20c7aa3ce908e054d6a6d666466d1198da8e728df97231a0437d891e652362bdd493b83ffabf8563
db5cae869b3d1ea1a1a06fb36b7cf983b6c7e96f10f67549e79fb1b97b7c1df160ad7877409286744a2ff79725241bf0e4b19abd9c6e9db043072ba6b8be195807294c2b4130a62cd5924c547c9e7d7cf06a42732f56476d4d3f69c6e2ec6bfc2f1c8716cae7dcf11c04f105b6ddfdd207201f1b628ad2b84a85aec26ce2fbcc96f0e1b9322bfc823b37593e8da15fba4308a36ff28cc32c350b5d32da1bf43ec6af7c7891a1c1d4ecfc22988ebfe693c63cdc8775d496a46a6a7b0911d6a6553294760e03cf963437519608f89090467e3c4839683794a4e0f0f28a0e68f4fa1df49406f36efdaf9d1201a6c724d4683d5d4690d7d7866608b8b4be3f64f271e2a3b3248616b96971ea4b95be6ad9e617013d4301955aad9aaf428f8d9b141a357a84503c0633f9d05e9dbced3df7d51d67b70a88e0c9f9c6266cf52910acd2f03bb973bf65c0d581b4f167b7cd81773d19e49b7427a862e3e43bbb945c07356213eafcfca11cff32287570acd39f0820affd862f2d194d614034eca588dc258d4a2f74d3c3b2ba01ccb2bdb096459d0c5b8553bc8dbefac13849459ab31c0a277293470a84cb8dd3f39892f0b9c49fb90bbef07a88be6a101f0998695dfa36258fa29c483390bc84cb6c4de75fe2cce4c29c2515d8a711345f6a9717f969b6
9d0fab4b80777b5bc94a98e9221d7558b5b680abe9c54cbe648a9fe4d2ecc7d35b385545e22700c39be1083d5ebedd7f7d1cfd6a749d8ea951d3bb0edfeb377c074470540b13cecbe93ed22ebd41be4fc7c323abc3e3d61de4364f00f1b3e3309657ed2978edb84d09531313fe588306509603335d0597b55968cf5ffeb70bfa8e4ae27afbd322bb957e21c76bffd2895d1438980994587ac90f6b1561ee916d
344740b1888763486b39b4fe7399f84cf53ce5151cd345d1b9cae590a9726d1ae032e4c8c588b83bd6967b4f5da7b1384d9b5733b7b134ed23f8c7d657d12cf7d82c2a041b5ef7f763a7be6d50b65d2eca04e5eb430dbd0ec24b98f5f60ccf1d231ae0e4dbab95921119d2cb9b4801bb203f479d4a33aea793cd30959a0e607f4572ce23653ba9bafde2e4046437797cd9654dc5a425224a28425936fa08ed08afb3cd0be4998355ea1295f23d2d7e40164322c362c7dc605cacd935c3579312565442f16c333725d104ac08b2c0f728b4e010e5aaa1f2255d3ed32f13ef6870
6a9676317c3dadcfe17f23b54e04a2705564668a08fbe82950c6a06ce8f0c318882e1b114696677f0470a0ab7c30ac476be50ea80ffbace0b132c0567deba035d15f988e1b0ba2002b36d275af00e01bdbdc036dd3defd9b7288f3162ea9db9a6f36d774c336ce8ac8180da48d93cb4df23eac01cabea7338b8050d18943cd68e3b68ee95cc17bf7714e4dbbd0839172aa883179b367f0cf496530be705bfac5d381cb72398f1915c06c94bcb69326ad954e9313630af6639b39daa24cfa5ecb1a0f3c515c3e5a2de0efb52f8bf33794293cbd63038b13847747c00f5d22cada44d0bd5110f25737208e94769c24b2af9136dc21dfbe1507f2b348c88cb2734f0c7db3a3c2d096e06ccf031737006a660c26da1420bf1c2ea7954e00e3a6a8a02e1c4ff1cf16846ad2ecc81315366b3d259a8822f6c304031c2e6c2651d0b07bd7d7c981c6474f8e8b20741445c954d4e81c90cafed3618e5bac4730cebe2219b6a3cab47eb0e88318669a54d25cef3074d8005d4c3480c29d515c702ac7a514050602ed2bc11eb5e5ff2cde0440d5c1f734a90afcf036f8998e2b8a81d749eece46123d7d5436c699de807397a76ff9859604f538f81cc327140cf1fb264d24c79e29108cfa34ccffb39450353e15ee6e0c8c79862681b48e0c18190ff32f4c002276e51550da4ba108a76b45d0ddb31f27655fc8d1a0f24417e5e6c8927798c4a208bce3c560407a7b5e26985bafb5305acb3ea10a242c2288ffd0002cfae78a7a3ba4f5aad87f06e2ec46b543ec635daf560b37bdddc69c6419a1c8d052282bc446a65312bf7f0e176362940dbba40a89474f672b64e0870bf81b366111171fd6ff65e0579e2bb6ebd790d47fb3cd8d980ca45413a3fab55949768d9c7bbb35b6dd46953b4db7ff5450181a3211aef471a3b800e077debc8fcde08bf1403880054db5a061966b1a4e05cd574266433a0d85a5c4c191fc786a3a1b6799b9b61ab9788621df920e80ef20b7d88b12362124d75cd321d2f46db44dc8a60ae462b0848450612576f74a07fc8d95554d53035bd91c7db34f9e3d64e300732715f71966ae2d58703a52cd0c76b75e3afa4027b1387bda38896b90d6073d08f5fcc7069f5d7924a3fd11e37242fee7ec307f69c31660305f9489aeffb2109a8705bb47b96a917d7ccd53f1b705fb6b64f0b2cf415d046d69c9e55f76990b8448fb1423c9aff9a2b2e030931434e6eb6bebf8d537d579e14be267d2d9ca1503ab990720feb6b27bcb497943e9f6e89b933b4a362f958e683b992c73ef3faf8f81e7e16f19b3eb84fc4b4bb5a6b53015d646c8659b926083f1a68a53c57abc9c43d5aa7233293fa0fc91cf5ce309083470a997d5428e23159b5981c85dce071e7812a360153363ec98eac98a9f591e15bab106e40d6e3b387583a35c8af0f4b7365f3850851e267e57ef41895d0b8e34a79ff459fda646f8e3ccf8316152ae81f0d41cc2ed14b049089dd23ac1c4594b181a83472042c004f9b89dbeff754404f9e5a81c6054b080cff626458501ab7123fd7bb8d962efa4255a8e5def08a5906e180ff6a629efb2235849a27264d7827c93f9344579cbea1738ae4598547289ffe151ac9f5141a384aa4fac6985a25cf4c683a7a1f7af540a993347efb24b957d5ebed83132a22a1b8fe17c68c5a3ddabb79b5bc36cca98ebdcc05fa68a1d75f069e48312750e7f67a4b373896e691c3f385b0c8f3fa6d62b944aba0c81b7d2f97dd2cc7f87c1fc6c43f262bd3272e3e2ae087ae8c9a34ec2d9d0e00416a6ed2517cf7b05a448766442584c9d8504c1145bfa88767fd82b61c226e1cecdd0d7f0a7aba433828b00c68d6094767815bf739d3ba72272ae5b5107077a12cb12b044ba45bcd0c318713fef951857aad3356f5b7a6ccd089b8e5ba6091ffcf1eeb8a8ba75ccbe6e52e4b44f16919a7f21bdd134093105d718c9e42bdae31178d578385adc3c064ec83dd56c9407909309456f06b4e4a1d8d4a250abe6fafc7b746bb28add4de331b8a710f1d3003040efa2e3da3c63efd3d113179713b60aa56e55a015abf40945f59decbbc6bde64b883ec6939a6b4702a5c26b800bd0aa41d22f8e382a7a150f6297987fd844ad915104b14f78bf30133a714149aba7c05c44b9ae6a89e42fc1750fecaa6c8122f9ec04062add560f7b542000688fca32e56ec3b67177529bee60d43e11cc94148e4c50c17f30656366d9c379f7ab7b035b0a45d9906681860080c612e90c9d6ca69c79872b2638ae0eff61bb068be0ff73e5814d26b6970f0568e0a9f1201ed5afe986a3e271303c1536a1e302d30461995124cf3a83949b4c45ba8a50fd4fa77ed435f631377db4bad528ace0350c2aecefa0b9755deffc1cfdad9c3a7fe9c7efcd852fd7e6a53847665d3dc305a38c99541fe8b2098d1488a028b14cebc887997f89d56d8e897026a1441b9bf18e1dba640e8825de4c28e2b097bcfcc34c1395831469af39eb1eeb34b275c32325828657d210a6108cbe3c7fe647c45b6c62acc0f122be607699ebce480fdd245ef5216a635dce15d92ed8e847b4fcb7bcd25eaa2790b6c9f3a7a047249498683cfe81aadc892426c7f7fdb4a0ac80d29ce3cfd2e3117646c96fe7a12ca73d45922e4206fef5bfee3002ef25559f04f0c02eaabf3d7037035f6d38f00206e95d3f3b4bb033d9a0e63adecc1fc8415e7ac32799742b79d53354d6e8c20e4369a37c75d2fca96bdd9a6b893df66732e9bad093dbb0faebe0f3bc376cf5e303368b970dc860c78f6402b0e2037aec6aff6faf1b288c32e174bfcaf32cde1d8f2670493f1ee0d29db592163b73b9128b9cb6e00edb82d4bf39241a7a1fbc4ba684bd42b8dc5cbcfb746fe49e03ac38531ea3f5b21a2f25dc9f288d46a926fb20416a84df1ff79aa91d6ec283dffa8083a1c98e0e8f245fd50bb23b18d0bc1be0d98e0fec7ab6cf4f514d45430ec0f6f6b6fc16087069c0ae1181fc8eb130c1574e22de0ede6fce0b0726789973964f8071797ad6b01d33607b54236b76da8538ac81c7e83c4d85c97fa96e95d5245f68c51fe29680d810f27d11c283dffa8083a1c98e0e8f245fd50bb2a98dbfbf81a9164e5da5af0ed41c86dfbaa85c1f7b56724ee461e539d2a09a2db957a8fc9809fdc2daaedf976dab08c38ae68110e8987bbd6e857ad047945d6f463f80c13922959a4206af87c84a86b06479ad6fa1dcd0093699d88a7c054d7cc283dffa8083a1c98e0e8f245fd50bb2288bc487fdc42c2aa665fce97cf7af83aeff4f8cd131c8612709b4bb0502b3a6ce5427a8efb39988b8c47912e08bfee0ef0a52a760dae5e87c1e558e7a620571ad6359defb88cdf015f61d57f730e087d32b5f0d8e3ad800761a80f514cf27febc151c7372b55752fb6ef83d8c5817819d33398c0d76449e5b2c70dfa54c1c75b3715327f33b8dcffaaec6d6c9b5d497f5883f9a116f40fe649956f258594ff9849d607d3a5851071cb939aaf3489c52af4804abe466b67c4632eac8446f254d997de1f54e06647a9ef87ffe9e9cbc1e19971a1b5b45c035cbc4636237d5f21a214d2db3263b7f6494a24ba342a0344095b805bc41d7b38a27b76c243dd4421099a0af90a008bbc6b73ee0894e68c72804746733de856052418b673713e4e365098d723e8b315e166945682f5c7741e1542663c4ebb318efc52d73b9fb707821fc75743f59605385986324fbe6aab3fa849d607d3a5851071cb939aaf3489c52251a483da208630322a43a1da7083bdde38323806da4804cbe7cadc2b10e09a9893a36d1ab265e061948ba6102acd22853bd7af7b4035bf171c7d3f8f8e2761fcd57bae7c7559f2289c38276c75f12235185aa4f992f9ed60d354b62d92eec55db7099a020aa3abacfe969fb60dccf2562b8e99e99a2211a23987409c36fb25c67117510e5a7f26aa2c7cef824920ea164050a391a5bcd71e083106ed07648c56bd9d2d94124e0d97f7d030cabdeb651e7bb6311cc865cb0262384182782fdb413584847fc5f132522a1154830ecf77e77e990c116fef411f0af124298e33e27e9327427b964d49b01746cee77f79e9f7da8feb51c61696a65b4db253ca1b86f
06d7d8781853cd1f0d0a2eb2db8e8a88509268052231ef2c2a274165d5d80741ff0faf0063ddf2e03e36b9468b1dc17fcd2a021f50932c0513f44e0ccfbd4255e45c9f094dbf3fc666abad1013a2071dfcffb2008c8679f5fabc451e82c1b7ab
e413d93f64da9811eaa51691265def86525944137fa127e48f1e583fa846e5a8ad0c5ecf46e3b22b52d9d1d8a6819024234dd83e26edd9aa0cb8c840fda7be29400273f129b69d335e591b6677eedfd49c7fb4600e2131bb448f5b7d039f69a268b5c60a2b8bbfac7c1b5691aaf2fd49577b97fc3ec71031c96a2a12182dddd752e8464b4952e6cbb74ef6323b953d3183c2f50ee19813e368df61d75cc9cb3525994c9f2f9c901a01b2048fcdfb39ecf1d95422b687c2c60c5c6aee00ecf03a
826dc63e80b89398ef046eaa6c9e3ab33b59c8ee30e2baf3f8fcbd8f647c3adc9b724379dc506eb386b54f5517bbac3c729a1de55e85778e652d9ca9a1b73319a5c08aa57a1b71ef217317bbe5fc31557426dc15fbaab8b6e98f0e9dba563a371a3b085f9886de33ee0add4500445a48
a08f975199ac3bb0f1baf70ddcfa11a17b51557df55bf3c501d6b3fc1a6284eea0c67b2095e3d15bf89460b9d1b486604da00bde874a12b1d724fa5db56bc375c350e3793da9774eb25c67edb92075706c0e3f9ef61b2b280f9ae4bbe201b3e83e22d77a7bb473cb94abdfd58b8c2b16fccd9822feaa2974d9201c6130276626
9a87ef0a790ed29244ce265f5d1cf96f8f8f29b1505ad2eb239b217e3146653412367da7d021ffc35267dc3a812110655cad707ba99e06c573ee67154f6c22ae4de3d16dd7a6d99f7b78202549807801d6dad3e5465784c18a7e643e920aadd72b1102fb4793cfcb869b9a0abe47c5a60151cb9f28bf0dde23666b1591b5c49966520137cccdaea389b274b67f9f1d6b9105a692f70c5d9e37153853427431817c536294b6205a025d3861a308de64f4bd80cc370dda0145f5e268897dc4c2b74b7e8045787605303b2177bd106c099a80bd68f48e96172ea72d42c852096c0dd3a11460766129ce19bcabc81e1a358326dac601a7c8ac7e2ad7d8b7920a461469c6972aead4d80850d9947b9ca29d41d33ed918d16902c640ba5b1b69b7be68d5254559260590e920ba639b52c8ff333ef80209a456b78038774fff811131ffa0baea8fa4090314ee17f75008d7b0378e2a1ae154a60e2ade26084b1577a6486221842a56b0697e98a683e00d15ef2f9d5214c2b2c6dfe01983b012d9dd76a945f22f95867e8b3a3ba27eca419f4255
0fdc6691c75db5cfba5f42f1386f5179515766582b71c98ef7a91ddd1fc9f191888d0dc757869883222048ddf2e4ee03546d5ea678ff9df7d8aaec90f7870878bffc46f5eca07ddda659ff58446afa34ee1a9d5c5d95481695475ee70ae7fded18a68c15b022073847b52d6b261f3c1b
61e82394b92a588fd13a5a19ded352e22645198042bbd5f1285f81ea6fe11aac5b0276480f26e2d98215601b8540921a8906a93c113990e5b3f8d0ee8605866929d66245cacc26c84f77e44cea64ded0cb5dfcf4622ec0d86fdf42557c6172e918e5a3214d12d6372d56e0be238f1f43977a45e7730cbf0a3f3ee20c719058cae7217737128f1f2e84e2883c31e98686a88fe6a3ea8e07086dd8076fec4839cfc613996fa67bbd77f64df94c8497a59350e6edccbb6504bd3043c7d6a9c3c31e0bff9c04d80b99c769506fbbc0a2b6fc1c1464f3e70a068d1463ae6ca37e32561a3b085f9886de33ee0add4500445a48
b3482db83adb36d2e5d6bd7a5d413e5eb73d7940206e67173bef054b097d7e41d500eafd66641089bc6741d0cfb146cecb07e8fe612000f6b4bece1bf29c6aa718f3da2b69b0a20284294a7f7be09c62952e4c905002195ee56372e53746598a8c39f5a09155da3c6c65a5d4473844af4972a9d18b9efcc73ca7a803484dff3fe1598a3978887c94e18363d24f0f1ab0391474138a30a88fcdb2f8e0ac71c1b3
09b1ae1b412b2aa190874f15c8abfcf4593344e1e743e9512edecd484452e65020a2ddbe40fbca054e94abc15346ac69539309fdf8ada82d6a6e58f113d13c1d899c3a525b9a7c063deb0eaa5c154146
dfee908a965f8288f05e1c614b731365f83ee977ae713bcab6eeb8932d13552795560ebce307fb00ff3e3af3c4bab74ccc94606680404d987106e620f51fdcf5cef84a13144f2ceaa98a72c0a63bd60bc32d029305007165b8f134506df94817dff7bbec0cb6d8707ac45955db422ea07c17dd299976f1668115ab4d1c4b7747ce08ea4b3e27cd5293fd4b2c471418a50a0cbeb83ab1a51b55d2810536cca253fba7175603b2e571b7daa526f8923d77
d9de317a9055163c8387996c950eb76470370441f2727fcec8ec0ce2790d554440b967552881de7e9ec965a326d50d5a9f2947da7f13e51f4dea1e4b5448fba74fe06812b3a907d373e114fbcc305e7dc233bd3d33959bb3a751ec1718251cc1
0f3e02ed63d31005dec277cd032a8ab8f03a528b4804a36b1e770faf911c258e1752f3fb8742707a0f8aec7c48ae4c462a6230b530757020a8524b853be5bf7f8e2865290f321d331fb67916f1fd10f8564e2e0f92d3a7a8d3b91bc0a2617062e13512fb270d094826c64d9cd3fdce36763742adb05245a691497319d62b4992b09fa437fe53d6308c0e5fd821afc3a7
df990b90a885944def1d68bf23ad6946eae378822de919be6376f69136d58b4d07ec1e0689d624fd708b8b55b2b0a95b01a237557f1489a7004e3a16a1cd8d9967c176a20fab452b7f07130357e055f7ef19e50ce64fe8cd2e763b3cf053bd31
95562f0a7f5b6fa6e19ce033b835e18b1d9851bd012d1a276d90ffbc208205f22d41792a178f04d9a3359bf97aeb8dae86dce5f23b82c1c73eee52abe8df6b565a3799aa603603e90633d7f354905d01085728293a43508363d482a307f0804723bef6b4459c4c66130c8aa54f2830f4c9fee3982f702e5b2d44778023df92e23799c393ee45b08e1d488be2a0cd84f528ba8a83e3be24f9dde0666d1f7925ac
c920b156dcb97c8bdeb76e0564120b2feea17e55ecab49be2ab9db23f07492d2add797ef6a578689681956c03bdf2faead853d3844956b5d0681aeaad1551ead86df4c522d6e30adda24eef805ffb7a726c5d70c6e233f7869bfd229313cbb30b8d81ab52215958197a24d3317ffb0bbd35edf5ea11072bbf93f8923de1629819efb2d76d423d6fb9311d57e409ab6176c7b8172703402f84fad34d716222a10fccd9822feaa2974d9201c6130276626
0a83eeafd9bcc9ca06541e608626e19eaffee08f1a53ce63f03c2d8d7c1b8e1ee5899b6c69a8da0d0803e766e13c64e1091aac04d6521aad028c247ee8dc7de8379d183a227e611322614c4d42b676e7
42ee12df4d13f43dfc7de7294406532db2491f276f418d9ebacaacc540ced60dcff3c68e6e5d1ba3a08e9aa6e9379565817cbe1ddbac45ee23849d4e51619c1a6f059b92f9f4a6de4ea2de6848dafc950fdbd67478335941982780c8af7f3760ec935e2fbe8c2690ad434e527f217c90179a867942285b129fae6821c79d79dfca9c66a42002d50d9eb6af4b3379e665
c0635e3e5fe1bd713984c4456848f66c51be9772c7c59bc304adc058be4649f5b3bae8c1a7b1371eaa865f6e16abdc249c260813ca36aa76ff0b0b7284b002adbdd7faf6c34edada4ff0bf2786c23b8faf1a9564b448cd156c65a33b844cbaffb5fd3c25aea94d6057ee3ef5bc670629a4f814ebfcd10f4b18739629fb12f075419c2582bfed95b86865417ca5075d63daebb86522ef686b8067f0c26e3a2be5
a94d7a53245ae6dc6950191ec6e6af4e271ccd8303fba18ff72f2cec8f641dc75f4156eaa14a7ac57753d7a182660cf6604ece05f55901de6df85ce6ba97ed0fcdc513eb0ace190b672d0b9b7f30491e0f3ee18264ba2935f1753d1515e53f3b2a7d99f5c0462fd8d22530bd6687129b
952e5b407c8517bb8eceb6a68d3163f713cae3beb9cf16a8161de35dd2f120a38f1789ccf15b40236864d5d8e623c464a1bd440fbcd3c36a8bc6d531b6334e22ec8f37b5617d2e779b36f397de1349c63679f36c45a54caf29e1e3a2ea6a43bbb4227841fe7b1ffbf31b290206448e7879e5f762f9a97432a3b572416b6f807018b2557a2af8b32f09868a0143ce867125f0277aad2f37761724d2545d246b915fd4773663f7e004bea53632ff446a3376ec14739af8cb0a432a24ef1e2e34ea7b0858ab97b294990f9c14145ba514d9064b0491b41b81ca9e9794350cdb32bb5cff0504f1c6ab1a450e951eced8f77cf66280359e89808654419655f55d5aba117b174adb1984568f0b3023daa300cb441e4bce7287af6b447127441d4b71c459438457a7783b9c692392c09fb4561ade0e1838e6760f981bf3598622f59752c137270e266b127538e98b9efa3845086ecd5238192543bcb8638acc7c79207f277612e360e6f246f88c4a002fd0a9603c695c043a7cfd2f8b9c76271ba999050a25ae477b2a8dcf15b2d5f7bdb6a6fffebe449860ca75a76c2a80ec6b6ededaeb59bf504930739dd2713410b3511d8e1f4e6c376ae4ee3ed99096437a41d9fc41488b709246eb1af81f7b498018f1b3feddf5d33092c6267e957dd0a0acb46da46a30ddb45aa8339bf15cca61ea4c975b357655d87f448ddb2bdbdabdbfe31d861f6574044f909d6d9ddac59b6a716dcd545459f7acd560d053cfff66a0ad46a4e0fa8329dbca3a6175439af2c2849e1724a405980e780f59678d2f8acefc5ad08c17d1cc130aad06c66e34fdb6d563942e4d4d2c117960127c2483bccb820afcecb88ac14d7cb7cc16d1f63a423f155b02b0eb154724df838ee272e02e62795f495d015e4d94c2a1eaa63576b246b66cda8c41ef4dd9ace280b64ac424df69
2dbfab39d995e8bec4be639afe6edbecf5f223ae7ef28dbf6a27a0b2919fb53b82a0da2cdc68c60c42071e1940b0e05cef9db129a264cf1b5f301030972e69673458003c9c4c6e6ce8cbf7edef0d8d8dc4d6bfcacfcebd80b49d5a3ffa4bf40e86448901ce12e53076eee73b97de28845ea62e56265cf6c75abbd5ebc59a42873a6fc37f0ca14ff65bfdf03f32d740ee989e2266a70972a344bbbf1d17d3d12dba59dbd9da60c6f739b75bf41b604e32c1f9c659114de089c9af5b2aca496e0badf592f8a75e5df472d901dbe281e286ddec852bb0264656601855761c4056e2ffb624043333f601130c3e5d2a5002a64ba69855309db9aae01a964350801b467f855439a63d752335b991515ef8d983b44f546c79e8b4a95c6dd6788c3ce64095d81df7c2ff366bcdd8408093a83dbc41bf77056361f524f7d0eb4e066e379317652ca66e578c07e89997efad3cc548c60686078b0d6ee6e6d3b2c3e2c87e1d
028682e8f626517d838564ff9e70ea850a3821a35f416220a2e395fb29ec384bbc62cb731b5870a1b803c2f74fc2fe0da9eec1ad28513a3c4b52340e5d5da2553cadcc3a488255be9081b389f487c8ce488f9cb8fc6ca8a1afc5409b71b4e32ea6857720697fc006b9ff6d94eaf85cfeb17588a6ac0618cbde8df65f72887c256bbc7d98c646eb34cfd5080e07f351292d6bf8a031426680d3a9e0d05b55a6292dc6eaa86dec6b0273ae3628c2415db4538ec5e6a71a9d1b52e01d5e13090283b80cdabbc0fcbbd4fdf81d978d0d12ca6cd08bc134a024f422d09ffa4e5ae3ad1fe0a58c68108f0b5ec1f1166b7835b64766dbae83b60d0c1ff88e1aaaf9159cf6bd15ef09253a053138e711dcba10f7
028682e8f626517d838564ff9e70ea85e71b8ebaca5d200b99884a1e22030beb5207f77096cae98813d94ec06fa4cb9a568e62435f8b8031dec68de55d82a670755777c8f3a299fb68a9992a48b65c9b0d9e17e1d1401fd374721c9b10a803b982bc3b39db0ea0546f2d3c0ab2d9ad434cd9cc00228963cf81d6e6d8db0ae3803756fbed09ec71fea3137ec51ea80c0089e0589721a7387b077808e075779258e3389dd5c9ba9d4187577c0201cf089b8cbebc1cdb4ebeca534bc32a7d0fd7d3ecbe03f79e86eed05d72de8d23afe544aa9bf66e4ed8276ff6ef9acf41933c1a
1be3aa6220bc30ea783376a318b9a0c0bec63d80c892b4de06645a1c07a69a45fe396a5e01e69f9bbe6022323ff0b9fbe4e15620d6d7920ab95f322137cdd6b531d53cbbf4e00e18ad41ffb6f7c67c92
c5a936142d472b3918cf585dc462e59709a185142564b75cdc167c01bd47833da5a9e3a7ec2d9da2342cbc79c64aa8763ebd6eefe938a2cd90c6826a8cb399f5e50680148cbc66946b0a8afef513b431942060e86ca9f4d305ac7bd782d8f58abbc9909cb702e3a3223018787e2bd1a1437d891e652362bdd493b83ffabf8563
c5a936142d472b3918cf585dc462e5975c0f269a32eadeee2353677a8d6b9bfdfd396f5d03024d28cccdb54f443d54c598781ca27a84acb746e92eb56292c43e2e24c210f0075923e2ea13c909483174ff76e7c1811c72947de86a4f3691dbf8678db09e54aec00ccea2ec93e392f938
2e033f5625d954ad0e2669c705ee46da727275ba4515b9c70dd75f060b5aaa4a49f132502e94057b7f495bb42048e1a6d6cab11a70a8d11844f610ab8908622e30a066e1f33eb76a62ae17f683c766cb2ca2a8db0a656acc158287edf71613f3aba69368fb4b30bfb136366cbe9744366928091983a036854d22b52b6c1dd909678db09e54aec00ccea2ec93e392f938
c6e3d9563de128cbb75e1e7abcd09b8ff7796551cee08f0c66501084750e79a40d7b4c6043364a3b991fae491d1bc18b0910692fd5983c4b4be15dc03ff7571b11ffb207004bac547010f693f0e41bc8db07e963f128fc8293b3a93c8f3b985f478ead88e29e3b7f4ecbbfd1fbdb4120
dd5bbef44ea180ef7a0e53b8b9aaf954541eff5acdbfb6677cb086bd7a9289cac4abb51f59b99735ba78b5d38c21b91322cde7f83789e3353b4e76212cc4a0908d2f07b11497365f1894b11792237d7eeac712b81a0c2708da43632d50d3afe463d02d52ccce2506b02480f491327d973fe45c9e38688f95f0f2356a0a53ef11a44a5a32720f91406de910602af280f8cbb0794be4bd646bb36067ca179e658f315677134a88ac91e1d962d8e088604e588f2c842dbb54339c6c5fb878b7e0ca04d9292761fea8babd7b0a4c9493e2634c037277b4bdae7aacf45ceb417242c5e774e1c705b5bae8f9ebd46e1437c7a828f94ab675eb231a68233f198da2f71675975b9fce2059d405458722c0ef86822373a91723b039de6a5147f524b6fea037767507493fabd36d028a2a11293813bbdc102dc94b6dbee193bb096c0699ffb168e48f99b6d497662027a73b44604d22031300fb9df0e84ef6388b68b28894b3a28762cdb6463fd7a4aa19ba9650b417d13cc195a8a1483c45dce4e27af9da277713fffadd103210257e64dea650cb766448be107316d86a210b635531cf68c260f21562d4f4b0d57902008bd8f7c9462ce48b6bda6ce293abf8ffc340e4c4120024381fb788a31a988f169b60c625281c4b3788e9c45e1741b8ba3bc7ce53fea6ff5a44cad3282c1c77d22370c66c133af792159d37674f532577f77896cf235bb016835a0fe550e894c72f4f4f818455a17e7339b3dca3452af140b8016f510ff302e792f5113e74b7059d9897479c2bab529dc568ca34b4bb5859e2e4b8859a2208e5e117c272f49522ff199d578c0ffeafdf04aa0d59e2a601e4be201fed39494ad31501d3aee5447f0b6a71affbb05133e7527e92d90feeab031fdaf882c1530b9ed690ccf67ac1d320960e58bb5add6f53b0c108e7ff48bd96fae0df1cafa772480917676af1cc1cf49db5759c542416b748d67b903f69494638520fbddc6c891f40471b600b6149eded859d3ab85d6ceddf1fc25773be8acae362ab0ea1ace6d7fe1ec1d3f82f3416193972e88aa5f08e6c24030e605aa6f86f788462eb1e97aad42d28d44ab447d904d2ea94d950020baa3f93ff2be7e6047a56932e65fd46206b25d30f728bd67928771d5965e8a5a567e53cf72eb283015a8aa02001c2c22d60baf90d2ae1ab1bc9ab9f7af591360af62a507beb7e70132c4bc3e81c4b3824d0b3faccaa172f8866f10c251380d253d75e6b28489575c86ca601e06517b122630338b2cc84db2804e557da79d97acc6bb4661fbcac119c92f535b4ce3a595ccf40d8f6a84f8f24a3822e4e89c5c28f498df6153afeb9e8cafda6307053f85c72c42895df3977cddbb236f663c441b6d93f4887ecb3a86f6856205f80bcb416de6789ad3feb0701f3980eaa30c87dca1f577757bee3e432b24e4e6e8c4d892da700e4c4a8c975257857f452ab64b377dd1bc6378cc67ca42e296e2001386c64bca535cfc7885bffb6dc5e1f1f1bbb01a868ef21d389fbd9dbc0daa891edda5f755eb050b57000901af1a9e9031fe77c5a5d940747db7ae9ccf134cd1faf8454a3810f9fa932074eff87feebc89f14996f58f3d6bd290f9f15d09c6703a936881357ba8709995e91c786d00eacb6ed721786c770936e07575eb593f304a1d36633f872d5cd0c5635eed497bf52a6e3a1e9b9e1014c2ba2d3ffe7ccda1db9fb345096debac20fab831a771f64450183c5a37155a22069282ad6e5c9a26546e5e9cbdd42c3a4030b3961eeafea9eea29458a012d3c6eeb0f6a9efb7703bbdd6b70d88d3a68796e6f89d36c3f51042e68c852fee830e3e8ee76c98b72d55986fa2bc9abe4a1cda4cee9ab6822a055f243e4ec2b6862e1a45697a8729bdc31bef0c685639e18a089874cf866b0f904dd143e348452b4c5ceb1ca19b4d878ebfc5b43532bf5f8d5e97d38c5b48acd332740575c29c2b157decaef5840b5f615277a6170e9c39c2de33039f1aa35987fe88a6ebe949be75dee87b00ae0f3bb4ff26cc30ed831502941460b8f93c6324db61d66e3bd3fdb77974c06205a23cd31ce8ebcf89c092403ea6cb107b6b5bbd2b3b4a96174d2038c03a0ed7da4d24dd114b160c69c6f14cf3110529e774fcd5c082f1fdd92c5078856a72903bedeef16dc60c1ea329b7e9b924c0b242c15fae3d551741930667b84b25714273f446c4e529dc27510d1dae0628da6f65c5c1e3d6c9019f4858ac0e51fda003e704028ca8c442664419f57eabe34e467f756646e38315965d5483ddc02c7c3ea6a7f4cfd791dfcff6356ef9d426f8ac468b4e2b097635d8676c79d5fea0062b8296e
fad8e513abccf62be0452e386ae85838ab88868f46bfe7ce1f40407701be6995936b5539f9f7a84640e874944271664456e7156306f76b18a00025bf7f497e13aeeddd4fbe6a0085c4465eade7c8932b47458e1d2b5664e74a9625d190082b2e1a5025bc1ae1d9617101a0761db8e8909a06c26733a40ff63364471cd90f7e816ec856649e9606f3b73021704a804999950d4fb00b4bbb64d30643ebd8aaf6ba7d410c57831eeb9b9acdfdb23f9e8fd6af64c11ad1fa1ce6097479304d900d300885fd22f10d798efad22a766c62ad031b3d5650874315ece8bab7ff94fb5b451c8192095830b4f83a394d6e533109e4a078cc04ab9ac58c03f14e5aeae314ac91736a199cd7bb37d77d445bc4b580f1410601f8be798c46a839e1dd53b9c068f383aef7803d1675db7e7f2b0fb0efafc60d2fe1942d8c48ae58843b612b172f40f0520a9bfedc2a591388f0442134f908ad67f0500e8da617436c8c5c41290b56adfe6eecf2261ff3c81feb0d0adc8a70c1e0af8adb48d1ce98c03ffe157ac9b5d411709a18326aefa10631c669b03120fc8502a2bd194b3df9b0957f5ce27dfacf35b0c0392505792b9fa0096c8ea0844ddc62659eda1d5062ca5b9ce860ca81952ed8004c9ddf563fe9023716b17be7e697b3d6e2cccc0cb3aec2c0539d943d80c70f16116861a0949de3e24c5d4e8d63271196dbb7501fc6edf5f23edb03a2b48d0fd36ba87c4d8a0c408045875c2d6b448ab0b8d37380cfa020d3c5d165eff486ecfc336348852f9e538c691298bf0f5fafe592330ca46ca25a615947cd7fec37b1a78b734b2c65bbf265f544217936dcddbd71d5f02c3ba7184264fa0120403182f1434e5ca96d72df16a773ed3bd0db47303537e0bbfc9016c1f7e29c9bb21e55a68c57cfb05e99c1048fe95ebd4eb42a35a77b0f0b3a6317d12536b0ffec8f3e31d57b0897d2c11a02e8a3ffb9fdd32ffb07cd6e4143248e80cfcd1d60eff6b5beab7e3122a9169307d1d88e53463a1ececf93de5d29100c279338a6fcfe4d933ff8007d081f9ba08da1227d156c9f751305862c1499118a9296bcc2a280b2097bf7ebe13fbc9b212c996d596e7aee9cd362de9bc126921ead830980519c4874ae940068832e765c8f8bbc5af039edc6d3b853f0c0cb5dfbd26fa05075c35b28905e3b50690af2fbb0de2c7eaa26fd9ec0d773bf502640066a89b505
4b44cb482f9a50c6141be6e0cb2436965bd06b75f96a409ca6e308820b91b67fd0e10ba9b139f023dc1f0394cd874f2118516b319f2c8ab4540eb5c5f7e4b06346c1f233ad680d11909829c1653d217a6f8eefa3cd2012784d9ed3be95b1bce611aee718ade71af4d6d31178af8f45d39ba9d73f34e00c3502347e7335e4329cf0143754dd57e99b15b0bf1c6e8e19c485bee2bf273d1c6c108862fcbea7e02d77b1843a3504f3329b57b31d1accc18f092dc15eaf1394c1360eb1837d78a754df6facad212cc1b32cb444861d53de33b4d33f554129aba70a9b8f80cad48f8dcbd9ead4bb2d9b5d6f5c71d8898c3bd59799b2f6031ded35ada1bc249b2297e6eef1436335e5d17542d683f05b6217a456874bcb93691ec1e1e9396454e9f257e365b5fee81a4b6821a86cd21d6350f3bb61fab47c7748c9ac2a28582d60bd5f424abdf35c0d6ee3db026a468740ec32b575405894e243b462a28b58f88abc3b80a53d0c9d74de3caef6ad030aae692f90d01e00ba8b6b78275eed2dc1eb2b1f5d43132073ff849048008ab64021a91512007ceeeac440b7523b49f8f196eb266158288b19826394bd03b39b7786792265fa4d42e8b364157cb6c0e9daa70620746919707fdba6830c624f8a96687df5092dc15eaf1394c1360eb1837d78a7545c345a0c866c4fe0461505732f4b88b61753c182bdc0ed569a3e0a2f67e03314fd4199d2fa6dc8dafa6524f1b6cd9607aef264e1a0b7345d9974bf80b8f71f1c2b5d044f18120754a2a018c1bf4ba5b7807c0d57e40d4193773612d92fb4c1f0203e0d7180c208ea35a3deee1bd6e5618e4dc7283ece66e262b587b9a4d9018a9861a45372ebef64fc8101b0114d8f6a13be986a142b3679705a44ab213a6d15c73081c45677d9a98a6ec8c124a47243b210508cd25b0bf11ca20d46508ff6d2ef9b7c9669005b875d49cc1567d2a9e51e7483d2468fff504a7260dba95197b4889c25e0e7de4382173cd523bd3a0c1bcf56ef4d8a60ee4bb87fb55bba35b756db194306209f17f3b4dbbe249dd33a095b74c4eb7a2ff5427dc5d997a6d7559f
e5abf590b27904d463894fb66762d8251765d3e26e4a4624a000f9bacc2beeb4a354f8bc7be4b4149ada9b145bf4c60305d0f4f94613f7c472f3ead55dc7906c4be50171cf3a7d1e95b5e702bbbbadacdb813696af1e789cf22b7e4b9148cd9a0cdeb35b9c88e31ac8b657c095c64d44e0f14ed27f0b676c2d36c4fb6957869eaec6b842f3ce8a0e184cc35d858c9b56858e5b0145a74552ce55829700787b9e7125a100b0d461b89fe500b835861ab51888702461bb9caa5345541c2009fd4fe5b559c04f6e3d97347dfcd0dd241a4ac83d59fa7d3d974c5e9e0bfcc6c0414eaf70ff4e6fc9e1ba9754f91583d4c8afee292e582a648aa0d896158b162d727d0604edbf86277d2f93bfbfbfe91daa04e6515e7756642085a080a24cc7f30d0e3d926e956b6528fe8dca5e02b7bd9dfe8dda0a9aeb1b86fae47518dfe3402d6a8cced2896e32718b3f280566268a956d8c07fb8a39bff49d443b23807c32e786b59511af2d91ddcd3c1f38263a9397f8e8c24c07a21e1dfe2c1dc1454b6fa957471628cc77eb658e4e22b4105bdcd0094e1167813badfce05ce165e1655d5b9d858e5b0145a74552ce55829700787b9ed368888a60ce63f15a3bccce04355a865c877b589e8ad02e67a546fe8ee4781b07229a8c495d365dcd93361aea7874a42dc59d11a62d1fb26327289bce3e5512ee292e582a648aa0d896158b162d727d613995e92b404c8931fc233fd09fe741450b407bd78583a7b0c7e8dd2b0b922b3d95e75021f63fba3fcf9a68aac25d55fff126de5d55e1e42d4ea9c19ccd3a02d36c82027d40293e3fdc3f49ba5cc5a88302a87215563547da2dc9167752733122b52e53446082722234afc6dde13dac397d9040aff24a5ba28f59bc4b1682aeb9f0acb1cc3e26f0dbae579e8319fbf69f383fa5faa30001a99afb89d511a11b69264b9b639cab9cd55c9abc569096c1a17be9d85838b10fe4a409c4f2b7d6496a3fd3de4af3660e0825b745353532c449cbd907b6c661e894734ef72a09c5e98b1bba47c4b7303144c9d3be83f5030003f6eba369b581947f26de0307e9bd3b5cc801cac16f639971d65219adab9b475191cb31cb8231b73beab2b4279b37cb4e39851dbff5b59f958821766bc0f9cc1424c08e6a2f1004136b6a4b94e1d96fa5dd0183149f309a323297f7641285901f610712740ce68f3eceac384b98485f15ee738d64f2eef9440ec7a5474444b14327029c475ad954ce463ce92b55cdd69dc113b0b4b9e7334e32bc38ab729a173c469baeffdf84791c60ad0dfcc4ff28a08cacc41e807c3b9e1a007685639f3b60e5bdb8e12df4e9a8533ee80f142a3eac230b6b0d09557b61c068090b084c33917f49f7eab4945aea566995bbc719ae0c6815120bdcd92ed4caa906f7170cc2decf77f418d5d91361a5002f777415a3ebec06545a06098e4f784cc7ba3b206c3e62e1dffa0f34497182d900a91a3861
a655b2359fd078ef3080586d2e3f32267973eb510bf87af3bb629cc6d5ab02cb83df4276d9b946c86534a58a838bea4ca26ace330413c9c8ab467291d86525d6
97762ff11db612525270548bea44e980069d955e005a8e9afb85d80fd45b87587fb3699db531591580f2d63ea59ad7122f76c6ec9b220d7a3b1485e1a5915a0142732031b528753df7f582c2d175aa3c71ab8c9ab1c24518765b692f6dd9e799a51ea8ac16439d75484427c85d6ffd30fe268f52bc8b9de0b4895dead1332e961d8865bb07f352fb2d5823b9da4edc46c7c004a0bf14a7b246bdc95ac41183db9a0fcaf9100a1fcb76d91f88670a96feaa13fc8517598a4afb00ee2a0d70d15c97cb8068178fb4598777601bcf52e9b18294faa681271e13f38ec26e1cb8487f7cd706b3602913473fc119574ac222375666a24880e39b62e6cd149f479a989b40c37a786bab6337c20f8930a4a81ae17c10d1233c622b67a342abaa3e1bc9247a2058344fffd4bd3d2d6803f71dc2a907237fcf17f6dc5174db9973f46df3a29c01c2697fcfad7f10652a01947a6e350f2b9af6ec32984bbe7dc5834ea546cd1a3b085f9886de33ee0add4500445a48
1ade8443472c74df47045b3c635a32a93d681dc410607944784712dcb40da4fee648074cec992a114ce6e4c2688e82496c76f0bce0b1c7e316e6386361e52720500da3dd116139b1c384ee72f41d1ce716666310834b15acff0c30b80924bb7a93d17ecfebbaf0a2fe32e9c11c320211841f9f2114ad5349288890a111e0dbd455dd32a3a9cc71abec7a48e172950f4997722edd1eb5fb7e8455b80369ebe86b38789f93a0c7231d4c915b8f6efa5d509b1667b4999ad41448fe530a566fde037deb79898135924102b41d404eabd33e58cb0575381719b100eef0bcfb395cddc20d2b842fa44c3b0c556e4058a24742ebfa8d01fcaa4cd3633fd2c46bbf28866e7a003e9bd9e4ab9ab38dc11a03a881198eb3bb7c07bec4c5b82f8346fea82a9232934fe1994026ca588471a243a304e2e668f82c631559dd1979dcddef75a2df854828016a5cdd324756ff8ed7fa1e1f195088f5886cb8d5006ebffcfb4897500da3dd116139b1c384ee72f41d1ce7eb0410b558dc25bd10518cd6800370ad19e9ce8978fe8e64e184646d117d3749
de47a5e0edd20fc6e34b8ed22884a03314b2d173245223bae6b070059221fba7a2f20047b920bba8fba06e6811f36462a096e86e998be7032105eec213de04a606aebc10ab7d8cc9038f5740c3a321cd6647325308b42571aca066e579d76484d52a854a3c28219cbc7b39144ecf0f5194962958275c6c5826f4ec6c19afa32e8e3f45cbb1d212367dffcb3f8691bcc2a72899683b803f3ad7b13a8d4aacaada
7d4767e248fa2f9b474ee4308d291af0eb0891e835231d4ed155a874da72589c6ae666b73f8ef490e1596b8d4ce854861f91220d311003ad91fe86ba27297194c02b95d01e06f715b7902546b0d8df6923b64b9648ce0a4479892fc9b5725dc49847ca376ebc8dfd0ba2660d5848ca8089da672d238ba41d245870144e961a1b04a5c2463c85cb16a41a92d75742da506bef8da726328ba3430c90e0aa02fed855d1ad54eea2c87c77ef18140b96219da6720d25d60a8be4c73c39bbbc22bbf779000575586bc90ec5d4981ecd9a3bdafe9fcdf3644ebef8a888224cd95eeb7af6ec4c20c225452a7a8eb9f18dd45f135ec3f1c7f79a86ad04cae7643c8e68dca002e0fdece0c0759293ce80b432317ad1dc9740dc623f3835735e45c892d5410e663eb3dbcf6cbc1e598486e96d143b8cac3adeb1fa4616204d85ad92dc9aca1822be5f732db3dd278d8657e7c9551852cc08fe7b342df0e75fb57be25e92a00326ae7c514b645701b43304aece2422f491b3dc93234bd4100fa2778fc6ad544975d0d182f5d6b789aebff691df0188866cf14d68c835c641fcfdb332fa9c0e58107421774ebd031e5ab48dfd8dc3ba480b3168cfe8e64dadfa6f73adf75d1013422b58dd92b53125d1b830bf54a3d71d5d2ab5a251d30949fe49ff51bb1ec4a5cab8dbdb65abc95bd3828893287c2c0a4aae8d340bae526a6c75af53f2ed9fbb40741b4919653568bb3a3e9b146bd9221f6f3c9e4d35434f86850818e2fbdcf95cae3db325a76ab49d8d091fc5f397010d75102f399295cc36f8087009b03de8e660906868f05a7f15a89897ac0057f047c73e06094df036ecb5a353409b922ca166bf7adbcac456681e8058f4e05c3ddde507fb75961293e014034fd74334d6c767baf6c1996a7d3b18b978bff85cda85a4d8e3120ea56efe42c68444de6308517fe022bb5d440afc9e274c7553f9c37a19bbe1468229a7e2f2c7807c959add456e4a64e1f65b8a46264aa57ef6652eca47f63229007b04a5269dafbd746d36af63bced138c8b5b037bfbef1c6ca1f3c78f77fb8b55b0c4bc6e9bfa97ee12934401ebf3ef7aad33b91d934d1fea29d0fd3357701f83783553a714841d88984ae56da4276dbcea54929cf63aaf734d13703ee93907500bf95cc5672e9a44e9f4f2c0da22a164ba46a15a53c73ca5991ed1304ab629fa0b4abc1e9d6423c80c348cf7688a8d8ec45bb0af3f8c1bd681faeabf0c663a199644446ce19bd39ccab3d16c1d7ad5c8bc9fc6fa0999ed322c036b0c46aac3012b2676668c5a355637cd377bd45290d3356916758ee621e5635ffb8b3a6a9ae922fbfffa9bd002e4dc
8fc93d6fc44d1426ad75922335f97080eb0a2315ca054d7f5edab94e9ab07b0db5f57fa8ae2d2a5dbffb5060919399cae5b722086a4caacacc571ad33066147d6a2002a63aff117427defd05b9b1adba6a9621246cd09e5677c6fdd1a1b63e8bfb75a628821e5041d8610f979a88c757f760116a9874d99023b6afb1659326f132c05d4fae3bc0f0d472fc0481ac2dc3a4e9e03eebd36ce17a326041cf2c1849354c72d6573773c147f051a83ed4e9db
b996433957d368f77b7f855b2125e75f8f83c5819549820a333bd453e31842fc173f94d10f954b8246cba0c42f07d20c84a3d84e215104f1d55e0517d21a5a48eaee4e7d7313a8722d0135d9fcf9d6b9d784975702e56ade79ce8774fa733b5f219b32ed4492964e9872d5fb6b30e09e437d891e652362bdd493b83ffabf8563
f2791765e0b050083c914611b7ea57231caaf65d98f1581dccb147fc86fed812434f38b4ad2846f61da5e686f9da8ca4aa8bce390dc90220b63f746bcc7155d00f7925de13e0fb531aec86d723473ad94451a037f2c0a04f576b6c9d722ebed82e91068b23e90ffd462f65709d228ec54cc86c5780a7101e87ee791a32c1bf0d6bb1df8662c25524e763ee7f7d8fb43ce4a3049e834b504ba84d1a25183a756bdda4e5e56e989241531469061f769b22c016aaf3bfc8850abb41772e53ffc764dda4e5e56e989241531469061f769b222bac64c1ef987e19656260501b8aa65660758637b5f37da886ab9c9cf348652258cac6649a368e57c04b0b87c4939e4f27e4f92db04f016eaf51224525fad664ceefbc3516a7c79b1079009b7a432aecc69dcab6a9ac6f4a8566e96e3d5748207874a177e21e91dcbdebf523380f7013bfd75e0fe9153a3eeb744181feddbb8325412fea23b9a786bedfdcf7bbb7115e908384ed7ca5643b61cf9af2aa15f069d4acbaa2706d94fc1517f617ed4adbdac47bfb473b1c993f42f85fa797fc72a5ba107d4e893a4e39cb721ddb64c63698
4b3075010ac239edb18371a57e1622a2d94d19940b0589ad3e3f367df7cbf572500a8d4c2929ac7b506431f340b54e28922b1eb75d1f4e65dd43e371b81cb1754a95d6c759b6593039964538a24a36245aa45c37911f44fc76f131122bfa516263f34187fa5082e43a5905b43d6bc222bd19f9bcd2641c013e3dbd8f9d08829bafd23ec20e53cf863a9080aab1033f1022a56f95f732d51691247354efb3ca98d574b3c4fbd84fcc7c82f14c4fb932129bbd16339be237ac534b9f5ab3015bb021d5153eafcee35ea07431aa4d7108ec882e51ce164d7602bf37c1eefeef1ba35a7fb4334f5c8ebed6736b9e65c94fa7032c82c65f2a49bc2e98829b570a4369fbaf075871ac24c9ea05e164d91a4421e841f62b663cae6b485fb95a9bbb7a32b4e7a076dfb828c253acdbe40fa7e4227d6cb1ecb5ca7b558f7c8e4dea8f2a02f814dac6d6a3d890ee54f7929d5bdf85e597ee0b20c22605fc8dba6c9341f79bfe3f17d4dd6d44613ec4b57cfc1f3616f91e1688a1ce8dda2498f582d3012dc512c90f87c7a283ae84171bc9bc0af8843c889237f87560be399977341145176a5d0131d432cd3222568006e1d4d352e49f49a873f73611078a717e7c607723d55a702b20c7d68307fbe11db6f55262d1d084de4f6551b3a05afcb9e24c52dfd73c472b424b1d024f9d9dc8180b5eab915efe2b48595054ccd3514a765c796ab8ca650d651ecea54d88c6d579d51ccf35d42d06d77c0713477aac74092b3fbb7b6fcbc1b66f28035988830b702fb7605f22efe2ba19352810ab2ea2ee48626d8ee454fb95ec13030dc1accb78317bd1f0521da75eef7eb99f42c6c940f7128168366a0aeb1e562ed8a3127f6896b26158604979efe85310a8711450d2b32372a54c80c54b1f07108c07ab182fb1e3d63b73af15e654d78fd7598a18c06a04c148e39ead6fa329b3a08e8e00e6688ac553f54a5ca6ff78874b70519052de7526b455f28949567a2e2b9d7ddde68cc05a9d11723c7aeacd76e41e94d8aedcb82137
65b293d4433a4039cec0bb8d60814d5b8a73e51eefb8257ba42a9857cb1fbae6a3d69a7b0f941014bee672dd6cce813eda3663a656e05e934639b466e36e7d8fe15c6a23cca7c83ee783e244e9a954b37c3b0a28dd5763a86596ea941fb77786d93373a7b561ceca5c1eb3b6dceda33249d453118a2acb8419d40b6381fa93d6e4a5bf14b59f2a6a7dba3b4e28c8f13bedb09d45895bb09f17e57611ccc08218
4083c933cabec7ed55d5053dcac727a844c3283ab6ba6fbb7bc600daa27b8a751ca245ff569f9e34b5f4e2c4f6e161b4eef6ed340e0cf879d583d971c442b7a1
bf0fda7247267d46dfd1c3db7731508d62827c8754b09d59b739421aba7a16b9cc10724c2f5f02d9ff60ad428b722bce73d7f5e08433d3b8c6e82d376f5196f381bfa755cd47123cbf6cdfa51ce239340dd9fccc23308662a797419cdac0cae2712f28480136166b0eb377b4fae78dbf2a96c8644564c5d362b9b2db0fa9134e1c1cbaa541e47cb3b8a482ffc1adb840c5e3100bcc0580e8c8b3db7a38d734c18626a0f0adc39d736a4bd0f7214e2eb82cbd1e1a1c9d7229ea82e76dd0ad90095f9fc2aea9e8c6c570bfc0283753c5d8721e398ee9f5e995926242486d7e41f03a8e2545b4540e95eb65a797a6adfde1e495274850b4e9db91c52fe08474ecb33cbe88f099e7b29c12015fe1cefb94faa0667d942a87963375205cd6533aaf382461aa5e2b6935997978ef5c1457401cb2c16f6f3f1e02a125c417280a3ed663b863e6a55434a18328f5e89c5576b105c5eb5e1e13959fe724c1b5fc41297a9e27fd1a023b0212b96e64ae3b41efc36e5bcec79c50552edb2213deb05ed42ee3c145f7d11e652e075dbd7cbe17998ad809a309d7ea7b647c8d962592018dc0328ba4a60ca5ec236dd2525e175dc9a4cb39a25dbe1517088415013f1f51859c27155976ff2699485d4739578c309ed1762b2cf59ef7f3b453a54f43164fa42632565e862c5804aece15a94f072ae37ec28fc6460ac11abfde3fe53bd6a7fcd9723ac7a4be0ac40b554517cfd94c53d093
337660233848e2458a25540fc2c45aa62bb49cc6614f3579049ed82fbaf405d456c1d54415750e90ce33a369c32c1c88e3abffd80f6edb619506469737d335d5fe299b4ce3dca98b432810065a40ccfc9d89e7842370f9e41882fe593405da2720f2f5e76b7e334fd6fe6f347637501b7ece939ba74856a79991155bb470ef6a11a1578a61844cca221a1ce615ca9ef1cb916813f2908dde26b0d2f58c182b7a1f78cc077bcc91b6c998f8050b719c6db271982940ab8900ba8cb7dc5ce173c54ccce45c77521f69ca291ae25ecc14fa0f69b8eadc7017d2691f9f2b00eec94bf6193b0e2ada1fb08bcce60c4e36ac7fb96ec81b34355ce10b38781fefbd528d456492ce409ca37f431d0a5b08fb11354a6a731163f6f6c53d52a822ea9910a7c5127502c5b7d52960827082c97ec5e030113eefce61076e2b9bbd97089f68a7cfe82a697fcd2cbcf8c4bdcf2d68f1111916afe52c7af236f8c3d0f11f64a1671a3b085f9886de33ee0add4500445a48
00e020beab5b04a782e00e3ca7a24532a86074cdd56044aad0378a51d9352566d489f14f2c7aba2ad9e4ceb5a4efeb50c49ec3be54dadfea140520d0a4a5f8bc3f4d1d558bc892613c14f836a83a346326988d8871b07a6ea473933a7bc8c652c91506b5e57ffde71e3ac7b0d5ff83e3dcdcb45112e67b0393212d9c89cc80c1aeaaa1a80f81762b5a9210ec4eefe6bad53b63ddf14716df321ec5ba47b1b8a52aac04fc070b5618a3a0618ac457babca5bb58a75ea7aaaeb0b807685bf545724663426b19502dcc97360203883641ece6f00caa3a32ccf2a55a542ca8b66e59d574b8db425b3e2444af95190312ee792b212bb284149d864b03567c9a7f1cffe99811ffb90feec7578f37bd68f16e772aac04fc070b5618a3a0618ac457babc3f2afa6ed54e04bce7b5eeea7d845fbf76894b17126287f95d8d0ec6b8817cd4a2a433dab6d2485c6c360d717600b09aef6e7a8cdbb70b7d2817a5a49c936e21eb8bd8c443d3e6606668e5b9c22b28f5ffe924f06a6d4220a09098f97127f217f56f22631f7147a3bb8153a4b46484038be089997a49da0fb0058ed99f760a0d6f0899056858f39feaa65f44186e4b40cb9a8025c6c11f343a6f3a92d54272773e86187dd16d0699fb12e302abcf1c23c5cb28927699aa963b92d5b53b97391b8aff258071988118d1e53df63f0ab2412b212bb284149d864b03567c9a7f1cff4d169c6ca87ce3804198a2bfa4bfd3bf66eedf89ede14cf2d53e74fe148601bf833b9195aa8659defaa4dbfaa422dd7f2aac04fc070b5618a3a0618ac457babc48457baf76bc0d178b094e4e400354268cfb3f09de779c21987f4bb9e03971d3cef148c097677a8c095b867a4dd8b6e6496bd0ba77b35d34bd9ce709548fd513
4606c5d18aa02881808cf034fe9f5cf7f4b7b38c9800306c39d40130598b635d0d1446d9356c215dd73dc10aa1e5f7a22732a81e26273d736b07e455179fe9ab68f88d3b759ed1a39178782cb74393dac13e708d4df9dee539d199e4732aff48
fae0b21630d293ba32d319d09800498e855d00dbd9d422559cfd74f66c6a1f80f4b43b6493bca5baae00378132d058077ca18725dc573e60cab65525011155a11bb07a30a0e75af49f3928c6a316ca2151903f083eb7c5b4e845a4d38708a429
abfb7f54d4cf17fa86193e464fd805a7c709bc71401fce1061af026c647bdfe2022b1f3ed5f6e2ee2c493d68c1cf38e374c9c4336272880ab3109554eee52250128bbc1a97bda5f5ed418bab715252463686569fb646dc2b8a4e9e9f83cec200333c4d485edb34377a3c4a333d74de31e161b833b8e144bd5ec7722ab0c6b1000265fa843bee2c98fa61d91d604dcca2d38239c7fb79bbbdb592d99ef616d341ffbfd8babe9aac62ebb9625e4741311fad8429337960a8bf3caa49d525bc915bafffbe641603326a41338e316017783e501d857bd2af17b412f2d0112b67ba567a3b3657289648c4f5e3aef48bf99f9ca7b9161db38433bdc566a4ef833ce2b57dec4be3ab551a44f2c7c62b3f42083be3a94f175aeb6ddbde7546af46c5de4124bc02b9f88085e0e882db587979f97eda94e002ce3ff891d893b33910c6bcb0de1f585f2df0e74bc6f6a9bf834470c9b427500cb29e88c63633cb2b1f222da9f3b271cbfe15de8084140d95854e272f22342bdfc8c1d8248fb1c924f31c44b78d17844b28d2d50d0ab3cc062c01a18353300c5b69244a4bb3618fa5711af66bae274b310e6c7cb8f7b87578a3478a83647d72794e8417447c797d537325ef5c5b5674c2a8b752e0ed718d7e2de78c52a5fec3daf5ad9d5a41138120e241bd32b9fcebce513c92fd1653e6d501b66d345ef3f1dce30cf6a510e98819da07826500848cd3b48de14fa8f280f72ca76feac3d35fc7ff1a063548a7532038bfb1c30bab7d073512bb3a3d6c5a91fca7a2875ec83a41d1e27894069b9f0cc3f3a679ea5a8698e0f955200c2d720f97436a71b9f58c3a542d2ace34387c63f8605181c8ad2124108bb3efbca215906ac79eef1a91911a2da6b3d6796f36db941b81ab54679e6b1be8aa6b03cbac007213f739aff04cd4f311c3013e88819cb284f4edb41f31b7cd375aed78c7e251997d2f9f11e69b8afda879f95b7a6c1f79aabd3a267c0c4847315e8098e522d77d803fa1454b689d3d1f9d40bc00950b83e7a90def641d06c3514e563e8df1cc73633c993197819548e10568ca6a07bb7025343884f64b4f0c1d91ce8e46a9ca2736bcb34c55162ffb4cd75e354906ea658f9eec7557c320a28f1a20f6e43501c8440a453b480f34d924403829e2cdf5d6e3d19f80e767b47df598c614e38ffa65453b110b1f024ee1fa97026a9dd0a00b04f777860bcf40519834a76fdf89b35eec8d6b09cf898c8a0b8bffaf9fb37a8a64ffd27f0c640fc057d0789702f49b59b45177ccc0ffa0645d9cf85535967bbe21503559bb4207a1871c5cd32c5f3af4c8032a7253c6d4d527d5db4f5b32688f3d314437ef9280399cab984a5f93dad51630f1c854353c72d6764bd547fafed4ec536376c611fdd30dbbd14c541e5f4843802c57458be2e4b496eb5c4e5588903d35e5fcbef2afdf6d25f41ec65f0b57c199dce6e7bc10968ea351107a81d7098667b021aca6bd12ca9d54d5add1460ae6eaf88fefaa19efbd779d4c3cd0b869f006cab2b8fe782e8e403b82128c20ca1f8b187b1e710a6b6f1e98463291152d70241e9c7d1ffb755a3a6f92e33ecd7870d3c7da5eb7a80e7bca71246cedd3e09cbe775f328f71b14797cff3bf4d9ec96e282bff42faecffba0bc5fe3832a15e99c2c21a7269f202b1958c345a6e68d6492cdcf87e8106158f47bac98b73416d7e573a265fa6afa16d3aad05adb005833d9cf46f58eb95fcec0dc88e0d978a1759603fa1b236c6b2b7388dde3ebdedc340cc58357dde43f427bdf5dc04b8e19adcd4cb85387bd0cb0f847eaf008b188f59bbc10f8fb3b8f576e2bf0db7e14bfaed88dfb117ab832b11be531417597de15b6041b9b0c49bcfc012f99675c291c0a44a56d743bf179d97516cf166a458172d7495f1c51f3adbdad27b914ac3b1fd91c8901d9770c7d34b9d099690879ff71d36845fc004bf658a77d21685d07f7e981ab0f9864c481989b056444b10331c5f8432c2dcc5461340ff6fc82d55407669c2d63c10f90ffcec167ce8b7f0d914981b5164e6da2a746ac38aa1763f1c108305c97525f5199830c42a2f87c196761aff15953baaed4bbe3e7d63ebddfe0ec7c0773fe96b263901650db56ab2506c39f825c82a1208675bbec65038df8ed0a6387f7d9daa50536b777a7f64730e52d6d4937e1f7ac1917c6a36be68b28e99f6e63229f7bba36f9e209443c612725a1509a15569b64a3303f905583fcd51e10471a51300343fd054f624d55332253ee87cec2d34c026b7f787bf3ac05d94c1b55fe2f0900973ff9dad571bac3ed77e27c52bafe1e319d553f5daf88a45e5c17b51930917e06c8380bc17bb0241d5ee09ba43dbd056528c32401b67032b7896b2ed840a6bc7397446ec4a07d541ac9236ea593bd134c9b3b2370f11e908dfde7b1af047edc365a9d1c67321546bbc6950ed195e7e9efa80d0bd173015525c1f7725cc777b1ad7c45b962b3d0417cdc3a4044b07d0e9f4d06f3b0c3eca06dfc41edf30f4abc0e504e30bb755b25b74e20f6c8c52e04d87abda3ff95bb6e24fa01b247b00b9a2b207db0da11f4c791d0b555759c2b636f9242d31d79153b93db974897ac9eb0191b7b14387420a5095c72b35b4404cb2bd3971c06d6d6bcd11252a6cda3c7634a2c26fc3b1d4ed9a5c3d819296f739458f8030efbfca8f4e420b7f9d5fa44fe84a92d9e0a51bc2a05e3e764b6f9dbc566afc88c1afbd744a67ff691f1d7f6468eece97e6250d782af11b1a2fc84c3f530e8943976019837b60b6560a3264f0b1a104cc0a54e2aa0ae74b7e77c9eef695e87a0c5787be9c9b3ef9886e41a367332a1ff13338daf4e764a86de82ffb4435ece50f2c679ccadd8f14cb210263aaab7756ab15abc97733fa03e77581f96317bb501b5b59987bd9cd492f5a8a1df333b82dcbef2d25f6db1ce6823716331922147ec79bc8a21414e745345ec4f59c9c3feaef4f483092e65318434b1d79c535202867428b7f3786d98f65c3b808d8ea71d3f0d82ce54538e7669c1e7cf39f9cbd6845d0ea76e6597b945d20cf582c6f75761e886932f551ad5d4905e2156d96aee6a7ecfa88bb759920c5d915e884e8362362c7c0d14635ca33a9d995fd74ab20f6e27fa001e8d108b02e43b5ad556fd3142caaeec0a1ea4cb93b379898c67c00cf8d0931d11da984ce3dd164f88d72150802495a42a65b43e4685c37abb0456b4236b2bcf51708a6e94a6d6e184f81826965ff1e40334e9e0bd6d5ee
7daabeb2516c9c3ed78e85198215a29c24468e0349baa951bc55e3fdfe298c23b7ccec1d5cd9da8a89828f5bd6a1215cac4f1ce6d365f1c429d4a7459287c6a5f6c5b5b3bc6a0e6ce1d41d3af3d61ded3ddec5041203d3499af033d5c28aca9e17f3bdf446a2f35e85fad70bbdbbe8c9e7517ebcf4a7f4b3c728094b625df00393ee19f04c5fe3f7b1b81cba4027c51b30a6d795a3aa340aa845a909f3ecff392bf382a70fe14c0dc60a8ed6f0d60cfad46315bd9b642cc630806df21faa36afe4093a908cbcbd9b4cd5870a83eaa6ee
423b33d60e1ff29ed77b2dd4e7991e0c8e171d97cb65051654697b2ba7b99267167e0d1a0d3170eedfa712695a239aa4b644f10dbe36e7278f786cbf348f6961275b2fd0b919a51a9602a3d5d8d0675a93a9f7f997b1c6171e0757566c1fd49a061f6564fd5fede6e781e5926669e8d90fec801eb38a65f7fd255721683585de446bfe9c353427dc0bf5b8a15792f7f3b0102b8080557b226ab6ecc857444f31f74b285522b9d6198f355bfd600db2dca4c78cd740253f9fa42741e708eb238f8182fa9bb9966732f962a265f843ae4fa0b3156d176b8aa949ba793f6db31d8cf54904aa38f0c4dab6c1a2d46608cc5e5c59a19a1a874c3b2312bbcdb190a112ebe974bccb312ef9c6451c98c95584e67dab8115f74dc9cf2996b7e50ffec6dcdeb6a16b2dce35ebbed1c35a7330c669
3e4814f55752bae8e11a66e2b47670d2879853913b71ca836ca1f7a8dd980b08c3e162d70f59807eb10db6ffbb27154364b627b1923dfadcdb01b906f03a0880b64b54d54c6382044abd7856879e19778c3960cb0266ac866cf3b30a12dfd0e0d8a4d83abba9672a7d0772035d749cdf59bc496dc26f82b1d4f52c1f0cc74e42885475a6a47d7c4d23dde8b1ffe405719e98adfa28ecec21f43baae45c43c424
50e960a2b2ae29c7b4576a88b8eb7e017d78d0e8a525c4f4c0a85d40db92b5c3c6d9abfb5683a473892140ae0b1199b8797f6750e060850887e1ba089912003829f63394bdae5a6a943f42f7c8a6fd9ae739b49e37b8c941b46095ec1dd258055e17e02763b633b661b8022d108b12552d6fbbf99707e43e80797d8ba37f278ac8928c2bb01b6ebe7f231cfdb8728f59aec0bda464488d82e1a1ef689b2d64139888d94f3aca427866abf479ca043264
6e9e978298841850b50815e89a439e385586d44ce36c19d80d0a19abdc3ac1cd92c41e31b1a12cf281e5c3ea339710e32e0da163cdad76fcb06f1697371bfadfdcfebcba55abae5216d25fc735987ab0430a1354ed0d34079d71050ee4f788fa021a0d91649de7dec3fa2fd0c3903536845c2f0efed3737c82b97c446c4e5fc92afa9d2bcc6abcc6d6dd0035dde9d19ead98c7adc7272969f860dbb3da978a1666485fdc1425b239c75e4c2bcca0f0a4eccb68c1bc5f96060ab7482aeb5468fd5e9a2128769d319c156c0473d35d832dcda3dc213d31a736f7bb29f04398a32313ddec4074ddf33436e52d241d832740926835385f51fa8dcb167807dc7c3594e99a26ad1dcec5037ea7edff5f278ae2387d8c49b7834a0f78152a3f923ef619540317f63ddc9ff65bf985b31d13591977379c3dca6c5189372055712a511ecdb14b2124df04f5c63a929b1362cb7e1231462949667dd726810b13cb29b82253daa17869168433f1ec8a17fa31f90ff4edc46965529a3897c588538c40002f48283040734f6826f9e2f65145e315c0a68ef0a9e1cb9ea5981cd72c444245d4b13b06b2d424bc1cfac935aa44ec8194b28489c5cf131ce85407657fb2be563832f348c3c85653327db7a87ad922f48ef936150de5f651a855d8df831b37e915df0d5c543e37ca1e85d2fce74d3396db658fed6518f54dd8883e66a5f66c6ecf82a460bf0dbdade84621a7b410eba08075a30db82cc4713d01a547cd02e39cd3eadd8e0f3bb30cf70d9af578852b0b33ee5f9db5946578d2d78dcbc6a6bbc2d90d2392080022000d8f256ee9ebe131c555ee22c2ee54875f59f26afc51114b0526a58eb65a22b140a1791cb04299dc197cdde969c173c245652306bd53577c913d
fc750e8cc94fbfee70c9a6b01e96cfc338500f37d4fca60b1fb823ccd1a3d7e7507662927102b42a94b49d8ee33654220c279d1a129ee3c91d54d6e6eb51ee8b9f3b66ddbc24de46c1aca6b430b2ec4930c952f821b56014abebc4bf67e6d731ea0984e012743a845c296415081d834a20c9f2bde590c30f9a49c0f186ffc97aad5fd975acf7ca3898d3ea9ea11e4e48e721daa86f06b6d13339f001522c91abff52da4b22cb497e8d75e99231797c163f6e5453219cdfb6edd3275cdffef536
3e3a5ef31baad4c6914b66c38d6964bd5b1743f9f546825ebee6f7f69a6be7c4f0d822f2c736d6dc70f8735f0c41621534782bdcab50983acdc5a67b3628cc307501cfadd49530954a4b2b54d90f0b53dfea4541f2cf958e062fd1d98c80af4ee474eb93bcf45e90140749821f91b3f85652671473521f76e2305f9f67994cd2b3b9cd07f216986391b7b68adc9dfa3214fc0934c3151b83848de6b5dce8784e1be6e6d582eebbec45dc55f90459c8685deb61fed6fd69ff5251a2369429b597463e8f6ade87c7a5337b041a7ab267aeaf487842d91a8371f8955b470ea8f3e8
a54d2061d4a917c8b2c6c7d8a93ca8a36d289373d04c8b8a716a2b1c46bf2435aff41a8c43998d51295791bfa5f9cbf17a8964d1e5dee4a7a7101a6007143499628494d1c5955ffa293ae9c91c483c61
5b3d72c89e66cdaf131e8de8189a3ebfd9b37a362ebd7f6d552c0a3afdfb1d63ffc953b5b7a56d93e52e1fce95781702739a99f3a677fdf6518c8a9e44f61a00d0d5cdeb2c5cfe65e39db432a6b4546b673cf0f0d0fea153f23b158ccdbd7e9c6272f56e105371db820f569afbeddcad1a3b085f9886de33ee0add4500445a48
cdc8c7212421668a74c453a65ff5dcdc01741cf3cd53974e11fb68e150a21364b8cd553b95e5c3cbd9f7853fe30bdd960611980a487689f258b6b1944818290b5cdd99303bc000603962155ec9592788479d7348344ad6425b1755400d0f1d9174f6e976475271875f0b09c7064f9b20cc7958d771876f4698328efaa32668f9
1f9b5dd2c7832e4f156a99b1fcc604d694a669b2009065b99e48789c374e1b39bef1e6872fa98aa7371d77369344127fc0c750a1916d1d36e7679d5858451c9f00296940550c713f0f2a2ae11fc177fa9648d0dd34bd18a62a74ce47e080c935d8b5c184ec634dc9bf6e7c975af7105900296940550c713f0f2a2ae11fc177fa48991fecf3ba183ff8166c92b7fbcae11e2f4bc73e123cde910e12b15d65203f00296940550c713f0f2a2ae11fc177fa488b8707a894459d55b456b27ed01a4ebd1b76f7c4c5bb7c10a3f0ca008fc6d700296940550c713f0f2a2ae11fc177fa13146677d7e1794dccdf3c823b02b8e5a31d394a43f446402de054718f2bf59100296940550c713f0f2a2ae11fc177fa9cc55a927274a68d108c4f6a07f846fced86e6a6e81e807ed2bae1e3fcbbbcfe14e0fd5c8b4383624e633ddde424e68c68f54abe18bbbe4f0c4eeda095acc0e3dc0dc3f6e1d758f5ede6e62582a8e5999e6a4544d95a3f2af45fab05c9fa693dd1ff2f5f802198270f96fbb6145ea68af28b8803054fb366c07cc86d6c0757fc851d52645babe747efe24e8fa348aafdb1c07c8595e3008e8879628e2ab83121ba4c718e93c340f463889cbf87be94d8a572c1914b506b6940ba15b0a56e5f0a145024494f807fd7fd9563272f20445a75061cf48fdeb548c3c5d2d3ef04991113f2c9afc3ac09c0c130857df9ac587d634f329bc1d567a255a85af3b65e66783548a3cd202df60c1fe7a86092625f0db89ed2876f47e456eaa8324847ff203f534b20338547c3744a60deec1bb8b77e116e4c8734cec759df24a8b1ac33d038c989a835b614b1059204e26cf3fc1a285ffb8b3a6a9ae922fbfffa9bd002e4dc
f9405bda152ce840a7c92f75d9cc96262bb181fbbb25e21b98701f6413b1b1e4ce1a926f75c71432b96119e0a212b2c34084a767d343d22b7ff6a1598e69b30d71379f6e8b7576060e5f04b1cc63429a80df23b36831d7551c7d4d898a27ad5d774cf252a1047a4baeb4201c819485ae71340d65237db3fa25b486c778066e7745fe7540f9535635e33d6c101107e24e2bc79e7b5022c6f04c59ca0af4e8814802277c2a4674807fa1cca2f3e9164a2c
0495feb74afc1c9fcd1a1f8d5aa4cf808e66e7d67d61c14e13759fc315ed51e214b49a34fb8418c2634b70ac8f489ebe4126c6af93f28d6d4f2c7112b9515cafb596e289b02651ee1b68e71762f08380c222fd97455a3884c6027dff028858212b0d9fa2dd0030cad16af2dcd5bcd4bcfbd822c2fa6bb0c705c0efe37c53166038435839469eeb994a37abc3c9a67b2da39953ee5c48f80b3fc700b5f0e4276cf797cc71d38a1bb8cfa11862ff1d96c5a3e7a51789116eca1d702574f4c7528a9a7431815e14b3e427a35107eb01a9ee4061cf4f5ca6641d115fc778ecaafae78cfa751ae669dcc400f350943f262cd014525b8b6ff35f03695cf1dc606979fc3940fa46774fac1719ca362dcd4b8d5c
<end>
SigEnums
5214ede095f690c1f800285dc800bd91b0d32a264b526196b6937c973524d0dd74dc75dd60cc2689d7338c6e3ee47d3fa8c3f6278d22d93aede63473ec63003f02a0b366cae8083f349b2358dbf90939e645cc11b653679ed83be63bc8b90d663fb4496fe62ef010dd4f12c63b6efd58bfac1c4cd52011c59e43cb8c239ee41cd221ace4c048380680578ae06dfad8accc23ecf6ddd61d4e8a83e0016c27558f1c07c02e8da3feebdd84510080cbb5c5c931481998e8318f2f3af1954bd4d702a60fde3a75238d90a70543eca275983f
ba8a4dfbe916407650d760ae11fa5c76507bd3e3a85a21c4c6eafc39f25db87b6354e378d4b1dfcd5551c1f01746e4a89344708f9a26ed03bceaaeb1d490355794d58fbd4672d334215632900e7cbc546ac2fc5bf654960f631cccd5cef97e04cf790707103a9e795326f61c3b65a8fcc2c04e9f48da473dc5738c5686565a4742c947e4342b7d9fc7bd189f0433f4da91ad449b651ae3acc165110b53f40585fc9b4d35e86fa5119a3513bb8df3961c
1b01074e94970d8f1d2d2e96123c878fd0df33423c0cfa0e226359e945ee4ba1558b65df1523e890d4e3799beb030e98249a1e61a5376e1cc01d12690153d89dbf66d103ace8f0c7c3a54dd5aaa0e58bc43c9d10ec65872163c705ff417eaa4c4a79ddbc37a094d5ec6b4d4a864789ba938c7825da1c39782f4d9709fd00d26b14502f10b212c70f19486dab78682de87da8feb51c61696a65b4db253ca1b86f
3e2e6ec3f49b675008400f3db823c8669c86e15c01dc1790cac5e2cd23f425d298463d4c5883a7bec1c04d55c8ebb5e4
481be274088765e05b0fd62098f785aad70e3b64699d09f7e237a0aa6fe8f2958d87af2dc17bc146c56834d328ebbe320b053cecc6b4d99e3e6ec924c9dfbad6a1c7ec253b9b8a3f60a9b2136142d01194f3b23add2e36f7e1341aa37a64e235c1c720654f4965fa23f240c3cf50a0bdccb2256a1cbe6d21736f8b476673596b948302ec1c7e56c4b8937c5aa790474e5f1ab6a6f2c35c17f96fc502a580cc13cb19e3f83b6b1addc7857c37efa41f881a3b085f9886de33ee0add4500445a48
765225a384f2a6ba1a6bdc861ea4bc8c68750d8f6872429f5af62221976601b910293a70825ea5b3729939175f7329f1e0adf72459067021affcbd78cffc9304d5acd0b09042587c8c28f6391be547830a784ec84ae722245edd2e275925d791307c9add05f29dfa46f9b12dd08bb86f6b69afe204bbd9091bbbb6af585b56de6958ef738c67a19cb5a0fbe563bb7158d12a5bbc346dc1ff7ca9663162164dee6d6277e9d1b22b47340e4f45aa5634b856c9c3a86df7c5e6a5e6f001e2eaeb8f9e9c44e84d75ad2d1e5d71977bf5aea84a41847d172f461969988774e3d3a285f6236c09f1abb2d146beaf49dfcc211547dbad7bdd248174ce2b4150d314ba976206872002aae62763b10a98c3e5d1d9d8cdee040630459672f30ed046a7a17dbb98db85cf14cfc895eac4012d04dccaa4ea666595e50e35dc480245d804e815fec478d95ec17b07cfad240f2677ee3940131df51153fd2f486f9bf3d39d7901455553f9d43e75163594ef37e6dfae9d68e00594ece1f295cfbbcd98d221c5f6e1ae4083fe85c1975e553a2e5be73cc21db124245691b1ae4222cdaab1a5b7ff7ff37f6e5bf839e1bf51a446c05e7dac469d45765e3e99b8022bfb1b629d24f54b6ea3384607bd73f148318e2c0a25275b80d3411c4ee904ff6901ecc1dd44d4f2565ce400be38ceef13b22c00a19c51bbb724e38672ba821cf43e4c07dba89e440c4c2c1f2c5d410828606184d65a54a57dde4f1a8093f413f024a8b31f0e0e11ce40d29151730993915152a4c93d18cb7b7c0ba6738d25c444b00a76c6c2be8a6622d8bb37d447e7edceacac4079623231ad710eab5469978bb7389e510f908930e23c8da6df5ae52485d9fdc55b673231ad710eab5469978bb7389e510f90e1a2afe3c37ec3d35d19f0184224ea26fe173858567ee207aa4f7ff1ae739de2580e0af6fce0a63e96a083f3136b777aac41bca30e43ba6b9b2a2356e5c8bb83ef8199ba225b17ffbecd81e7c4f66e2ed080dc83c7fe963063c33d9a437224b18944e93c36be132195d828eef87ce3a61eef8ca5da395ce33374194d7ac8c66f5d056d1bc7d3c1bf2189d090107cc5a5104f024f8868cea9e32b84d3c9f693e7160baf479f17a2c2b983ee1435fad180b8d2f521177c3d8726fc32214838a2e931e121f7e656c708acecc35f9e84c007c956be0b75616eb821ac8229ea748cddf5d5e74a57d3be7b94312b8af378fbd5ce39480cb8a7ab83582dd802ae4bacf0f2ab554903f0a1ad7272cd8e93fcfef5f5b69676b82ec52576d8633aa7faf117f0d7ce5063492186ec0a2f83820b7b01444d672bba947cfa82be424dc5229305af9b2f8aaa90e948a814fe0e22ff17ad0a9bcafa5b01967302e55fc421a3a3bde295efead7a9ff84d252232d2eed83a48303a9bd3976abba065ba023aac1cb38a6c5f2624f4ee9d66c7ca85a740da4345bd3a12204bf44f55aa7cc37812baf6151fba9d9a172a0974b5291c68909710e2dd4228c686981be9a6050d8903206b23d16137ce16d4257100c9f7fcdb0daff0f2b99d5e19045f912451d5eabd8e640e4a61f3d26597758534bc6110e29319162f5fb47eb4eb878be8f0cb3b15aa6b6b07e19e8c4b217529fd8f9110e8dfd8eb688904f5ece67daf3515a217968bd444a8534ba97693501102d1763dc7dca9ebc91a244e9ee267764a3997c38e5e88b7de7fae780eb59a231d0b305193b400cb42e15c651f912c018e4841120902c28dd997adcb293a7949868545a95379c75a4b2472cc3c8677eeff8d1d2ce0d0c6bf508436462293f02eb2691ace53bc2fa9ecc926530d0892aec61ad529efc1697ad5e6ec08c6bbd000c0cf70e911b1b14b3b6e50d5a20d1d2ba824d0dbd18716f0d6cfd98969e972e88be587fbd43c811ff3786355749e68623873e7ad680f6679a38ba9b9c1d296242aea64f51f813297757fab9580a2216c0f64af1619f1cad09362d6ee2bc3d1b711be3725872d5e9f9f15151c9cebcbb21795e383104b875543f68f725b97bda439677a1af774d590bd05d7869de918b5b51edd9619ab2121f1fb0cf3446b7042c6e54f16aeae5e97fb4f924f96872ef71a16f5595103a9da98099ea6f547b7be9b7b14b7cc562157ee1480b251bab4afda3c3566281b36a6e79e8d622f8208195008a3e96cf17afba9637ec3eacc04a2b90eae509ce4ba5b67e7d6c02397ee8f7e2de420c8395e082d5bd1d4114e0939c780e05785db426617dcadab6f6f0e5c2d3b9811810024867a77960ef26a1e6f6229510e9cd3ca98410c4e665ccc4c628d52c7935a0d34952e023094cb7e9766ef6fc646de583ce490558db650f2c47528451d8606efe7c40ea6733c35d50b444c9ac955ee945e38e1c499c450d8dc4ea4a31e29c0ca8d54ba601a2aa78933fb95452f0801a95bb3261918f224b80fb3036c03520cddc48504728ec71336a45eee3dd2fb006b5448bb93488003deaf95c8d641356eb147de37509b64869ccd33c47ff5f238c6641d5591ba69dc628d1a65d3d5aed36c4066bf0f8012c978708d12cbca70f7cf9594c65c62010a0592bf8712994e8581d64abb7e17094cea868d585b335a564a890ac1e8d1fe6f14c0010588836f7dc4906991c7f2d6b165eda8f26f45a22846a7be983422bf18980f43f17fa8055efd99c6ffbf8c20fe62fec3e0c05f0782770e17af94e89e44c93d7072cb4738234cf8ddee57263e0ffb73e65027f46a09b607bd8d3bf31cb92bdeeab0185830f548df192d14de31e0d2be46cf9f4cd2e87c067c865afb5e61e9e36780ef8627acb56316ee31ee50923c2f3e1a1132e6ade193f3f89ea752ca3a9068187a44a256b42a70290dbf424ef3c21f0d98131f410c8c8e30b013f3b5ca7acdf325e28e505d5ded7f1a92c8f4d4af0848054822f786adbc49c2114fd181076f6830026f587f2c3322084380391cbe3214d9996cf3a040b9ef785b0d834deddbc2cd02a3db412b7d70dd26db102f0161abc4386219e7ecdf04e5d3bb90c5458b3208e72bf228ae5edbe3e5f927d6db93892cac215a45776eebf92be6f9b543547f35933da8d66dfa9d983264448b4510ee0cc15cfedbabab1ed979498b3735d9e9794c3374280aac749aa5d4d834a96f47bf6582f08316569488a3d7fb08e4939fde3e67d1b8826c341a105dfa4d2435e3b8cd08ebbb8f8e19e5ca65f554ffa5bd1da8a06b32e3def0904696ffd9ac18943b97e6a448298d8b0fa33f31c06e9196471b157f4dace63708e8fca300d88d81d5cefb4533afaefb5c9357beb8fc9dd05796d0803f183214668d3fb9eeb801ca224745f557d27ef89519c7177f5875de937d392d41d39e339e49c71b8878a54acebd28765669681f38c4178e8dc854b5f35934fd81d17ef926c41225ce003d41d6ecdaf2bc4888d2a7b6e2879a8782de49899acb02dc76050672bb8a8207a43ccff0b75f031adc1368f004f0cc94d7a40f4adf0009b51e75fb45be17ac1a48c41fe491d212b51d0edd0223b6ee278ca3c36f36461c1602874c264153c473b7a36dd28446ede6578d90797212b99be70cc8b094284b80fe97fb06ecdf24a3bedbc2671ff9ad77823e86759a63daa2cb010fad1eff394afe8eb892df0646f7247425e86b4a408488d07e8804faa3016b855469ac2355c83c12c5d65c8a8212ed434d2caa5f0d2dae2476dc43c2235853446d581c9d09a9d0a5d39d363950f662fd0aa3214a1f1c255dffc2701c3ce98779c955ae8f4619bf0185727eab22af266a574ef5acb1d65198841e0d6bb8b572737be3f03a21e32b931705be9824c3a1c88b4391640f7da490558db650f2c47528451d8606efe7c061003985b3d23332ac1eb0621bc980f3dd8c09a3cb2e516747a21586e49ada46948eff418e627bc36a3b20e546a1389eabaca7811691940976e13d826bbe32eb90be68d4661e58c5ce74776e1fea130484bf05b6806999d65742293ffe9ed11134eca6130adc697d9d8196032cd57ec50128845a28e2d56c9cc1b503f36dc510f44b443f1f0ab11ac7e03f2109ac57dba3b5321a7e61d2a4a13d3455eb4bd34e1a8d4a94bcf12cf54e07b22bb0288c4f1921692f6889234a3ecabd239fc15f4c32edbcf8175b3fcb91b4781da56a87c1ae0394f373da0307b78bb80ba40155b2be3093b0a0a83b67625ebca225a79f8f71458811d7603f99a70bbb018cbdbba5a23379898cb8ac472033fff849ac7ce008e8f7e5cf802d09e1a2b7f390e4010e7487ec0b4308d80fd37ea95798d80aa916e848e431c4112b8dc4995c5a146a32dc59f02f2979ab1760f7deda31f007aed32189aaaa7fe903172e9d43ed64a494f44593a88f394724842913b9ad86b35686860d0446ba9e44e317c0d1e5d61c8076ba5014c643e0cf4076864352eb6e55a081e0e3341e69384352011b325c6c96d3b6e10e482c999795cd3ee7c58b58e12a0db3575bff3ab304968e8a23e1b056aa396dda64ea3a6937dfa24ba1087cc8ffcf5a7cfc513cf28efcd30dcc1e8f8b8251fc8749cd2dd55ec0b48f2f6db3397f949913c8878777b06fa01b8abe6567409426499c4cbe44c771ea9007b80a8d33a3f64a9bbc136dfb8dfbc11977eaeddc53c8a47ae5c6a9da10d1861d36ec96b166fe357fc44bc4ed027075abcae9b8859706b4f3c9056ea0ea819971b6435d136cb6984221223741c06ec99ba9d70e08976a4ce631e434744388633aa005349ec2da1282f3bda0f5a6be5ccbb887c852b1dbfb3a700bdbf617b0eb073bcd767afbe5fe26dcd15456b0f19839073c1a772a84148ad50c0d649ba354d23fb0825e3727a3704f12be207afcdc50167888d1cbd058e6805f5b81d0343064f14dc9750755ed22fffb1feff76650036fed1b81e0bbd57c7d5648145880ceaffc3f2320e42f8a331e6d3378e2db5ae0fab0bab7cdd63cf9e0376a0e227b64a1384b8e3c59b760c244592d63130086a6104deb588a7a137d645058e16bd14f7086c877d48343d5012473a44630eca5162cd92196651d1b1d8a6efb15ac9513d774da6f6ac6c70d2959c4a936559e50083253d
3bf8a3937acfb9a05ecc0d09e9fff3734b7bbe4f391817d39d1ebf2093fb22e1d19e4453efa4666ab7c4beece6640790e13c20e3ee6c5135422045310b460093ce1e09b76e9c0adda6d2aef31ea7a9f97907929885488edf4657cc393e5fc26d4a4f5d92051745af12bf5586397d2ae52389dabb6a9d900c0577c04859b4952e20a17586cfad42c09ea1c8828751f40baedeb0ac312050189a5da0c5bddb1b78c7d572efd6d8a6a2d89f9f5aea43f73c430f894f32bb708a45846c5dbde78418f57fb6907b8c6b216fbb17d05d2fc772684968c68e114b273b5794fbff2c5451d8bd0f6a55e1dfcd3667f871d1e2d13e77015244e75c4063f5b20d67049a442e604c0b8172b479296bfb78bfbea06517b7be9f2d2b8e93add36128f1cf4740dafd39231a332682e073b29b5242f5e6cefbf729c63d9f85f660243b2d57d4fbc5fca4ff355aa4021bdcbcfb9202cec868db247348bbdd62aeb2e23874c86ea31db1e4f1b2c09cfd90efa4ba11d444dee8db247348bbdd62aeb2e23874c86ea31dbf673ee651542f2f988e0962edd1b16cd723775507120f47253935cc317872d4b2dd09ec1974e8aba6a464938c7cc15897dd96b88118fd2e6c0bfc2a25d0f059d390049158c430e39304ff59da83a25f9303e7cc4d1ddc8654ba23ee689e1cdc15983c4d3afcd4e0260e94bf47e75bb50a122a24241313045334fad329e9c2616b6507874e10f802b6e6a614285203f1ad640b44f161a47d35ce6da70002e726d5d13a853e759b27afb606ba85e02fa21b4fee9f4bace4b3338c9c472fccd4a480337c50511e579941303152df68509782c685a081ca0da7ee59f051f37dbf34cf9e0350978036d2db7e480cc74e9b3019d68e7413739758d66e331b9363d04f21b118fa87634371131a72c289e3c22f6ca5431494ee8f3af222835e75479b4c86f3f53b7d9a3f87a6bd3f371337f0678f99c7dc8a368d1b467ac80ccfcb269d70345c62ecf5d4ea7472f638ed0c7fbe70bbf3816992310ac11d3677128c840f5ce6984cd9abb43741fcd886d7010e5166cc18214cb80465854c75cdcfa50ce487896be0fb3435d0507e9f19a52896812040cfda34fd5feb9837877b5532ee3e7e3ac11221711aa3c116c9542292c5554e1f8ed48a158fcb5d58eaab9d6e4f34a090fbcd198f351572e35e9492ae0e271ba36ef031f4165626c10d7b7aad46ff9fd41946acd8821ea4b2a301018be851d88c496161ded83ce9727c5d4ef1460332acda227e3ca1f682d26caada8e86c2bed3afc3e4778ec7e0952e77e62a4858e1c8c6fa842a8362282a725e11f92f910fd2429ac6b84a31de62f70cba3ce7129f8d1ee740e8ce7c9e771a7620c6a7280d7dc0b94b2ccb3a9c3530d2a91899ee029599b1feeaa52f24891f3038c38f9b754d4883b141da68666d47eb6ad7468b3ceaf56e00dcaa06f98d0c9b4dc881052be480bbc73d162b3c044207996a94b3cda47beec6c4c72f8d018febb5b551ef499bc09b6f461fb18008af866712bf536622ebf815f312afe8ec4570ac19e554699727f98fed421d5c2be6fd07dd0ee352a74da60000d2ea21f35eab52cad278f916c187508287afb198c648877c4183fb37450674ba06ec8f8a1ca3090180049bbc6b1317a3d70db60a3ae0cb4d3dc5f55d1060d027d081dd297ec1521d54cd7d3e2b2decfd3938223a186883988ba6ea63e91de5bae321f5d0e8891c5a07ab3fd7575e48068324c6b4b0311af4be2a372c51db1bc79f04817a2c1553e5dff6c8a23df968f19c5c68232cbaca90c3ceb9f2fa446d962c275d768b3bb1f6de8130cd9b11ec79e7d98faea1e9df3518afdfe5f22dff14f85db00fab0b967b178370f27d1e73485e67c6cbd487fc59481d097a57a91b14b7ade25f9e7f51015669fac7888a319162137eeeb0da5fb5701e40a8f64f12bdc2f73f617aaba6a8ca06bfffefb9e9907a69f79e2da41c01a258dc0c0ae106db086170f1a3fe66ead9106542854c5d01a8f88d27b006b71697f20e7078d6718878e93c39128328a64473ce99804e7ccd3a3967b712148baf80e7bc29e583e5bb62b14714e15f1071723a2d1721f2f09bad8fc8d0c12eb313cee5a2b42bc316216400520509279d113a665351bec01922e9a18abb63a3b8c8850ab1c629677123bd844fb43ef380f92661ce3c5b61e1fdfce585fc2b56df929481ad5a68721c7695cac7cf959c039f7b87a2e04aaf2f3517627a4c37cd5c0db1ca990602c67dcf5360e9c0458a23416dc14afce7fcf53a2a202b8fdf9dd6da03990c5efbb271a340a10ac2dbcbad1110d0d2137871fde7c6834b63d78b34d236c411f3637f5601cd591f782c56cf857404bf5ec8dc5e9a0cb9e2d7ef4159b3077c2d37ca1f0d6896bec6a252a8db4fd721b5f2a3c64492f861157e9af0a90c10dfce3c5b61e1fdfce585fc2b56df92948102ab8141e384fb737c3a981acb7055cc0cdb8d1cdfe8360d546bda4cf9d1bacc4f2886965d7241d881983e2f407b1cae62e149b68220ca17e032e4791b9807dabc29e583e5bb62b14714e15f1071723a687759003f66e59dbd6d09d657e1e09f00c42f360a19de8c431458c7fb1a594b990602c67dcf5360e9c0458a23416dc130b34f1beae6fa66ade6064d62b917c4290c28646028dcd7573679a9aebf8cc5ce3c5b61e1fdfce585fc2b56df929481f6023088c72fed5e5ee772d5ab4034b05900552efb59491359ce0bda016fc267545111db6abc21d973bbd33e43bf89fba69167bf099cce93822d36d6457c6431d6552631a4e60a0cab1edf3056dfbf5b6e35788cb9bd403c34f7f7d3afe6ad73d55da410260249a35d2fe2f9d103baa7ee73f0e36631cb0d13d2643ced2984e13c12e5e566843f4c0de1a77496fef2db1e154f0867a6108330024df2a1a6618ed711a8cd930a8cec4b502d24ae87c6ceee46946a9e2172b46ae2b82e38cdb219fae5d8c671e3ab6b8a6b045706c92ffde61bdc4d0444d9c2ce1343f29286505bbf6f897c356e6cf6a97917851937998e50cff268decb438b603225798f58d783bfac9234e49e6478be3168779ffbabf84c3fc84a28822d0eee022091a1357953342524e238f7c6390ea68babc8db68620d67971f648252b4569e1cfdf849da064627e7acaf6b17ac85ef052fa84121f53c65672d2b9692f4c8b64cff2d3627cb2ded185d8de0f109264884fd725e3587750e7b104a51456d82951da823e2a357a888214d7b2fb279ba230c8c29125a3d053ed5f3f7f71afb740f2aa5d3b898aae185445e1337033eb94f4d76bd04501bc87dd4350eb5c8c13a3deb2171bb1d147faab34f2843f5529f5b7225e1072f622504ceeac74d338c54e3746af020dffba656d3484d8b3d9ff2c73bb3d6299231d7df1480d4b1c7628756432b4388a6e8931b5315e5319e0a4fb20e36e02861a54b8f34d849c9d4f08a51db1a83c1200a4f60cbaba4298dfadbc9bd4589b6ad196da7daf77d2ce2a47295e66cebe4a486774c64fed079b27edc3b77b18019d9939556dd1cbaaad31e46629451ac7ab1d1fbb34d7b409cb1c3b5f037375a290b7f9d7289c696d526ed8aca2407377f55b41fc47f69e6b507296409de7b0b7b8b731d5a27781bd29c73f8c285b29419c251bd0f450ecad454256f149305acf523f501d56dcb90638841f6f2ebed9d9fd054ad45a36f71c107fec2a2b436fecb95396bf95e536118402fb16449a474f7d2d31aa3924ae7a616d60398b3a6d55d4e55178f41f4049f1421eaf26673d5a7d13bbb1340eb314af5a5edf4ac2c26b2263ebd754e2202499410cb6c8f514953cfeb371b1265e893b59574dca40ddbd8bfe87a1eb368a9d54ae64eee1643c8bff822a9e572f375c520336290ffca7e960cb7f0dcf558f3ae330f528106be5eb35773526edbdd16310974e0c3c7c52cd43ff2318470d5f514888778efec1afcfc293cb85ed9c7e49f386034f09af5bb8c219ea9c7d06f0ca1f28c45c5270b44010d2a7326ed29be98d4ae7cb419278f069c797dc1c2780d7d0b804530579f018b3c973267546cfc17b392efea4cc561b0d9e6fb3d09e1dcdb04f25dbd372aba0f11d33675b0a496b5150e1267bc7b3052b28b30708ce8a803951168f2a32ccbc02baf0bebcc3a9ffaf8521528187a8f50d321c780fc214e4b2e9df041f39e0ca9770de356b8c27b3cb43561e5c4bb38e51431311f95d43892cc5da3fd5fe7ea14c6e4dda9e4e438268391b3ef3201e200615293c8469297c8250f013cd252dc3388ee08e4849e027841df76d7524ab450288a9e224e62d71c7f16b4ce1117d88ef8c49369205a1528cbe3d6c8e4dc0c82f25de0c0a6fbaae7d52390408625cfb3c1e617e04e633217beeee716cb002c1880caadf1d5d86bf67365571f276c1aad498d05f552f9c0765ef8a50f4258af97c156613adc455fceaa4d468f23f3d0d3b6eaaf624cb8d4114ec301f32bcbefd058ea6bbed2861ba938f55748346a9a6f666593c8469297c8250f013cd252dc3388ee574d5d149fee3f644dae365c878858e5ba68f1be50ddf6e761c6bdad0b91e3b19369205a1528cbe3d6c8e4dc0c82f25d76ab6be0ab0682d6568d5442ff8a7cf47891702bb42a338c721ce10a0a46efeb29021a2982fc487b1ba694b138f27a4a3af89344a028489beb5d8c76ee13d5c417267992a38e5026c7214291d98b111e50b5f080ba30c872e5a7435f14d696ca04c51b778a27212a2e08b84f42e66cfcc7ef75a0e8492484a8bf7d0cf6a5694df9ae31c35ed1e996ef29b48c7ab363ed43d0652f20c824721d81093411883fcf0107e367d4d3d433d40c90708d39ad2a013b304cdfdfa47a48ad6b28c183fa0390d158932f61fef47082dbd346bf9886cdf344687412c3014efd524094a1b2a697ade7a3efd4b04e3ea103fd5ff0a78a79eb3a6d3d10fcb830b697712629d873080216eb33f3c08fd288546f8590842fedb87953e73e45dd6728102ba905fe5b6bf937cda7292c6c0ff0aa8816660b7f8ffeba2bd9abb45f8a172f385957f11dfbdd1cc7ccf798bcab01222f3ebda79ee782a29c4aff0b2f780b7a4e4c80eb7eb757731e47c4fc89a47960ec1badfce63891b06d395f3e97aca1b6ad1b1c427bbfb510d4a930add4ec7487c385799bb0e398716e8deb29340f29a5605dcf5100b9bd773cb395fc64cd77a636e78b24fb167a75afe4c5437f43f405635e2dd15e8f29141ab205469f3d95c7ea2c4cd50052979c8748cc2083810517de3757d23f83e1ced81773a8fc721f07ecc839bdb8a2d47127f7669f0ce2cbd50eaae1021998429cd466651a23f491a83755faedb3afd07a97c9fc374c2f432680997f69f0f2a7d9d4139ac63d82139a80653c073011eb60899b1f94fc621b72a4938a878617da7c84adc816ec180d9885a73f06f421380c09bcab0b340fd19e78471630563f7b9de618868007a5c48fc536028ff5b8b82ff8e2d297aeb82f2fc253413f290b225f4f09af1ec77ffd9c87eaf69eeb3c7d4bdc9b2f429227ae2ebdd29d81e911eda403e98285414bac9a2c1127b6d2345693bc8c04e25305498f926a2cf378929d226d270f1d75b255fa6377158446dc6a51344d39ded87188f37e73fcd0550d890f1a4cae8993056fd5ed3227882b9efe2d502aad1153ecf3ab6fad7c5830c8dba30711eee3fd8931ca60639afe12ddc29a8842593d4c0e8e60b67381b21a0ddc25e8a81b4869d37deace8b3b133c90b261e911e2b198774ed63e58c649f5aa7f713248e451310529686bef5e501c79eb3a6d3d10fcb830b697712629d873825b7b40557aca539309ebd4be1f2c8a5baeb81ab0576ce3fbc21644cccf396faf669fbdfe9e1a82812a8986cb4ae1bfa00f998c0ea4449f7dc756272a3847bd67c032a53fbdabf6eb6eca7bc12902681c541ee51062e1a45d0aa3caadde636a8f498309c8ae248a35de0a147409cbc0ff075cbfccec5f5f87cc3dfb1298b5e166942dd39cb21fc4b1f0f99eeb1d1a1c4ac1bf58720c3bcdf655f072c78b02e81af7ece9d6080a068911610dfbdd0fb8ed5669bf0458a38baa20845b44e2f2db001d494d044c0f7722c810fef32b9c95272f66d062c9de77f51504dd47a60323c87cd94a8ad44136cf36243ebd8c55f3534de9f4b82e64f603240c8b2ee0e68c35b06c3741e4eb5cde62c53c0b815aef54f32d7b2cf704e7119f90037775b71dd2ea5fa02cb0bb881536fbdb75a1fe1c3aa98ca7ffb3be412bd02574ef6142cd31dc0d07ef98f774487d479507307e7383f2c4ca5ce7c7483bcc15632fcf5f97739d93f85066e995b9b3691ccf9bf6752a2bac20bdfd958df4e31734dfd0e409396e666d9ae48065e02a7b297c55d56b58c275658702e6e6b286ef0bab1acfbc4ed397b3a19e8736dc1088fae3b7226134b588bba178abffedcea6064a4eaaee2f3ea3e4691754579375f59a6d76be105bb01bf40a5268b703877b9ae79ace952e6a5eb4ce888af2c3c6d8f0e32477c6aff5ec6118418c503af531acf35aa11b45605fbead396cb8bff2c1e6bacbf669d8d3e5ab52ca3b1c0b8fbbcdc625da939fa2988b0b4d6a618a24d78bd40299089073d1325b5e6cde5979f6ce72455106cef2cc45d6c68ffe4e254b3e130b6f54189abaa938c2fdba7b04349635cf2fd91f831c13f0431d78a9eae79a44110f9d05aad0afda46f661c7479490973ff8db651b2cb6976d47d52d2504b06ec878f23fa3c6a787efb3fc608ca572e1bfbcd21eb57ce053aa164caed6d1d5d5311a96ea4ca902ba36c2d651b94f0ed4b19e096398170fab6a9afdaf3c268eafcf4313c6f88acc17a6bbf5bc2e9d4891f7679ce6f74a523d044f27665aeac81ca4f0d8614c1cfd92103efa4d80ac72232c9bffbc0e688d4bebdff44a4bd657e0921ff6abbc81dc1864835e396cb3b4db8bfd102479e1eb66ca840088d408790618b39c5c357718e92da6b2ba9e674ef98a8d7638feae00e5160fe82571e711f5f6aed35b0124d7c43638ec6b6669063147f23e5066d50e10a10020c02a0b1013da431a4bfe64c855102cb3ccb2fb9b7fa702170dcd163a9d207f7cf10a58955e8bed699a20f715853f617f8562ad12df5f499facf1e8973291345585449ed59296f9b044b4d06142fe6a06fd2170086cd3ad14a1c6e575aaf40c6d7816cc0af9175d4b75a7cbb0f6bdfaad4df9dd90717c775e9af0d1e0641fc40afe5d9c7ad541ccebc749aa5d4d834a96f47bf6582f0831654ab332a47cf9fdb46a70cd8557f20ae3fe24c625e3a457104370c7788279c32b3805b60b684a4bb8d227169fa0c1b3b8f0611d650d8a52079d908be91a494bf09f2f6bf2ff82f16f9541aac9c8dfef86972b0ad820726842fa9de31c516cca0da71a49a382ca2022a4323720aba87a425eb91b4361efacd6b7a20c48a89650c16860f248f85dbda1452410b82d28988477ef4c519b3a3ac129f772be389ddf66c3252e56790c5c53c5bc95adb11c82e3229a08d7e5de6d4439387b3b70e0e6fc0afc28fbf8f2157db07a9d4a04a27f7596ae0752257a982eb163ff3287ca83335200f027695544b62f954891c98f3e0d5d653b3689959516d5c45a6aaa9ea8b1da32e6920a2f9f6c18d4f7143623c591f0f5470b04364ac1b4bd07d8348d0d8cba93e6fad84770f59725a808af50d39d277aa42ebbd8e58a3339425702a8f8e1faed1de920c25e5c53e91d75700c80b3c45b2ebe274e8573ac83842a161d1113c79d8b82ffc801381f6005ee3d686c5390ab0b79dbb1b598cbd94612cf93216985f975728962ad32bab9c0aa50f1556e63c45958d911d519c058ae2e4b0b6dba00228c16d8cb17d81f07afa4f2ceb66c1060e895801c2d5a2b62497cc6bda1ca2409fcf8b98b6a02705ecc7a4e7ce090f3dbf5ddddd4afcbe1d8c5743e1a95e3fca8707cd5c7bcba97a912c473f7bdb1e17d920ed6620d81ffae3601ef7860bf5bdebc3dee7af3787b548adf945dd701a908394255fec499797e5b4f59c97290278f1d305cbac1860a651c1d4045cf064d6ab866a7165e3972d6e308ec08f76a0f2f662b9e1ef91a2c8fd3efc0aca40b4e8abe757d470a6ffe7992785e39f076a1913887968d007a31da6a91a3cc864854419156f07e8f9786bcfc86d1bcba9d729c09eba53137042f3987cf395fd1bf09ab3b5bb2cf239fe80992c19002a7d6b17db1e6c162ab87a356560c448ca81d3b62baa678502d97f5d35b8133d6ce22e467c0830707165c91acfde4c61c1dd8a908394255fec499797e5b4f59c97290eaa612fa5d35c560635688ba5899c4bb76edc68bcb51a86dc6f29cba20d68af8c8bafcf8aa8072cd684aa737e1ee54fe611aea757be9510f4aabda2d46494029d8001c8e23715907b351d4615728b3f8d2f1f8c6aee44d7af98060224d8e0ab96852e6a110ae7cedff087146bb49ae81a1882f1847b6cd7a1bee28e6e6f2e06216fa049ddf78ed4ca211c01014b6f3766b87b427ba528d0ea80ba890d4e5a8cb9ff2929b2a424787cf231ce77602648733c389c48c7dcf6ba2f77db5fca72f9ebb8bead44fe3ab7732a06b2d9b480689578fd1c39606dae7bc1165663ace832803bf8a5c8ed6797e3ba8eec219d0a03b81d1fae14460b77dd5073bcd84bccf21817d5f43680a988a3fdb38c272eab36934e7d6408648cdc9149f042f83a73c5faab622e59df655c82b0356215561131e5edb80893012142411b9b65ad840ac2ea14bc9c072a33e2b423161686ea174322838ce284b91c057819f5d76129c0bf502cd5db0610d0420b4bc1dcb7f9d868d1eb9fc4dfeb82b701bdeabaed9a2fabeb6f1c0f56a0683bea969bcd41d9b953869b2c7b671bd6bf3bc58c241384bd9a78fc49146461fd4e8410f20b5c12f48d4cb955e4346745456da78e3a08fcf57bbb9fe474687410e607d59c34e3be638ed0bd59211faac40638d16611f607dc233a28d68ea11a52eb27a57a503d5cf718665850b69a842ebc1803d9f5dded58e0888ff491ccf4836b30a30f478134a4c3e40a330facf4dc331768a2a9356eebdf51765098b93e807a20b1bfdfc112e372140a330facf4dc331768a2a9356eebdf5bc1fbfbeeb546abc329b059b29c275e4446576af73ec7a85f8968e22e62e9c166369adcfbd0e0d6d51e310ba4606cd600b87afeedae5ba6c2fc55e7d9a4390fa6369adcfbd0e0d6d51e310ba4606cd60aabd2d28f54d12db3664fe1945ffcf0aa2ae1dc2872688b71077e99778f8a95bc057e8389d16418687bd86480f79b35f04113a02f7763d07d427e67468fbc0e38b8af462836cdb9959b2514ff78e4465a3c95dd72cd44a0b53d5ab4ae79934f65b59e629b2ebe100b8125ac6c24be9a8a260c66a72c800a213e08eada273882d3055b04cffe7c24b0d25dfd68f013f1aa044cbd67db1ff4010d43b725feadf90620a7f95d06ddd22a8e31cee3976d43931949c7c671bfcfa685a3f007daf9b94e2bb5ab5fdabf0f0b04f897c99fd4ae99725727099775b67b499e581e79551fc25f019bbce8a82b5bd7d2d0a09376e47f162dae36d3228ae9e62cc2f56fe93c6f0e4b4aa1d11182d57f518f9826747ad32a9981487157f286bcdec590649187238d030d454e78afbe7dd5b07e6076faa581dcb03d37e54b6dd3bdf0bd116d7aa74954e774accdce1a878b7fead4572e9e326daf304c0fbf6442dea91d17cab4edc6f1f5aac8eadae1eb3d6ce2fd95e1606bc52ebb32445b9581a3e78ecfed623c1e3991db1330520863ee990df197bfa08bdc58b7457b6b22d77f276d4468e2e424085b2a54020cde1ac3a5fb42db8324de27b858a58a54ae3005835f945ee49148992d89311213a0ff129b2ab11eb23d92db7e02030ced35260b40c1324ac9a0f74c3b06ae82a540ed735c22908ee5d66efeb363e5cd47a16a9737850531fc3f0adb02c30d0139f479073955982875c3bc7ac49d349a3a14d9b9ae4d36a191be641d64439ab8fb94b7a5beb7b595da797270668c5a7716f705a37d73231fad8db09e3e62f2376a9a7cd5e296b781ad06fbcc29b7fa6232603e5add9caa7742e68ddee5922531189308058639091d4126a409878b467e90aa5125fc48ff097e68894fe50d370b752cc9652137cb1bd3238b1b88741d1ed8fb72b7e172c5da538a2179d2e9400efa28a6de22cafe3fae883589f434424b0e2b98a1ea675f8060e4d26cb385a22d763453191bbebfe4fe900da1e8a074fee97c5dee6c98d7c505f896d53d2c136c33ef466324376e62dbe48f26293f74cbc4c6ecf54b62e1ac930a3560fcfda3c1aec12ef7b29c367d9bb16982332ba8a8dfd815d7b893de3e6082b8170e25bcafc1f55ec0bc5c851906e50dadb65abbabb4b8a1f2f63e234dca92d589f6887dd0e8c9925456140509472229e6b444e56dbe2d466ad391d2468676ab697cd0f7708873821ef7126d8733060b9d330c049c26f2e8099a795847e0afc22c6598984e98da322d5c65542dcddc5bd2bc4a22c3183f563c5c74820bb941509409f2e4b0c017e01ba246cdb37c6fd9404ec99eaa1ebeb0c309d176f4df63cd6eeceeb027ad6683d0a22558a24d61f05888c746f8a0cd1820033bd66d8f736d0e508fa6d886663cd9dccbcb18aaca795905e4a3bd352e8be6fab499630ce4b3fefb0f9fd8df05dc3428df21e314bf799723cdac3ea79c726337447bfe4b01f9135b37d36fae3787e7268a70db41a00336f3f6fc112f4bec4366f7758194dce05a153df9766d784ec50e68ced0d5b41e4dbcc3049d53b5ba4d8fd25eb54ae6da7494e2c03b40a4076a469985f5d5670f2b111b94a915da3393d35d52da7847f95b11f18c0efbbf2557f6d3b04c234b6a78df54e4f32424613964e525729a5757aff89536a91e8e5489aa4e7f242e3165e353dcf906176a3e470bbc87fbc94a38f8d5ec26a98309d4a5706c2a1f200d77947508fe235a6b9cac2b64c584faedfcf9958cddec1ff96eaa46eecbdea42e7f53341e53f094938d1065ee2156b8df607b7e3ac1dd26095bda6abb8eecc177141621a28f6a12f8af702e11b4c621caee57372fcadeb68cd3ac382e3477a0b5f2db328984f38e78f9074cd3e5b2334a48c3639f35d4d1c3a74e6732a70d1baa0816061becf5eb862b0f13eb4b01f37d159a84cc5b980878826697bced52d26040274b3542117c6677d0c017cec261259f4145045995a382fe26d9bbcbd8e0af344bdf58d4f4cb940b9d00aa73b57f96f8764ceb88bb840caed3da5312064ea65b72cde2aef1e6941cecceb57b894dbcc415f639e2af90813c9bdb1d57324aba3705408a87526e45ed50488575dd2dcf55a0982cf3bcb9ef2ec307b0569c53f68a5dfe0726d23a105e556df49871d73675f6e5d8642f6853671b17ac90441f85cd4a32ade450f4c5e0e9673a90aac06dca608cefbe380757a623d87998b6739beca8aa4ae1a31dcb000a091b437ffde0c4b76cb66ca6aeaad13b99553e8dc60dec7956e270e2e396cfef1a00886b87b56c223c71fec565d7a0a170cf9c18cfb4c8bf033236b150fba84e8958355ba27d3831b1556f52f116e486c7dc3efb4028d8fb9dc637719cddde4bfbb7667f217d159a84cc5b980878826697bced52d26c96c2959497bed0bb8ca9c3213392b293356896524ca5b732b0a0c0378142711de535fb08f4239602edc24ae7a1c4b60744b378303d15c4f18a3f68bd333144fb36ddfe3dee69bc253d831507873425638d1300b253b984cc00a69e7d8938b5da140624b1b2f93a3481ece932de3b63d2e004f0923158852386d2474b1b68e82a044bdca6165ee57f78ae50c1abf1f67a529508c1e614776c0b59707a88c43e2717091ce6f2c09ed57d8c0fb907534723891b06d395f3e97aca1b6ad1b1c427b6a8b9f53ac8d13085615b8c6223f1fca76386c0f2c84a8a6e8b69393b5c907010624b2adfc0996f491ffd91d86c47907cfe5e2c54ab7f00b51fd9b99367e4086695ae6795952466bf116f02880fd2147800a624d0df2cb8eed46314c65755651ed70202b75b2c8c3cbe1a322ac2d2cc35ee4e8628b23460d4789693677409e435ad2f8cf35c44dbec4e61ce281aa0cb6c202891dce098ea217d6ad6ef64ca1b3c161cbdca7622409c7e1afc8fe5a8d8845cad594ef2f60f8351a76f23ee58b17acdea1fd4510269d855cdee808581c95fec182b3d0669292044e9220b07049fe263d60fb47f749e64b799f21bef142e24e4ab336f100f38367b7f442a63b55943891b06d395f3e97aca1b6ad1b1c427bea79c6f41e5abb7600e828059e0782170791951b6140f98a0bbc6d2c544d1597710bc0539cac42e7fb52cc56dcb98d19b5446cd2bbc85b9ca809dc5f18bc3b1e3424b87ef3a81f101ff8d5716f8d7ec2d734efcd34284296a42fd4e9777a99773dc00d20542f8ad11f7c7bd7ad16d42c3aa4923d1568ffc8de5c04c573008884e782a29c4aff0b2f780b7a4e4c80eb7e45b33c958d9e3c2f0937691071148b208a32618208071e1e6da838621e4a3b0bd1735798311ff8cc2ed6bbe706a2a7f1920fa0e6ed1ab083db44dbb4f872d24066cd1ac596db9c264f191677f2c6a6e16e38d4a785c50f3294e3b2d9f5ab7f851a93ddf49e5f409ad72f96e69ae0e2c484b2b3d8d10a56ed395d025121f8cf3758635b314a59bf1ee4eeebc066a75108ee015b6769fec48f6f91496cf4e5a986ea08ea48c4e1ec433535f7a890f3b0b2921f85cba024b4161193501a10d4b13fa2327f4a5ba342103085b4e1a27bc56c92ea2b44595d6b5663a4bb6982e336c7a43055e8634f71153352fe7c83c0dc59ccbc523d2162dfea14dedb074e14fc963ec4510f5e671962369938ee68f480768958b0948025ecd466c542ad920a2a2e78dbd9bbf69d2ddc2a2cd9e03ba123bd9ffa47240e2d4108f7fbf3c676b79d28974ae7cf89fc3ba6cddb49df361a885cccfd9249b3ea4873a088b11e1351c9efdbe945808b910ffd2c67f28e0ae7cf1f1e23fc3b8e5b1f5c0c1b3ef33c65df5bc99023384cd7f179e93f88115245a515a225859501b499ded2bc0a3958852777411ce37e9ebbc64f01e4b77b1e72f6b87fc32197839f744593cb7faa562e743f4bae29d44fc9b9a64509c3587f421dae6716467ce8571fe14c608f32ed34dc89fbc5ac15ed67cca600762dd754dafb709ed0a3ef52c16a2d181fc59e9cd60bd5530a517cb1d642e1e61daebffdaca5680038d5bdd9eb450eae79357c8738d2e42edb853d9cfbe36792c4d02326fb79ef9443ad444017365425085218da099dc22536b4877119cc761304471aa288c938fe7300fe8d499188ac6360f7f07f48a467c032a53fbdabf6eb6eca7bc1290268c21e4ff7fd7ff6568f0bf0ced4c9e47527c1335f5b9402946196a719a46569e324bec834da40d7f2174816c3011d85b1fb734cac93298dc604b8b4f1e7d34cf86969a0a01c28c4ea7212700bd4260230cfe7681cdb588c6196eaf967cf678c986e0387fed0189bbeddb615cee189f98a6f5063339681848aacd24d8bf76d6321d18b785a9950003bdbd9a5443f5bfd18068b85c3c86b567a10585a1ca7472f32ac1512b266bcef18fc6b553b15e40ba7480829b7cf9fc0561c952d1d3cae7307ed648e60f645498476e626217c9d966dea540f539050ecdbd45deacb43d384a357fe7b5947e5a75f69ecdacc46f4de5bcd06aac8ccceb6a1e6de399aaa314bafa16ce770f3af233bf7bb770c1196226c7022c7bdadd7706a7034f086128f0aae117904ce8662e6c32f59ec7da7dd9e2636945241f781a70b80c695f447f20c9d47aec78bcec85ea6748864ff522c018f7c92abce792fef304e499207b94d8b6d108221bc8aca89d2bbf3d16d3ebc0c4824b2ae8dacd1099a54a530b4701372c0ddc308fd5ea2d01719dab8d4b3a57c980716c3e00ffd8b8dcb3c1383e569e74540c65448dd3dce1d9639b238e80c87ffde61060c6e93ba8733f1a5cb4fe568879dbb84d293e5743eb38cefac9a60e17a29a6b077740c9fcc15d5981cd0120826664cb1eb1b4acb4eff2f19a7950c79ad83e3812ae0e951de4d2b9d7885c489c6c38bfca3e90f71cfa9466903e1f28900db210dd6045ffb3abad15791b2117bd6e03e3b5f2e0cb046a80646d14f12aa09575096c6904d0ccf610536ae90a7c08fa29b459581677cd95033c736fd36d790f86a8be8eb457a4618e71a3dc73ddd51b70bbb2c590946f20fa3b2092e03ca91ebf3c6ba64bdeabc8fb07cba776486aec03219b95dbb0c1bc62c1eb1dedbb91d004d2f7c3b48890b00993269899e83c86653cc2a94a4148286c63c4071b4b13b13b72de31cb03575928eb9681a37ee25a569e4ea9b1efd691234f250351adffe27c54c82bab04b5ad8f3f19eb7da174cea153dfa00043fb03decb05d3f681cbc896d53d2c136c33ef466324376e62dbeef43c6c294bb3a954dd16cc09748f6e52732ca418e6ce52d5633d270d7fead26b1e39c67c463767d3aa10c1cc06a1944a795905e4a3bd352e8be6fab499630ce4430702bbc617a0f76e85a3aced03cb3eb5d234ed20dfe73b8b2e4f70bc81993a9daffd9040120b713bd3a6c3c5c368a5054cd9693f6c0b6fb424c1ccdb2a96cba1fbda0b10c4bcb6b9ee58f0fa8f47f1dcdebf2b5d8a053f03bcf380e2eac8d471758dd57b826461efae269d3633bcbf22588efbdc5af980158fe9b839a6b165b903758708552fff30df90f2fece4ad97615e5c00aa4c47032905a4b8acd55761f6a9549b47ba9aebc95a04da7d8f813aaba73fd5b224278e680600fa1d17f62f0cb52e0a68cef14595ed0bb37798b8653692c33a395494646e4a8af02d7556062f7a576b324b55fa4da801bf209088c3267e5b8a26d065f7e68311da33f3e06c3feb2adf303890c5b6dbc943c73b4e775b670f9baf1e51c8e50e5f1d4d3888ef836b0d54e532d41c7f6597aa83d982463abd358e61512b1f9b72ad12eac1693e6bc5b2367ef3f676bc4dbeb1427af1467d309b5d13534450bbdac80d6111963b776c6a98f027affd48f1a425263fb47225a2b2cb9537ec9d54890d36fa5319b275b8433f1a814f11e03c9b7b830a66ed1efa889535e26bc97cf04ae5e8dbc74ccb1f0a0c5bfa1e0c2b5577acf323cf7c28721550ff39582f51d96c90d0ad19e2ba8ae270c596131bb5044192c77f55905e4be7659a67e269dd985d84ea25392f303661586a5bec64ecbd2af88427b855ddec7d1e35a87da83b8594d31d7e8d0e97491f3ccae98e3da2b4c17c272518ea17e43fcb1f0213a4c5bc4666c2291afd52cdc02ac64c1482925ed91969f5ab3857e744b378856a368e1b46ef388098686b1dbeed75cf0f8602a4d73456f40615829c6ecb731af26567b39a72c29d62f55ed2cca9e4146e70500e3eef65c0ad50b41237da54dae46e8e99920a05514585000c17f6083861faaf74210c577feca8a367a4224751365e1be023ae9ec4e7ea7e8c3c3afdc6b0fdd0873c56666dbab3816430f3a605b7b505be1f0374e6c24a4b16cdfe7f13a2b2a0e9c8843bda012cf413be36e81f42364aec1c5d7a516ee77d2a34e498785851ea054e90d8303829abd42a2175936cc1f806f781ca94c0d69445ce95c586e87da221fd60d0b913b85c26698cf1eb594bf02fdf92ae2536014b0d42da07b2db2fb9fbefd70e30aa5ecc6fef91d8ebb7349d2d87af17ceb0a9f011f2eb9e08c4d868b172a7ff240108d8baff19b229e4f262858ea60e30d5530a0300e52edc2bed413a1e7a60b3eeed30f7b8d5c94399a63ef2a769b169057a4074acfc8ba664fefbfac6e40e50e427f21f20b60277128b8918d65182b3460acbb1dcb7a3cc37defca01b16016b01394667fdef16f6fa181b43cc90aba4944f98b0915978752395b39f28ead1ef1c3752c108587235ffe839e7cd11b00a4325bdb8bf64065ca89e2a7472158b0e8afba47615d3ba0a9768e18e1bc4f45028bfb3034628eb49f069ed454c35d9a63226d384e33fda6c2a629789eccff8db5c4e16f85cc3099678390b9327bf8990f688bf8e3c0e643ebdc2b41117c1514df43508e5046a378a4e2b5ea723a056b96541b9562b6a3f420e1ae2a6f3e93a0cb3a090597227fafd42991c19198dc14f111bfa81c018f6ce06417ae38a6ed3c87f43ecdda1552db7025f57221a2a38a51178bcb818a34a2fafa3d2e223cd926c52c774ed27aa18d93d59bd4159e72b5dd62352f83fd5a89cde35c7c7b86e3dc7f5d93e96de95e16362fedb104626ed39500fc169b7de8efbb2924ae0b2357115fe66c74ddf83269ece00c7861004050671702e60a7fd2ca41057ee787ee3830583e85543cf52532bbb216be134da418dba3a1198af3b310087f5ba9c862c53ebb69a91a851884f720667da325f6596aa9bc7f12a332ed663998d017ebe45823219755f45f87e5f2c85a9e320c6fbf6bc4f002a54aae7a0e992bd339ea699c4601ff8586862d278c1a15ef4cb07d2116bced491d4c45b09a4a89f16cbe62b9fcbfa7a94a6855f234af40892acd5bae292341d9053e7bc1902db12c6162a29fa86e73cccd2e1d69b5a0184925dc99798d0ced93e96de95e16362fedb104626ed3950fad94c152c646136d93008734746483d3197bcd2f6ce16a4f01a9fb268ce1d8689b254dc6a8d7d09f2d53fcea54502644f06cf81c32c88df86718d2b378b3f109808119d1d5d9e3505afa9c9b60ab866e5e6d57e4af96a3c1329e8d5b97cee7dfa1a01c3e76ee1fb694010c9fa7e3267eed34af9d9e8f3ef94f30e63d91b43de01520cfcd90d5b95479fa3327be00f3f2cf936392746484986f0a5f42ce32ed40fef05f76e40ca83b1d2c996d9e6c009c89d314ebe3a9a50829d3b5aba58e395b1cafc0bcce57ab158aa92022bc18a3f07f358b477344bd38aa4602d20b68aa564cb950e8ad78fc9d855b1f3ff7b2a418a20bfc90f3757f925568e107bd99e8d4b4eeb7f1d557bf1e76ee0548217e72bc0f052a3f800029b58fffb5f2a1d58e6073d358ff81b82416c9c27b40705d41bf5a872b50c1118c2cd48dd86d73a8c00737e4f2cc74be484ba03d49cae2acd52ff30e3978471d595649eeeb4c9e529984f6eeb58439d4ab36deaaf3075a8b1b65ce9d2bfe326a468708a26c161edd3fe0d76409e01c249183fa0c9e8037d001e7d301fe20b0302814ef6cd3865f58c1a01aeb662690f9e1ec05bd6f82b2f1b57c3ee1456fa91c632092b5670688b24f99bc56a4971ff444744d1f0b2b12f1b1d4820728f6a382376608464ee2eacb8d0370145a57e6c672a8a415d15467f66258aaee8191e536e8164ca2a91527c444104e1653d29303c397ee11df8ce941da2d1ace284ef5cba671c05b0e4f15e3ac25f7fd60fab325c818902a8582e8d3026e14849cf82eeac1c2f994e11b484608e96382f71ecb0de4e745a445461e97d9379819225085bdf32e3b69affe738afab2517e220dd832eb23058d4223157a48005bb3e0625b014122cbb27c8013ced69dd3627243beb2901294efc9b0041e5c41eda854a88d33397574f0807085fc7d6001d494d044c0f7722c810fef32b9c95272f66d062c9de77f51504dd47a60323313f64e45748315cea412a51c6ea086da03ee406fb54f088ff71bcb53a0320e3387f7b16542cad807bee6e80aedf8fabbf80156daf982e66c5e521e3b0e011cb4138b0a2434a4d640df40725f58d87de60c535ea146b6e0a43b97f72661ffbbf8e13f29105fc44d0c8b4f37f7fa54727006aa84854d85fb6b0617a692780209f66a2eb5f5276e932de7813707ce84cb807fb9c6a57a2003dafd0a16895dbccd47d739a235d22269e8819179e85c59478e138caf66d19763ee27583cc95a91b44221763966801456d1147acb442a03d82f52892768857b89e56cb8c010e790273168532d6380c4fe972e811b9dfa22983023efe566bbf4d6db8563cf223615ab6f37882a8d1e77d18cc61457e8339be059fbbef48df4cff3b17f393f8ed2c2183e7722fb1a5b114df7a81ed5388c18514556a7d19a9a600e7a172b837b2750f5b63e077f7adf72db80d42a718e165398b0d955b244319a5d6b60eade6dcda46693356896524ca5b732b0a0c0378142711a489c4fceb650ae70ea271c28b2488b7a24343f10a16280a60318c5e75bdac192586738bde650732ea00033cd8501c35b19b89b39252e2a3f13ff54f8302480431fa7b5975e762cc049666f831aad0bd1d406c7e73058308f1d095b289ec62e843775bbc74953a5bba20e951801ca8b1615d001efadb018677cc5fd69e5ee444528f7a0a5ba6d788392b2b514ea9abec0cbcdd3ac624af7b85d90cfbba2364a315c6cddc227af60f43dc8d8dc829ae1e900a6f84d6b891fa123bc0c27fa94a977bbea25d05efd571659dcd8ddf2e296bbdb30d7637027f16abd076ba52c990e5253d22e839b9d42bdc12395cb73013726f92457f7019e4da4aa8690669bd8d6f8a0d182757673f02e8b4120100f4c5e053fae36041f85b7b0965fac3fc2873aa03b3a7e51ee964a4fb35101dd44ebf1ba3c2735746ed73630c112d198454a3f48fa50404a192f9a563faa2c14c14275e4646a16f39922fa4b80a20678b1fbfab136aaae53d47befec011edc4ee2fcacf3cc22ca880653c6fb387bbdaea45ecfa1ca641fdff4dfd2d2a491b318980a98a40f5feca07a2225c5ae2f71c7a3517f97bdf452aed91dcc65c7449424a589afbdabbf9019110471efdc5501e0883272900bb5cc1bc77e69a82f5ea07384f08885ebbef7c64f640f8d33c507728d3982f7547bc49f754499f38a0792113fba09f92d791694cb81e7e7df66091d70e2af7b65cf9cce4f27a97d2b2420e3f6653bbec39a6126991507507b754ed7bb39dd5b41574ab49556d9f4830280a4519eef2e171c8edd0f9bbe46d48afe3bea6a75d9f5a2bbf7a8a04216f7c9a3d02645bf97a26eed72811ba539a4a520867ab848b10ffd7697256cd87ecd44b13033b7a1440e565f7f04c6c42880dc55b1a4d8a8e766ef07c5fd89690bd82cae2cb0b8b318223caf93da9df7bd64f261260d46f9dc5141933ab7f70d641e6babdcbd5b89fabb2f61b34bdd2605b568f1821643cbf29910d2d82c8c78936b790fc46bf0fddbaf33927af5d81cd4bb806bbbc6c297a42bb754ea7c4d22198c94d1e3598445e8defab12ef7ff4b92ac44c9451146f9b83bbba33b586417068068caa91f75e6ee0e9f23587dc0c9fa2c40384938722aa4af903a611d1c8b7925039e0f0efff61355b43b6ddacc86a47a17eee8cb363c3a10e91eeab5f2438ef67dc607df751a9b734b8474476a859406108041772c3fe1d98f4aaee3f37eca4875d749d005fc09181eb21718db0d1c2c415589c5c6f3435db567c9f48d47579cc71b8d55a10be5fb1ae605ee62ef49d1680c6093ff6e964c86fe6819649b52e69b04b91eef4dc7f774245e73fd30929e89f1e9f0034eb691764a90e21891d472df3ae4c91fdfe93af44a8c9bdfb7a0688acb82d684a7364eb44f243f1506cf903695e30de29c4daa6c4bc96e100f41f542a51a8d03bd1600ff030f958e7908d50edf34b740d82bc36f497b67005655a3fb9e46036d4ef1522c3f4236a091bebcd4588c55e90beae38b9ca8c58feb03d8568cfafc8e7e14c47d25af567a38345692b591285757ab3d7609eb238dc8c5364f05714dbb39f4b63ca74a0974d6d3ab243059507dc24b356fd4ec8f8ce0caae64d5654fcd5f0d9990432f8eaa420d8fc45b42a47340ab1da335847ab8acd14fff93bb36d7d5b64c86fe6819649b52e69b04b91eef4dca37a44ca0b23e410d68724733f7da59b0b620a64a44d376da1ff08ec2eddb85d8d19b92a54465465cc5b81400d8f1ac4052c1368e79342d2a7402d848eab5330fe25338148c730a8cbdea6bc82aec86374686307f008ada44e849e46a7221b3cd10f1ae915fb21be9e010492dd52edde6eb1835d28a2968e1b4c1591d3ae4225721ea150fea33e75d1479cea004e85e7638065cae029b552e34ce0ab19644ee3ecca25c4dbc3a697e4d2b4ba0058ee428b919166714f30f5b93d440097521ea1749c3b8567a5ed6a566c2e673fc8f799448dd1688722910acb213f8dd3935df96542854c5d01a8f88d27b006b71697f29cda4d053279187f6970c0280727bf76d6ab304b3314501e79a616c0b1c1232a418e9bc74e82f82d714235ffb6a4f1a389dd8f093ce908f3ae682d5d2ccb5a335d9b20ffa828056895764a2e3860b41e058be11abe034fd063623db381da4d05d5550b645b2d23ec5737cfcea22991616542854c5d01a8f88d27b006b71697f29b1efad9b696ac19437643bf6969bd3c04b4f9bf152ca2f56b91bc5300f54a0c3d929f6b9c44bea35182631656cd3198701b3d61c47dc25df8539619e7743a0a6542854c5d01a8f88d27b006b71697f2296c9a8988df8558599f5b1a12fd0c4da026860e3f672b418484806bb4ceb6389dc720c91da490b557f2059f2f871d4aecd6c20c9badf9861a8145719061c3113713d4226c6dd9e85b8a1b5b1bbb31be2102a01b3aacea94ca7812d59da627cc65b52f0ad75c1bec80a1e97ecf6c31cc772233034fa978653ebe059f7f3813ad71caf660b9dedf83f33948b7591576ec4946192be54c1e96059638d173a26e8338c42e9c334b41848a9761a2bd11a7ed7ed5c768debae999bcf7758346d8c45e2d61763bb4ef440aab66a66bc800640e0b7cd7ebe1d7d992c796679fabffc292fb14365af5a4356a1b3be0921856c891ff567d6a1037dfd648d9a60f903d82f12e3c2919091e5edad56a1aa7efa633bf01577d2daf0c44018eb72767358c84c40591b164d3dae9cf849603f3874a75456df1a65b95a487bcb7711614cb57535f4cd95a8672f74e416ae9842bfebedd88f109a80d4b2b72ffa5a6bfd1ea24d95628c0ab8628bc3ee465e739f14c1f6b186d1277b7c8d7e2ea72393a74aa41b3ace97c2b6f99a87032a91a221f8f890a8e11469574aeba58e737f51211079b35dd9c56d4afb3fb04fd44f2f837ba81625e4824a72179d74891932c80bcdd4b6cf284f4c5bbddbb621217e1df42634dd541849037d70d36b46f0a67232c3442331a4875aa4c85a086eed6b81f2020209a7af12ee2adb52a4a2179b87642dc054ebce183e9e45877488f24c563cf2500451e1dedf3a878535fe6ee8bc5e975f488c35a24143f5e9f4e96cd8b579fbbe37469b08b46f14c796e885f9349b30ca30b0fc7ec0f08d8100e4aaccbfc550235938c04524d40c08e72f00394e9112437a326af17b8e0ca6c84f562cee365d3dd594e4c41bf53b704404fbca8fb23c02979e3eeddaf9452ab13d645d302e9edeacf2f3ecd253ec21031549cd813a994bb638b782c85c49e0af65a9149b2ad9ffe83f47e93c7f08c5dd37cb4c981e2ae5b40aca9d49cf1e58fc9abd7037e6183ce4b9a907afac2c1d3c4c8e70d773e0bc6db4732e8211378348847a13d95aa0b5f1748122b130848c5d55512cfcaed2674a9a24b8130f0d07927574a892ef1d1994f1f61cd47f27932ef5d56feb653d71307b4dce91bcbe0f720459926de3e3d9f4ebbafb88736c04ef9efe8b0b21b8f1edfb53acfeb9478e9e77772577f4dde5657a026a337eebadeaaf408ac8c631571e8aa9d8bac0241d52f93ec7d534e02aab53302e2dc7f65a542a24de980c8165fea6c96977ea781857d7c302af3699f5d92d7a51cf6e7bbc71d9b5d9a958b9e61066d5471d3124bf9008a02bee1a8651d4ac3e09eee59e38976af907b80f9385b0b2f33fcfa233528ff2f53333c497cffaa41c30a5c8a2d5e6451271a547b36553d651412f14b33f37d61f53cdfcee62e3ee2cd2e0e73b682a5fdfbef3cc5da4a06ee9911b7e19b94a9d23b5e9413d163276f8fdcc8750347948faf855fb6f8ef593b3a233eae4ec4f6a526c61b31d5cfbe23f7100887c21dee9b9aca3505709b1fc11c6b8d9fa7ef23308e560f5cf5cdc0bccc21bd141dc30793c64b4904ad4f080aff9b5e6917c61b86cb0308bd34fe0dd8ba73a07bf64de8276ca071713facd586e7c44033b65a68fda8ed7154b086f01d8a53676a5cd4883cf8e72bd5e3b4599026e9eead1c7fa8834fb7b62c1da9aa1719372f8158e16df28c45ec5e453db9f94545d3cf8cca549ff58e262f7d988a886b74c227b2fdf9050fb74663bae2e40064117f7d9afbb19b4d51a68010a355efdb990bab89bbedc30b2357abcac972ec0ed83fa1230af9a2c83571e53c5996f0
fb7ec67a9ea55cb10bbb9644fd05fc2806e4932f4b3d048b5454b6e59d973c56a7f49adde229a71b24630463b3b34df44a5edb271ab67ca8b32738f52eddf70cece55562347b2fa2c0821e839ed8213d3469dc7bb8367734af722520623563157b8cdb74b06f92a8d93557d99e86fac727368708bfc45225919095e17695e28978aa4cbe20864e2af5c87a09cf3ad70b555fd43932704e9ed8c03206fe4ad7479c0221b66dc82e24f69a314a2a6e6d0fd75e1a15961e6a6ad903e8d02670bb172cca7e619e3b475aa46cbee3912c67e1f0e224b5b4d0cc2cdffc5152145e106b
c2bfc71f895775a3cbad791569c9c10ee8db83d75348b7fbf299289084717964b8459aa976974d5fe9aa93485b57da20ff9ec01958eb5f57ac23b14c30a5ed21485a663a81d474fa8c24fc386d2e3cbc92bab6d8b9a8dbd94b56ec1e102a7550e5bdd2a55b233b0bc4993ccd04464b5db8bbd4dec2d3a3bbf558bd2dbb314fd29d0c7ab029852ce3d25a22bb85338264
865b019d0ff8c9d836b4a3520251a8919b7c233a6aa4bd6ce75cb95a6d7006f2c1ae9df89f2251281c2e8a57ccf771c13e6614a856048b59a1ba4a2bf3cd87dc8628725a17dcaad7a97be9d5ce5e5dd7214ff88524997fb84a04adb6fe9c51a6be1c8128abcfeceb3de0c631503f13f2726b0d83fa65bcd60a1f83ead7b30a2eb7a53999eccf5554fca3e1a6942c7fd6d3e96fd9bf64f3abcdd049faa395bb79163d613e23c9e53115f72a749aed5852f0bb7fce11df63eb74af7b885337343e1fba4651cbd2f9dd8d5d30384863f8bb8fc1d74e19dbfa94412ee29979ae8707
d502e44dd11d68e59cdde0a98a16b25fd8c2cc201689a08ead17f202cdcc4625e944ecc20b6dc13bd381729d5282acc59978396d01e830f3f58f4a962b8c84eff6892c78c4504efa649c4d2077714e0d385357236d2f38cd838c22ea1381cc5f
7b43bbcb0258579ce7de9dbd2526faa469f6bcc80144ba673701bb270a626acd7e5dc1e6b0b16722cbc923d266bb4b77f3628bd15b34a9335d3debb650f818e7fd6907372ddb742169ede2217dfa845b590e46a81e51789adf05a69704b0c4c0e74cd2a79b40ae600ab89f698b64cc445833697374d5eb8135fffeb8d2b05ff8b2c28c86f01b6bcde75fbdf00b447db2792a7daaab5dc14b30a8ad0c5295e9f6b459871389db577d04156f619f7a1a1bc09ea87a487284765285c5423c9ebdb91a1a131253d2c2e8451665ae6808a06e60f1a777e94888e485ec4fddcaeacf6356ba239eb8649b7769104859361ec5a9832f860e02ab7f4e84adad858f21d76139a0df35dc30ffb7769350b526dcd49c9cf505a569e0442d31a82934e231f2fb0eada75982283d0e7ae5a80ebbda55736834df5891d180ef38535666e71d6c6b6b89f809af2cbb595093dff45e28d15e6d3c6abd9574f39f75c123c1188b10986b09760bc826adeaad6277639e97f36f6170b216320b6dd62912e3ed77fda96bfe60f7b271930e93db4ed22961121767b7de3a0cda87728bf833de08e76c470d6a806c4101608f26a6353b263c21a5600fac0b1c8a8d45dca8a59962acb6277a93e2d1b4d8aa7576547fc23491aa08291c17b5e83ad1a4ca61fb9775a04d9a3bf85a071e428d674b9e337ca67e96c832034b5ceef699d77067c6328854f5a327722d671af21a6be4b11e67fe224fd829e4c72fd6fface9028f0f8973b152f6da80c41088646c9677da04d9df21252cb8c263ee6db98916b882718990fdc486c6798d1eb222557fb4c29957751a53db4fcd06c76f269413b41831604ddccd9f64041cc1faf0b19d880d2c3012e5b66b1f1bb218f7f3124687e7ff7a8c9dd9d97479beaaa09ce3884e36b9b3b7b6b4f7be8e52e8c3060a249d8da96c4c64c249e29da83f537e0497c3f8e67b6e4e6a80b2b50809ba3913a39f4db34d97b538873fe06d78e806e147ce8c979e7a018486506933c87144e01eaa1ad7e972675a2ddba524bf93acf0d2f432008c2d48350ad715b162eb39d052331b05322ccac5715165e7b3cfa916bbf8f57089cb8dc4b5e68ea3bf2498622a4991a83c4cc0dfbad0b4df34396cfa7d03789726e4ef4dac59e61c0f54ecd070efe67d091838d69426e92d73f9a7403c086bf51590951aac9612e116e89a555ee43dcee106000f1e657dde7eb38ae146b56c83efc564316cf27665cfcd97a606b6e860d697213370062371b690e7bda64cf9e511fc9af680b1043795f97b73b50af266ca8d0969728503f3728a31df059c87f852e1cf9833b6a7a18100e6fa5bbfa672892ce5aed7ed5f216259b09607c8072cd758d3664cd4b7b219d6b90d22e40b5929544aeda4c7ad37e37b7bfeeca8e985e35b8117ef489c999600a18af1d87cf9ca07687023f05456c7a2c3636e3e22a76e9c90cfe98d10973f165bf80906d456234b6ac5e6a6f33f898017d62cc0e5fdaf8e39a941c482f0fbb68571796b9f520e8d204444e5bb527f73962880393fa924bea75200ba85f6e6351e488e578d8f5219444cbe370ba1198e8b454698d94065c92a55b530c9aa52dd876151f1c96736fd0c877edd1eddddcca61bd153f3b6984f38e387132265357ee629b8a6d927a202761236fa
<end>
SigStructs
CAMCMISIGID_enum,CAMCMISIGID
CCM_CFG_SMS_CSCB_SETTING,CcmCscbNvmConfig
cesmpdpauthconfig,CesmNvmPdpAuthConfig
cesmpdpconfig,CesmNvmPdpConfig
CCM_CFG_SMS_MORE_MSG_MODE,CmiSmsMoreMessage
MW_CFG_AT_CHAN_1_CONFIG,MWCfgAtChanConfig
MW_CFG_ALARM_PARAM,MWNvmCfgAlarmParam
MW_CFG_AT_PEND_URC_PARAM,MWNvmCfgAtPendUrcParam
MW_CFG_AT_SOCKET_PARAM,MWNvmCfgAtSocketParam
MW_CFG_SMS_URC_CNMI_PARAM,MWNvmCfgCNMIParam
MW_CFG_SMS_MEM_CPMS_PARAM,MWNvmCfgCPMSParam
MW_CFG_SMS_SCA_CSCA_PARAM,MWNvmCfgCSCAParam
MW_CFG_CSCS_PARAM,MWNvmCfgCSCSParam
MW_CFG_SMS_TEXT_CSMP_PARAM,MWNvmCfgCSMPParam
MW_CFG_CTW_HTTP_PARAM,MWNvmCfgCtwHttpParam
MW_CFG_CTW_MQTT_PARAM,MWNvmCfgCtwMqttParam
MW_CFG_CTW_CFG_PARAM,MWNvmCfgCtwParamCfg
MW_CFG_CTW_TCP_PARAM,MWNvmCfgCtwTcpParam
MW_CFG_DEFAULT_DNS,MWNvmCfgDefaultDns
MW_CFG_DM_CMCC_PARAM,MWNvmCfgDmCmccParam
MW_CFG_DM_CTCC_PARAM,MWNvmCfgDmCtccParam
MW_CFG_DM_CUCC_PARAM,MWNvmCfgDmCuccParam
MW_CFG_NET_HOST_INFO_PARAM,MWNvmCfgNetHostInfoParam
MW_CFG_NET_PARAM,MWNvmCfgNetParam
MW_CFG_POWER_ON_CFUN,MWNvmCfgPowerOnCfun
MW_CFG_URC_DELAY_PARAM,MWNvmCfgUrcDelayParam
MW_CFG_URC_RI_OTHER_PARAM,MWNvmCfgUrcRIOtherParam
MW_CFG_URC_RI_SMS_INCOMING_PARAM,MWNvmCfgUrcRISmsIncomingParam
mwinfo,MidWareNvmInfo
mwsms,MidWareNvmSms
CCM_CFG_SMS_SERVICE_TYPE,MsgService
CCM_CFG_NW_MODE,NwMode
OSASIGIDTAG,OSASIGID
PSL1SIGIDTAG,PSL1SIGID
PSSIGIDTAG,PSSIGID
CEPLMN_CFG_PLMN_SEARCH_LEVEL,PlmnSearchPowerLevel
CEPLMN_CFG_CELL_LOCK_INFO,PsCfgCellLockInfo
CEMM_CFG_CIOT_SETTING,PsCfgCemmCiotSetting
CEMM_CFG_EDRX_SETTING,PsCfgCemmEdrxSetting
CEMM_CFG_FAKE_CELL_OPT,PsCfgCemmFakeCellOpt
CEMM_CFG_MS_CLASSMARK2,PsCfgCemmMsClassMark2
CEMM_CFG_PSM_SETTING,PsCfgCemmPsmSetting
CEMM_CFG_UE_NW_CAPA,PsCfgCemmUeNwCapa
CEMM_CFG_USER_MAX_T3324_SETTING,PsCfgCemmUserMaxT3324Setting
CESM_CFG_USER_DEFINED_T3482,PsCfgCesmUserDefinedT3482
CESM_CFG_USER_DEFINED_T3492,PsCfgCesmUserDefinedT3492
L2_CFG_DATA_COUNTER_INFO,PsCfgL2DataCounterInfo
CEPLMN_CFG_BAND_INFO,PsCfgPlmnBandInfo
CEPLMN_CFG_OOS_PLMN_INTERVAL,PsCfgPlmnOosInterval
CEPLMN_CFG_PLMN_SELECT_TYPE,PsCfgPlmnSelectType
CEPLMN_CFG_USER_DEFINED_HIGH_PRI_PLMN_TIMER,PsCfgUserDefinedHighPriPlmnTimer
CCM_CFG_UE_OPERATION_MODE,PsUeOperationModeEnum
SIMSTKPSPROXYSIGID_Tag,SIMBIPSTKPSPROXYSIGID
CCM_CFG_UE_SERVICE,UeService
cmsSigId_Enum,cmsSigId
MW_INFO_PHY_EDRX_PARAM,midWareNvmInfoPhyEdrxParam
plat_config,plat_config_fs_t
<end>
OptionalSegment
optional_sk_01,6516FB073B94B746C1F889DC7480F872BA4F02908754C8F0E3614B5E8565351D
<end>
